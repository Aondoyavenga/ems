{"version":3,"sources":["appState/appSlice.js","components/global/AppBackDrop.js","components/global/UserRoles.js","components/global/SideBarNavigation.js","components/global/AppSnackbar.js","components/UploadAvatar.js","components/Mandate.js","components/global/ProfileSetting.js","components/global/SideBarMenu.js","components/global/AppHeader.js","components/AccountFeed.js","screens/AccountScreen.js","components/ExcelDownload.js","components/global/TxTableView.js","components/AdminAccountSetting.js","components/global/PurchaseRepayment.js","components/SaleViewTable.js","components/AdminCustomerSetting.js","components/AdminExpenseSetting.js","components/AdminPosting.js","components/PsViewTable.js","components/AdminPsSetting.js","components/AdminSaleSetting.js","components/global/CustomerList.js","components/global/CustomerViewTable.js","components/AdminStaffSetting.js","components/global/AdminMenuList.js","components/charts/AdminSideMenu.js","components/AdminFeed.js","screens/AdminScreen.js","components/global/ExpenseItemsView.js","components/ExpenseViewTable.js","components/global/SalesViewTable.js","components/ReportsPool.js","components/ReportFeed.js","screens/ReportScreen.js","components/auth/LoginForm.js","components/auth/CreateStaff.js","screens/AuthScreen.js","components/BillFeed.js","components/form/AccountCreationForm.js","components/global/AppWidgetHeader.js","components/BillWidget.js","components/global/AddBillCategories.js","screens/BillScreen.js","components/global/AccountList.js","components/CoaFeed.js","components/SearchWidget.js","components/CoaWidget.js","screens/CoaScreen.js","components/CustomerFeed.js","components/CusSearchWidget.js","components/form/CustomerCreationForm.js","components/CustomerWidget.js","screens/CustomerScreen.js","components/EstimateFeed.js","components/EstimateWidget.js","screens/EstimateScreen.js","components/ExpenseFeed.js","components/ExpenseWidget.js","screens/ExpenseScreen.js","components/charts/MultipleChart.js","components/charts/SalesChart.js","components/HomeFeed.js","screens/HomeScreen.js","components/InvoiceFeed.js","components/InvoiceWidget.js","screens/InvoiceScreen.js","components/JournalFeed.js","components/JournalListTable.js","components/JournalWidget.js","screens/JournalEntryScreen.js","components/MdFeed.js","components/global/Receipt.js","components/global/CashReceipt.js","components/MdWidget.js","screens/MdApproveScreen.js","components/CustomerCard.js","components/PostingTicket.js","components/PostingFeed.js","screens/PostingScreen.js","components/form/PropServiceForm.js","components/PropServiceWidget.js","components/global/PropServiceList.js","components/PropertyServiceFeed.js","screens/PropertyServiceScreen.js","components/ReceivePaymentFeed.js","components/ReceivePaymentWidget.js","screens/RceivePaymentScreen.js","components/SalePaidHistoryFeed.js","screens/SalePaymentHistScreen.js","components/global/SelectApplicant.js","components/SaleMultipleFeed.js","components/SaleFeed.js","components/SaleWidget.js","screens/SaleScreen.js","components/StaffFeed.js","components/StaffWidget.js","screens/StaffScreen.js","components/VendorList.js","components/VendorFeed.js","components/form/VendorCreationForm.js","components/VendorWidget.js","screens/VendorScreen.js","components/SaleRepayViewTable.js","components/SaleRepaymentFeed.js","screens/SaleRepaymentReportScreen.js","components/ExpenseReportFeed.js","screens/ExpenseReportScreen.js","Routes.js","App.js","serviceWorker.js","app/appStore.js","index.js"],"names":["appSlice","createSlice","name","initialState","open","token","user","vendors","accounts","customers","propServices","appWidget","assetAccounts","equityAccounts","liabilityAccounts","openEstimate","userInvoices","billCategories","buildCategories","pendingSales","txAccounts","duePayments","expenseCategories","userExpenseRaised","expenseItems","allStaffs","paymentHistory","paidOnpaySales","journals","staffPosted_Journals","accountTxs","sales","filterSale","locations","transactions","filterTx","filterCus","psSold","reducers","setOpen","state","action","payload","setToken","setUser","setAppWidget","setAssetAccount","setLiabilityAccount","setEquityAccount","setCustomers","setAccounts","setVendors","setPropServices","setOpenEstimate","setUserInvoices","setBillCategories","setBuildCategories","setpendingSales","setTxAccounts","setDuePayments","setExpenseCategories","setUserExpenseRaised","setExpenseItems","setAllStaffs","setPaymentHistory","setPaidOnpaySales","setJournals","setStaffPosted_Journals","setAccountTxs","setSAles","setFilterSale","setLocations","setTransactions","setfilterTx","setFilterCus","setPsSold","actions","selectOpen","app_state","selectSales","selectFilterSale","selectToken","selectUser","selectVendors","selectCustomers","selectPsSold","selectPropServices","selectAccounts","selectAssetAccount","selectEquityAccount","selectLiabilityAccount","selectOpenEstimate","selectUserInvoices","selectBillCategories","selectBuildCategories","selectPendingSales","selectPaymentHistory","selectPaidOnpaySales","selectTxAccounts","selectExpenseCategories","selectUserExpenseRaised","selectExpenseItems","selectAllStaffs","selectStaffPosted_Journals","selectAccountTxs","selectLocations","selectTransactions","selectFilterTx","useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","AppBackdrop","classes","Backdrop","className","onClick","CircularProgress","root","width","maxWidth","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","UserRoles","admin","expense","entries","accountant","ico","md","useSelector","to","ListItem","button","ListItemIcon","style","fontSize","ListItemText","secondary","username","SideBarNavigation","useState","collapse","setCollapse","Edit","primary","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","MonetizationOn","ShoppingCart","HistoryTwoTone","CheckCircle","is_superuser","Person","AppSnackbar","message","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Fragment","IconButton","size","aria-label","AvatarUpload","blob","src","crop","unit","height","margin","aspect","appDialog","success","onSelectFile","e","target","files","length","reader","FileReader","addEventListener","setState","result","readAsDataURL","onImageLoaded","image","imageRef","onCropComplete","makeClientCrop","handleCropComplete","onCropChange","percentCrop","handleSubmitAvatar","props","data","FormData","append","axios","post","url","headers","Authorization","then","res","setMandate","sessionFunc","profileUser","catch","err","a","this","getCroppedImg","croppedImageUrl","fileName","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","window","URL","revokeObjectURL","fileUrl","createObjectURL","htmlFor","myInput","click","Avatar","AddAPhoto","Typography","variant","marginLeft","title","ref","id","type","display","accept","onChange","ruleOfThirds","onComplete","keepSelection","flex","justifyContent","alignItems","flexDirection","gap","Button","startIcon","Check","History","PureComponent","Mandate","mandate","isOpen","position","fullHeight","overflowScroll","split","ProfileSetting","dispatch","useDispatch","setUrl","setTitle","setMessage","Error","setError","isMandate","setIsMandate","password","password2","setPassword","handleChange","value","useEffect","handleValidation","get","error","dispatchOpen","Container","centered","ListItemAvatar","avatar","Tooltip","top","first_name","last_name","signature","mobile","email","alignSelf","textAlign","method","FormGroup","TextField","fullWidth","label","placeholder","helperText","setTimeout","response","SideBarMenu","history","useHistory","push","AppHeader","search","searchWidget","setSearchWidget","AccountFeed","useParams","calcuTotalDR","tDR","filter","dta","tx_type","reduce","v","amount","calcuTotalCR","tCR","Grid","container","item","lg","border","map","pay","index","tx_date","description","pay_method","account_FK","Date","toLocaleDateString","toLocaleString","colSpan","balance_type","ccolSpan","parseInt","goBack","endIcon","UndoRounded","AccountScreen","uuid","statusText","txs","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","DownloadSaleRepmt","date","dataSet1","filename","element","col","due_date","amount_paid","tx_amount","status","DownloadExpenseReport","renderExpCategory","renderAccount","expense_FK","payment_account","payee_account","expense_date","ExcelDownload","code","find","acc","paid","TxTableView","returncusName","cname","tx","rcpt_no","crData","d","drData","AdminAccountSetting","staffs","tab","setTab","active","locked","change","acc_type","account","accData","setAccdata","facc","ftxs","list","staff","borderColor","outline","disabled","paddingRight","borderLeft","borderBottom","borderTop","borderRight","readOnly","PurchaseRepayment","purchases","SaleViewTable","setRcpt_no","proptxs","setProptxs","sale","property_name","sale_date","More","applicant_name","AdminCustomerSetting","setSuccess","rm","country","phone_no","address_1","occupation","place_work","next_kin_name","customer_sex","customer_name","customer_email","customer_state","postal_address","customer_marital","customer_address","next_kin_addrss","next_kin_relate","business_employer_name","customer","cusData","setCusdata","fcus","cus","fsales","applicant","AdminExpenseSetting","expenses","AdminPostingSetting","console","log","PsViewTable","psSolds","build_category","AdminPsSetting","add","setAdd","body","setBody","cost","ps_type","category","location","quantity","sale_price","psData","setPsData","fps","ps","getSoldFps","property","l","AdminSaleSetting","bcategory","CustomerList","hidden","isWidget","alt","CheckBoxRounded","CustomerViewTable","AdminStaffSetting","is_active","setData","fstaff","staf","postBy_FK","AdminMenuList","setIsActive","draggable","divider","AdminSideMenu","AdminFeed","isActive","AdminPosting","renderAdminMenu","AdminScreen","get_Paid_Onpay_Sales","localStorage","clear","paidOnpay","exps","asset","setItem","categories","ExpenseItemsView","expID","returnCategory","cat","expItems","exp","expense_ID","expitem","i","itemList","ExpenseViewTable","headerColor","userExpneses","calcuAmt","cursor","SalesViewTable","MoreHoriz","ReportsPool","setExpenses","filterSales","setFilterSales","filterCustomers","setFilterCustomers","start_date","end_date","fexps","fCus","createdAt","fSales","ReportFeed","sm","ReportScreen","LoginForm","invalid","setInvalid","preventDefault","trim","handle_Login","CreateStaff","Paper","padding","AuthScreen","BillFeed","setIsOpen","setIswidget","vendorSales","setVendorSales","billFormTemplate","billcategory","billForm","setBillform","vendor_FK","bill_date","bill_term","VALUES","total","handleSetPostData","updatedbillform","jef","Object","assign","fdata","values","findal","getSeconds","getMinutes","getMilliseconds","filterCategories","FileCopy","FormLabel","required","vendor","vendor_name","sd","duedate","setDate","getDate","handleSetTerm","PlusOne","categ","vsales","filterbillform","splice","handleRemovebillform","handleSubmit","AccountCreationForm","snackbar","setSnackbar","Select","native","defaultValue","FormControl","handle_Post","AppWidgetHeader","BillWidget","AddBillCategories","billCategoryFormTemplate","createdBy_FK","billCategoryForm","setBillCategoryform","upbillCategoryform","form","filterbillCategoryform","handleRemoveform","marginRight","BillScreen","AccountList","rel","CoaFeed","assets","equitys","liabilitys","overflow","liability","equity","styles","section","inputWrapper","borderRadius","boxSizing","boxShadow","icon","input","resultContainer","SearchWidget","inpuRef","useRef","setSearch","setResult","current","focus","handleSearching","autoComplete","resul","CoaWidget","CoaScreen","handleSearch","handleAddd","CustomerFeed","CusSearchWidget","CustomerCreationForm","Exist","setExist","RMS","isEmpty","keys","forEach","toString","handle_Create_Customer","autoCorrect","CustomerWidget","CustomerScreen","EstimateFeed","pss","estimateFormTemplate","pro_service","qty","estimateForm","setEstimateform","customer_FK","estimate_date","exp_date","updatedestimateform","rate","selectedPS","float","filterestimateform","handleRemoveestimateform","EstimateWidget","EstimateScreen","ExpenseFeed","setbody","expenseFormTemplate","expenseForm","setExpenseform","updatedexpenseform","key","includes","filterexpenseform","handleRemoveexpenseform","Form","exform","isDisable","ExpenselWidget","ExpenseScreen","ExpenseWidget","MultipleChart","datasets","labels","dataPolar","setDataPolar","custotal","acctotal","getItem","options","responsive","SalesChart","onpaid","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","dataLine","setDataLine","flabels","toUTCString","HomeFeed","setPaid","setOnPaid","paiddata","paiddataValues","completedPaid","pelement","onpaiddata","onpaiddataValues","onPaid","onpelement","justify","HomeScreen","InvoiceFeed","noestimate","setNoestimate","invoiceFormTemplate","invoiceForm","setInvoiceform","asset_account_FK","invoice_date","invoice_term","invoice_ID","updatedinvoiceform","cus_FK","filterinvoiceform","handleRemoveinvoiceform","InvoiceWidget","invoices","invoice","InvoiceScreen","JournalFeed","jeFormTemplate","jeForm","setJeform","je_ID","je_date","updatedJeform","postedBy_FK","filterJeform","handleRemoveJeform","jform","JournalListTable","jeID","setTxs","fTXs","JournalWidget","isView","setIsview","staffJournals","sje","jeUID","JournalEntryScreen","MdFeed","setApplicant","setApplication","getCustomerById","Receipt","sale_uuid","Math","round","Checkbox","CashReceipt","rows","row","MdWidget","application","setIsopen","step","setStep","plans","setPlans","scheluls","period","FormControlLabel","control","checked","listStyle","handleApproval","MdApproveScreen","dispacth","CustomerCard","ID","cusID","handle_Set_Ticket","ChevronRight","PostingTicket","handlePost","ticket_no","amount_in_words","Divider","Print","print","PostingFeed","searchKey","setSearchKey","txSearch","setTxSearch","filterduepay","due","filterTxAccounts","txacc","marginTop","PostingScreen","dues","PropServiceForm","sku","product_class","qty_athDate","reorder_point","purchase_info","sale_options","purchase_option","expense_acc_FK","income_acc_FK","handle_Add_Prop_Service","PropServiceWidget","PropServiceList","PropertyServiceFeed","renderPs","toUpperCase","PropertyServiceScreen","ReceivePaymentFeed","setInvoice","recievePayFormTemplate","orig_amount","amount_pay","receivePayForm","pay_date","deposit_account","invoi","ReceivePaymentWidget","ReceivePaymentScreen","SalePaidHistoryFeed","paymentHistorys","fontWeight","SalePaymentHistScreen","phistory","SelectApplicant","selected","setSelected","selectedApplicant","SaleMultipleFeed","add_BuildCategories","properties","saleFormTemplate","sale_ID","saleForm","setSaleForm","updatedsaleform","salef","renderAmount","pro","formIndex","proExist","prop","elevation","locat","building","filtersaleform","handleRemovesaleform","SaleFeed","select","setSelect","filterProperty","SaleWidget","SaleScreen","StaffFeed","date_joined","userData","xs","StaffWidget","StaffScreen","VendorList","phone","VendorFeed","VendorCreationForm","address_2","city","zip_code","website","exp_account_FK","vendorData","setVendordata","handle_Create_Vendor","VendorrWidget","VendorScreen","VendorWidget","SaleRepayViewTable","reports","handle_Get_Report","calcuAimed","calcuLastPaid","SaleRepaymentFeed","setReports","SaleRepaymentReportScreen","ExpenseReportFeed","expCategories","expCat","ExpenseReportScreen","Routes","exact","path","ReportsScreen","App","Boolean","hostname","match","configureStore","reducer","appReducer","ReactDOM","render","StrictMode","store","appStore","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6a736db4.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const appSlice = createSlice({\r\n    name: 'app_state',\r\n    initialState: {\r\n        open: '',\r\n        token: '',\r\n        user: '',\r\n        vendors: '',\r\n        accounts: '',\r\n        customers: '',\r\n        propServices: '',\r\n        appWidget: false,\r\n        assetAccounts: '',\r\n        equityAccounts: '',\r\n        liabilityAccounts: '',\r\n        openEstimate: '',\r\n        userInvoices: '',\r\n\r\n        billCategories: '',\r\n        buildCategories: '',\r\n        pendingSales: '',\r\n\r\n        txAccounts: '',\r\n        duePayments: '',\r\n        expenseCategories: '',\r\n        userExpenseRaised: '',\r\n        expenseItems: '',\r\n\r\n        allStaffs: '',\r\n        paymentHistory: '',\r\n        paidOnpaySales: '',\r\n\r\n        journals: '',\r\n        staffPosted_Journals: '',\r\n        accountTxs: '',\r\n\r\n        sales: '',\r\n        filterSale: '',\r\n        locations: '',\r\n        transactions: '',\r\n        filterTx: '',\r\n        filterCus: '',\r\n        psSold: '',\r\n    },\r\n\r\n    reducers: {\r\n        setOpen: (state, action) =>{\r\n            state.open = action.payload\r\n        },\r\n        setToken: (state, action) =>{\r\n            state.token = action.payload;\r\n        },\r\n        setUser: (state, action) =>{\r\n            state.user = action.payload\r\n        },\r\n        setAppWidget: (state, action) =>{\r\n            state.appWidget = action.payload\r\n        },\r\n        setAssetAccount: (state, action) =>{\r\n            state.assetAccounts = action.payload\r\n        },\r\n        setLiabilityAccount: (state, action) =>{\r\n            state.liabilityAccounts = action.payload\r\n        },\r\n        setEquityAccount: (state, action) =>{\r\n            state.equityAccounts = action.payload\r\n        },\r\n        setCustomers: (state, action) =>{\r\n            state.customers = action.payload\r\n        },\r\n        setAccounts: (state, action) =>{\r\n            state.accounts = action.payload\r\n        },\r\n        setVendors: (state, action) =>{\r\n            state.vendors = action.payload\r\n        },\r\n        setPropServices: (state, action) =>{\r\n            state.propServices = action.payload\r\n        },\r\n        setOpenEstimate: (state, action) =>{\r\n            state.openEstimate = action.payload\r\n        },\r\n        setUserInvoices: (state, action) =>{\r\n            state.userInvoices = action.payload\r\n        },\r\n        setBillCategories: (state, action) =>{\r\n            state.billCategories = action.payload\r\n        },\r\n        setBuildCategories: (state, action) =>{\r\n            state.buildCategories = action.payload\r\n        },\r\n        setpendingSales: (state, action) =>{\r\n            state.pendingSales = action.payload\r\n        },\r\n\r\n        setTxAccounts: (state, action ) =>{\r\n            state.txAccounts = action.payload\r\n        },\r\n        setDuePayments: (state, action) =>{\r\n            state.duePayments = action.payload\r\n        },\r\n        setExpenseCategories: (state, action) =>{\r\n            state.expenseCategories = action.payload\r\n        },\r\n        setUserExpenseRaised: (state, action) =>{\r\n            state.userExpenseRaised = action.payload\r\n        },\r\n        setExpenseItems: (state, action) =>{\r\n            state.expenseItems = action.payload\r\n        },\r\n        setAllStaffs: (state, action) =>{\r\n            state.allStaffs = action.payload\r\n        },\r\n        setPaymentHistory: (state, action) =>{\r\n            state.paymentHistory = action.payload\r\n        },\r\n        setPaidOnpaySales: (state, action) =>{\r\n            state.paidOnpaySales = action.payload\r\n        },\r\n\r\n        setJournals: (state, action) =>{\r\n            state.journals = action.payload\r\n        },\r\n        setStaffPosted_Journals: (state, action) =>{\r\n            state.staffPosted_Journals = action.payload\r\n        },\r\n        setAccountTxs: (state, action) =>{\r\n            state.accountTxs = action.payload\r\n        },\r\n        setSAles: (state, action) =>{\r\n            state.sales = action.payload\r\n        },\r\n        setFilterSale: (state, action) =>{\r\n            state.filterSale = action.payload\r\n        },\r\n        setLocations: (state, action) =>{\r\n            state.locations = action.payload\r\n        },\r\n        setTransactions: (state, action) =>{\r\n            state.transactions = action.payload\r\n        },\r\n        setfilterTx: (state, action) =>{\r\n            state.filterTx = action.payload\r\n        },\r\n        setFilterCus: (state, action) =>{\r\n            state.filterCus = action.payload\r\n        },\r\n\r\n        setPsSold: (state, action) =>{\r\n            state.psSold = action.payload\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    setOpen,\r\n    setToken,\r\n    setUser,\r\n    setVendors,\r\n    setAccounts,\r\n    setCustomers,\r\n    setAppWidget,\r\n    setAssetAccount,\r\n    setEquityAccount,\r\n    setLiabilityAccount,\r\n\r\n    setPropServices,\r\n    setPsSold,\r\n\r\n    setOpenEstimate,\r\n    setUserInvoices,\r\n    setBillCategories,\r\n    setBuildCategories,\r\n    setpendingSales,\r\n    setTxAccounts,\r\n    setDuePayments,\r\n    setExpenseCategories,\r\n    setUserExpenseRaised,\r\n    setExpenseItems,\r\n    setAllStaffs,\r\n    setPaymentHistory,\r\n    setPaidOnpaySales,\r\n\r\n    setJournals,\r\n    setStaffPosted_Journals,\r\n\r\n    setAccountTxs,\r\n    setSAles,\r\n    setFilterSale,\r\n    setLocations,\r\n    setTransactions,\r\n    setfilterTx,\r\n    setFilterCus,\r\n    \r\n} = appSlice.actions;\r\n\r\nexport const selectOpen = state => state.app_state.open;\r\n\r\nexport const selectSales = state => state.app_state.sales;\r\nexport const selectFilterSale = state => state.app_state.filterSale;\r\n\r\nexport const selectToken = state => state.app_state.token;\r\nexport const selectUser = state => state.app_state.user;\r\n\r\nexport const selectVendors = state => state.app_state.vendors;\r\nexport const selectAppWidget = state =>state.app_state.appWidget;\r\n\r\nexport const selectCustomers = state => state.app_state.customers;\r\n\r\nexport const selectPsSold = state =>state.app_state.psSold;\r\nexport const selectPropServices = state => state.app_state.propServices;\r\n\r\nexport const selectAccounts = state => state.app_state.accounts;\r\nexport const selectAssetAccount = state => state.app_state.assetAccounts;\r\nexport const selectEquityAccount = state => state.app_state.equityAccounts\r\nexport const selectLiabilityAccount = state => state.app_state.liabilityAccounts\r\n\r\nexport const selectOpenEstimate = state => state.app_state.openEstimate;\r\n\r\nexport const selectUserInvoices = state => state.app_state.userInvoices;\r\n\r\nexport const selectBillCategories = state => state.app_state.billCategories;\r\nexport const selectBuildCategories = state => state.app_state.buildCategories;\r\n\r\nexport const selectPendingSales = state => state.app_state.pendingSales;\r\nexport const selectPaymentHistory = state => state.app_state.paymentHistory;\r\nexport const selectPaidOnpaySales = state => state.app_state.paidOnpaySales;\r\n\r\nexport const selectTxAccounts = state => state.app_state.txAccounts;\r\nexport const selectDuePayments = state => state.app_state.duePayments;\r\n\r\nexport const selectExpenseCategories = state => state.app_state.expenseCategories;\r\nexport const selectUserExpenseRaised = state => state.app_state.userExpenseRaised;\r\nexport const selectExpenseItems = state => state.app_state.expenseItems;\r\n\r\nexport const selectAllStaffs  = state =>state.app_state.allStaffs;\r\n\r\nexport const selectJournals = state => state.app_state.journals;\r\nexport const selectStaffPosted_Journals = state => state.app_state.staffPosted_Journals;\r\n\r\nexport const selectAccountTxs = state => state.app_state.accountTxs;\r\nexport const selectLocations = state => state.app_state.locations;\r\n\r\nexport const selectTransactions = state => state.app_state.transactions;\r\nexport const selectFilterTx = state => state.app_state.filterTx;\r\n\r\nexport const selectFilterCus = state => state.app_state.filterCus;\r\n\r\nexport default appSlice.reducer;","import React from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nexport default function AppBackdrop({open, setOpen}) {\r\n  const classes = useStyles();\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleToggle = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n","import { ListItem, ListItemIcon, ListItemText, makeStyles } from '@material-ui/core'\r\nimport { Group, House, HowToVote, IndeterminateCheckBox, Lock, LockOpen, Person, PersonAdd, RedeemRounded } from '@material-ui/icons'\r\nimport React, { Fragment } from 'react'\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../../appState/appSlice';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n  }));\r\n\r\nfunction UserRoles({ admin, expense, sales, entries, accountant, ico, md }) {\r\n    const classes = useStyles()\r\n    const user = useSelector(selectUser)\r\n    return (\r\n        <Fragment>\r\n          {/* entries */}\r\n          { entries&&\r\n            <Fragment>\r\n              {/* <Link to='/bills'>\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon>\r\n                    <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                  </ListItemIcon>\r\n                  <ListItemText secondary=\"Bills\" />\r\n                </ListItem>\r\n              </Link> */}\r\n              {/* <Link to='/invoice'>\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon>\r\n                    <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                  </ListItemIcon>\r\n                  <ListItemText secondary=\"Invoices\" />\r\n                </ListItem>\r\n              </Link> */}\r\n              <Link to='/staffs'>\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon>\r\n                    <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                  </ListItemIcon>\r\n                  <ListItemText secondary=\"Staffs\" />\r\n                </ListItem>\r\n              </Link>\r\n              <Link to='/customers'>\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon>\r\n                    <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                  </ListItemIcon>\r\n                  <ListItemText secondary=\"Customers\" />\r\n                </ListItem>\r\n              </Link>\r\n              {/* <ListItem button className={classes.nested}>\r\n                <ListItemIcon>\r\n                  <AllInbox style={{ fontSize: '12px', color: 'gray' }} />\r\n                </ListItemIcon>\r\n                <ListItemText secondary=\"Cubicle\" />\r\n              </ListItem> */}\r\n            </Fragment>\r\n          }\r\n          {/* Banking officer */}\r\n            { expense &&\r\n              <Fragment>\r\n                <Link to='/expense'>\r\n                  <ListItem button className={classes.nested}>\r\n                    <ListItemIcon>\r\n                      <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                    </ListItemIcon>\r\n                    <ListItemText secondary=\"Expense\" />\r\n                  </ListItem>\r\n                </Link>\r\n                {/* <Link to='/vendor'>\r\n                  <ListItem button className={classes.nested}>\r\n                    <ListItemIcon>\r\n                      <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                    </ListItemIcon>\r\n                    <ListItemText secondary=\"Vendors\" />\r\n                  </ListItem>\r\n                </Link> */}\r\n              </Fragment>\r\n            }\r\n              {/* Sales */}\r\n              { sales &&\r\n                <Fragment>\r\n                  \r\n                  <Link to='/sales'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Sales\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to='/sales/tx'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Posting\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to='/ps'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Property & Services\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  {/* <Link to='/estimate'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Estimate\" />\r\n                    </ListItem>\r\n                  </Link> */}\r\n                  {/* <Link to='/rpayment'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Receive Payment\" />\r\n                    </ListItem>\r\n                  </Link> */}\r\n                </Fragment>\r\n              }\r\n              {/* Accounting */}\r\n              {\r\n                accountant&&\r\n                <Fragment>\r\n                  <Link to='/coa'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Chart of Accounts\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to='/je_entry'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Journal Entry\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to={`/${user.username}/reports`}>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Reports\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to={`/${user.username}/sale_repmt_reports`}>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Sales Reports\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to={`/${user.username}/exp_reports`}>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Expense Reports\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                </Fragment>\r\n              }\r\n\r\n              {/* Ico */}\r\n              {\r\n                ico&&\r\n                <Fragment>\r\n                  <Link to='/inter_control_sme'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"SME Loans\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to='/inter_control_micro_credit'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Micro-credit Loans\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                </Fragment>\r\n              }\r\n              {\r\n                md&&\r\n                <Fragment>\r\n                  <Link to='/applications'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Approve\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  \r\n                </Fragment>\r\n              }\r\n          {/* Admin */}\r\n          \r\n          {\r\n            admin &&\r\n            <Link to={`/admin-settings-dashboard/${user.username}`} >\r\n              <ListItem button className={classes.nested}>\r\n                <ListItemIcon>\r\n                <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                </ListItemIcon>\r\n                <ListItemText secondary=\"Admin\" />\r\n              </ListItem>\r\n            </Link>\r\n          }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UserRoles\r\n","import {\r\n  Collapse,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  CheckCircle,\r\n  Edit,\r\n  ExpandLess,\r\n  ExpandMore,\r\n  HistoryTwoTone,\r\n  MonetizationOn,\r\n  Person,\r\n  Receipt,\r\n  ShoppingCart,\r\n} from \"@material-ui/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../../appState/appSlice\";\r\nimport UserRoles from \"./UserRoles\";\r\n\r\nconst SideBarNavigation = () => {\r\n  const user = useSelector(selectUser);\r\n  const [collapse, setCollapse] = useState();\r\n  return (\r\n    <div className=\"list__Box\">\r\n      {user && user.entries !== \"no\" && (\r\n        <Fragment>\r\n          <ListItem\r\n            button\r\n            onClick={() => setCollapse(1)}\r\n            className={collapse == 1 ? \"isactive\" : \"\"}\r\n          >\r\n            <ListItemIcon>\r\n              <Edit />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Entries\" />\r\n            {collapse == 1 ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse\r\n            in={collapse == 1 ? true : false}\r\n            timeout=\"auto\"\r\n            unmountOnExit\r\n            className=\"list__Container\"\r\n          >\r\n            <List component=\"div\" disablePadding>\r\n              <UserRoles entries={user.entries} />\r\n            </List>\r\n          </Collapse>\r\n        </Fragment>\r\n      )}\r\n      {user && user.expense !== \"no\" && (\r\n        <Fragment>\r\n          <ListItem\r\n            button\r\n            onClick={() => setCollapse(2)}\r\n            className={collapse == 2 ? \"isactive\" : \"\"}\r\n          >\r\n            <ListItemIcon>\r\n              <MonetizationOn />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Expense\" />\r\n            {collapse == 2 ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse\r\n            in={collapse == 2 ? true : false}\r\n            timeout=\"auto\"\r\n            unmountOnExit\r\n            className=\"list__Container\"\r\n          >\r\n            <List component=\"div\" disablePadding>\r\n              {user && <UserRoles expense={user.expense} />}\r\n            </List>\r\n          </Collapse>\r\n        </Fragment>\r\n      )}\r\n      {user && user.sales !== \"no\" && (\r\n        <Fragment>\r\n          <ListItem\r\n            button\r\n            onClick={() => setCollapse(3)}\r\n            className={collapse == 3 ? \"isactive\" : \"\"}\r\n          >\r\n            <ListItemIcon>\r\n              <ShoppingCart />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Sales\" />\r\n            {collapse == 2 ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse\r\n            in={collapse == 3 ? true : false}\r\n            timeout=\"auto\"\r\n            unmountOnExit\r\n            className=\"list__Container\"\r\n          >\r\n            <List component=\"div\" disablePadding>\r\n              <UserRoles sales={user.sales} />\r\n            </List>\r\n          </Collapse>\r\n        </Fragment>\r\n      )}\r\n      {user && user.accountant !== \"no\" && (\r\n        <Fragment>\r\n          <ListItem\r\n            button\r\n            onClick={() => setCollapse(4)}\r\n            className={collapse == 4 ? \"isactive\" : \"\"}\r\n          >\r\n            <ListItemIcon>\r\n              <HistoryTwoTone />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Accounting\" />\r\n            {collapse == 4 ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse\r\n            in={collapse == 4 ? true : false}\r\n            timeout=\"auto\"\r\n            unmountOnExit\r\n            className=\"list__Container\"\r\n          >\r\n            <List component=\"div\" disablePadding>\r\n              <UserRoles accountant={user.accountant} />\r\n            </List>\r\n          </Collapse>\r\n        </Fragment>\r\n      )}\r\n      {user && user.md !== \"no\" && (\r\n        <Fragment>\r\n          <ListItem\r\n            button\r\n            onClick={() => setCollapse(5)}\r\n            className={collapse == 5 ? \"isactive\" : \"\"}\r\n          >\r\n            <ListItemIcon>\r\n              <CheckCircle />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Approval\" />\r\n            {collapse == 5 ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse\r\n            in={collapse == 5 ? true : false}\r\n            timeout=\"auto\"\r\n            unmountOnExit\r\n            className=\"list__Container\"\r\n          >\r\n            <List component=\"div\" disablePadding>\r\n              <UserRoles md={user.md} />\r\n            </List>\r\n          </Collapse>\r\n        </Fragment>\r\n      )}\r\n      {user && user.is_superuser !== \"n0\" && user.is_superuser !== 0 && (\r\n        <Fragment>\r\n          <ListItem\r\n            button\r\n            onClick={() => setCollapse(6)}\r\n            className={collapse == 6 ? \"isactive\" : \"\"}\r\n          >\r\n            <ListItemIcon>\r\n              <Person />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Adminstrator\" />\r\n            {collapse == 6 ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse\r\n            in={collapse == 6 ? true : false}\r\n            timeout=\"auto\"\r\n            unmountOnExit\r\n            className=\"list__Container\"\r\n          >\r\n            <List component=\"div\" disablePadding>\r\n              <UserRoles admin={user.is_superuser} />\r\n            </List>\r\n          </Collapse>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBarNavigation;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst AppSnackbar = ({ message, open, setOpen }) => {\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message={message}\r\n        action={\r\n          <React.Fragment>\r\n            \r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppSnackbar\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  CircularProgress,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { AddAPhoto, Check, History, Restore } from \"@material-ui/icons\";\r\nimport React, { Fragment, PureComponent } from \"react\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\nimport \"./uploadAvatar.css\";\r\nimport axios from \"axios\";\r\nimport AppSnackbar from \"./global/AppSnackbar\";\r\n\r\nclass AvatarUpload extends PureComponent {\r\n  state = {\r\n    blob: null,\r\n    src: null,\r\n    crop: {\r\n      unit: \"%\",\r\n      width: 50,\r\n      height: 50,\r\n      margin: \"auto\",\r\n      aspect: 5 / 5,\r\n    },\r\n    appDialog: false,\r\n    message: \"\",\r\n    success: false,\r\n  };\r\n\r\n  onSelectFile = (e) => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener(\"load\", () =>\r\n        this.setState({ src: reader.result })\r\n      );\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  // If you setState the crop in here you should return false.\r\n  onImageLoaded = (image) => {\r\n    this.imageRef = image;\r\n  };\r\n\r\n  onCropComplete = (crop) => {\r\n    this.makeClientCrop(crop);\r\n    // this.setState({src: null})\r\n  };\r\n\r\n  handleCropComplete = () => {\r\n    this.setState({\r\n      src: null,\r\n    });\r\n  };\r\n\r\n  onCropChange = (crop, percentCrop) => {\r\n    // You could also use percentCrop:\r\n    // this.setState({ crop: percentCrop });\r\n    this.setState({ crop });\r\n  };\r\n\r\n  async makeClientCrop(crop) {\r\n    if (this.imageRef && crop.width && crop.height) {\r\n      const croppedImageUrl = await this.getCroppedImg(\r\n        this.imageRef,\r\n        crop,\r\n        \"newFile.jpeg\"\r\n      );\r\n      this.setState({ croppedImageUrl });\r\n    }\r\n  }\r\n\r\n  getCroppedImg(image, crop, fileName) {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      canvas.toBlob((blob) => {\r\n        if (!blob) {\r\n          //reject(new Error('Canvas is empty'));\r\n          // console.error(\"Canvas is empty\");\r\n          return;\r\n        }\r\n        blob.name = fileName;\r\n        window.URL.revokeObjectURL(this.fileUrl);\r\n        this.fileUrl = window.URL.createObjectURL(blob);\r\n        resolve(this.fileUrl);\r\n        this.setState({ blob: blob });\r\n      }, \"image/jpeg\");\r\n    });\r\n  }\r\n\r\n  handleSubmitAvatar = () => {\r\n    this.setState({\r\n      appDialog: true,\r\n    });\r\n    this.props.setOpen(true);\r\n    const data = new FormData();\r\n    // const id = this.props.mandate.split(' ')[0]\r\n    data.append(\"photo\", this.state.blob);\r\n    axios\r\n      .post(this.props.url, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${this.props.token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        this.setState({\r\n          src: null,\r\n          appDialog: false,\r\n          message: res.data.message,\r\n          success: true,\r\n        });\r\n        this.props.setMandate(false);\r\n        this.props.setOpen(false);\r\n\r\n        // this.props.toggle(!this.props.isOpen)\r\n        this.props.sessionFunc();\r\n        return this.props.actions.profileUser();\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          appDialog: false,\r\n        });\r\n        this.props.setOpen(false);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { crop, croppedImageUrl, src, success, message } = this.state;\r\n    const setOpen = () => {\r\n      this.setState({\r\n        success: false,\r\n      });\r\n    };\r\n    return (\r\n      <div className=\"upload_avatar\">\r\n        <AppSnackbar open={success} message={message} setOpen={setOpen} />\r\n        <div className=\"avatar_container\">\r\n          <label htmlFor=\"upload\">\r\n            <IconButton\r\n              size=\"small\"\r\n              style={{ background: \"#2A3F54\" }}\r\n              onClick={() => this.myInput.click()}\r\n            >\r\n              <Avatar>\r\n                <AddAPhoto style={{ color: \"#1ABB9C\" }} />\r\n              </Avatar>\r\n            </IconButton>\r\n          </label>\r\n          <Typography variant=\"p\" style={{ color: \"#1ABB9C\", marginLeft: 10 }}>\r\n            {\" \"}\r\n            Select {this.props.title ? this.props.title : \"Photo\"} For Upload\r\n          </Typography>\r\n          <input\r\n            ref={(ref) => (this.myInput = ref)}\r\n            id=\"upload\"\r\n            type=\"file\"\r\n            style={{ display: \"none\" }}\r\n            accept=\"image/*\"\r\n            onChange={this.onSelectFile}\r\n          />\r\n        </div>\r\n\r\n        {src && (\r\n          <ReactCrop\r\n            src={src}\r\n            crop={crop}\r\n            ruleOfThirds\r\n            onImageLoaded={this.onImageLoaded}\r\n            onComplete={this.onCropComplete}\r\n            onChange={this.onCropChange}\r\n            keepSelection={true}\r\n            style={{ height: \"200px\", width: \"200px\", margin: \"auto\" }}\r\n          />\r\n        )}\r\n        {croppedImageUrl && (\r\n          <Fragment>\r\n            <div\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <Avatar\r\n                src={croppedImageUrl}\r\n                variant=\"square\"\r\n                style={{ width: \"130px\", height: \"130px\" }}\r\n              />\r\n            </div>\r\n\r\n            <section\r\n              className=\"m-4\"\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                gap: \"5px\",\r\n              }}\r\n            >\r\n              <div>\r\n                <Button\r\n                  size=\"small\"\r\n                  startIcon={<Check style={{ color: \"#20c997\" }} />}\r\n                  style={{ background: \"#2A3F54\", color: \"white\" }}\r\n                  variant=\"contained\"\r\n                  onClick={this.handleSubmitAvatar}\r\n                >\r\n                  upload\r\n                </Button>\r\n              </div>\r\n              <div>\r\n                <Button\r\n                  startIcon={<History color=\"secondary\" />}\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  onClick={() => {\r\n                    this.setState({ src: null });\r\n                    this.myInput.click();\r\n                  }}\r\n                >\r\n                  Reset\r\n                </Button>\r\n              </div>\r\n              {this.state.appDialog && (\r\n                <CircularProgress size=\"20px\" color=\"secondary\" />\r\n              )}\r\n            </section>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AvatarUpload;\r\n","// MUI Stuff\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Close from \"@material-ui/icons/Close\";\r\n\r\n// MDB Stuff\r\nimport {\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalFooter,\r\n  MDBModalHeader,\r\n} from \"mdbreact\";\r\nimport { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectToken } from \"../appState/appSlice\";\r\nimport AvatarUpload from \"./UploadAvatar\";\r\n\r\nconst Mandate = ({ title, url, mandate, setMandate, setOpen }) => {\r\n  const token = useSelector(selectToken);\r\n  return (\r\n    <Fragment>\r\n      <MDBModal\r\n        isOpen={mandate}\r\n        backdrop={false}\r\n        position=\"right\"\r\n        fullHeight={true}\r\n        overflowScroll={false}\r\n      >\r\n        <MDBModalHeader>\r\n          <Typography>\r\n            Upload {mandate && mandate.split(\" \")[1]}{\" \"}\r\n            {title ? title : \"Mandate\"}\r\n          </Typography>\r\n        </MDBModalHeader>\r\n        <MDBModalBody>\r\n          {/* imported component */}\r\n          <AvatarUpload\r\n            title={title}\r\n            setOpen={setOpen}\r\n            mandate={mandate}\r\n            token={token}\r\n            setMandate={setMandate}\r\n            url={url}\r\n          />\r\n        </MDBModalBody>\r\n        <MDBModalFooter>\r\n          <IconButton color=\"secondary\" onClick={() => setMandate(!mandate)}>\r\n            <Close color=\"action\" />\r\n          </IconButton>\r\n        </MDBModalFooter>\r\n      </MDBModal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Mandate;\r\n","// MUI Stuff\r\nimport List from \"@material-ui/core//List\";\r\nimport Avatar from \"@material-ui/core//Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ListItem from \"@material-ui/core//ListItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\n\r\n// Icons\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport Phone from \"@material-ui/icons/Phone\";\r\nimport Email from \"@material-ui/icons/Email\";\r\nimport EditRounded from \"@material-ui/icons/EditRounded\";\r\n\r\nimport AttachFile from \"@material-ui/icons/AttachFile\";\r\n// MDB Stuff\r\nimport {\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalFooter,\r\n  MDBModalHeader,\r\n} from \"mdbreact\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setOpen as dispatchOpen,\r\n  selectUser,\r\n  selectToken,\r\n  setUser,\r\n  setToken,\r\n  selectOpen,\r\n} from \"../../appState/appSlice\";\r\n\r\nimport Mandate from \"../Mandate\";\r\n\r\nimport axios from \"axios\";\r\nimport AppBackdrop from \"./AppBackDrop\";\r\nimport AppSnackbar from \"./AppSnackbar\";\r\n\r\nconst ProfileSetting = ({ open, setOpen }) => {\r\n  const dispatch = useDispatch();\r\n  const [url, setUrl] = useState();\r\n  const user = useSelector(selectUser);\r\n  const [title, setTitle] = useState();\r\n  const token = useSelector(selectToken);\r\n  const isOpen = useSelector(selectOpen);\r\n  const [message, setMessage] = useState();\r\n  const [Error, setError] = useState();\r\n  const [mandate, setMandate] = useState(false);\r\n  const [isMandate, setIsMandate] = useState(false);\r\n\r\n  const [password, setPassword] = useState({\r\n    Error: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n  const handleValidation = () => {\r\n    if (password.password != password.password2)\r\n      return setPassword({\r\n        ...password,\r\n        Error: \"Password must match\",\r\n      });\r\n    setPassword({\r\n      ...password,\r\n      Error: \"\",\r\n    });\r\n  };\r\n\r\n  //   func\r\n\r\n  const get_Session = () => {\r\n    axios\r\n      .get(`/auth/active`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((user) => {\r\n        dispatch(setUser(user.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  const handleDispatch = () => {\r\n    get_Session();\r\n    setIsMandate(false);\r\n    dispatch(dispatchOpen());\r\n  };\r\n\r\n  const handleSignature = () => {\r\n    setTitle(\"Signature\");\r\n    setUrl(`/auth/signature/${user && user.id}/${user.username}`);\r\n    setMandate(user && user.id + \" \" + user.first_name);\r\n  };\r\n\r\n  const handleAvatar = () => {\r\n    setTitle(\"Profile Picture\");\r\n    setUrl(`/auth/avatar/${user && user.id}/${user.username}`);\r\n    setMandate(user && user.id + \" \" + user.first_name);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setPassword({\r\n      ...password,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setPassword({\r\n      ...password,\r\n      Error: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n    });\r\n  };\r\n\r\n  const handleChangePassword = () => {\r\n    dispatch(dispatchOpen());\r\n    axios\r\n      .post(\"/auth/pwd\", password, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        setTimeout(() => {\r\n          dispatch(setToken(\"\"));\r\n        }, 5000);\r\n        setMessage(result.data.message);\r\n      })\r\n      .catch((error) => {\r\n        if (error) return setError(error.response.data);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    return handleValidation();\r\n  }, [password.password, password.password2]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Mandate\r\n        title={title}\r\n        open={isMandate}\r\n        mandate={mandate}\r\n        setOpen={handleDispatch}\r\n        setMandate={setMandate}\r\n        url={mandate && url}\r\n      />\r\n      <AppBackdrop open={isOpen} />\r\n      <AppSnackbar open={message} setOpen={setMessage} message={message} />\r\n      <Container>\r\n        <MDBModal\r\n          centered\r\n          size=\"md\"\r\n          isOpen={open}\r\n          backdrop={false}\r\n          overflowScroll={false}\r\n        >\r\n          <MDBModalHeader>\r\n            <Typography variant=\"subtitle1\">Profile Settings</Typography>\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            {Error && <Typography color=\"error\"> {Error} </Typography>}\r\n            <section>\r\n              <List>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar\r\n                      src={user && user.avatar}\r\n                      style={{ width: 70, height: 70 }}\r\n                    />\r\n                    {user && !user.avatar && (\r\n                      <Tooltip title=\"Upload Profile Picture\">\r\n                        <IconButton\r\n                          size=\"medium\"\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            top: 45,\r\n                            marginLeft: 25,\r\n                          }}\r\n                          onClick={() => handleAvatar()}\r\n                        >\r\n                          <EditRounded style={{ color: \"#20c997\" }} />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    )}\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={\r\n                      user &&\r\n                      `${user.first_name} \r\n                      ${user.last_name}`\r\n                    }\r\n                    className=\"ml-2\"\r\n                    secondary={user && user.username}\r\n                  />\r\n                  <div>\r\n                    <ListItemText\r\n                      secondary={\r\n                        user && user.signature ? (\r\n                          <Tooltip title=\"Signature\">\r\n                            <Avatar variant=\"square\" src={user.signature} />\r\n                          </Tooltip>\r\n                        ) : (\r\n                          <Tooltip title=\"Upload Signature\">\r\n                            <IconButton\r\n                              size=\"medium\"\r\n                              onClick={() => handleSignature()}\r\n                            >\r\n                              <AttachFile />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        )\r\n                      }\r\n                    />\r\n                  </div>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemIcon>\r\n                    <IconButton>\r\n                      <Phone />\r\n                    </IconButton>\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary=\"Contact\"\r\n                    secondary={user && user.mobile}\r\n                  />\r\n                  <ListItemIcon>\r\n                    <IconButton>\r\n                      <Email />\r\n                    </IconButton>\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary=\"Email Address\"\r\n                    secondary={user && user.email}\r\n                  />\r\n                </ListItem>\r\n              </List>\r\n            </section>\r\n            <>\r\n              <Typography\r\n                variant=\"body1\"\r\n                style={{\r\n                  color: \"#20c997\",\r\n                  alignSelf: \"center\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                Change Password\r\n              </Typography>\r\n              <form action=\"\" method=\"post\">\r\n                <FormGroup className=\"p-3\">\r\n                  <TextField\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"New Password\"\r\n                    value={password.password}\r\n                    onChange={(e) => handleChange(e)}\r\n                    error={password && password.Error ? true : false}\r\n                    helperText={password && password.Error}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"p-3\">\r\n                  <TextField\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    type=\"password\"\r\n                    name=\"password2\"\r\n                    variant=\"outlined\"\r\n                    label=\"Confirm Password\"\r\n                    value={password.password2}\r\n                    placeholder=\"New Password\"\r\n                    onChange={(e) => handleChange(e)}\r\n                    error={password && password.Error ? true : false}\r\n                    helperText={password && password.Error}\r\n                  />\r\n                </FormGroup>\r\n              </form>\r\n            </>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              onClick={() => handleChangePassword()}\r\n              style={{ color: \"white\", backgroundColor: \"#2a3f54\" }}\r\n            >\r\n              Change\r\n            </Button>\r\n            <Tooltip title=\"Close\">\r\n              <IconButton\r\n                size=\"medium\"\r\n                color=\"secondary\"\r\n                className=\"ml-3\"\r\n                onClick={() => handleClose()}\r\n              >\r\n                <Close color=\"error\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProfileSetting;\r\n","// MUI Stuff\r\nimport List from \"@material-ui/core//List\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core//Avatar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ListItem from \"@material-ui/core//ListItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\n\r\n// MUI Icons\r\nimport Power from \"@material-ui/icons/Power\";\r\nimport Settings from \"@material-ui/icons/Settings\";\r\nimport Fullscreen from \"@material-ui/icons/Fullscreen\";\r\n\r\nimport React, { useEffect, Fragment, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { selectToken, selectUser, setToken } from \"../../appState/appSlice\";\r\nimport SideBarNavigation from \"./SideBarNavigation\";\r\nimport ProfileSetting from \"./ProfileSetting\";\r\n\r\nconst SideBarMenu = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const token = useSelector(selectToken);\r\n  const user = useSelector(selectUser);\r\n  const [open, setOpen] = useState(false);\r\n  useEffect(() => {\r\n    if (!token) {\r\n      return history.push(\"/\");\r\n    }\r\n  }, [token]);\r\n  return (\r\n    <Fragment>\r\n      <div className=\"side__BarContainer p-1 hide-on-print\">\r\n        {/* Profile Setting Component */}\r\n        <ProfileSetting open={open} setOpen={setOpen} />\r\n        <section\r\n          className=\"p-3\"\r\n          style={{\r\n            position: \"sticky\",\r\n            top: 0,\r\n            zIndex: 2,\r\n            backgroundColor: \"inherit\",\r\n          }}\r\n        >\r\n          <div className=\"side__BarHeader p-2\">\r\n            <Typography variant=\"subtitle1\">EMS</Typography>\r\n          </div>\r\n          <List>\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <Avatar\r\n                  src={user && user.avatar}\r\n                  style={{ width: 70, height: 70 }}\r\n                />\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={\r\n                  user &&\r\n                  `${user.first_name} \r\n                      ${user.last_name}`\r\n                }\r\n                className=\"ml-2\"\r\n                secondary={\r\n                  user && (\r\n                    <Typography\r\n                      variant=\"subtitle1\"\r\n                      style={{ color: \"#20c997\" }}\r\n                    >\r\n                      {`${user.username}`}\r\n                    </Typography>\r\n                  )\r\n                }\r\n              />\r\n            </ListItem>\r\n          </List>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            style={{ background: \"#2A3F54\", width: \"100%\", color: \"white\" }}\r\n          >\r\n            System Right\r\n          </Button>\r\n        </section>\r\n\r\n        <section className=\"side__BarMenuContainer\">\r\n          <SideBarNavigation user={user} />\r\n        </section>\r\n        <div className=\"side__BarFooter\">\r\n          {user && (\r\n            <Tooltip title=\"Settings\">\r\n              <IconButton onClick={() => setOpen(!open)}>\r\n                <Settings />\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n          <IconButton>\r\n            <Fullscreen />\r\n          </IconButton>\r\n          <Tooltip title=\"Log out\">\r\n            <IconButton onClick={() => dispatch(setToken(\"\"))}>\r\n              <Power />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SideBarMenu;\r\n","// MUI Stuff\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// Icons\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport Settings from \"@material-ui/icons/Settings\";\r\nimport MoreVert from \"@material-ui/icons/MoreVert\";\r\nimport Dashboard from \"@material-ui/icons/Dashboard\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport \"./appHeader.css\";\r\nimport { Fragment } from \"react\";\r\nimport ProfileSetting from \"./ProfileSetting\";\r\n\r\nconst AppHeader = ({ title, search, searchWidget, setSearchWidget }) => {\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"app__HeaderContainer hide-on-print\">\r\n        <div className=\"app__HeaderLeft\">\r\n          {title && (\r\n            <Typography variant=\"subtitle1\" className=\"ml-2\">\r\n              {title}\r\n            </Typography>\r\n          )}\r\n        </div>\r\n        <aside className=\"app__HeaderRight\">\r\n          <Tooltip title=\"Go To Dashboard\">\r\n            <IconButton onClick={() => history.push(\"/\")}>\r\n              <Dashboard />\r\n            </IconButton>\r\n          </Tooltip>\r\n          {search ? (\r\n            <Tooltip title={`Search ${title}`}>\r\n              <IconButton onClick={() => setSearchWidget(!searchWidget)}>\r\n                <Search />\r\n              </IconButton>\r\n            </Tooltip>\r\n          ) : (\r\n            <Tooltip title={`Setting`}>\r\n              <IconButton onClick={() => setOpen(!open)}>\r\n                <Settings />\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n          <IconButton>\r\n            <MoreVert />\r\n          </IconButton>\r\n        </aside>\r\n      </div>\r\n      {/* Profile setting component */}\r\n      <ProfileSetting open={open} setOpen={setOpen} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import { Button, Grid, Typography } from \"@material-ui/core\";\r\nimport { UndoRounded } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  useHistory,\r\n  useParams,\r\n} from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { selectAccounts, selectAccountTxs } from \"../appState/appSlice\";\r\nimport AppHeader from \"./global/AppHeader\";\r\n\r\nconst AccountFeed = () => {\r\n  const params = useParams();\r\n  const { name } = params;\r\n  const history = useHistory();\r\n  const accountTxs = useSelector(selectAccountTxs);\r\nconst accounts = useSelector(selectAccounts)\r\n\r\n  const calcuTotalDR = (data) => {\r\n    const tDR = data && data.filter((dta) => dta.tx_type == \"DR\");\r\n    const total = tDR && tDR.reduce((a, v) => +v.amount + a, 0);\r\n    return total;\r\n  };\r\n  const calcuTotalCR = (data) => {\r\n    const tCR = data && data.filter((dta) => dta.tx_type == \"CR\");\r\n    const total = tCR && tCR.reduce((a, v) => +v.amount + a, 0);\r\n    return total;\r\n  };\r\n\r\n  const renderAccountDetails = (account_FK) =>{\r\n        \r\n    const account = accounts && accounts.find(acc =>acc.code == account_FK )\r\n    return account && account.balance_type\r\n  }\r\n\r\n  return (\r\n    <div className=\"app__Feed\">\r\n      <AppHeader title=\"Posting\" />\r\n      <div className=\"m-3\">\r\n        <Grid container spacing={2}>\r\n          <Grid item lg={12} md={12}>\r\n            <table className=\"table table-sm table-striped table-hover\">\r\n              <thead>\r\n                <th style={{ border: \"1px solid #F7F7F7F7\" }}>#</th>\r\n                <th style={{ border: \"1px solid #F7F7F7F7\" }}>Description</th>\r\n                <th style={{ border: \"1px solid #F7F7F7F7\" }}>Date</th>\r\n                <th style={{ border: \"1px solid #F7F7F7F7\" }}>\r\n                  DR (<s>N</s>)\r\n                </th>\r\n                <th style={{ border: \"1px solid #F7F7F7F7\" }}>\r\n                  CR (<s>N</s>)\r\n                </th>\r\n                <th style={{ border: \"1px solid #F7F7F7F7\" }}> Pay Method </th>\r\n                {/* <th style={{ border: '1px solid #F7F7F7F7' }}> Status </th> */}\r\n              </thead>\r\n              <tbody>\r\n                {accountTxs &&\r\n                  accountTxs.map((pay, index) => {\r\n                    const {\r\n                      tx_date,\r\n                      tx_type,\r\n                      description,\r\n                      amount,\r\n                      account_FK,\r\n                      pay_method,\r\n                    } = pay;\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td> {index + 1} </td>\r\n                        <td>{description}</td>\r\n                        <td> {new Date(tx_date).toLocaleDateString()} </td>\r\n                        <td>\r\n                          <Typography variant=\"p\" style={{ color: \"#2A3F54\" }}>\r\n                            {tx_type == \"DR\" ? amount.toLocaleString() : null}\r\n                          </Typography>\r\n                        </td>\r\n                        <td>\r\n                          <Typography variant=\"p\" style={{ color: \"#20c997\" }}>\r\n                            {tx_type == \"CR\" ? amount.toLocaleString() : null}\r\n                          </Typography>\r\n                        </td>\r\n                        <td> {pay_method} </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n\r\n                {accountTxs && (\r\n                  <tr style={{ background: \"none\" }}>\r\n                    <td colSpan={1}></td>\r\n                    <td colSpan={1}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{ color: \"white\", \r\n                          background: \"red\", width: '50%' }}\r\n                      >\r\n                        <b>Total Debit :</b>\r\n                      </Button>\r\n                    </td>\r\n                    <td colSpan={1}></td>\r\n                    <td colSpan={1}>\r\n                      <Typography variant=\"h5\">\r\n                        <b>\r\n                          <s>N</s>:{calcuTotalDR(accountTxs).toLocaleString()}\r\n                        </b>\r\n                      </Typography>\r\n                    </td>\r\n                    <td colSpan={2}></td>\r\n                  </tr>\r\n                )}\r\n\r\n                {accountTxs && (\r\n                  <tr style={{ background: \"none\" }}>\r\n                    <td colSpan={1}></td>\r\n                    <td colSpan={1}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{ color: \"white\", \r\n                          background: \"#2A3F54\", width: '50%' }}\r\n                      >\r\n                        <b>Total Credit :</b>\r\n                      </Button>\r\n                    </td>\r\n\r\n                    <td colSpan={2}></td>\r\n                    <td colSpan={1}>\r\n                      <Typography variant=\"h5\" style={{ color: \"#20c997\" }}>\r\n                        <b>\r\n                          <s>N</s>:{calcuTotalCR(accountTxs).toLocaleString()}\r\n                        </b>\r\n                      </Typography>\r\n                    </td>\r\n                    <td colSpan={1}></td>\r\n                  </tr>\r\n                )}\r\n\r\n                {accountTxs && (\r\n                  <tr style={{ background: \"none\" }}>\r\n                    <td colSpan={1}></td>\r\n                    <td>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{ color: \"white\", \r\n                          background: \"#20c997\", width: '50%' }}\r\n                      >\r\n                        <b>Close Balance :</b>\r\n                      </Button>\r\n                    </td>\r\n                    <td\r\n                      colSpan={\r\n                        accountTxs[0].balance_type == \"DR\" ? 1 : 2\r\n                      }\r\n                    ></td>\r\n                    <td ccolSpan={2}>\r\n                      <Typography variant=\"h5\" style={{ color: \"#20c997\" }}>\r\n                        <b>\r\n                          <s>N</s>:\r\n                          {calcuTotalDR(accountTxs) > 0\r\n                            ?parseInt(calcuTotalCR(accountTxs) -\r\n                              calcuTotalDR(accountTxs)).toLocaleString()\r\n                            : calcuTotalCR(accountTxs)}\r\n                        </b>\r\n                      </Typography>\r\n                    </td>\r\n                    <td\r\n                      colSpan={\r\n                        accountTxs[0].balance_type == \"DR\" ? 2 : 1\r\n                      }\r\n                    ></td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n            {!accountTxs.length > 0 && (\r\n              <Fragment>\r\n                <div className=\"alert alert-warning\">\r\n                  {`Ops!!! ${name} have no transaction history`}\r\n                </div>\r\n              </Fragment>\r\n            )}\r\n            <section\r\n              className=\"mt-5\"\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Button\r\n                size=\"medium\"\r\n                variant=\"contained\"\r\n                onClick={() => history.goBack()}\r\n                style={{ background: \"#2A3F54\", color: \"white\" }}\r\n                endIcon={<UndoRounded style={{ color: \"#20c997\" }} />}\r\n              >\r\n                Back\r\n              </Button>\r\n            </section>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountFeed;\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken,  setAccounts,  setAccountTxs,  setCustomers, setUser, } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport AccountFeed from '../components/AccountFeed'\r\n\r\nconst AccountScreen = () => {\r\n    const params = useParams()\r\n    const {uuid} = params\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n\r\n     // func\r\n\r\n    const get_Accounts_Tx = () =>{\r\n        // console.log(uuid)\r\n        axios.get(`/account/tx/${uuid}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(txs =>{\r\n            dispatch(setAccountTxs(txs.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n     // func\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    \r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        get_Session()\r\n       get_AllAccounts()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        get_Accounts_Tx()\r\n    }, [uuid])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} setOpen={setOpen} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <AccountFeed\r\n                setOpen={setOpen}\r\n            />            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccountScreen\r\n","import React from \"react\";\r\nimport ReactExport from \"react-data-export\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAccounts } from \"../appState/appSlice\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nconst ExcelDownload = ({ date, dataSet1}) => {\r\n    const accounts = useSelector(selectAccounts)\r\n    const returncusName = (code) =>{\r\n        const cname = accounts && accounts.find(acc =>acc.code ===code).name\r\n        return cname\r\n    }\r\n    return (\r\n        <ExcelFile\r\n            filename ={`TXS ${date}`}\r\n            element={<button>Export To Excel</button>}\r\n        >\r\n            <ExcelSheet data={dataSet1} name={`TXS ${date}` }>\r\n                <ExcelColumn label=\"Account Name\" value={(col) =>returncusName(col.account_FK)} />\r\n                <ExcelColumn label=\"Code\" value=\"account_FK\"/>\r\n                <ExcelColumn label=\"Description\" value=\"description\"/>\r\n                <ExcelColumn label=\"Tx Date\" \r\n                    value={(col) => new Date(col.tx_date).toLocaleDateString()}/>\r\n                <ExcelColumn label=\"CR\"\r\n                    value={(col) => col.tx_type ===\"CR\" ? col.amount : \"\"}/>\r\n                <ExcelColumn label=\"DR\"\r\n                    value={(col) => col.tx_type ===\"DR\" ? col.amount : \"\"}/>\r\n                <ExcelColumn label=\"Status\"\r\n                    value={(col) => col.paid ===1 ? \"Posted\" : \"Post\"}/>\r\n                <ExcelColumn label=\"Pay Method\" value=\"pay_method\"/>\r\n                \r\n            </ExcelSheet>\r\n           \r\n        </ExcelFile>\r\n    );\r\n    \r\n}\r\n\r\nexport const DownloadSaleRepmt = ({ date, dataSet1}) => {\r\n    return (\r\n        <ExcelFile\r\n            filename ={`Sale Rept ${date}`}\r\n            element={<button>Export To Excel</button>}\r\n        >\r\n            <ExcelSheet data={dataSet1} name={`SRPMTR ${date}` }>\r\n                <ExcelColumn label=\"Name\" value=\"applicant_name\" />\r\n                <ExcelColumn label=\"Property\" value=\"property_name\"/>\r\n                <ExcelColumn label=\"Due Date\" \r\n                    value={(col) => new Date(col.due_date).toLocaleDateString()}/>\r\n                <ExcelColumn label=\"Cost AMT(N)\"\r\n                    value={(col) => parseInt(col.amount).toLocaleString()}/>\r\n                <ExcelColumn label=\"Aimed AMT(N)\"\r\n                    value={(col) => parseInt(col.amount_paid).toLocaleString()}/>\r\n                <ExcelColumn label=\"RCPT NO.\" value=\"rcpt_no\"/>\r\n                <ExcelColumn label=\"Tx Date\" \r\n                    value={(col) => new Date(col.tx_date).toLocaleDateString()}/>\r\n                <ExcelColumn label=\"LT Paymnt(N)\"\r\n                    value={(col) => parseInt(col.tx_amount).toLocaleString()}/>\r\n                <ExcelColumn label=\"Pay Method\" value=\"pay_method\"/>\r\n                <ExcelColumn label=\"Remark\"\r\n                    value={(col) => col.status ===1 ? \"Posted\" : \"Post\"}/>\r\n            </ExcelSheet>\r\n           \r\n        </ExcelFile>\r\n    );\r\n    \r\n}\r\n\r\nexport const DownloadExpenseReport = ({ date, dataSet1, \r\n    renderExpCategory, renderAccount\r\n}) => {\r\n    return (\r\n        <ExcelFile\r\n            filename ={`Expense ${date}`}\r\n            element={<button>Export To Excel</button>}\r\n        >\r\n            <ExcelSheet data={dataSet1} name={`EXPReport ${date}` }>\r\n                <ExcelColumn label=\"Item\" \r\n                    value={(col) =>renderExpCategory(col.expense_FK)} />\r\n                <ExcelColumn label=\"Description\" value=\"description\"/>\r\n                <ExcelColumn label=\"Account Payable\" \r\n                    value={(col) =>renderAccount(col.payment_account)} />\r\n                <ExcelColumn label=\"Account Receivable\"\r\n                    value={(col) => renderAccount(col.payee_account)}/>\r\n                <ExcelColumn label={`Amount (N)`}\r\n                    value={(col) => parseInt(col.amount).toLocaleString()}/>\r\n                <ExcelColumn label=\"Date\" \r\n                    value={(col) => new Date(col.expense_date).toLocaleDateString()}/>\r\n                \r\n                <ExcelColumn label=\"Pay Method\" value=\"pay_method\"/>\r\n                \r\n            </ExcelSheet>\r\n           \r\n        </ExcelFile>\r\n    );\r\n    \r\n}\r\n\r\nexport default ExcelDownload","import { Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectAccounts, selectFilterTx } from '../../appState/appSlice'\r\nimport ExcelDownload from '../ExcelDownload'\r\nconst TxTableView = ({name, date}) => {\r\n    const txs = useSelector(selectFilterTx)\r\n    const accounts = useSelector(selectAccounts)\r\n    // func \r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total.toLocaleString()\r\n    }\r\n    const calcuTotalCR = (data) =>{\r\n        const crData = data && data.filter(d =>d.tx_type ==='CR');\r\n        const totalCR =  crData && crData.reduce((a, v) =>v.tx_type ==='CR' && v.amount+a, 0)\r\n        return totalCR.toLocaleString()\r\n    }\r\n    const calcuTotalDR = (data) =>{\r\n        const drData = data && data.filter(d =>d.tx_type ==='DR');\r\n        const totalDR =  drData && drData.reduce((a, v) =>v.tx_type ==='DR' && v.amount+a, 0)\r\n        return totalDR.toLocaleString()\r\n    }\r\n\r\n    const returncusName = (code) =>{\r\n        const cname = accounts && accounts.find(acc =>acc.code ===code)\r\n       if(cname) \r\n            return cname.name\r\n        return null\r\n    }\r\n\r\n    const tx_Status = (x) =>{\r\n        const status = x && x == 1 ?\r\n            <span className='fa fa-plus-circle' style={{color: '#20c997'}} />\r\n        :\r\n       \r\n        <span className='fa fa-minus-circle' style={{color: 'red'}} />\r\n        return status\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <table className='table-hover table-bordered'\r\n                style={{width: '98%', margin: 'auto'}}\r\n            >\r\n                <thead style={{top: '60px', position: 'sticky', background: '#EDEDED'}}>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Name</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Code</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Description</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Date</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>RCPT. NO.</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>CR (<s>N</s>)</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>DR (<s>N</s>)</th>\r\n\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}> Pay Method </th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}> Status </th>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        txs &&\r\n                        txs.map((tx, index) =>{\r\n                            const { tx_date, description, tx_type, amount, rcpt_no, account_FK, pay_method, \r\n                               paid } = tx\r\n                            return (\r\n                                <Fragment key={index}>\r\n                                    <tr>\r\n                                        <td\r\n                                            style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}\r\n                                        > {index+1} </td>\r\n                                        <td style={{textAlign: 'left'}}>\r\n                                            {returncusName(account_FK)}\r\n                                        </td>\r\n                                        <td style={{textAlign: 'left'}}>{account_FK}</td>\r\n                                        <td style={{textAlign: 'left', margin: '5px'}}>\r\n                                        \r\n                                            {description}\r\n                                        \r\n                                        </td>\r\n                                        <td> {new Date(tx_date).toLocaleDateString()} </td>\r\n                                        <td> {rcpt_no} </td>\r\n                                        {\r\n                                            tx_type =='CR'?\r\n                                            <td>\r\n                                                <Typography style={{color: '#20C997'}}>\r\n                                                { amount.toLocaleString() }\r\n                                                </Typography>\r\n                                            </td>\r\n                                            :\r\n                                            <td> </td>\r\n                                        }\r\n                                        {\r\n                                            tx_type =='DR'?\r\n                                            <td>\r\n                                                <Typography color='error'>\r\n                                                { amount.toLocaleString() }\r\n                                                </Typography>\r\n                                            </td>\r\n                                            :\r\n                                            <td> </td>\r\n                                        }\r\n                                        <td> {pay_method} </td>\r\n                                        <td\r\n                                            style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}\r\n                                        >\r\n                                            <div className='p-2'>\r\n                                            {tx_Status(paid)}\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                    {\r\n                        txs && txs.length >0 &&\r\n                        <tr\r\n                        style={{background: '#2A3F54', color: 'white'}} \r\n                        >\r\n                            <td colSpan={2}>\r\n                                <Typography variant='subtitle1'\r\n                                style={{color: 'white'}}\r\n                                >\r\n                                    <b>Total:</b>\r\n                                </Typography>\r\n                            </td>\r\n                            <td colSpan={5}>\r\n                                <Typography variant='subtitle1'\r\n                                style={{color: 'white'}}\r\n                                >\r\n                                <b>{\r\n                                    calcuTotalCR(txs)\r\n                                }</b>\r\n                                </Typography>\r\n                            </td>\r\n                            <td colSpan={1}>\r\n                                <Typography variant='subtitle1'\r\n                                    style={{color: 'white'}}\r\n                                    >\r\n                                    <b>{calcuTotalDR(txs)}</b>\r\n                                </Typography>\r\n                            </td>\r\n                            <td colSpan={2}>\r\n                                <Typography variant='subtitle1'\r\n                                    style={{color: 'white'}}\r\n                                    >\r\n                                    <b>{ calcuAmt(txs)}</b>\r\n                                </Typography>\r\n                            </td>\r\n                        </tr>\r\n                        \r\n                    }\r\n                    \r\n                </tbody>\r\n                \r\n            </table>\r\n                  \r\n            {\r\n                txs<=0 &&\r\n                \r\n                <div className='alert alert-warning'\r\n                    style={{width: '98%', margin: 'auto'}}\r\n                >\r\n                    {`Ops!!! No Transaction History`}\r\n                </div>                \r\n            }\r\n            {\r\n                name && !name.length >0 &&\r\n                <div className='alert alert-warning'\r\n                    style={{width: '98%', margin: 'auto'}}\r\n                >\r\n                    {`Ops!!! No Staff Selected`}\r\n                </div>\r\n            }\r\n            {\r\n                txs && txs.length >0 &&\r\n                <table className='table'>\r\n                    <tbody>\r\n                    <tr >\r\n                        <td className='p-3'>\r\n                            <ExcelDownload\r\n                                date={date} \r\n                                dataSet1={txs} \r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default TxTableView\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  selectAccounts,\r\n  selectAllStaffs,\r\n  selectToken,\r\n  selectTransactions,\r\n  setfilterTx,\r\n  setOpen,\r\n} from \"../appState/appSlice\";\r\nimport AppSnackbar from \"./global/AppSnackbar\";\r\nimport TxTableView from \"./global/TxTableView\";\r\n\r\nconst AdminAccountSetting = () => {\r\n  const dispatch = useDispatch();\r\n  const token = useSelector(selectToken);\r\n  const staffs = useSelector(selectAllStaffs);\r\n  const accounts = useSelector(selectAccounts);\r\n  const transactions = useSelector(selectTransactions);\r\n  const [tab, setTab] = useState();\r\n  const [Error, setError] = useState();\r\n  const [message, setMessage] = useState();\r\n  const [accData, setAccdata] = useState({\r\n    id: \"\",\r\n    name: \"\",\r\n    code: \"\",\r\n    active: \"\",\r\n    locked: \"\",\r\n    change: false,\r\n    acc_type: \"\",\r\n    account: \"\",\r\n    balance_type: \"\",\r\n  });\r\n  // func\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setAccdata({\r\n      ...accData,\r\n      [name]: value,\r\n      change: true,\r\n    });\r\n  };\r\n\r\n  const handleAccountUpdate = () => {\r\n    dispatch(setOpen(true));\r\n    axios\r\n      .post(`/account/${accData.id}`, accData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        dispatch(setOpen(false));\r\n        setMessage(result.data.message);\r\n        return setAccdata({\r\n          id: \"\",\r\n          name: \"\",\r\n          code: \"\",\r\n          active: \"\",\r\n          locked: \"\",\r\n          acc_type: \"\",\r\n          change: false,\r\n          balance_type: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setTimeout(() => {\r\n          return setError(\"\");\r\n        }, 5000);\r\n        dispatch(setOpen(false));\r\n        if (error) return setError(error.response.data);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    const facc =\r\n      accounts && accounts.filter((acc) => acc.code == accData.account)[0];\r\n    if (facc) {\r\n      return setAccdata({\r\n        ...accData,\r\n        id: facc.id,\r\n        name: facc.name,\r\n        code: facc.code,\r\n        active: facc.active,\r\n        locked: facc.locked,\r\n        acc_type: facc.acc_type,\r\n        balance_type: facc.balance_type,\r\n      });\r\n    }\r\n  }, [accData.account]);\r\n\r\n  useEffect(() => {\r\n    const ftxs =\r\n      transactions &&\r\n      transactions.filter((tx) => tx.account_FK == accData.code);\r\n\r\n    return setTab(\"gen\"), dispatch(setfilterTx(ftxs));\r\n  }, [accData]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <AppSnackbar message={message} open={message} setOpen={setMessage} />\r\n      <div className=\"admin__Title\">\r\n        <section>\r\n          <Typography variant=\"h3\">ACCOUNT</Typography>\r\n          {Error && (\r\n            <Typography color=\"error\" variant=\"body2\">\r\n              {\" \"}\r\n              {Error}{\" \"}\r\n            </Typography>\r\n          )}\r\n        </section>\r\n        <div>\r\n          <Link to=\"/\" className=\"ml-3\">\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<span className=\"fa fa-arrow-right\" />}\r\n              style={{ background: \"#2A3F54\", color: \"white\" }}\r\n            >\r\n              <Typography variant=\"caption\">Account Lists</Typography>\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"p-1\" />\r\n\r\n      <table\r\n        className=\"mt-1 table-bordered\"\r\n        style={{\r\n          width: \"98%\",\r\n          margin: \"auto\",\r\n          position: \"sticky\",\r\n          top: 0,\r\n          zIndex: 222,\r\n        }}\r\n      >\r\n        <thead>\r\n          <th>Account</th>\r\n          <th>\r\n            <input\r\n              placeholder=\"Select\"\r\n              value={accData.account}\r\n              name=\"account\"\r\n              list=\"account\"\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n            <datalist id=\"account\">\r\n              {accounts &&\r\n                accounts.map((account, index) => {\r\n                  const { id, code, name } = account;\r\n                  return (\r\n                    <option key={index} value={code}>\r\n                      {\" \"}\r\n                      {name}{\" \"}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </datalist>\r\n          </th>\r\n          <th>Staff Username</th>\r\n          <th>\r\n            <input\r\n              list=\"usernames\"\r\n              name=\"username\"\r\n              placeholder=\"Process by ?\"\r\n            />\r\n            <datalist id=\"usernames\">\r\n              {staffs &&\r\n                staffs.map((staff, index) => {\r\n                  return <option key={index} value={staff.username}></option>;\r\n                })}\r\n            </datalist>\r\n          </th>\r\n          <th style={{ borderColor: \"none\" }}>\r\n            <Link to=\"/\" className=\"ml-3\">\r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<span className=\"fa fa-plus\" />}\r\n                style={{ background: \"#2A3F54\", color: \"white\" }}\r\n              >\r\n                <Typography variant=\"caption\">Add New</Typography>\r\n              </Button>\r\n            </Link>\r\n          </th>\r\n          <th style={{ border: \"none\", outline: \"none\" }}>\r\n            <Button\r\n              onClick={() => handleAccountUpdate()}\r\n              disabled={\r\n                tab !== \"gen\" || accData.change === false ? true : false\r\n              }\r\n              startIcon={<span className=\"fa fa-check />\" />}\r\n              variant=\"contained\"\r\n              style={{ background: \"#2A3F54\", color: \"white\" }}\r\n            >\r\n              <Typography variant=\"caption\">Update</Typography>\r\n            </Button>\r\n          </th>\r\n          <th style={{ border: \"none\", outline: \"none\" }}>\r\n            <Button\r\n              startIcon={<span className=\"fa fa-trash />\" />}\r\n              variant=\"contained\"\r\n              style={{ background: \"#2A3F54\", color: \"white\", width: \"100%\" }}\r\n            >\r\n              <Typography variant=\"caption\">Delete</Typography>\r\n            </Button>\r\n          </th>\r\n        </thead>\r\n      </table>\r\n      <div className=\"p-1\" />\r\n      <table\r\n        className=\"mt-1 table-bordered\"\r\n        style={{\r\n          width: \"98%\",\r\n          margin: \"auto\",\r\n          position: \"sticky\",\r\n          top: \"40px\",\r\n          zIndex: 222,\r\n        }}\r\n      >\r\n        <thead>\r\n          <th\r\n            onClick={() => setTab(\"gen\")}\r\n            style={{\r\n              background: tab == \"gen\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"gen\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            General Info\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"tx\")}\r\n            style={{\r\n              background: tab == \"tx\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"tx\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Transaction\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"rep\")}\r\n            style={{\r\n              background: tab == \"rep\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"rep\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Report\r\n          </th>\r\n          <th\r\n            style={{\r\n              color: \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n              borderTop: \"none\",\r\n              borderRight: \"none\",\r\n            }}\r\n          ></th>\r\n          {/* <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Sales\r\n                    </th> */}\r\n          {/* <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Journal\r\n                    </th> */}\r\n        </thead>\r\n        {accData.code && tab === \"gen\" && (\r\n          <tbody>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Code</td>\r\n              <td>\r\n                <input\r\n                  name=\"code\"\r\n                  readOnly\r\n                  value={accData.code}\r\n                  placeholder=\"Select\"\r\n                />\r\n              </td>\r\n              <td>Name</td>\r\n              <td>\r\n                <input\r\n                  name=\"name\"\r\n                  value={accData.name}\r\n                  placeholder=\"Account Name\"\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </td>\r\n              <td>Account Type</td>\r\n              <td>\r\n                <select\r\n                  id=\"acctype\"\r\n                  name=\"acc_type\"\r\n                  value={accData.acc_type}\r\n                  onChange={(e) => handleChange(e)}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <optgroup label=\"Assets\">\r\n                    <option value=\"asset_ca_cash\">Current Asset</option>\r\n                    <option value=\"asset_ca_mkt_sec\">\r\n                      Marketable Securities\r\n                    </option>\r\n                    <option value=\"asset_ca_recv\">Receivables</option>\r\n                    <option value=\"asset_ca_inv\">Inventory</option>\r\n                    <option value=\"asset_ca_uncoll\">Uncollectibles</option>\r\n                    <option value=\"asset_ca_prepaid\">Prepaid</option>\r\n                    <option value=\"asset_ca_other\">Other Liquid Assets</option>\r\n                    <option value=\"asset_lti_notes\">Notes Receivable</option>\r\n                    <option value=\"asset_lti_land\">Land</option>\r\n                    <option value=\"asset_lti_sec\">Securities</option>\r\n                    <option value=\"asset_ppe\">\r\n                      Property Plant &amp; Equipment\r\n                    </option>\r\n                    <option value=\"asset_ia\">Intangible Assets</option>\r\n                    <option value=\"asset_adjustment\">Other Assets</option>\r\n                  </optgroup>\r\n\r\n                  <optgroup label=\"Liabilities\">\r\n                    <option value=\"lia_cl_acc_pay\">Accounts Payable</option>\r\n                    <option value=\"lia_cl_wage_pay\">Wages Payable</option>\r\n                    <option value=\"lia_cl_wage_pay\">Interest Payable</option>\r\n                    <option value=\"lia_cl_st_notes_payable\">\r\n                      Notes Payable\r\n                    </option>\r\n                    <option value=\"lia_cl_ltd_mat\">\r\n                      Current Maturities of Long Tern Debt\r\n                    </option>\r\n                    <option value=\"lia_cl_def_rev\">Deferred Revenue</option>\r\n                    <option value=\"lia_cl_other\">Other Liabilities</option>\r\n                    <option value=\"lia_ltl_notes\">Notes Payable</option>\r\n                    <option value=\"lia_ltl_bonds\">Bonds Payable</option>\r\n                    <option value=\"lia_ltl_mortgage\">Mortgage Payable</option>\r\n                  </optgroup>\r\n                  <optgroup label=\"Equity\">\r\n                    <option value=\"eq_capital\">Capital</option>\r\n                    <option value=\"eq_stock_c\">Common Stock</option>\r\n                    <option value=\"eq_stock_p\">Preferred Stock</option>\r\n                    <option value=\"eq_adjustment\">\r\n                      Other Equity Adjustments\r\n                    </option>\r\n                    <option value=\"in_sales\">Sales Income</option>\r\n                    <option value=\"in_pass\">Passive Income</option>\r\n                    <option value=\"in_other\">Other Income</option>\r\n                    <option value=\"ex_cogs\">Cost of Goods Sold</option>\r\n                    <option value=\"ex_op\">Operational Expense</option>\r\n                    <option value=\"ex_interest\">Interest Expense</option>\r\n                    <option value=\"ex_taxes\">Tax Expense</option>\r\n                    <option value=\"ex_cap\">Capital Expense</option>\r\n                    <option value=\"ex_other\">Other Expense</option>\r\n                  </optgroup>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Balance Type</td>\r\n              <td>\r\n                <select\r\n                  id=\"accbalance\"\r\n                  name=\"balance_type\"\r\n                  value={accData.balance_type}\r\n                  onChange={(e) => handleChange(e)}\r\n                >\r\n                  <option value=\"CR\">Credit</option>\r\n                  <option value=\"DR\">Debit</option>\r\n                </select>\r\n              </td>\r\n              <td>Active</td>\r\n              <td>\r\n                <select\r\n                  name=\"active\"\r\n                  placeholder=\"Select\"\r\n                  value={accData.active}\r\n                  onChange={(e) => handleChange(e)}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value={1}>Yes</option>\r\n                  <option value={0}>No</option>\r\n                </select>\r\n              </td>\r\n              <td>Locked</td>\r\n              <td>\r\n                <select\r\n                  list=\"locked\"\r\n                  name=\"locked\"\r\n                  placeholder=\"Select\"\r\n                  value={accData.locked}\r\n                  onChange={(e) => handleChange(e)}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value={1}>Yes</option>\r\n                  <option value={0}>No</option>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        )}\r\n      </table>\r\n      {tab == \"tx\" && <TxTableView />}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AdminAccountSetting;\r\n","import { Button, IconButton, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectFilterSale } from '../../appState/appSlice'\r\nimport ExcelDownload from '../ExcelDownload'\r\n\r\nconst PurchaseRepayment = ({name, txs}) => {\r\n    const purchases = useSelector(selectFilterSale)\r\n    // func \r\n    const tx_Status = (x) =>{\r\n        const status = x && x == 1 ?\r\n            <span className='fa fa-plus-circle' style={{color: '#20c997'}} />\r\n        :\r\n        <span className='fa fa-minus-circle' style={{color: 'red'}} />\r\n        return status\r\n    }\r\n\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <table className='table-hover'\r\n                style={{width: '98%', margin: 'auto'}}\r\n            >\r\n                <thead style={{top: '6+++0px', position: 'sticky'}}>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Description</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Date</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>RCPT. NO.</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Amount (<s>N</s>)</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}> Pay Method </th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}> Status </th>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        txs &&\r\n                        txs.map((tx, index) =>{\r\n                            const { tx_date, description, amount, rcpt_no, pay_method, \r\n                               paid } = tx\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td\r\n                                         style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}\r\n                                    > {index+1} </td>\r\n                                    <td style={{textAlign: 'left', margin: '5px'}}>\r\n                                    \r\n                                        {description}\r\n                                    \r\n                                    </td>\r\n                                    <td> {new Date(tx_date).toLocaleDateString()} </td>\r\n                                    <td> {rcpt_no} </td>\r\n                                    <td> { amount.toLocaleString() } </td>\r\n                                    <td> {pay_method} </td>\r\n                                    <td\r\n                                        style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}\r\n                                    >\r\n                                        <div className='p-2'>\r\n                                        {tx_Status(paid)}\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                     {\r\n                purchases && purchases[0].amount_paid < calcuAmt(txs)?\r\n                <tr\r\n                    style={{background: '#2A3F54', color: 'white'}}\r\n                >\r\n                    <td>  </td>\r\n                    <td colSpan={1}>\r\n                        <Typography variant={'h6'}>\r\n                            Outstanding Balance\r\n                        </Typography>\r\n                    </td>\r\n                    {\r\n                        purchases && purchases.length >0&&\r\n                        <td colSpan={3}>\r\n                            <Typography variant={'h6'}\r\n                                style={{color: 'red'}}\r\n                            >\r\n                                <s>N</s>: \r\n                            {\r\n                                parseInt(parseInt(purchases[0].amount) -\r\n                                parseInt(purchases[0].amount_paid)).toLocaleString()\r\n                            }\r\n                            </Typography>\r\n                            \r\n                        </td>\r\n                        \r\n                    }\r\n                    <td colSpan={2}></td>\r\n                </tr>\r\n                :\r\n                <Button variant='contained'\r\n                    style={{background: '#2A3F54', color: 'white'}}\r\n                >Close Deal</Button>\r\n\r\n            }\r\n                <tr>\r\n                    <td>\r\n                        <ExcelDownload\r\n                        date={`${name} Repayments`} \r\n                        dataSet1={txs} />\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n                \r\n            </table>\r\n            {\r\n                !txs && name.length >0 &&\r\n                \r\n                <div className='alert alert-warning'\r\n                    style={{width: '98%', margin: 'auto'}}\r\n                >\r\n                    {`Ops!!! No Transaction History`}\r\n                </div>                \r\n            }\r\n            {\r\n                name && !name.length >0 &&\r\n                <div className='alert alert-warning'\r\n                    style={{width: '98%', margin: 'auto'}}\r\n                >\r\n                    {`Ops!!! No Staff Selected`}\r\n                </div>\r\n            }\r\n           \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default PurchaseRepayment\r\n","import { IconButton, Typography } from '@material-ui/core'\r\nimport { More } from '@material-ui/icons'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectFilterSale, selectTransactions, setfilterTx,} from '../appState/appSlice'\r\nimport PurchaseRepayment from './global/PurchaseRepayment.js'\r\n\r\nconst SaleViewTable = () => {\r\n    const purchases = useSelector(selectFilterSale)\r\n    const transactions = useSelector(selectTransactions)\r\n    const [rcpt_no, setRcpt_no] = useState()\r\n    const [proptxs, setProptxs] = useState()\r\n   \r\n\r\n    useEffect(() =>{\r\n       if(!purchases.length >0){\r\n            return setProptxs('')\r\n       }\r\n       const ftxs = transactions && transactions.filter(tx =>tx.rcpt_no == purchases[0].uuid);\r\n       return setProptxs(ftxs)\r\n    }, [purchases, rcpt_no])\r\n    return (\r\n        <Fragment>\r\n            <table className='table-hover'\r\n                style={{width: '98%', margin: 'auto'}}\r\n            >\r\n                <thead>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>#</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Property</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Date Sold</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Due Date</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Amount (<s>N</s>)</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}> </th>\r\n                </thead>\r\n                <tbody>\r\n                           {\r\n                               purchases &&\r\n                               purchases.map((sale, index) =>{\r\n                                   const {property_name, sale_date, due_date, uuid, amount } = sale\r\n                                   return(\r\n                                       <Fragment key={index}>\r\n                                            <tr>\r\n                                                <td style={{textAlign: 'center'}}> {index+1} </td>\r\n                                                <td style={{textAlign: 'left'}}>\r\n                                                    {property_name}\r\n                                                </td>\r\n                                                <td style={{textAlign: 'center'}}> {new Date(sale_date).toLocaleDateString()} </td>\r\n                                                <td style={{textAlign: 'center'}}> {new Date(due_date).toLocaleDateString()} </td>\r\n                                                <td style={{textAlign: 'center'}}> {amount.toLocaleString()} </td>\r\n                                                <td style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n                                                    <div>\r\n                                                    <IconButton size='small'\r\n                                                        onClick={() =>setRcpt_no(uuid)}\r\n                                                    >\r\n                                                        <More style={{color: '#20c997'}} />\r\n                                                    </IconButton>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </Fragment>\r\n                                   )\r\n                               })\r\n                           }\r\n                           {\r\n                           rcpt_no&&\r\n                           <tr\r\n                            style={{background: '#2A3F54', color: 'white'}} \r\n                           >\r\n                               <td colSpan={3}>\r\n                                   <Typography variant='h6'\r\n                                    style={{color: '#20c997'}}\r\n                                   >\r\n                                        Repayment History\r\n                                    </Typography>\r\n                               </td>\r\n                               <td style={{textAlign: 'center'}}>\r\n                                   <Typography variant='subtitle1'\r\n                                    style={{color: 'white'}}\r\n                                   >\r\n                                    \r\n                                   </Typography>\r\n                               </td>\r\n                               <td colSpan={2}></td>\r\n                           </tr>\r\n                       }\r\n                       </tbody>\r\n            </table>\r\n            {\r\n               rcpt_no &&\r\n                <PurchaseRepayment txs={proptxs} name={purchases? purchases[0].applicant_name: null} />\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default SaleViewTable\r\n","import { Button, Typography } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  selectAllStaffs,\r\n  selectCustomers,\r\n  selectSales,\r\n  selectToken,\r\n  selectTransactions,\r\n  setFilterSale,\r\n  setfilterTx,\r\n  setOpen,\r\n} from \"../appState/appSlice\";\r\nimport AppSnackbar from \"./global/AppSnackbar\";\r\nimport TxTableView from \"./global/TxTableView\";\r\nimport SaleViewTable from \"./SaleViewTable\";\r\n\r\nconst AdminCustomerSetting = () => {\r\n  const dispatch = useDispatch();\r\n  const token = useSelector(selectToken);\r\n  const staffs = useSelector(selectAllStaffs);\r\n  const sales = useSelector(selectSales);\r\n  const customers = useSelector(selectCustomers);\r\n  const transactions = useSelector(selectTransactions);\r\n  const [success, setSuccess] = useState(false);\r\n  const [message, setMessage] = useState();\r\n  const [tab, setTab] = useState(\"gen\");\r\n  const [cusData, setCusdata] = useState({\r\n    rm: \"\",\r\n    change: false,\r\n    tx_date: \"\",\r\n    active: \"\",\r\n    country: \"\",\r\n    phone_no: \"\",\r\n    address_1: \"\",\r\n    occupation: \"\",\r\n    place_work: \"\",\r\n    next_kin_name: \"\",\r\n    customer_sex: \"\",\r\n    customer_name: \"\",\r\n    customer_email: \"\",\r\n    customer_state: \"\",\r\n    postal_address: \"\",\r\n    customer_marital: \"\",\r\n    customer_address: \"\",\r\n    next_kin_addrss: \"\",\r\n    next_kin_relate: \"\",\r\n    business_employer_name: \"\",\r\n    customer: \"\",\r\n  });\r\n\r\n  // func\r\n\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setCusdata({\r\n      ...cusData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    dispatch(setOpen(true));\r\n    axios\r\n      .post(`/customer/${cusData.customer}`, cusData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        setMessage(result.data.message);\r\n        dispatch(setOpen(false));\r\n        setSuccess(true);\r\n        setCusdata({\r\n          customer: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch(setOpen(false));\r\n        if (error) {\r\n          setMessage(error.response.statusText);\r\n          setSuccess(true);\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fcus =\r\n      customers && customers.filter((cus) => cus.id == cusData.customer)[0];\r\n    if (fcus) {\r\n      return (\r\n        setCusdata({\r\n          ...cusData,\r\n          rm: fcus.rm,\r\n          change: true,\r\n          code: fcus.code,\r\n          tx_date: fcus.tx_date,\r\n          country: fcus.country,\r\n          phone_no: fcus.phone_no,\r\n          address_1: fcus.address_1,\r\n          occupation: fcus.occupation,\r\n          place_work: fcus.place_work,\r\n          next_kin_name: fcus.next_kin_name,\r\n          customer_sex: fcus.customer_sex,\r\n          customer_name: fcus.customer_name,\r\n          customer_email: fcus.customer_email,\r\n          customer_state: fcus.customer_state,\r\n          postal_address: fcus.postal_address,\r\n          customer_marital: fcus.customer_marital,\r\n          customer_address: fcus.customer_address,\r\n          next_kin_addrss: fcus.next_kin_addrss,\r\n          next_kin_relate: fcus.next_kin_relate,\r\n          business_employer_name: fcus.business_employer_name,\r\n        }),\r\n        setTab(\"gen\")\r\n      );\r\n    }\r\n  }, [cusData.customer]);\r\n\r\n  useEffect(() => {\r\n    const ftxs =\r\n      transactions &&\r\n      transactions.filter((tx) => tx.account_FK == cusData.code);\r\n    const fsales =\r\n      sales && sales.filter((sale) => sale.applicant == cusData.customer);\r\n\r\n    dispatch(setfilterTx(ftxs));\r\n\r\n    dispatch(setFilterSale(fsales));\r\n    return;\r\n  }, [cusData]);\r\n\r\n  return (\r\n    <div>\r\n      <AppSnackbar open={success} setOpen={setSuccess} message={message} />\r\n      <div className=\"admin__Title\">\r\n        <section>\r\n          <Typography variant=\"h3\">CUSTOMER</Typography>\r\n        </section>\r\n        <div>\r\n          <Link to=\"/customers\" className=\"ml-3\">\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<span className=\"fa fa-arrow-right\" />}\r\n              style={{ background: \"#2A3F54\", color: \"white\" }}\r\n            >\r\n              <Typography variant=\"caption\">Customer Lists</Typography>\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"p-1\" />\r\n\r\n      <table\r\n        className=\"mt-1 table-bordered\"\r\n        style={{\r\n          width: \"98%\",\r\n          margin: \"auto\",\r\n          position: \"sticky\",\r\n          top: 0,\r\n          zIndex: 222,\r\n        }}\r\n      >\r\n        <thead>\r\n          <th>Select</th>\r\n          <th>\r\n            <select\r\n              name=\"customer\"\r\n              value={cusData.customer}\r\n              onChange={(e) => handleChange(e)}\r\n            >\r\n              <option value=\"\"></option>\r\n              {customers &&\r\n                customers.map((cus, index) => {\r\n                  return (\r\n                    <option key={index} value={cus.id}>\r\n                      {\" \"}\r\n                      {cus.customer_name}{\" \"}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </th>\r\n          <th>Customer Id</th>\r\n          <th>\r\n            <input\r\n              value={cusData.customer}\r\n              placeholder=\"Customer\"\r\n              onChange={(e) => handleChange(e)}\r\n              name=\"customer\"\r\n              list=\"customers\"\r\n            />\r\n            <datalist id=\"customers\">\r\n              {customers &&\r\n                customers.map((cus, index) => {\r\n                  return (\r\n                    <option key={index} value={cus.id}>\r\n                      {\" \"}\r\n                      {cus.customer_name}{\" \"}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </datalist>\r\n          </th>\r\n          <th style={{ borderColor: \"none\" }}>\r\n            <Link to=\"/customers\" className=\"ml-3\">\r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<span className=\"fa fa-plus\" />}\r\n                style={{ background: \"#2A3F54\", color: \"white\" }}\r\n              >\r\n                <Typography variant=\"caption\">Add New</Typography>\r\n              </Button>\r\n            </Link>\r\n          </th>\r\n          <th style={{ border: \"none\", outline: \"none\" }}>\r\n            <Button\r\n              onClick={() => handleUpdate()}\r\n              disabled={\r\n                tab !== \"gen\" || cusData.change === false ? true : false\r\n              }\r\n              startIcon={<span className=\"fa fa-check />\" />}\r\n              variant=\"contained\"\r\n              style={{ background: \"#2A3F54\", color: \"white\" }}\r\n            >\r\n              <Typography variant=\"caption\">Update</Typography>\r\n            </Button>\r\n          </th>\r\n          <th style={{ border: \"none\", outline: \"none\" }}>\r\n            <Button\r\n              startIcon={<span className=\"fa fa-trash />\" />}\r\n              variant=\"contained\"\r\n              style={{ background: \"#2A3F54\", color: \"white\", width: \"100%\" }}\r\n            >\r\n              <Typography variant=\"caption\">Delete</Typography>\r\n            </Button>\r\n          </th>\r\n        </thead>\r\n      </table>\r\n      <div className=\"p-1\" />\r\n      <table\r\n        className=\"mt-1 table-bordered\"\r\n        style={{\r\n          width: \"98%\",\r\n          margin: \"auto\",\r\n          position: \"sticky\",\r\n          top: \"40px\",\r\n          zIndex: 222,\r\n        }}\r\n      >\r\n        <thead>\r\n          <th\r\n            onClick={() => setTab(\"gen\")}\r\n            style={{\r\n              background: tab == \"gen\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"gen\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            General Info\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"tx\")}\r\n            style={{\r\n              background: tab == \"tx\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"tx\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Transactions\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"pur\")}\r\n            style={{\r\n              background: tab == \"pur\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"pur\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Purchase\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"bal\")}\r\n            style={{\r\n              background: tab == \"bal\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"bal\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Balance\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"man\")}\r\n            style={{\r\n              background: tab == \"man\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"man\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Mandate\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"jou\")}\r\n            style={{\r\n              background: tab == \"jou\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"jou\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Journal\r\n          </th>\r\n        </thead>\r\n        {cusData.customer && tab == \"gen\" && (\r\n          <tbody>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Name</td>\r\n              <td>\r\n                <input\r\n                  name=\"customer_name\"\r\n                  value={cusData.customer_name}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </td>\r\n              <td>Contact</td>\r\n              <td>\r\n                <input\r\n                  name=\"phone_no\"\r\n                  value={cusData.phone_no}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </td>\r\n              <td>Email</td>\r\n              <td>\r\n                <input\r\n                  name=\"customer_email\"\r\n                  value={cusData.customer_email}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Nationality</td>\r\n              <td>\r\n                <input\r\n                  name=\"country\"\r\n                  value={cusData.country}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </td>\r\n              <td>Address</td>\r\n              <td colSpan={3}>\r\n                <input\r\n                  name=\"customer_address\"\r\n                  style={{ width: \"100%\" }}\r\n                  placeholder=\"Customer Address\"\r\n                  value={cusData.customer_address}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Marital Status</td>\r\n              <td>\r\n                <select\r\n                  name=\"customer_marital\"\r\n                  onChange={(e) => (handleChange = e)}\r\n                  value={cusData.customer_marital}\r\n                >\r\n                  <option value=\"Single\">Single</option>\r\n                  <option value=\"Married\">Married</option>\r\n                  <option value=\"Widow\">Widow</option>\r\n                  <option value=\"Divorce\">Divorce</option>\r\n                </select>\r\n              </td>\r\n              <td>Gender</td>\r\n              <td>\r\n                <select\r\n                  name=\"customer_sex\"\r\n                  onChange={(e) => handleChange(e)}\r\n                  value={cusData.customer_sex}\r\n                >\r\n                  <option value=\"male\">Male</option>\r\n                  <option value=\"female\">Female</option>\r\n                </select>\r\n              </td>\r\n              <td>State</td>\r\n              <td>\r\n                <select\r\n                  name=\"customer_state\"\r\n                  onChange={(e) => handleChange(e)}\r\n                  value={cusData.customer_state}\r\n                >\r\n                  <option value=\"Abia\">Abia</option>\r\n                  <option value=\"Adamawa\">Adamawa</option>\r\n                  <option value=\"Akwa Ibom\">Akwa Ibom</option>\r\n                  <option value=\"Anambra\">Anambra</option>\r\n                  <option value=\"Bauchi\">Bauchi</option>\r\n                  <option value=\"Bayelsa\">Bayelsa</option>\r\n                  <option value=\"Benue\">Benue</option>\r\n                  <option value=\"Borno\">Borno</option>\r\n                  <option value=\"Cross Rive\">Cross River</option>\r\n                  <option value=\"Delta\">Delta</option>\r\n                  <option value=\"Ebonyi\">Ebonyi</option>\r\n                  <option value=\"Edo\">Edo</option>\r\n                  <option value=\"Ekiti\">Ekiti</option>\r\n                  <option value=\"Enugu\">Enugu</option>\r\n                  <option value=\"FCT\">Federal Capital Territory</option>\r\n                  <option value=\"Gombe\">Gombe</option>\r\n                  <option value=\"Imo\">Imo</option>\r\n                  <option value=\"Jigawa\">Jigawa</option>\r\n                  <option value=\"Kaduna\">Kaduna</option>\r\n                  <option value=\"Kano\">Kano</option>\r\n                  <option value=\"Katsina\">Katsina</option>\r\n                  <option value=\"Kebbi\">Kebbi</option>\r\n                  <option value=\"Kogi\">Kogi</option>\r\n                  <option value=\"Kwara\">Kwara</option>\r\n                  <option value=\"Lagos\">Lagos</option>\r\n                  <option value=\"Nasarawa\">Nasarawa</option>\r\n                  <option value=\"Niger\">Niger</option>\r\n                  <option value=\"Ogun\">Ogun</option>\r\n                  <option value=\"Ondo\">Ondo</option>\r\n                  <option value=\"Osun\">Osun</option>\r\n                  <option value=\"Oyo\">Oyo</option>\r\n                  <option value=\"Plateau\">Plateau</option>\r\n                  <option value=\"Rivers\">Rivers</option>\r\n                  <option value=\"Sokoto\">Sokoto</option>\r\n                  <option value=\"Taraba\">Taraba</option>\r\n                  <option value=\"Yobe\">Yobe</option>\r\n                  <option value=\"Zamfara\">Zamfara</option>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Occupation</td>\r\n              <td>\r\n                <input\r\n                  name=\"occupation\"\r\n                  value={cusData.occupation}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </td>\r\n              <td>Address</td>\r\n              <td colSpan={3}>\r\n                <input\r\n                  name=\"postal_address\"\r\n                  placeholder=\"Post Address\"\r\n                  style={{ width: \"100%\" }}\r\n                  onChange={(e) => handleChange(e)}\r\n                  value={cusData.postal_address}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Business/Employer's</td>\r\n              <td colSpan={3}>\r\n                <input\r\n                  style={{ width: \"100%\" }}\r\n                  onChange={(e) => handleChange(e)}\r\n                  name=\"business_employer_address\"\r\n                  placeholder=\"Business/Employer's Name\"\r\n                  value={cusData.business_employer_name}\r\n                />\r\n              </td>\r\n              <td>Place of work</td>\r\n              <td>\r\n                <input\r\n                  name=\"place_work\"\r\n                  value={cusData.place_work}\r\n                  onChange={(e) => handleChange(e)}\r\n                  placeholder=\"Name of place of work\"\r\n                />\r\n              </td>\r\n            </tr>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Next Kin name</td>\r\n              <td>\r\n                <input\r\n                  name=\"next_kin_name\"\r\n                  onChange={(e) => handleChange(e)}\r\n                  value={cusData.next_kin_name}\r\n                  placeholder=\"Name of next of kin\"\r\n                />\r\n              </td>\r\n              <td>Kin Address</td>\r\n              <td colSpan={3}>\r\n                <input\r\n                  name=\"next_kin_addrss\"\r\n                  style={{ width: \"100%\" }}\r\n                  onChange={(e) => handleChange(e)}\r\n                  placeholder=\"Next of kin address\"\r\n                  value={cusData.next_kin_addrss}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Relationship</td>\r\n              <td>\r\n                <select\r\n                  name=\"next_kin_relate\"\r\n                  onChange={(e) => handleChange(e)}\r\n                  value={cusData.next_kin_relate}\r\n                >\r\n                  <option value=\"Son\">Son</option>\r\n                  <option value=\"Sister\">Sister</option>\r\n                  <option value=\"Brother\">Brother</option>\r\n                  <option value=\"Aunt\">Aunt</option>\r\n                  <option value=\"Uncle\">Uncle</option>\r\n                  <option value=\"Wife\">Wife</option>\r\n                  <option value=\"Husband\">Husband</option>\r\n                  <option value=\"Daughter\">Daughter</option>\r\n                  <option value=\"Father\">Father</option>\r\n                  <option value=\"Mother\">Mother</option>\r\n                </select>\r\n              </td>\r\n              <td>(RM)</td>\r\n              <td>\r\n                <select\r\n                  name=\"rm\"\r\n                  value={cusData.rm}\r\n                  onChange={(e) => handleChange(e)}\r\n                >\r\n                  <option value=\"\">Relationship Manager</option>\r\n                  {staffs &&\r\n                    staffs.map((staff, index) => {\r\n                      const { id, first_name, last_name } = staff;\r\n                      return (\r\n                        <option value={index}>\r\n                          {\" \"}\r\n                          {`${first_name} ${last_name}`}{\" \"}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </td>\r\n              <td>Active</td>\r\n              <td>\r\n                <select\r\n                  name=\"active\"\r\n                  value={cusData.active}\r\n                  onChange={(e) => handleChange(e)}\r\n                >\r\n                  <option value={1}>Yes</option>\r\n                  <option value={0}>No</option>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Date: {new Date(cusData.tx_date).toLocaleDateString()}</td>\r\n              <td colSpan={5}>\r\n                <input\r\n                  name=\"tx_date\"\r\n                  type=\"date\"\r\n                  style={{ width: \"100%\" }}\r\n                  onChange={(e) => handleChange(e)}\r\n                  placeholder=\"Date Created\"\r\n                  value={new Date(cusData.tx_date)}\r\n                />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        )}\r\n      </table>\r\n      {tab == \"tx\" && (\r\n        <TxTableView\r\n          date={cusData.customer_name}\r\n          name={cusData.customer_name}\r\n        />\r\n      )}\r\n      {tab == \"pur\" && <SaleViewTable />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminCustomerSetting;\r\n","import { Button, Typography } from '@material-ui/core'\r\nimport { Check } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { selectAccounts, selectAllStaffs, selectUserExpenseRaised } from '../appState/appSlice'\r\n\r\nconst AdminExpenseSetting = () => {\r\n    const staffs = useSelector(selectAllStaffs)\r\n    const accounts = useSelector(selectAccounts)\r\n    const expenses = useSelector(selectUserExpenseRaised)\r\n   \r\n    return (\r\n        <div>\r\n            <div className='admin__Title'>\r\n                <section>\r\n                    <Typography variant='h3'>EXPENSE</Typography>\r\n                </section>\r\n                <div>\r\n                    <Link to='/' className='ml-3'>\r\n                        <Button \r\n                            variant='contained'\r\n                            startIcon={<span className='fa fa-arrow-right' />}\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Expense Lists\r\n                            </Typography>\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div className='p-1' />\r\n            \r\n            <table className='mt-1 table-bordered' style={{width: '98%', margin: 'auto'}}>\r\n                <thead>\r\n                    <th>Expense</th>\r\n                    <th>\r\n                        <input\r\n                            placeholder='Expense Id'\r\n                            name='expense' list='items' \r\n                        />\r\n                        <datalist id='items' name='expense'>\r\n                            {\r\n                                expenses&&\r\n                                expenses.map((expense, index) =>{\r\n                                    const {uuid} = expense\r\n                                    return <option key={index} value={uuid}> #Expense</option>\r\n                                })\r\n                            }\r\n                        </datalist>\r\n                    </th>\r\n                    <th>Staff Username</th>\r\n                    <th>\r\n                    <input\r\n                            list='usernames'\r\n                            name='username'\r\n                            placeholder='Expesne Raised by ?'\r\n                        />\r\n                        <datalist id='usernames'>\r\n                            {\r\n                                staffs&&\r\n                                staffs.map((staff, index) =>{\r\n                                    return <option key={index} value={staff.username}></option>\r\n                                })\r\n                            }\r\n                        </datalist>\r\n                    </th>\r\n                    <th\r\n                        style={{borderColor: 'none'}}\r\n                    >\r\n                        <Link to='/' className='ml-3'>\r\n                            <Button \r\n                                variant='contained'\r\n                                startIcon={<span className='fa fa-plus' />}\r\n                                style={{background: '#2A3F54', color: 'white'}}\r\n                            >\r\n                                <Typography variant='caption'>\r\n                                    Add New\r\n                                </Typography>\r\n                            </Button>\r\n                        </Link>\r\n                    </th>\r\n                    <th\r\n                        style={{border: 'none', outline: 'none'}}\r\n                    >\r\n                        <Button\r\n                            startIcon={<span className='fa fa-check />' />}\r\n                            variant='contained'\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Update \r\n                            </Typography>\r\n                        </Button>\r\n                    </th>\r\n                    <th\r\n                        style={{border: 'none', outline: 'none'}}\r\n                    >\r\n                        <Button\r\n                            startIcon={<span className='fa fa-trash />' />}\r\n                            variant='contained'\r\n                            style={{background: '#2A3F54', color: 'white', width: '100%'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Delete \r\n                            </Typography>\r\n                        </Button>\r\n                    </th>\r\n                </thead>\r\n            </table>\r\n            <div className='p-1' />\r\n            <table className='mt-1 table-bordered' style={{width: '98%', margin: 'auto'}}>\r\n                <thead>\r\n                    <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderBottom: 'none' }}\r\n                    >\r\n                       \r\n                        General Info\r\n                           \r\n                    </th>\r\n                    <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Expense Details\r\n                    </th>\r\n                    <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                      Expense Report\r\n                    </th>\r\n                    <th\r\n                        style={{color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none',\r\n                        borderTop: 'none', borderRight: 'none'}}\r\n                    >\r\n                      \r\n                    </th>\r\n                    \r\n                </thead>\r\n                <tbody>\r\n                    <div className='p-1' />\r\n                    <tr>\r\n                        <td>Expense Id</td>\r\n                        <td>\r\n                            <input\r\n                                readOnly\r\n                                name='uuid'\r\n                                placeholder='Expense Id (read only)'\r\n                            />\r\n                        </td>\r\n                        <td>Date</td>\r\n                        <td>\r\n                            <input \r\n                                name='expense_date'\r\n                                placeholder='Expense Date' \r\n                            />\r\n                        </td>\r\n                        <td>Amount</td>\r\n                        <td>\r\n                            <input\r\n                                name='amount' \r\n                                placeholder='Expense Amount'\r\n                            />\r\n                        </td>\r\n                        \r\n                    </tr>\r\n                    <div className='p-1' />\r\n                    <tr>\r\n                        <td>Account Receivable</td>\r\n                        <td>\r\n                            <input\r\n                                list='payee'\r\n                                name='payee_account'\r\n                                placeholder='Account Receivable' \r\n                            />\r\n                            <datalist id='payee'>\r\n                                {\r\n                                    accounts&&\r\n                                    accounts.map((acc, index) =>{\r\n                                        const { name, code, balance_type } = acc\r\n                                        return <option value={code} key={index} >{`${name} (${balance_type})`}</option>\r\n                                    })\r\n                                }\r\n                            </datalist>\r\n                        </td>\r\n                        <td>Account Payable</td>\r\n                        <td>\r\n                            <input\r\n                                list='payable'\r\n                                name='payment_account'\r\n                                placeholder='Account Payable'\r\n                            />\r\n                            <datalist id='payable'>\r\n                                {\r\n                                    accounts&&\r\n                                    accounts.map((acc, index) =>{\r\n                                        const { name, code, balance_type } = acc\r\n                                        return <option value={code} key={index} >{`${name} (${balance_type})`}</option>\r\n                                    })\r\n                                }\r\n                            </datalist>\r\n                        </td>\r\n                    \r\n                        <td>Pay Method</td>\r\n                        <td>\r\n                            <input\r\n                                list='paymethod'\r\n                                name='pay_method'\r\n                                placeholder='Payment Method'\r\n                            />\r\n                            <datalist id='paymethod'>\r\n                                <option value='cash'>Cash</option>\r\n                                <option value='cheque'>Cheque</option>\r\n                                <option value='transfer'>Transfer</option>\r\n                            </datalist>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminExpenseSetting\r\n","import { Button, Typography } from '@material-ui/core'\r\nimport { Check } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { selectAccounts, selectAllStaffs, \r\n    selectBuildCategories, \r\n    selectPropServices, selectSales, } from '../appState/appSlice'\r\n\r\nconst AdminPostingSetting = () => {\r\n    const staffs = useSelector(selectAllStaffs)\r\n    const accounts = useSelector(selectAccounts)\r\n    const sales = useSelector(selectSales)\r\n    const propServices = useSelector(selectPropServices)\r\n    const buildCategories = useSelector(selectBuildCategories)\r\n    console.log(buildCategories)\r\n    return (\r\n        <div>\r\n            <div className='admin__Title'>\r\n                <section>\r\n                    <Typography variant='h3'>POST</Typography>\r\n                </section>\r\n                <div>\r\n                    <Link to='/' className='ml-3'>\r\n                        <Button \r\n                            variant='contained'\r\n                            startIcon={<span className='fa fa-arrow-right' />}\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Post Lists\r\n                            </Typography>\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div className='p-1' />\r\n            \r\n            <table className='mt-1 table-bordered' style={{width: '98%', margin: 'auto'}}>\r\n                <thead>\r\n                    <th>Posts</th>\r\n                    <th>\r\n                        <input\r\n                            placeholder='Receipt No'\r\n                            name='sale' list='items' \r\n                        />\r\n                        <datalist id='items'>\r\n                            {\r\n                                sales&&\r\n                                sales.map((sale, index) =>{\r\n                                    const {uuid, property_name} = sale\r\n                                    return <option key={index} value={uuid}> {property_name} </option>\r\n                                })\r\n                            }\r\n                        </datalist>\r\n                    </th>\r\n                    <th>Staff Username</th>\r\n                    <th>\r\n                    <input\r\n                            list='usernames'\r\n                            name='username'\r\n                            placeholder='Process by ?'\r\n                        />\r\n                        <datalist id='usernames'>\r\n                            {\r\n                                staffs&&\r\n                                staffs.map((staff, index) =>{\r\n                                    return <option key={index} value={staff.username}></option>\r\n                                })\r\n                            }\r\n                        </datalist>\r\n                    </th>\r\n                    <th\r\n                        style={{borderColor: 'none'}}\r\n                    >\r\n                        <Link to='/' className='ml-3'>\r\n                            <Button \r\n                                variant='contained'\r\n                                startIcon={<span className='fa fa-plus' />}\r\n                                style={{background: '#2A3F54', color: 'white'}}\r\n                            >\r\n                                <Typography variant='caption'>\r\n                                    Add New\r\n                                </Typography>\r\n                            </Button>\r\n                        </Link>\r\n                    </th>\r\n                    <th\r\n                        style={{border: 'none', outline: 'none'}}\r\n                    >\r\n                        <Button\r\n                            startIcon={<span className='fa fa-check />' />}\r\n                            variant='contained'\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Update \r\n                            </Typography>\r\n                        </Button>\r\n                    </th>\r\n                    <th\r\n                        style={{border: 'none', outline: 'none'}}\r\n                    >\r\n                        <Button\r\n                            startIcon={<span className='fa fa-trash />' />}\r\n                            variant='contained'\r\n                            style={{background: '#2A3F54', color: 'white', width: '100%'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Delete \r\n                            </Typography>\r\n                        </Button>\r\n                    </th>\r\n                </thead>\r\n            </table>\r\n            <div className='p-1' />\r\n            <table className='mt-1 table-bordered' style={{width: '98%', margin: 'auto'}}>\r\n                <thead>\r\n                    <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderBottom: 'none' }}\r\n                    >\r\n                       \r\n                        General Info\r\n                           \r\n                    </th>\r\n                    <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Post History\r\n                    </th>\r\n                    <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                      Post Report\r\n                    </th>\r\n                    <th\r\n                        style={{color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none',\r\n                        borderTop: 'none', borderRight: 'none'}}\r\n                    >\r\n                      \r\n                    </th>\r\n                    {/* <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Sales\r\n                    </th> */}\r\n                    {/* <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Journal\r\n                    </th> */}\r\n                </thead>\r\n                <tbody>\r\n                    <div className='p-1' />\r\n                    <tr>\r\n                        <td>Receipt No</td>\r\n                        <td>\r\n                            <input\r\n                                readOnly\r\n                                name='rcpt_no'\r\n                                placeholder='Receipt No(read only)'\r\n                            />\r\n                        </td>\r\n                        <td>Account</td>\r\n                        <td>\r\n                            <input\r\n                                list='account'\r\n                                name='account_FK'\r\n                                placeholder='Customer Name' \r\n                            />\r\n                            <datalist id='account'>\r\n                            {\r\n                                accounts&&\r\n                                accounts.map((account, index) =>{\r\n                                    const {code, name} = account\r\n                                    return (\r\n                                        <option key={index} value={code}> {name} </option>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </datalist>\r\n                        </td>\r\n                        <td>Amount</td>\r\n                        <td>\r\n                            <input\r\n                                name='amount' \r\n                                placeholder='Amount'\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <div className='p-1' />\r\n                    <tr>\r\n                        <td>Transaction Type</td>\r\n                        <td>\r\n                            <input\r\n                                list='txtype'\r\n                                name='tx_type'\r\n                                placeholder='Payment Method'\r\n                            />\r\n                            <datalist id='txtype'>\r\n                                <option value='CR'></option>\r\n                                <option value='DR'></option>\r\n                            </datalist>\r\n                        </td>\r\n                        <td>Pay Method</td>\r\n                        <td>\r\n                            <input\r\n                                list='paymethod'\r\n                                name='pay_method'\r\n                                placeholder='Payment Method'\r\n                            />\r\n                            <datalist id='paymethod'>\r\n                                <option value='cash'></option>\r\n                                <option value='cheque'></option>\r\n                                <option value='transfer'></option>\r\n                            </datalist>\r\n                        </td>\r\n                        <td>Status</td>\r\n                        <td>\r\n                            <input\r\n                                list='status'\r\n                                name='status'\r\n                                placeholder='Select'\r\n                            />\r\n                            <datalist id='status'>\r\n                                <option value='0'>Not Paid</option>\r\n                                <option value='1'>Paid</option>\r\n                            </datalist>\r\n                        </td>\r\n                    </tr>\r\n                    <div className='p-1' />\r\n                    <tr>\r\n                        <td>Narration</td>\r\n                        <td colSpan={5}>\r\n                            <input\r\n                                name='description'\r\n                                placeholder='Transaction Narration'\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminPostingSetting\r\n","import { Typography } from '@material-ui/core'\r\nimport React, { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectBuildCategories, selectPsSold } from '../appState/appSlice'\r\n\r\nconst PsViewTable = () => {\r\n    const psSolds = useSelector(selectPsSold)\r\n    const buildCategories = useSelector(selectBuildCategories)\r\n    const returnBuildCategory = (id) =>{\r\n        console.log(id)\r\n        const bCategory = buildCategories && \r\n            buildCategories.filter(cat =>cat.id == id)[0].name;\r\n            console.log(bCategory, buildCategories)\r\n        return bCategory \r\n    }\r\n    return (\r\n        <Fragment>\r\n            <table className='table-hover'\r\n                style={{width: '98%', margin: 'auto'}}\r\n            >\r\n                <thead>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>#</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Client</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Build Category</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Date Sold</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Due Date</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Amount</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Amount Paid</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Status</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}></th>\r\n                   \r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        psSolds &&\r\n                        psSolds.map((psSold, index) =>{\r\n                            const { amount, amount_paid, applicant_name, \r\n                                build_category, sale_date, due_date, status } = psSold;\r\n                            return\r\n                                <Fragment key={index}>\r\n                                    <tr>\r\n                                        <td\r\n                                            style={{textAlign: 'center'}}\r\n                                        > {index+1} </td>\r\n                                        <td\r\n                                            style={{textAlign: 'left'}}\r\n                                        > {applicant_name} </td>\r\n                                        <td> {returnBuildCategory(build_category)} </td>\r\n                                        <td> {new Date(sale_date).toLocaleDateString()} </td>\r\n                                        <td>\r\n                                            <Typography color='error'>\r\n                                            {new Date(due_date).toLocaleDateString()}\r\n                                            </Typography>\r\n                                        </td>\r\n                                        <td> {amount} </td>\r\n                                        <td>\r\n                                            <Typography style={{color: '#20c997'}}>\r\n                                                {amount_paid}\r\n                                            </Typography>\r\n                                        </td>\r\n                                        <td>  </td>\r\n                                    </tr>\r\n                                </Fragment>\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default PsViewTable\r\n","// MUI Stuff\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  selectLocations,\r\n  selectOpen,\r\n  selectPropServices,\r\n  selectSales,\r\n  selectToken,\r\n  setOpen,\r\n  setPsSold,\r\n} from \"../appState/appSlice\";\r\nimport AppBackdrop from \"./global/AppBackDrop\";\r\nimport AppSnackbar from \"./global/AppSnackbar\";\r\nimport PsViewTable from \"./PsViewTable\";\r\n\r\nconst AdminPsSetting = () => {\r\n  const dispatch = useDispatch();\r\n  const open = useSelector(selectOpen);\r\n  const token = useSelector(selectToken);\r\n  const sales = useSelector(selectSales);\r\n  const locations = useSelector(selectLocations);\r\n  const propServices = useSelector(selectPropServices);\r\n  const [tab, setTab] = useState();\r\n  const [add, setAdd] = useState(false);\r\n  const [error, setError] = useState();\r\n  const [success, setSuccess] = useState();\r\n  const [body, setBody] = useState({\r\n    name: \"\",\r\n  });\r\n  const [psData, setPsData] = useState({\r\n    id: \"\",\r\n    cost: \"\",\r\n    status: \"\",\r\n    name: \"\",\r\n    ps_type: \"\",\r\n    category: \"\",\r\n    location: \"\",\r\n    quantity: \"\",\r\n    change: false,\r\n    description: \"\",\r\n    sale_price: \"\",\r\n  });\r\n  // func\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setPsData({\r\n      ...psData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handle_Edit_Ps = () => {\r\n    dispatch(setOpen(true));\r\n    axios\r\n      .post(`/prop_service/${psData.id}`, psData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        dispatch(setOpen(false));\r\n        setSuccess(result.data.message);\r\n        setPsData({\r\n          id: \"\",\r\n          cost: \"\",\r\n          name: \"\",\r\n          status: \"\",\r\n          ps_type: \"\",\r\n          category: \"\",\r\n          location: \"\",\r\n          quantity: \"\",\r\n          description: \"\",\r\n          sale_price: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch(setOpen(false));\r\n        if (error) {\r\n          return setError(error.response.statusText);\r\n        }\r\n      });\r\n  };\r\n\r\n  const handle_Add_Location = () => {\r\n    dispatch(setOpen(true));\r\n    axios\r\n      .post(\"/location\", body, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((locations) => {\r\n        setBody(\"\");\r\n        dispatch(setOpen(false));\r\n        setAdd(false);\r\n      })\r\n      .catch((error) => {\r\n        dispatch(setOpen(false));\r\n        if (error) {\r\n          return error.response.statusText;\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fps =\r\n      propServices && propServices.filter((ps) => ps.id == psData.id)[0];\r\n    if (fps) {\r\n      return (\r\n        setPsData({\r\n          id: fps.id,\r\n          cost: fps.cost,\r\n          name: fps.name,\r\n          status: fps.status,\r\n          ps_type: fps.ps_type,\r\n          category: fps.category,\r\n          location: fps.location,\r\n          quantity: fps.quantity,\r\n          description: fps.description,\r\n          sale_price: fps.sale_price,\r\n        }),\r\n        setTab(\"gen\")\r\n      );\r\n    }\r\n  }, [psData.id]);\r\n\r\n  useEffect(() => {\r\n    const getSoldFps =\r\n      sales && sales.filter((sale) => sale.property == psData.id);\r\n\r\n    if (getSoldFps) {\r\n      return dispatch(setPsSold(getSoldFps));\r\n    }\r\n  }, [psData]);\r\n\r\n  return (\r\n    <div>\r\n      <AppBackdrop open={open} />\r\n      <AppSnackbar open={success} setOpen={setSuccess} message={success} />\r\n      <div className=\"admin__Title\">\r\n        <section>\r\n          <Typography variant=\"h3\">PROPERTY</Typography>\r\n        </section>\r\n        <div>\r\n          <Link to=\"/\" className=\"ml-3\">\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<span className=\"fa fa-arrow-right\" />}\r\n              style={{ background: \"#2A3F54\", color: \"white\" }}\r\n            >\r\n              <Typography variant=\"caption\">Property Lists</Typography>\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"p-1\" />\r\n\r\n      <table\r\n        className=\"mt-1 table-bordered\"\r\n        style={{ width: \"98%\", margin: \"auto\" }}\r\n      >\r\n        <thead>\r\n          <th>Property</th>\r\n          <th>\r\n            <select\r\n              name=\"id\"\r\n              value={psData.id}\r\n              onChange={(e) => handleChange(e)}\r\n            >\r\n              <option value=\"\"></option>\r\n              {propServices &&\r\n                propServices.map((sale, index) => {\r\n                  const { id, name } = sale;\r\n                  return (\r\n                    <option key={index} value={id}>\r\n                      {\" \"}\r\n                      {name}{\" \"}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </th>\r\n\r\n          <th style={{ borderColor: \"none\" }}>\r\n            <Link to=\"/ps\" className=\"ml-3\">\r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<span className=\"fa fa-plus\" />}\r\n                style={{ background: \"#2A3F54\", color: \"white\" }}\r\n              >\r\n                <Typography variant=\"caption\">Add New</Typography>\r\n              </Button>\r\n            </Link>\r\n          </th>\r\n          <th style={{ border: \"none\", outline: \"none\" }}>\r\n            <Button\r\n              onClick={() => handle_Edit_Ps()}\r\n              disabled={tab !== \"gen\" || psData.change === false ? true : false}\r\n              startIcon={<span className=\"fa fa-check />\" />}\r\n              variant=\"contained\"\r\n              style={{ background: \"#2A3F54\", color: \"white\" }}\r\n            >\r\n              <Typography variant=\"caption\">Update</Typography>\r\n            </Button>\r\n          </th>\r\n          <th style={{ border: \"none\", outline: \"none\" }}>\r\n            <Button\r\n              startIcon={<span className=\"fa fa-trash />\" />}\r\n              variant=\"contained\"\r\n              style={{ background: \"#2A3F54\", color: \"white\", width: \"100%\" }}\r\n            >\r\n              <Typography variant=\"caption\">Delete</Typography>\r\n            </Button>\r\n          </th>\r\n        </thead>\r\n      </table>\r\n      <div className=\"p-1\" />\r\n      <table\r\n        className=\"mt-1 table-bordered\"\r\n        style={{ width: \"98%\", margin: \"auto\" }}\r\n      >\r\n        <thead>\r\n          <th\r\n            onClick={() => setTab(\"gen\")}\r\n            style={{\r\n              background: tab == \"gen\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"gen\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            General Info\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"sol\")}\r\n            style={{\r\n              background: tab == \"sol\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"sol\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Sold\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"pos\")}\r\n            style={{\r\n              background: tab == \"pos\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"pos\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Post Report\r\n          </th>\r\n          <th\r\n            style={{\r\n              color: \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n              borderTop: \"none\",\r\n              borderRight: \"none\",\r\n            }}\r\n          ></th>\r\n        </thead>\r\n        {tab == \"gen\" && psData.id && (\r\n          <tbody>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Property/Service</td>\r\n              <td>\r\n                <input\r\n                  list=\"ps\"\r\n                  name=\"ps_type\"\r\n                  value={psData.ps_type}\r\n                  placeholder=\"Select\"\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n                <datalist id=\"ps\">\r\n                  <option value=\"\"></option>\r\n                  <option value=\"property\"></option>\r\n                  <option value=\"service\"></option>\r\n                </datalist>\r\n              </td>\r\n              <td>Name</td>\r\n              <td>\r\n                <input\r\n                  name=\"name\"\r\n                  value={psData.name}\r\n                  placeholder=\"Property Name\"\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </td>\r\n              <td\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                Location\r\n                <span>\r\n                  <IconButton\r\n                    onClick={() => setAdd(!add)}\r\n                    size=\"small\"\r\n                    className=\" ml-2\"\r\n                  >\r\n                    <span\r\n                      className=\"fa fa-plus-circle\"\r\n                      style={{ color: \"#20c997\" }}\r\n                    />\r\n                  </IconButton>\r\n                </span>\r\n              </td>\r\n              {!add ? (\r\n                <td>\r\n                  <select\r\n                    name=\"location\"\r\n                    value={psData.location}\r\n                    onChange={(e) => handleChange(e)}\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    {locations &&\r\n                      locations.map((l, index) => {\r\n                        const { id, name } = l;\r\n                        return (\r\n                          <option key={index} value={id}>\r\n                            {name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                  </select>\r\n                </td>\r\n              ) : (\r\n                <td>\r\n                  {add && (\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      <input\r\n                        value={body.name}\r\n                        placeholder=\"Location Name\"\r\n                        onChange={(e) =>\r\n                          setBody({\r\n                            ...body,\r\n                            name: e.target.value,\r\n                          })\r\n                        }\r\n                      />\r\n                      <Button\r\n                        className=\"ml-4\"\r\n                        onClick={() => handle_Add_Location()}\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        style={{\r\n                          background: \"#2A3F54\",\r\n                          color: \"white\",\r\n                          width: \"200px\",\r\n                        }}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                </td>\r\n              )}\r\n            </tr>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Sale Price</td>\r\n              <td>\r\n                <input\r\n                  name=\"sale_price\"\r\n                  value={psData.sale_price}\r\n                  placeholder=\"Selling Price\"\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </td>\r\n              <td>Quantity</td>\r\n              <td>\r\n                <input\r\n                  name=\"quantity\"\r\n                  type=\"number\"\r\n                  value={psData.quantity}\r\n                  placeholder=\"Quantity\"\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </td>\r\n              <td>Status</td>\r\n              <td>\r\n                <select\r\n                  name=\"status\"\r\n                  value={psData.status}\r\n                  onChange={(e) => handleChange(e)}\r\n                >\r\n                  <option value=\"\"></option>\r\n                  <option value={1}>Active</option>\r\n                  <option value={0}>InActive</option>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Description</td>\r\n              <td colSpan={5}>\r\n                <input\r\n                  name=\"description\"\r\n                  value={psData.description}\r\n                  onChange={(e) => handleChange(e)}\r\n                  placeholder=\"Property Description\"\r\n                />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        )}\r\n      </table>\r\n      {/* imported component */}\r\n      {tab == \"sol\" && <PsViewTable />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPsSetting;\r\n","import { Button, Typography } from '@material-ui/core'\r\nimport { Check } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { selectAccounts, selectAllStaffs, \r\n    selectBuildCategories, \r\n    selectPropServices, selectSales, } from '../appState/appSlice'\r\n\r\nconst AdminSaleSetting = () => {\r\n    const staffs = useSelector(selectAllStaffs)\r\n    const accounts = useSelector(selectAccounts)\r\n    const sales = useSelector(selectSales)\r\n    const propServices = useSelector(selectPropServices)\r\n    const buildCategories = useSelector(selectBuildCategories)\r\n    console.log(buildCategories)\r\n    return (\r\n        <div>\r\n            <div className='admin__Title'>\r\n                <section>\r\n                    <Typography variant='h3'>SALE</Typography>\r\n                </section>\r\n                <div>\r\n                    <Link to='/' className='ml-3'>\r\n                        <Button \r\n                            variant='contained'\r\n                            startIcon={<span className='fa fa-arrow-right' />}\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Sale Lists\r\n                            </Typography>\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div className='p-1' />\r\n            \r\n            <table className='mt-1 table-bordered' style={{width: '98%', margin: 'auto'}}>\r\n                <thead>\r\n                    <th>Sale</th>\r\n                    <th>\r\n                        <input\r\n                            placeholder='Sale Id'\r\n                            name='sale' list='items' \r\n                        />\r\n                        <datalist id='items'>\r\n                            {\r\n                                sales&&\r\n                                sales.map((sale, index) =>{\r\n                                    const {uuid, property_name} = sale\r\n                                    return <option key={index} value={uuid}> {property_name} </option>\r\n                                })\r\n                            }\r\n                        </datalist>\r\n                    </th>\r\n                    <th>Staff Username</th>\r\n                    <th>\r\n                    <input\r\n                            list='usernames'\r\n                            name='username'\r\n                            placeholder='Process by ?'\r\n                        />\r\n                        <datalist id='usernames'>\r\n                            {\r\n                                staffs&&\r\n                                staffs.map((staff, index) =>{\r\n                                    return <option key={index} value={staff.username}></option>\r\n                                })\r\n                            }\r\n                        </datalist>\r\n                    </th>\r\n                    <th\r\n                        style={{borderColor: 'none'}}\r\n                    >\r\n                        <Link to='/' className='ml-3'>\r\n                            <Button \r\n                                variant='contained'\r\n                                startIcon={<span className='fa fa-plus' />}\r\n                                style={{background: '#2A3F54', color: 'white'}}\r\n                            >\r\n                                <Typography variant='caption'>\r\n                                    Add New\r\n                                </Typography>\r\n                            </Button>\r\n                        </Link>\r\n                    </th>\r\n                    <th\r\n                        style={{border: 'none', outline: 'none'}}\r\n                    >\r\n                        <Button\r\n                            startIcon={<span className='fa fa-check />' />}\r\n                            variant='contained'\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Update \r\n                            </Typography>\r\n                        </Button>\r\n                    </th>\r\n                    <th\r\n                        style={{border: 'none', outline: 'none'}}\r\n                    >\r\n                        <Button\r\n                            startIcon={<span className='fa fa-trash />' />}\r\n                            variant='contained'\r\n                            style={{background: '#2A3F54', color: 'white', width: '100%'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Delete \r\n                            </Typography>\r\n                        </Button>\r\n                    </th>\r\n                </thead>\r\n            </table>\r\n            <div className='p-1' />\r\n            <table className='mt-1 table-bordered' style={{width: '98%', margin: 'auto'}}>\r\n                <thead>\r\n                    <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderBottom: 'none' }}\r\n                    >\r\n                       \r\n                        General Info\r\n                           \r\n                    </th>\r\n                    <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Payment History\r\n                    </th>\r\n                    <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                      Sale Report\r\n                    </th>\r\n                    <th\r\n                        style={{color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none',\r\n                        borderTop: 'none', borderRight: 'none'}}\r\n                    >\r\n                      \r\n                    </th>\r\n                    {/* <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Sales\r\n                    </th> */}\r\n                    {/* <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Journal\r\n                    </th> */}\r\n                </thead>\r\n                <tbody>\r\n                    <div className='p-1' />\r\n                    <tr>\r\n                        <td>Sale Id</td>\r\n                        <td>\r\n                            <input\r\n                                readOnly\r\n                                name='uuid'\r\n                                placeholder='Expense Id (read only)'\r\n                            />\r\n                        </td>\r\n                        <td>Applicant</td>\r\n                        <td>\r\n                            <input \r\n                                name='applicant_name'\r\n                                placeholder='Customer Name' \r\n                            />\r\n                        </td>\r\n                        <td>Amount</td>\r\n                        <td>\r\n                            <input\r\n                                name='amount' \r\n                                placeholder='Amount'\r\n                            />\r\n                        </td>\r\n                        \r\n                    </tr>\r\n                    <div className='p-1' />\r\n                    <tr>\r\n                        <td>Property</td>\r\n                        <td>\r\n                            <input\r\n                                list='property'\r\n                                name='property_name'\r\n                                placeholder='Property' \r\n                            />\r\n                            <datalist id='property'>\r\n                                {\r\n                                    propServices&&\r\n                                    propServices.map((ps, index) =>{\r\n                                        const {id, name} = ps\r\n                                        return (\r\n                                            <option key={index} value={id}> {name} </option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </datalist>\r\n                        </td>\r\n                        <td>Building Category</td>\r\n                        <td>\r\n                            <input\r\n                                list='category'\r\n                                name='build_category'\r\n                                placeholder='Building Category'\r\n                            />\r\n                            <datalist id='category'>\r\n                                {\r\n                                    buildCategories&&\r\n                                    buildCategories.map((bcategory, index) =>{\r\n                                        const { id, name } = bcategory\r\n                                        return <option value={id} key={index} >{`${name}`}</option>\r\n                                    })\r\n                                }\r\n                            </datalist>\r\n                        </td>\r\n                    \r\n                        <td>Pay Method</td>\r\n                        <td>\r\n                            <input\r\n                                list='paymethod'\r\n                                name='pay_method'\r\n                                placeholder='Payment Method'\r\n                            />\r\n                            <datalist id='paymethod'>\r\n                                <option value='cash'></option>\r\n                                <option value='cheque'></option>\r\n                                <option value='transfer'></option>\r\n                            </datalist>\r\n                        </td>\r\n                    </tr>\r\n                    <div className='p-1' />\r\n                    <tr>\r\n                        <td>Term</td>\r\n                        <td>\r\n                            <input\r\n                                list='period'\r\n                                name='period'\r\n                                placeholder='Payment Method'\r\n                            />\r\n                            <datalist id='period'>\r\n                                <option value={7}>7 Days</option>\r\n                                <option value={14}>14 Days</option>\r\n                                <option value={21}>21 Days</option>\r\n                                <option value={28}>28 Days</option>\r\n                                <option value={30}>30 Days</option>\r\n                                <option value={60}>60 Days</option>\r\n                                <option value={90}>90 Days</option>\r\n                                <option value={120}>120 Days</option>\r\n                                <option value={150}>150 Days</option>\r\n                                <option value={180}>180 Days</option>\r\n                                <option value={210}>210 Days</option>\r\n                                <option value={240}>240 Days</option>\r\n                                <option value={270}>270 Days</option>\r\n                                <option value={300}>300 Days</option>\r\n                                <option value={330}>330 Days</option>\r\n                                <option value={360}>360 Days</option>\r\n                            </datalist>\r\n                        </td>\r\n                        <td>Due Date</td>\r\n                        <input \r\n                            name='due_date'\r\n                            placeholder='Sale Due Date'\r\n                        />\r\n                        <td>Status</td>\r\n                        <td>\r\n                            <input\r\n                                list='status'\r\n                                name='status'\r\n                                placeholder='Select'\r\n                            />\r\n                            <datalist id='status'>\r\n                                <option value='1'>Paid</option>\r\n                                <option value='3'>Close</option>\r\n                            </datalist>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminSaleSetting\r\n","import Avatar from \"@material-ui/core/Avatar\";\r\nimport More from \"@material-ui/icons/More\";\r\nimport { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { CheckBoxRounded } from \"@material-ui/icons\";\r\n\r\nconst CustomerList = ({\r\n  search,\r\n  id,\r\n  index,\r\n  hidden,\r\n  customer_email,\r\n  customer_name,\r\n  phone_no,\r\n  code,\r\n  active,\r\n  isWidget,\r\n  setMandate,\r\n  avatar,\r\n}) => {\r\n  return (\r\n    <Fragment key={index}>\r\n      <tr>\r\n        <td style={{ textAlign: \"center\" }}>{index + 1} </td>\r\n        <td style={{ textAlign: \"left\" }}>{customer_name}</td>\r\n        <td> {phone_no} </td>\r\n        {!search && <td> {customer_email} </td>}\r\n        <td> {code} </td>\r\n        <td\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {avatar && <Avatar alt={customer_name[0]} src={avatar} />}\r\n        </td>\r\n        <td>\r\n          {active == 1 ? (\r\n            <span className=\"fa fa-check-circle fa-1x\"></span>\r\n          ) : (\r\n            <span></span>\r\n          )}\r\n        </td>\r\n        <td>\r\n          {hidden == 1 ? (\r\n            <span className=\"fa fa-lock\" style={{ color: \"red\" }}></span>\r\n          ) : (\r\n            <span\r\n              className=\"fa fa-unlock-alt\"\r\n              style={{ color: \"#1ABB9C\" }}\r\n            ></span>\r\n          )}\r\n        </td>\r\n        {!isWidget && (\r\n          <td onClick={() => setMandate(`${id} ${customer_name}`)}>\r\n            {!avatar ? (\r\n              <Tooltip title={`Upload ${customer_name} Mandate`}>\r\n                <More\r\n                  style={{ color: \"#2A3F54\", fontSize: 20, marginLeft: 20 }}\r\n                />\r\n              </Tooltip>\r\n            ) : (\r\n              <Tooltip title={`${customer_name} Mandate uploaded`}>\r\n                <CheckBoxRounded\r\n                  style={{ color: \"#20c997\", fontSize: 20, marginLeft: 20 }}\r\n                />\r\n              </Tooltip>\r\n            )}\r\n          </td>\r\n        )}\r\n      </tr>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CustomerList;\r\n","import React, { useState } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport Mandate from \"../Mandate\";\r\nimport CustomerList from \"./CustomerList\";\r\n\r\nconst CustomerViewTable = ({ customers }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [mandate, setMandate] = useState(false);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Mandate\r\n        open={open}\r\n        setOpen={setOpen}\r\n        mandate={mandate}\r\n        setMandate={setMandate}\r\n        url={mandate && `/customer/avatar/${mandate.split(\" \")[0]}`}\r\n      />\r\n      <table\r\n        className=\"table-hover table-bordered\"\r\n        style={{ width: \"98%\", margin: \"auto\" }}\r\n      >\r\n        <thead>\r\n          <th style={{ border: \"1px solid #F7F7F7F7\" }}>#</th>\r\n          <th style={{ border: \"1px solid #F7F7F7F7\" }}>Name</th>\r\n          <th style={{ border: \"1px solid #F7F7F7F7\" }}>Contact</th>\r\n          <th style={{ border: \"1px solid #F7F7F7F7\" }}>Email</th>\r\n          <th style={{ border: \"1px solid #F7F7F7F7\" }}>Code</th>\r\n          <th style={{ border: \"1px solid #F7F7F7F7\" }}>Photo</th>\r\n          <th style={{ border: \"1px solid #F7F7F7F7\" }}>Active</th>\r\n          <th style={{ border: \"1px solid #F7F7F7F7\" }}>Lock</th>\r\n          <th style={{ border: \"1px solid #F7F7F7F7\" }}>Action</th>\r\n        </thead>\r\n        <tbody>\r\n          {customers &&\r\n            customers.map((customer, index) => {\r\n              return (\r\n                <CustomerList\r\n                  key={index}\r\n                  index={index}\r\n                  {...customer}\r\n                  open={open}\r\n                  setOpen={setOpen}\r\n                  mandate={mandate}\r\n                  setMandate={setMandate}\r\n                />\r\n              );\r\n            })}\r\n        </tbody>\r\n      </table>\r\n      {customers && customers.length <= 0 && (\r\n        <div className=\"alert alert-warning\">\r\n          <h6>No Customer Availabe</h6>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CustomerViewTable;\r\n","import { Button, Typography } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  selectAllStaffs,\r\n  selectTransactions,\r\n  selectOpen,\r\n  selectToken,\r\n  setOpen,\r\n  setfilterTx,\r\n  selectCustomers,\r\n  setFilterCus,\r\n} from \"../appState/appSlice\";\r\nimport AppBackdrop from \"./global/AppBackDrop\";\r\nimport AppSnackbar from \"./global/AppSnackbar\";\r\nimport CustomerViewTable from \"./global/CustomerViewTable\";\r\nimport TxTableView from \"./global/TxTableView\";\r\n\r\nconst AdminStaffSetting = () => {\r\n  const dispatch = useDispatch();\r\n  const open = useSelector(selectOpen);\r\n  const token = useSelector(selectToken);\r\n  const staffs = useSelector(selectAllStaffs);\r\n  const customers = useSelector(selectCustomers);\r\n  const transactions = useSelector(selectTransactions);\r\n  const [tab, setTab] = useState();\r\n  const [message, setMessage] = useState();\r\n  const [success, setSuccess] = useState(false);\r\n  const [data, setData] = useState({\r\n    id: \"\",\r\n    staff: \"\",\r\n    change: false,\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n    mobile: \"\",\r\n    is_active: \"\",\r\n    username: \"\",\r\n    md: \"\",\r\n    entries: \"\",\r\n    sales: \"\",\r\n    expense: \"\",\r\n    accountant: \"\",\r\n  });\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setData({\r\n      ...data,\r\n      [name]: value,\r\n    });\r\n    setTab(\"gen\");\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    dispatch(setOpen(true));\r\n    axios\r\n      .post(`/auth/edit/${data.username}`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setMessage(res.data.message);\r\n        setSuccess(true);\r\n        dispatch(setOpen(false));\r\n        setData({\r\n          staff: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        if (error) {\r\n          setMessage(error.response.statusText);\r\n          dispatch(setOpen(false));\r\n        }\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    const fstaff =\r\n      staffs && staffs.filter((staf) => staf.username == data.staff)[0];\r\n    if (fstaff) {\r\n      setData({\r\n        ...data,\r\n        change: true,\r\n        id: fstaff.id,\r\n        md: fstaff.md,\r\n        sales: fstaff.sales,\r\n        email: fstaff.email,\r\n        mobile: fstaff.mobile,\r\n        entries: fstaff.entries,\r\n        expense: fstaff.expense,\r\n        username: fstaff.username,\r\n        last_name: fstaff.last_name,\r\n        first_name: fstaff.first_name,\r\n        is_active: fstaff.is_active,\r\n        accountant: fstaff.accountant,\r\n      });\r\n    }\r\n    const ftxs =\r\n      transactions &&\r\n      transactions.filter((tx) => tx.postBy_FK == `${data.username}`);\r\n    const fcus = customers && customers.filter((cus) => cus.rm == data.id);\r\n    dispatch(setfilterTx(ftxs));\r\n    dispatch(setFilterCus(fcus));\r\n    return;\r\n  }, [data.staff, data.username]);\r\n\r\n  return (\r\n    <div>\r\n      <AppBackdrop open={open} setOpen={setOpen} />\r\n      <AppSnackbar open={success} setOpen={setSuccess} message={message} />\r\n      <div className=\"admin__Title\">\r\n        <section>\r\n          <Typography variant=\"h3\">STAFF</Typography>\r\n        </section>\r\n        <div>\r\n          <Link to=\"/staffs\" className=\"ml-3\">\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<span className=\"fa fa-arrow-right\" />}\r\n              style={{ background: \"#2A3F54\", color: \"white\" }}\r\n            >\r\n              <Typography variant=\"caption\">Staff Lists</Typography>\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"p-1\" />\r\n      {/* table */}\r\n      <table\r\n        className=\"mt-1 table-bordered\"\r\n        style={{\r\n          width: \"98%\",\r\n          margin: \"auto\",\r\n          position: \"sticky\",\r\n          top: 0,\r\n          zIndex: 222,\r\n        }}\r\n      >\r\n        <thead>\r\n          <th>Select</th>\r\n          <th>\r\n            <input\r\n              value={data.staff}\r\n              placeholder=\"Staff\"\r\n              name=\"staff\"\r\n              list=\"staffs\"\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n            <datalist id=\"staffs\">\r\n              {staffs &&\r\n                staffs.map((staff, index) => {\r\n                  const { username, first_name, last_name } = staff;\r\n                  return (\r\n                    <option key={index} value={username}>\r\n                      {\" \"}\r\n                      {`${first_name} ${last_name}`}{\" \"}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </datalist>\r\n          </th>\r\n          <th>Staff Username</th>\r\n          <th>\r\n            <input\r\n              list=\"usernames\"\r\n              name=\"staff\"\r\n              value={data.staff}\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n            <datalist id=\"usernames\">\r\n              {staffs &&\r\n                staffs.map((staff, index) => {\r\n                  return <option key={index} value={staff.username}></option>;\r\n                })}\r\n            </datalist>\r\n          </th>\r\n          <th style={{ borderColor: \"none\" }}>\r\n            <Link to=\"/staffs\" className=\"ml-3\">\r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<span className=\"fa fa-plus\" />}\r\n                style={{ background: \"#2A3F54\", color: \"white\" }}\r\n              >\r\n                <Typography variant=\"caption\">Add New</Typography>\r\n              </Button>\r\n            </Link>\r\n          </th>\r\n          <th style={{ border: \"none\", outline: \"none\" }}>\r\n            <Button\r\n              onClick={() => handleUpdate()}\r\n              disabled={tab !== \"gen\" || data.change === false ? true : false}\r\n              startIcon={<span className=\"fa fa-check />\" />}\r\n              variant=\"contained\"\r\n              style={{ background: \"#2A3F54\", color: \"white\" }}\r\n            >\r\n              <Typography variant=\"caption\">Update</Typography>\r\n            </Button>\r\n          </th>\r\n          <th style={{ border: \"none\", outline: \"none\" }}>\r\n            <Button\r\n              startIcon={<span className=\"fa fa-trash />\" />}\r\n              variant=\"contained\"\r\n              style={{ background: \"#2A3F54\", color: \"white\", width: \"100%\" }}\r\n            >\r\n              <Typography variant=\"caption\">Delete</Typography>\r\n            </Button>\r\n          </th>\r\n        </thead>\r\n      </table>\r\n\r\n      <div className=\"p-1\" />\r\n      <table\r\n        className=\"mt-1 table-bordered\"\r\n        style={{\r\n          width: \"98%\",\r\n          margin: \"auto\",\r\n          position: \"sticky\",\r\n          top: \"40px\",\r\n          zIndex: 222,\r\n        }}\r\n      >\r\n        <thead>\r\n          <th\r\n            onClick={() => setTab(\"gen\")}\r\n            style={{\r\n              background: tab == \"gen\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"gen\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            General Info\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"tx\")}\r\n            style={{\r\n              background: tab == \"tx\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"tx\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Transactions\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"cus\")}\r\n            style={{\r\n              background: tab == \"cus\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"cus\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Customers\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"exp\")}\r\n            style={{\r\n              background: tab == \"exp\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"exp\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Expense\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"sal\")}\r\n            style={{\r\n              background: tab == \"sal\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"sal\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Sales\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"jou\")}\r\n            style={{\r\n              background: tab == \"jou\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"jou\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Journal\r\n          </th>\r\n        </thead>\r\n        {data.username && tab == \"gen\" ? (\r\n          <tbody>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>First Name</td>\r\n              <td>\r\n                <input\r\n                  name=\"first_name\"\r\n                  value={data.first_name}\r\n                  placeholder=\"First Name\"\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </td>\r\n              <td>Last Name</td>\r\n              <td>\r\n                <input\r\n                  name=\"last_name\"\r\n                  value={data.last_name}\r\n                  placeholder=\"Last Name\"\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </td>\r\n              <td>User Name</td>\r\n              <td>\r\n                <input\r\n                  readOnly\r\n                  name=\"username\"\r\n                  value={data.username}\r\n                  placeholder=\"Staff Username (read only)\"\r\n                />\r\n              </td>\r\n            </tr>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Mobile</td>\r\n              <td>\r\n                <input\r\n                  name=\"mobile\"\r\n                  value={data.mobile}\r\n                  placeholder=\"Staff Phone Number\"\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </td>\r\n              <td>Email</td>\r\n              <td colSpan={3}>\r\n                <input\r\n                  name=\"email\"\r\n                  value={data.email}\r\n                  onChange={(e) => handleChange(e)}\r\n                  placeholder=\"Staff Email Address (example@mail.com)\"\r\n                />\r\n              </td>\r\n            </tr>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Entries</td>\r\n              <td>\r\n                <select\r\n                  name=\"entries\"\r\n                  value={data.entries}\r\n                  onChange={(e) => handleChange(e)}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"entries\">Yes</option>\r\n                  <option value=\"\">No</option>\r\n                </select>\r\n              </td>\r\n              <td>Expense</td>\r\n              <td>\r\n                <select\r\n                  name=\"expense\"\r\n                  value={data.expense}\r\n                  onChange={(e) => handleChange(e)}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"expense\">Yes</option>\r\n                  <option value=\"\">No</option>\r\n                </select>\r\n              </td>\r\n              <td>Sales</td>\r\n              <td>\r\n                <select\r\n                  name=\"sales\"\r\n                  value={data.sales}\r\n                  onChange={(e) => handleChange(e)}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"sales\">Yes</option>\r\n                  <option value=\"\">No</option>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Accountant</td>\r\n              <td>\r\n                <select\r\n                  name=\"accountant\"\r\n                  value={data.accountant}\r\n                  onChange={(e) => handleChange(e)}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"accountant\">Yes</option>\r\n                  <option value=\"\">No</option>\r\n                </select>\r\n              </td>\r\n              <td>MD</td>\r\n              <td>\r\n                <select\r\n                  name=\"md\"\r\n                  value={data.md}\r\n                  onChange={(e) => handleChange(e)}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"md\">Yes</option>\r\n                  <option value=\"\">No</option>\r\n                </select>\r\n              </td>\r\n              <td>Active</td>\r\n              <td>\r\n                <select\r\n                  name=\"is_active\"\r\n                  value={data.is_active}\r\n                  onChange={(e) => handleChange(e)}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value={1}>Yes</option>\r\n                  <option value={0}>No</option>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        ) : null}\r\n      </table>\r\n      {tab == \"tx\" && (\r\n        <TxTableView name={`${data.first_name} ${data.last_name}`} />\r\n      )}\r\n      {tab == \"cus\" && <CustomerViewTable />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminStaffSetting;\r\n","import { IconButton, ListItem, ListItemText } from '@material-ui/core'\r\nimport { More } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { Fragment } from 'react'\r\n\r\nconst AdminMenuList = ({setIsActive}) => {\r\n    return (\r\n        <Fragment>\r\n            <ListItem draggable divider button\r\n                onClick={() =>setIsActive('staff')}\r\n            >\r\n                <ListItemText\r\n                    primary='Staff'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem>\r\n            <ListItem draggable divider button\r\n                onClick={() =>setIsActive('customer')}\r\n            >\r\n                <ListItemText\r\n                    primary='Customer'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem>\r\n            {/* <ListItem draggable divider button\r\n                onClick={() =>setIsActive('expense')}\r\n            >\r\n                <ListItemText\r\n                    primary='Expense'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem>\r\n            <ListItem draggable divider button\r\n                onClick={() =>setIsActive('sale')}\r\n            >\r\n                <ListItemText\r\n                    primary='Sale'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem> */}\r\n            {/* <ListItem draggable divider button\r\n                onClick={() =>setIsActive('posting')}\r\n            >\r\n                <ListItemText\r\n                    primary='Posting'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem> */}\r\n            <ListItem draggable divider button\r\n                onClick={() =>setIsActive('ps')}\r\n            >\r\n                <ListItemText\r\n                    primary='Property/Service'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem>\r\n            <ListItem draggable divider button\r\n                onClick={() =>setIsActive('account')}\r\n            >\r\n                <ListItemText\r\n                    primary='Account'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem>\r\n            {/* <ListItem draggable divider button\r\n                onClick={() =>setIsActive('journal')}\r\n            >\r\n                <ListItemText\r\n                    primary='Journal'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem> */}\r\n            <ListItem draggable divider button\r\n                onClick={() =>setIsActive('security')}\r\n            >\r\n                <ListItemText\r\n                    primary='Security'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminMenuList\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { MDBContainer } from \"mdbreact\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAccounts, selectAllStaffs, selectCustomers, selectUserExpenseRaised } from \"../../appState/appSlice\";\r\nimport { Fragment } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AdminMenuList from \"../global/AdminMenuList\";\r\n\r\nconst AdminSideMenu = ({setIsActive}) => {\r\n  const userExpneses = useSelector(selectUserExpenseRaised)\r\n  const customers = useSelector(selectCustomers)\r\n  const accounts = useSelector(selectAccounts)\r\n\r\n    return (\r\n        <Fragment>\r\n            <section className='p-2'>\r\n                <Button \r\n                    variant='contained' size='small'\r\n                    style={{background: '#2A3F54', width: '100%', color: 'white'}}\r\n                >\r\n                    Admin Menu\r\n                </Button>\r\n                <div className='admin__MenuList mt-2'>\r\n                    <AdminMenuList\r\n                        setIsActive={setIsActive}\r\n                    />\r\n                </div>\r\n            </section>\r\n        </Fragment>\r\n    );\r\n  }\r\n\r\nexport default AdminSideMenu;","import { Grid } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { Fragment } from 'react'\r\nimport AdminAccountSetting from './AdminAccountSetting'\r\nimport AdminCustomerSetting from './AdminCustomerSetting'\r\nimport AdminExpenseSetting from './AdminExpenseSetting'\r\nimport AdminPostingSetting from './AdminPosting'\r\nimport AdminPsSetting from './AdminPsSetting'\r\nimport AdminSaleSetting from './AdminSaleSetting'\r\nimport AdminStaffSetting from './AdminStaffSetting'\r\nimport AdminSideMenu from './charts/AdminSideMenu'\r\nimport AppHeader from './global/AppHeader'\r\n\r\nconst AdminFeed = () => {\r\n    const [isActive, setIsActive] = useState()\r\n\r\n    const renderAdminMenu = (active) =>{\r\n        switch (active) {\r\n            case 'staff':\r\n            return <AdminStaffSetting />\r\n\r\n            case 'customer':\r\n            return <AdminCustomerSetting />\r\n\r\n            case 'expense':\r\n            return <AdminExpenseSetting />\r\n\r\n            case 'sale':\r\n            return <AdminSaleSetting />\r\n\r\n            case  'posting':\r\n            return <AdminPostingSetting />\r\n\r\n            case 'ps':\r\n                return <AdminPsSetting />\r\n            \r\n            case 'account':\r\n                return <AdminAccountSetting />\r\n        \r\n            default:\r\n                return <AdminStaffSetting />\r\n                \r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    return (\r\n        <Fragment>\r\n            <div className='app__Feed'>\r\n                <AppHeader title='Settings' />\r\n                <div className='admin__FeedContainer'>\r\n                    <Grid container spacing={2} >\r\n                        <Grid item lg={2} md={2} className='admin__Menu'>\r\n                            <AdminSideMenu\r\n                                isActive={isActive}\r\n                                setIsActive={setIsActive}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item lg={10} md={10}>\r\n                            {\r\n                               renderAdminMenu(isActive)\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div> \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminFeed\r\n","import axios from 'axios'\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectOpen, selectToken, setAccounts, setAllStaffs, setBuildCategories, setCustomers, setExpenseItems, setLocations, setPaidOnpaySales, setPropServices, setSAles, setTransactions, setUser, setUserExpenseRaised } from '../appState/appSlice'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport AdminFeed from '../components/AdminFeed'\r\nimport './homeScreen.css'\r\n\r\nconst AdminScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const open = useSelector(selectOpen)\r\n    const token = useSelector(selectToken)\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Paid_Onpay_Sales = async () =>{\r\n        await localStorage.clear()\r\n        axios.get(`/sale/paid_onpay`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(paidOnpay =>{\r\n            dispatch(setPaidOnpaySales(paidOnpay.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const getCustomers = () =>{\r\n        axios.get('/customer', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(asset =>{\r\n            dispatch(setCustomers(asset.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_All_Txs = () =>{\r\n        axios.get('/transaction', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(txs =>{\r\n            dispatch(setTransactions(txs.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Staffs =() =>{\r\n        axios.get('/auth', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(staffs =>{\r\n            localStorage.setItem('staffs', staffs.data.length)\r\n            dispatch(setAllStaffs(staffs.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_Raised_Expenses =() =>{\r\n        axios.get('/expense', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(exps =>{\r\n            dispatch(setUserExpenseRaised(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_Raised_Expense_Items =() =>{\r\n        axios.get('/expense/Items', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(exps =>{\r\n            dispatch(setExpenseItems(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_All_Sales =() =>{\r\n        axios.get('/sale/all', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(sales =>{\r\n            dispatch(setSAles(sales.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const getProp_Services = () =>{\r\n        axios.get('/prop_service', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(ps =>{\r\n            dispatch(setPropServices(ps.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const handleGet_Locations = () =>{\r\n        axios.get('/location', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(locations =>{\r\n            dispatch(setLocations(locations.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error) {\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n    \r\n    const getBuildCategories = () =>{\r\n        axios.get('/build_category', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(categories =>{\r\n            dispatch(setBuildCategories(categories.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        get_Session()\r\n        get_Paid_Onpay_Sales()\r\n        get_AllAccounts()\r\n        get_Raised_Expenses()\r\n        getCustomers()\r\n        get_Staffs()\r\n        get_All_Sales()\r\n        getProp_Services()\r\n        handleGet_Locations()\r\n        get_All_Txs()\r\n        getBuildCategories()\r\n    }, [open])\r\n    \r\n\r\n    return (\r\n        <Fragment>\r\n           <div className='app'>\r\n                {/* side__Bar */}\r\n                <SideBarMenu />\r\n                {/* feed */}\r\n                <AdminFeed />\r\n                {/* widget */}\r\n           </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminScreen\r\n","import { Typography } from '@material-ui/core'\r\nimport { ArrowDownward } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectExpenseCategories, selectExpenseItems } from '../../appState/appSlice'\r\n\r\nconst ExpenseItemsView = ({expID}) => {\r\n    const expenseItems = useSelector(selectExpenseItems);\r\n    const expenseCategories = useSelector(selectExpenseCategories)\r\n\r\n    const returnCategory = (id) =>{\r\n        const cat = expenseCategories && expenseCategories\r\n        .find(category =>category.id === id)\r\n\r\n        if(cat) {\r\n            return cat.name\r\n        }\r\n    }\r\n    const itemList = (id) => {\r\n        const expItems = expenseItems && expenseItems\r\n            .filter(exp =>exp.expense_ID == id)\r\n        \r\n        if(expItems) {\r\n            return (\r\n                expItems.map((expitem, i) =>{\r\n                    const {expense_FK, amount, description} = expitem\r\n                    return (\r\n                        <Fragment>\r\n                            <tr key={i}>\r\n                                <td> {i+1} </td>\r\n                                <td>{returnCategory(expense_FK)}</td>\r\n                                <td>{description}</td>\r\n                                <td>{amount.toLocaleString()}</td>\r\n                            </tr>\r\n                        </Fragment>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <tr style={{background: '#2A3F54', borderLeft: '2px solid #20C997' }}>\r\n                <td colSpan={5}>\r\n                    <Typography style={{color: 'white'}} >\r\n                        Voucher {expID}\r\n                        \r\n                    </Typography>\r\n                    \r\n                </td>\r\n            </tr>\r\n            <tr style={{borderLeft: '2px solid #20C997'}}>\r\n                <td colSpan={5} >\r\n                    <table className='table-bordered table-hover'\r\n                        style={{width: '100%'}}\r\n                    >\r\n                        <thead>\r\n                            <th>#</th>\r\n                            <th>Expense Head</th>\r\n                            <th>Description</th>\r\n                            <th>Amount</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            {/* return */}\r\n                            {itemList(expID)}\r\n                        </tbody>\r\n                    </table>\r\n                </td>\r\n            </tr>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ExpenseItemsView\r\n","import React, { useState } from 'react'\r\nimport { Fragment } from 'react'\r\nimport { Typography } from '@material-ui/core'\r\nimport { More } from '@material-ui/icons'\r\nimport ExpenseItemsView from './global/ExpenseItemsView'\r\n\r\nconst ExpenseViewTable = ({ headerColor,  userExpneses, calcuAmt}) => {\r\n    const [open, setOpen] = useState(false)\r\n\r\n    return (\r\n        <Fragment>\r\n            <table className='table-hover'\r\n                style={{width: '98%', margin: 'auto'}}\r\n            >\r\n                <thead style={{top: '60px', position: 'sticky', background:  headerColor? headerColor : '#EDEDED',\r\n                    color: headerColor? 'white': null\r\n                }}>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Expense</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Amount (<s>N</s>)</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Date</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}></th>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        userExpneses&&\r\n                        userExpneses.map((exps, index) =>{\r\n                            const { uuid, amount, expense_date } = exps\r\n                            return (\r\n                                <Fragment key={index} >\r\n                                    <tr\r\n                                        onClick={() =>setOpen(index)}\r\n                                    >\r\n                                        <td style={{textAlign: 'center'}}> {index+1} </td>\r\n                                        <td style={{textAlign: 'left'}}> \r\n                                            <Typography variant='p'\r\n                                                style={{color: '#20C997', cursor: 'pointer'}}\r\n                                            >\r\n                                            {`Expense #${uuid}`}\r\n                                            </Typography>\r\n                                        </td>\r\n                                        <td> {amount.toLocaleString()} </td>\r\n                                        <td> {new Date(expense_date).toLocaleDateString()} </td>\r\n                                        <td>\r\n                                                <More style={{color: '#20c997'}} />\r\n                                        </td>\r\n                                    </tr>\r\n                                    {/* imported component  */}\r\n                                    {\r\n                                        open ===index &&\r\n                                        <ExpenseItemsView expID={uuid} />\r\n                                    }\r\n                                </Fragment>\r\n                                \r\n                                \r\n                            )\r\n                        })\r\n                        \r\n                    }\r\n                    {\r\n                        userExpneses &&\r\n                        <tr\r\n                        style={{background: '#2A3F54', color: 'white'}} \r\n                        >\r\n                            <td colSpan={2}>\r\n                                <Typography variant='subtitle1'\r\n                                style={{color: 'white'}}\r\n                                >\r\n                                    <b>Total:</b>\r\n                                </Typography>\r\n                            </td>\r\n                            <td>\r\n                                <Typography variant='subtitle1'\r\n                                style={{color: 'white'}}\r\n                                >\r\n                                <b>{\r\n                                    calcuAmt(userExpneses).toLocaleString()\r\n                                }</b>\r\n                                </Typography>\r\n                            </td>\r\n                            <td colSpan={2}></td>\r\n                        </tr>\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ExpenseViewTable\r\n","import { IconButton, Typography } from '@material-ui/core'\r\nimport { MoreHoriz } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { Fragment } from 'react'\r\n\r\nconst SalesViewTable = ({sales}) => {\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total.toLocaleString()\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <table className='table-hover'\r\n                style={{width: '98%', margin: 'auto'}}\r\n            >\r\n                <thead style={{top: '60px', position: 'sticky', background: '#EDEDED'}}>                    \r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Customer</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Due Date</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Amount (<s>N</s>)</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}> </th>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        sales &&\r\n                        sales.map((sale, index) =>{\r\n                            const {applicant_name, sale_date, due_date, amount } = sale\r\n                            return(\r\n                            <Fragment key={index}>\r\n                                <tr>\r\n                                    <td style={{textAlign: 'center'}}> {index+1} </td>\r\n                                    <td style={{textAlign: 'left'}}>\r\n                                        {applicant_name}\r\n                                    </td>\r\n                                    <td> {new Date(due_date).toLocaleDateString()} </td>\r\n                                    <td> {amount} </td>\r\n                                    <td style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n                                        <div>\r\n                                        <IconButton size='small'>\r\n                                            <MoreHoriz style={{color: '#20c997'}} />\r\n                                        </IconButton>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                    \r\n                    {\r\n                    sales && sales.length >0 &&\r\n                    <tr\r\n                    style={{background: '#2A3F54', color: 'white'}} \r\n                    >\r\n                        <td colSpan={3}>\r\n                            <Typography variant='subtitle1'\r\n                            style={{color: 'white'}}\r\n                            >\r\n                                <b>Total:</b>\r\n                            </Typography>\r\n                        </td>\r\n                        <td>\r\n                            <Typography variant='subtitle1'\r\n                            style={{color: 'white'}}\r\n                            >\r\n                            <b>{\r\n                                calcuAmt(sales)\r\n                            }</b>\r\n                            </Typography>\r\n                        </td>\r\n                        <td colSpan={2}></td>\r\n                    </tr>\r\n                }\r\n                </tbody>\r\n            </table>\r\n            {sales && sales.length <= 0 &&\r\n                <div className=\"alert alert-warning\">\r\n                    <h6>No Sales Availabe</h6>\r\n                </div>\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default SalesViewTable\r\n","import { Button, Typography } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectAllStaffs, selectTransactions, selectOpen, \r\n    selectToken, setOpen, setfilterTx, selectCustomers,\r\n    setFilterCus,\r\n    selectUserExpenseRaised,\r\n    selectSales,\r\n} from '../appState/appSlice'\r\nimport ExpenseViewTable from './ExpenseViewTable'\r\nimport AppBackdrop from './global/AppBackDrop'\r\nimport AppSnackbar from './global/AppSnackbar'\r\nimport CustomerViewTable from './global/CustomerViewTable'\r\nimport SalesViewTable from './global/SalesViewTable'\r\nimport TxTableView from './global/TxTableView'\r\n\r\nconst ReportsPool = () => {\r\n    const dispatch = useDispatch()\r\n    const open = useSelector(selectOpen)\r\n    const token = useSelector(selectToken)\r\n    const staffs = useSelector(selectAllStaffs)\r\n    const sales = useSelector(selectSales)\r\n    const customers = useSelector(selectCustomers)\r\n    const transactions = useSelector(selectTransactions)\r\n    const userExpneses = useSelector(selectUserExpenseRaised)\r\n    const [tab, setTab] = useState('gen')\r\n    const [message, setMessage] = useState()\r\n    const [success, setSuccess] = useState(false)\r\n    const [expenses, setExpenses] = useState()\r\n    const [filterSales, setFilterSales] = useState()\r\n    const [filterCustomers, setFilterCustomers] = useState()\r\n    const [data, setData] = useState({\r\n       start_date: '',\r\n       end_date: '',\r\n       staff: ''\r\n    })\r\n    const handleChange = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total.toLocaleString()\r\n    } \r\n\r\n    useEffect(() =>{\r\n        const ftxs = transactions && transactions.filter(tx => tx.tx_date >=data.start_date && tx.tx_date <= data.end_date)\r\n        return dispatch(setfilterTx(ftxs))\r\n        \r\n    },[data])\r\n\r\n    useEffect(() =>{\r\n        const fexps = userExpneses && userExpneses.filter(exp => exp.expense_date >=data.start_date && exp.expense_date <= data.end_date)\r\n        return setExpenses(fexps)\r\n        \r\n    },[data])\r\n\r\n    useEffect(() =>{\r\n        const fCus = customers && customers.filter(cus => cus.createdAt >=data.start_date && cus.createdAt <= data.end_date)\r\n        return setFilterCustomers(fCus)\r\n        \r\n    },[data])\r\n\r\n    useEffect(() =>{\r\n        const fSales = sales && sales.filter(sale => sale.createdAt >=data.start_date && sale.createdAt <= data.end_date)\r\n        return setFilterSales(fSales)\r\n        \r\n    },[data])\r\n\r\n    \r\n    return (\r\n        <Fragment>\r\n            <AppBackdrop open={open} setOpen={setOpen} />\r\n            <AppSnackbar open={success} setOpen={setSuccess} message={message} />\r\n            <div className='admin__Title'>\r\n                <section>\r\n                    <Typography variant='h3'>Reports Pool</Typography>\r\n                </section>\r\n                \r\n            </div>\r\n            <div className='p-1' />\r\n            {/* table */}\r\n            <table className='mt-1 table-bordered' style={{width: '98%', margin: 'auto', \r\n                position: 'sticky', top: 0, zIndex: 222}}>\r\n                <thead>\r\n                    <th>From</th>\r\n                    <th>\r\n                        <input\r\n                            type='date'\r\n                            value={data.start_date}\r\n                            placeholder='Staff'\r\n                            name='start_date' list='staffs'\r\n                            onChange={e =>handleChange(e)}\r\n                        />\r\n                        \r\n                    </th>\r\n                    <th>To</th>\r\n                    <th>\r\n                        <input\r\n                            name='end_date'\r\n                            type='date'\r\n                            value={data.end_date}\r\n                            onChange={e =>handleChange(e)}\r\n                            \r\n                        />\r\n                        \r\n                    </th>                    \r\n                </thead>\r\n            </table>\r\n            \r\n            <div className='p-1' />\r\n            { data.start_date && data.end_date &&\r\n            <table className='mt-1 table-bordered' style={{width: '98%', margin: 'auto',\r\n                position: 'sticky', top: '30px', zIndex: 222}}>\r\n                <thead>\r\n                    {/* <th\r\n                        onClick={() =>setTab('gen')}\r\n                        style={{background: tab=='gen'?'':'#2A3F54', color: tab=='gen'? '#2A3F54': 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderBottom: 'none' }}\r\n                    >\r\n                       \r\n                        General Info\r\n                           \r\n                    </th> */}\r\n                    <th\r\n                        onClick={() =>setTab('tx')}\r\n                        style={{background: tab=='tx'?'':'#2A3F54', color: tab=='tx'? '#2A3F54': 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Transactions\r\n                    </th>\r\n                    <th\r\n                        onClick={() =>setTab('cus')}\r\n                        style={{background: tab=='cus'?'':'#2A3F54', color: tab=='cus'? '#2A3F54': 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Customers\r\n                    </th>\r\n                    <th\r\n                        onClick={() =>setTab('exp')}\r\n                        style={{background: tab=='exp'?'':'#2A3F54', color: tab=='exp'? '#2A3F54': 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Expense\r\n                    </th>\r\n                    <th\r\n                        onClick={() =>setTab('sal')}\r\n                        style={{background: tab=='sal'?'':'#2A3F54', color: tab=='sal'? '#2A3F54': 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Sales\r\n                    </th>\r\n                    <th\r\n                        onClick={() =>setTab('jou')}\r\n                        style={{background: tab=='jou'?'':'#2A3F54', color: tab=='jou'? '#2A3F54': 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Journal\r\n                    </th>\r\n                </thead>                \r\n            </table>}\r\n                {\r\n                    tab =='tx' &&\r\n                    <TxTableView\r\n                        date={`${data.start_date} to ${data.end_date}` }\r\n                        name={`${data.first_name} ${data.last_name}`} \r\n                    />\r\n                }\r\n                {\r\n                    tab =='cus' &&\r\n                    <CustomerViewTable customers={filterCustomers} />\r\n                }\r\n                {\r\n                    tab=='exp' &&\r\n                  \r\n                        <ExpenseViewTable \r\n                            calcuAmt={calcuAmt}\r\n                            userExpneses={expenses}\r\n                        />\r\n                  \r\n                }\r\n                {\r\n                    tab=='sal' &&\r\n                    <SalesViewTable sales={filterSales} />\r\n                }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ReportsPool\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport { Fragment } from \"react\";\r\n\r\nimport AppHeader from \"./global/AppHeader\";\r\nimport ReportsPool from \"./ReportsPool\";\r\n\r\nconst ReportFeed = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"app__Feed\">\r\n        <AppHeader title=\"Report\" />\r\n        <div className=\"admin__FeedContainer\">\r\n          <Grid container spacing={2}>\r\n            <Grid item lg={12} md={12} sm={12}>\r\n              <ReportsPool />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ReportFeed;\r\n","import axios from 'axios'\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectOpen, selectToken, setAccounts, setAllStaffs, setBuildCategories, setCustomers, setExpenseCategories, setExpenseItems, setLocations, setPaidOnpaySales, setPropServices, setSAles, setTransactions, setUser, setUserExpenseRaised } from '../appState/appSlice'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport ReportFeed from '../components/ReportFeed'\r\nimport './homeScreen.css'\r\n\r\nconst ReportScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const open = useSelector(selectOpen)\r\n    const token = useSelector(selectToken)\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Paid_Onpay_Sales = async () =>{\r\n        await localStorage.clear()\r\n        axios.get(`/sale/paid_onpay`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(paidOnpay =>{\r\n            dispatch(setPaidOnpaySales(paidOnpay.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const getCustomers = () =>{\r\n        axios.get('/customer', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(asset =>{\r\n            dispatch(setCustomers(asset.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_All_Txs = () =>{\r\n        axios.get('/transaction', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(txs =>{\r\n            dispatch(setTransactions(txs.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Staffs =() =>{\r\n        axios.get('/auth', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(staffs =>{\r\n            localStorage.setItem('staffs', staffs.data.length)\r\n            dispatch(setAllStaffs(staffs.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_Raised_Expenses =() =>{\r\n        axios.get('/expense', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(exps =>{\r\n            dispatch(setUserExpenseRaised(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_Raised_Expense_Items =() =>{\r\n        axios.get('/expense/Items', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            } \r\n        })\r\n        .then(exps =>{\r\n            dispatch(setExpenseItems(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_All_Sales =() =>{\r\n        axios.get('/sale/all', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(sales =>{\r\n            dispatch(setSAles(sales.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const getProp_Services = () =>{\r\n        axios.get('/prop_service', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(ps =>{\r\n            dispatch(setPropServices(ps.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const handleGet_Locations = () =>{\r\n        axios.get('/location', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(locations =>{\r\n            dispatch(setLocations(locations.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error) {\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n    const get_ExpenseCategories =() =>{\r\n        axios.get('/expense/categories', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(exps =>{\r\n            dispatch(setExpenseCategories(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n    \r\n    const getBuildCategories = () =>{\r\n        axios.get('/build_category', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(categories =>{\r\n            dispatch(setBuildCategories(categories.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        get_Session()\r\n        get_Paid_Onpay_Sales()\r\n        get_AllAccounts()\r\n        get_Raised_Expenses()\r\n        getCustomers()\r\n        get_Staffs()\r\n        get_All_Sales()\r\n        getProp_Services()\r\n        handleGet_Locations()\r\n        get_All_Txs()\r\n        getBuildCategories()\r\n        get_Raised_Expense_Items()\r\n        get_ExpenseCategories()\r\n    }, [open])\r\n    \r\n\r\n    return (\r\n        <Fragment>\r\n           <div className='app'>\r\n                {/* side__Bar */}\r\n                <SideBarMenu />\r\n                {/* feed */}\r\n                <ReportFeed />\r\n                {/* widget */}\r\n           </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ReportScreen\r\n","import TextField from \"@material-ui/core/TextField\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\n\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setToken } from \"../../appState/appSlice\";\r\nimport { useState } from \"react\";\r\n\r\nconst LoginForm = ({ setSuccess, setError, setOpen, user, setUser }) => {\r\n  const dispatch = useDispatch();\r\n  const [invalid, setInvalid] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const handle_Login = (e) => {\r\n    e.preventDefault();\r\n    if (user.username.trim().length <= 0)\r\n      return setInvalid({\r\n        ...invalid,\r\n        username: \"Is required\",\r\n      });\r\n\r\n    setInvalid({\r\n      ...invalid,\r\n      username: \" \",\r\n    });\r\n    if (user.password.trim().length <= 0)\r\n      return setInvalid({\r\n        ...invalid,\r\n        password: \"Is required\",\r\n      });\r\n    setInvalid({\r\n      ...invalid,\r\n      username: \"\",\r\n      password: \"\",\r\n    });\r\n    setOpen(true);\r\n    axios\r\n      .post(\"/auth/login\", user)\r\n\r\n      .then((result) => {\r\n        setSuccess(false);\r\n        return dispatch(setToken(result.data));\r\n      })\r\n      .catch((error) => {\r\n        setOpen(false);\r\n        setSuccess(true);\r\n        if (error.status == 500) {\r\n          setSuccess(true);\r\n          return setError(error.response.statusText);\r\n        }\r\n        setSuccess(true);\r\n        setError(error.response.data.message);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n        <FormGroup>\r\n          <TextField\r\n            name=\"User Id\"\r\n            value={user.username}\r\n            placeholder=\"Example (SA@2021)\"\r\n            label=\"User ID\"\r\n            onChange={(e) =>\r\n              setUser({\r\n                ...user,\r\n                username: e.target.value,\r\n              })\r\n            }\r\n            error={invalid && invalid.username.length > 0}\r\n            helperText={invalid && invalid.username}\r\n          />\r\n        </FormGroup>\r\n      </div>\r\n      <div className=\"p-1\" />\r\n      <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n        <FormGroup>\r\n          <TextField\r\n            type=\"password\"\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            value={user.password}\r\n            placeholder=\"Password\"\r\n            onChange={(e) =>\r\n              setUser({\r\n                ...user,\r\n                password: e.target.value,\r\n              })\r\n            }\r\n            error={invalid && invalid.password.length > 0}\r\n            helperText={invalid && invalid.password}\r\n          />\r\n        </FormGroup>\r\n      </div>\r\n\r\n      <div className=\"col-lg-12 col-md-12\">\r\n        <div className=\"btn__Container\">\r\n          <button\r\n            onClick={(e) => handle_Login(e)}\r\n            type=\"submit\"\r\n            className=\"p-1\"\r\n          >\r\n            Log In\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","// MUI Stuff\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport AppBackdrop from \"../global/AppBackDrop\";\r\nimport AppSnackbar from \"../global/AppSnackbar\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport { Typography } from \"@material-ui/core\";\r\nconst CreateStaff = () => {\r\n  const [Error, setError] = useState();\r\n  const [open, setOpen] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const [user, setUser] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  return (\r\n    <div className=\"auth__FormContainer\">\r\n      <AppBackdrop setOpen={setOpen} open={open} />\r\n      <AppSnackbar message={Error} open={success} setOpen={setSuccess} />\r\n      <form method=\"post\">\r\n        <div className=\"row align-items-center justify-content-center\">\r\n          <Paper className=\"col-lg-6 col-md-6 col-sm-12 p-4\">\r\n            <div\r\n              className=\"align-items-center justify-content-center d-flex\"\r\n              style={{ flexDirection: \"column\" }}\r\n            >\r\n              <Avatar variant=\"rounded\" style={{ width: 80, height: 80 }} />\r\n              <Typography style={{ color: \"#2a3f54\", padding: 5 }}>\r\n                <b>USER</b>\r\n              </Typography>\r\n            </div>\r\n            <LoginForm\r\n              user={user}\r\n              open={open}\r\n              Error={Error}\r\n              setOpen={setOpen}\r\n              setUser={setUser}\r\n              setError={setError}\r\n              setSuccess={setSuccess}\r\n            />\r\n          </Paper>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateStaff;\r\n// password, is_superuser, username,\r\n// first_name, last_name, email, is_staff, is_active, date_joined\r\n","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { selectToken } from \"../appState/appSlice\";\r\nimport \"../components/auth/auth.css\";\r\nimport CreateStaff from \"../components/auth/CreateStaff\";\r\n\r\nexport const AuthScreen = () => {\r\n  const token = useSelector(selectToken);\r\n  const history = useHistory();\r\n\r\n  if (token) {\r\n    history.push(\"/home\");\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div className=\"auth__Container\">\r\n        <CreateStaff />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n","import { Button, Container, FormLabel, Grid, IconButton, Paper, Select, TextField, Typography } from '@material-ui/core'\r\nimport { FileCopy, PlusOne,} from '@material-ui/icons'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectAccounts, selectBillCategories, selectToken, selectVendors, setBillCategories } from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\nimport AppSnackbar from './global/AppSnackbar'\r\n\r\nconst BillFeed = ({ setOpen, isOpen, setIsOpen, isWidget, setIswidget }) => {\r\n    const token = useSelector(selectToken)\r\n    const vendors = useSelector(selectVendors)\r\n    const categories = useSelector(selectBillCategories)\r\n    const [success, setSuccess] = useState(false)\r\n    const [message, setMessage] = useState()\r\n    const [vendorSales, setVendorSales] = useState()\r\n    const billFormTemplate = {billcategory:'', amount: '',  description: ''};\r\n    const [billForm, setBillform] = useState([billFormTemplate])\r\n\r\n    const [data, setData ] = useState({\r\n        vendor_FK: '', \r\n        bill_date: '',\r\n        bill_term: '',\r\n        due_date: '',\r\n        VALUES: [],\r\n        uuid: '',\r\n        total: ''\r\n    })\r\n// func\r\n    const handleSetPostData = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n\r\n    } \r\n\r\n    const handleSetTerm = (e) =>{\r\n        const d = new Date()\r\n        const sd = new Date()\r\n        const value = e.target.value;\r\n         const duedate = d.setDate(sd.getDate()+parseInt(value))\r\n            return setData({\r\n                ...data,\r\n                bill_term: value,\r\n                due_date: new Date(duedate)\r\n            })\r\n    }\r\n\r\n    const addBillFrom = () =>{\r\n        setBillform([\r\n            ...billForm,\r\n            billFormTemplate\r\n        ])\r\n    }\r\n    const handleChange = (e, index) =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n        const updatedbillform = billForm.map((jef, i) => index == i ? Object.assign(jef, {[name]: value}): jef);\r\n        setBillform(updatedbillform)\r\n\r\n        if(name =='amount') {\r\n            const updatedbillform =  billForm.map((jef, i) => index == i ?\r\n            Object.assign(jef, {'bill_ID': data.uuid, 'createdAt': data.bill_date  }): jef);\r\n        }\r\n    }\r\n    const handleRemovebillform = (index) =>{\r\n        const filterbillform = [...billForm];\r\n        filterbillform.splice(index, 1);\r\n        \r\n        setBillform(filterbillform)\r\n    }\r\n\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n    // submit post\r\n    const handleSubmit =e =>{\r\n        e.preventDefault()\r\n        setOpen(true)\r\n        axios.post('/bill',data, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setOpen(false)\r\n            setSuccess(true)\r\n            setMessage(result.data.message)\r\n            setData({\r\n                vendor_FK: '', \r\n                bill_date: '',\r\n                bill_term: '',\r\n                due_date: '',\r\n                VALUES: [],\r\n                uuid: '',\r\n                total: ''\r\n            })\r\n          \r\n            setBillform([\r\n               billFormTemplate\r\n            ])\r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            if(error) {\r\n                return error.response.data\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    // useEffect func\r\n    useEffect(() =>{\r\n        \r\n        const fdata = billForm.map(x =>Object.values(x))\r\n        const findal =[]\r\n        // const data = fdata\r\n        for(let i =0; i< fdata.length; i++){\r\n            const element = fdata[i]\r\n            findal.push(element)\r\n        }\r\n        \r\n         setData({\r\n            ...data,\r\n            VALUES: findal\r\n        })\r\n    }, [billForm])\r\n   \r\n    useEffect(() =>{\r\n        setData({\r\n            ...data,\r\n            total: calcuAmt(billForm)\r\n        })\r\n    }, [data.VALUES])\r\n    useEffect(() =>{\r\n        setData({\r\n            ...data,\r\n            uuid:  new Date().getSeconds().toLocaleString() + new Date().getMinutes().toLocaleString()+new Date().getMilliseconds()\r\n        })\r\n    }, [success])\r\n\r\n    useEffect(() =>{\r\n        const filterCategories = categories&&categories.filter(cat => parseInt(cat.vendor_FK) == parseInt(data.vendor_FK))\r\n       if(filterCategories) {\r\n           return  setVendorSales(filterCategories)\r\n       }\r\n      setVendorSales('')\r\n       \r\n    },[data.vendor_FK])\r\n    return (\r\n        <div className={`${isWidget? 'isapp__Feed': 'app__Feed'}`}>\r\n            <AppSnackbar open={success} setOpen={setSuccess} message={message} />\r\n           <AppHeader title='Bill' />\r\n           <div className=\"row align-items-center justify-content-center d-flex m-1\" >\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                    {/* table */}\r\n                    <h3>Bill Entry<span> \r\n                        <IconButton color='secondary'\r\n                            onClick={() =>setIswidget(!isWidget)}\r\n                        >\r\n                        <FileCopy style={{ color: '#1ABB9C'}} />\r\n                        </IconButton></span></h3> \r\n                        {/* to do make it a component */}\r\n                        <Grid container spacing={2} className='p-3'>\r\n                            <Grid item lg={4} md={4}>\r\n                                <FormLabel>Vendor</FormLabel>\r\n                                <select\r\n                                    required\r\n                                    name='vendor_FK'\r\n                                    placeholder='Vendor'\r\n                                    style={{border: 'none'}}\r\n                                    value={data.vendor_FK}\r\n                                    onChange={e =>handleSetPostData(e)}\r\n                                >\r\n                                    <option value=''>Select</option>\r\n                                    <option value='-1'>All</option>\r\n                                    {\r\n                                    vendors&&\r\n                                    vendors.map((vendor, index) =>{\r\n                                        const { id, vendor_name} = vendor\r\n                                        return <option value={id} key={index} >{`${vendor_name}`}</option>\r\n                                    })\r\n                                }\r\n                                </select>\r\n                            </Grid>\r\n                                \r\n                                <Grid item lg={8} md={8}\r\n                                    style={{display: 'flex', \r\n                                    justifyContent: 'flex-end', alignItems: 'flex-end', flexDirection: 'column'}}\r\n                                >\r\n                                    <FormLabel>Amount</FormLabel>\r\n                                    <Typography variant='h5'>\r\n                                        <s>N</s>: {calcuAmt(billForm)}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                \r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Period Term</FormLabel>\r\n                                    <select\r\n                                        required\r\n                                        name='bill_term'\r\n                                        value={data.bill_term}\r\n                                        onChange={e =>handleSetTerm(e)}\r\n                                        style={{width: '100%', outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                    >\r\n                                        <option></option>\r\n                                        <option value={7}>7 Days</option>\r\n                                        <option value={14}>14 Days</option>\r\n                                        <option value={21}>21 Days</option>\r\n                                        <option value={28}>28 Days</option>\r\n                                        <option value={30}>30 Days</option>\r\n                                        <option value={60}>60 Days</option>\r\n                                        <option value={90}>90 Days</option>\r\n                                        <option value={120}>120 Days</option>\r\n                                        <option value={150}>150 Days</option>\r\n                                        <option value={180}>180 Days</option>\r\n                                        <option value={210}>210 Days</option>\r\n                                        <option value={240}>240 Days</option>\r\n                                        <option value={270}>270 Days</option>\r\n                                        <option value={300}>300 Days</option>\r\n                                        <option value={330}>330 Days</option>\r\n                                        <option value={360}>360 Days</option>\r\n                                    </select>\r\n                                </Grid>\r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Bill Date</FormLabel>\r\n                                    <input\r\n                                        required\r\n                                        name='bill_date'\r\n                                        type='date'\r\n                                        value={data.bill_date}\r\n                                        onChange={e =>handleSetPostData(e)}\r\n                                        style={{width: '100%', outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Due Date</FormLabel>\r\n                                    <input\r\n                                        name='due_date'\r\n                                        value={data.due_date ? new Date(data.due_date).toLocaleDateString(): new Date().toLocaleDateString()}\r\n                                        style={{width: '100%', outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                    />\r\n                                </Grid>\r\n                            \r\n                        </Grid>\r\n                        <h5>\r\n                            Category Details\r\n                            <span>\r\n                                <IconButton\r\n                                    color='secondary'\r\n                                    onClick={() =>setIsOpen(!isOpen)}\r\n                                >\r\n                                    <PlusOne style={{color: '#20c997'}} />\r\n                                </IconButton>\r\n                            </span>\r\n                        </h5>\r\n                    <Paper>\r\n                        <Container className='p-3'>\r\n                        <table className=\"table-small table-hover table-bordered\" style={{width: '100%'}}>\r\n                            <thead>\r\n                                \r\n                                <th>#</th>\r\n                                <th> {' '} </th>\r\n                                <th>Category</th>\r\n                                <th>Amount</th>\r\n                                <th>Description</th>\r\n                               \r\n                                <th></th>\r\n                            </thead>\r\n                            <tbody id='je__Table'>\r\n                                {\r\n                                    billForm.map((categ, index) =>(\r\n                                        <tr>\r\n                                            <td>{index+1} </td>\r\n                                            <td\r\n                                                    onClick={() =>addBillFrom()}\r\n                                                >\r\n                                                    <span className='fa fa-plus-circle fa-1x'\r\n                                                        style={{color: '#20c997'}}\r\n                                                    />\r\n                                            </td>\r\n                                            <td>\r\n                                                <select\r\n                                                    name='billcategory'\r\n                                                    value={categ.billcategory}\r\n                                                    placeholder='Category'\r\n                                                    style={{border: 'none'}}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                >\r\n                                                    <option value=''></option>\r\n                                                    {\r\n                                                        vendorSales&& vendorSales.length > 0?\r\n                                                        vendorSales.map((vsales, index) =>{\r\n                                                            const { id, name} = vsales\r\n                                                            return <option value={id} key={index} >{`${name}`}</option>\r\n                                                        })\r\n                                                    :\r\n                                                       categories&&\r\n                                                       categories.map((category, index) =>{\r\n                                                            const { id, name} = category\r\n                                                            return <option value={id} key={index} >{`${name}`}</option>\r\n                                                        })\r\n                                                    }\r\n                                                   \r\n                                                </select>\r\n                                            </td>\r\n                                            <td>\r\n                                                <input\r\n                                                    name='amount'\r\n                                                    type='number'\r\n                                                    placeholder='Amount'\r\n                                                    value={categ.amount}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n                                            \r\n                                            <td>\r\n                                                <input\r\n                                                    name='description'\r\n                                                    placeholder='Description'\r\n                                                    value={categ.description}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n                     \r\n                                            <td\r\n                                                onClick={() =>handleRemovebillform(index)}\r\n                                            >\r\n                                                    <span className='fa fa-trash'\r\n                                                        style={{color: 'red'}}\r\n                                                    ></span>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                                    \r\n                            </tbody>\r\n                        </table>\r\n                       \r\n                        <Button\r\n                            className='m-3'\r\n                            variant='contained'\r\n                            onClick={e =>handleSubmit(e)}\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >submit</Button>\r\n                        </Container>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BillFeed\r\n","import {\r\n  Button,\r\n  FormControl,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectToken } from \"../../appState/appSlice\";\r\nimport AppSnackbar from \"../global/AppSnackbar\";\r\n\r\nconst AccountCreationForm = ({ open, setOpen }) => {\r\n  const token = useSelector(selectToken);\r\n  const [success, setSuccess] = useState();\r\n  const [snackbar, setSnackbar] = useState(false);\r\n  const [Error, setError] = useState(\"\");\r\n  const [accData, setAccdata] = useState({\r\n    name: \"\",\r\n    code: \"\",\r\n    active: \"\",\r\n    locked: \"\",\r\n    acc_type: \"\",\r\n    balance_type: \"\",\r\n  });\r\n  // func\r\n  const handleChange = (e) => {\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n    setAccdata({\r\n      ...accData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handle_Post = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      !accData.name.trim().length > 3 ||\r\n      !accData.acc_type.trim().length > 0\r\n    ) {\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n      return setError(\"Invalid Form\");\r\n    }\r\n    setOpen(!open);\r\n\r\n    axios\r\n      .post(\"/account\", accData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        if (result.status == 201) {\r\n          setAccdata({\r\n            name: \"\",\r\n            code: \"\",\r\n            active: \"\",\r\n            locked: \"\",\r\n            acc_type: \"\",\r\n            balance_type: \"\",\r\n          });\r\n          setError(\"\");\r\n          setOpen(false);\r\n          setSuccess(result.data.message);\r\n          return setSnackbar(true);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setOpen(false);\r\n        if (error) {\r\n          setError(error.response.statusText);\r\n          console.log(error.response.statusText);\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"form__container\">\r\n      <AppSnackbar open={snackbar} setOpen={setSnackbar} message={success} />\r\n      <form action=\"\" method=\"post\" className=\"p-3\">\r\n        <TextField\r\n          name=\"name\"\r\n          label=\"Name\"\r\n          size=\"small\"\r\n          fullWidth\r\n          required\r\n          variant=\"outlined\"\r\n          value={accData.name}\r\n          placeholder=\"Full name\"\r\n          onChange={(e) => handleChange(e)}\r\n        />\r\n        <TextField\r\n          name=\"code\"\r\n          label=\"code\"\r\n          className=\"mt-2\"\r\n          size=\"small\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          value={accData.code}\r\n          onChange={(e) => handleChange(e)}\r\n        />\r\n\r\n        <Select\r\n          fullWidth\r\n          name=\"acc_type\"\r\n          className=\"mt-2\"\r\n          value={accData.acc_type}\r\n          onChange={(e) => handleChange(e)}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          label=\"Type\"\r\n          native\r\n          defaultValue=\"\"\r\n          id=\"grouped-native-select\"\r\n          style={{ height: \"40px\" }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\">\r\n            Select\r\n          </option>\r\n          <optgroup label=\"Assets\">\r\n            <option value=\"asset_ca_cash\">Current Asset</option>\r\n            <option value=\"asset_ca_mkt_sec\">Marketable Securities</option>\r\n            <option value=\"asset_ca_recv\">Receivables</option>\r\n            <option value=\"asset_ca_inv\">Inventory</option>\r\n            <option value=\"asset_ca_uncoll\">Uncollectibles</option>\r\n            <option value=\"asset_ca_prepaid\">Prepaid</option>\r\n            <option value=\"asset_ca_other\">Other Liquid Assets</option>\r\n            <option value=\"asset_lti_notes\">Notes Receivable</option>\r\n            <option value=\"asset_lti_land\">Land</option>\r\n            <option value=\"asset_lti_sec\">Securities</option>\r\n            <option value=\"asset_ppe\">Property Plant &amp; Equipment</option>\r\n            <option value=\"asset_ia\">Intangible Assets</option>\r\n            <option value=\"asset_adjustment\">Other Assets</option>\r\n          </optgroup>\r\n\r\n          <optgroup label=\"Liabilities\">\r\n            <option value=\"lia_cl_acc_pay\">Accounts Payable</option>\r\n            <option value=\"lia_cl_wage_pay\">Wages Payable</option>\r\n            <option value=\"lia_cl_wage_pay\">Interest Payable</option>\r\n            <option value=\"lia_cl_st_notes_payable\">Notes Payable</option>\r\n            <option value=\"lia_cl_ltd_mat\">\r\n              Current Maturities of Long Tern Debt\r\n            </option>\r\n            <option value=\"lia_cl_def_rev\">Deferred Revenue</option>\r\n            <option value=\"lia_cl_other\">Other Liabilities</option>\r\n            <option value=\"lia_ltl_notes\">Notes Payable</option>\r\n            <option value=\"lia_ltl_bonds\">Bonds Payable</option>\r\n            <option value=\"lia_ltl_mortgage\">Mortgage Payable</option>\r\n          </optgroup>\r\n          <optgroup label=\"Equity\">\r\n            <option value=\"eq_capital\">Capital</option>\r\n            <option value=\"eq_stock_c\">Common Stock</option>\r\n            <option value=\"eq_stock_p\">Preferred Stock</option>\r\n            <option value=\"eq_adjustment\">Other Equity Adjustments</option>\r\n            <option value=\"in_sales\">Sales Income</option>\r\n            <option value=\"in_pass\">Passive Income</option>\r\n            <option value=\"in_other\">Other Income</option>\r\n            <option value=\"ex_cogs\">Cost of Goods Sold</option>\r\n            <option value=\"ex_op\">Operational Expense</option>\r\n            <option value=\"ex_interest\">Interest Expense</option>\r\n            <option value=\"ex_taxes\">Tax Expense</option>\r\n            <option value=\"ex_cap\">Capital Expense</option>\r\n            <option value=\"ex_other\">Other Expense</option>\r\n          </optgroup>\r\n        </Select>\r\n        <Select\r\n          fullWidth\r\n          className=\"mt-2\"\r\n          name=\"balance_type\"\r\n          style={{ height: \"40px\" }}\r\n          value={accData.balance_type}\r\n          onChange={(e) => handleChange(e)}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          label=\"Type\"\r\n          native\r\n          defaultValue=\"\"\r\n          id=\"grouped-native-select\"\r\n        >\r\n          <option value=\"\">Select</option>\r\n          <option value=\"CR\">Credit</option>\r\n          <option value=\"DR\">Debit</option>\r\n        </Select>\r\n        <Select\r\n          fullWidth\r\n          name=\"active\"\r\n          className=\"mt-2\"\r\n          value={accData.active}\r\n          onChange={(e) => handleChange(e)}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          label=\"Type\"\r\n          native\r\n          defaultValue=\"\"\r\n          id=\"grouped-native-select\"\r\n          style={{ height: \"40px\" }}\r\n        >\r\n          <option value=\"\">Active</option>\r\n          <option value={0}>Yes</option>\r\n          <option value={1}>No</option>\r\n        </Select>\r\n        <Select\r\n          fullWidth\r\n          name=\"locked\"\r\n          className=\"mt-2\"\r\n          value={accData.locked}\r\n          onChange={(e) => handleChange(e)}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          label=\"Lock\"\r\n          native\r\n          defaultValue=\"\"\r\n          style={{ height: \"40px\" }}\r\n        >\r\n          <option value=\"\">Locked</option>\r\n          <option value={1}>Yes</option>\r\n          <option value={0}>No</option>\r\n        </Select>\r\n        <FormControl className=\"mt-2\">\r\n          {Error && (\r\n            <Typography variant=\"caption\" color=\"error\">\r\n              {Error}\r\n            </Typography>\r\n          )}\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n            onClick={(e) => handle_Post(e)}\r\n            style={{ background: \"#2A3F54\", color: \"white\" }}\r\n          >\r\n            Create\r\n          </Button>\r\n        </FormControl>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountCreationForm;\r\n","// MUI Stuff\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport React from \"react\";\r\n\r\nconst AppWidgetHeader = ({ title, isWidget, setIswidget }) => {\r\n  return (\r\n    <div className=\"app__HeaderContainer\">\r\n      <div className=\"app__HeaderLeft\">\r\n        <Tooltip title={`Close`}>\r\n          <IconButton onClick={() => setIswidget(!isWidget)}>\r\n            <Close />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </div>\r\n      <aside className=\"app__HeaderRight\">\r\n        <Typography variant=\"subtitle1\" className=\"mr-2\">\r\n          {title}\r\n        </Typography>\r\n      </aside>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppWidgetHeader;\r\n","import { Paper } from '@material-ui/core'\r\nimport React from 'react'\r\nimport AccountCreationForm from './form/AccountCreationForm'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst BillWidget = ({ open, setOpen, isWidget, setIswidget }) => {\r\n    return (\r\n        <div className='app__Widget'>\r\n            <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Bill List' \r\n            />\r\n            <section className='app__WidgetContainer'>\r\n                {/* <AccountCreationForm\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                /> */}\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BillWidget\r\n","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { selectToken, selectUser, selectVendors } from '../../appState/appSlice';\r\nimport { Button, IconButton, Select, TextField, Typography } from '@material-ui/core';\r\nimport { MDBBtn, MDBContainer, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader } from 'mdbreact'\r\nimport { Close } from '@material-ui/icons';\r\nimport axios from 'axios';\r\nimport AppBackdrop from './AppBackDrop';\r\nimport AppSnackbar from './AppSnackbar';\r\n\r\nconst AddBillCategories = ({  open, setOpen }) => {\r\n    const vendors = useSelector(selectVendors)\r\n    const [body, setBody] = useState()\r\n    const [Error, setError] = useState()\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const token = useSelector(selectToken)\r\n    const [success, setSuccess] = useState(false)\r\n    const [message, setMessage] = useState()\r\n    const billCategoryFormTemplate = {name:'',  vendor_FK: '',  createdBy_FK: '', createdAt: ''  };\r\n    const [billCategoryForm, setBillCategoryform] = useState([billCategoryFormTemplate])\r\n    const user = useSelector(selectUser)\r\n    const createdAt = new Date().toLocaleDateString()\r\n    // func\r\n    const handleChange = (e, index) =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n        const upbillCategoryform =  billCategoryForm.map((jef, i) => index == i ?\r\n        Object.assign(jef, {[name]: value, 'createdBy_FK': user.id, 'createdAt': createdAt  }): jef);\r\n        setBillCategoryform(upbillCategoryform)\r\n    }\r\n\r\n    const addBillCategoryFrom = () =>{\r\n        setBillCategoryform([\r\n            ...billCategoryForm,\r\n            billCategoryFormTemplate\r\n        ])\r\n    }\r\n\r\n    const handleRemoveform = (index) =>{\r\n        const filterbillCategoryform = [...billCategoryForm];\r\n        filterbillCategoryform.splice(index, 1);\r\n        \r\n        setBillCategoryform(filterbillCategoryform)\r\n    }\r\n\r\n    // handleSubmit\r\n    const handleSubmit =e=>{\r\n        e.preventDefault()\r\n        setIsOpen(true)\r\n        \r\n        axios.post('/bill/category', body, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setIsOpen(false)\r\n            setOpen(false)\r\n            setBillCategoryform([billCategoryFormTemplate])\r\n            setMessage(result.statusText)\r\n            setSuccess(true)\r\n\r\n        })\r\n        .catch(error =>{\r\n            setTimeout(() =>{\r\n                setError('')\r\n            }, 5000)\r\n            setIsOpen(false)\r\n           if(error) {\r\n              if(error.response.status ==500){\r\n                return  setError('Fields required')\r\n              }\r\n               return  setError(error.response.statusText)\r\n           }\r\n        })\r\n        \r\n    }\r\n\r\n       \r\n    useEffect(() =>{\r\n        \r\n        const fdata = billCategoryForm.map(x =>Object.values(x))\r\n        const findal =[]\r\n        // const data = fdata\r\n        for(let i =0; i< fdata.length; i++){\r\n            const element = fdata[i]\r\n            findal.push(element)\r\n        }\r\n        \r\n        return setBody(findal)\r\n    }, [billCategoryForm])\r\n   \r\n    return (\r\n        <div>\r\n            <AppBackdrop open={isOpen} setOpen={setIsOpen} />\r\n            <AppSnackbar open={success} \r\n                setOpen={setSuccess}\r\n                message={message}\r\n            />\r\n            <MDBModal isOpen={open} centered backdrop={false}>\r\n                <MDBModalHeader>Add Bill Category</MDBModalHeader>\r\n                <MDBModalBody>\r\n                    <table className='table table-hover'>\r\n                      <thead>\r\n                          <th>#</th>\r\n                          <th></th>\r\n                          <th>Name</th>\r\n                          <th>Vendor/Supplier</th>\r\n                          <th></th>\r\n                      </thead>\r\n                      <tbody>\r\n                          {\r\n                              billCategoryForm&&\r\n                              billCategoryForm.map((form, index) =>{\r\n                                  return(\r\n                                      <tr key={index}>\r\n                                        <td> {index+1} </td>\r\n                                        <td\r\n                                            onClick={() =>addBillCategoryFrom()}\r\n                                        >\r\n                                            <span className='fa fa-plus-circle' />\r\n                                        </td>\r\n                                        <td>\r\n                                            <TextField\r\n                                                size='small'\r\n                                                name='name'\r\n                                                label='Name'\r\n                                                required\r\n                                                value={form.name}\r\n                                                variant='outlined'\r\n                                                placeholder='Bill Name'\r\n                                                onChange={e =>handleChange(e, index)}\r\n                                            />\r\n                                        </td>\r\n                                        <td>\r\n                                        <Select\r\n                                            variant='outlined'\r\n                                            name='vendor_FK'\r\n                                            value={form.vendor_FK}\r\n                                            style={{height: '40px', width: '100%'}}\r\n                                            onChange={e =>handleChange(e, index)}\r\n                                        >\r\n                                            <option>Select</option>\r\n                                            <option value={0}>Basic</option>\r\n                                            {\r\n                                                vendors&&\r\n                                                vendors.map((vendor, i) =>{\r\n                                                    const {id, vendor_name} = vendor\r\n                                                    return <option key={i} value={id}> {vendor_name} </option>\r\n                                                })\r\n                                            }\r\n                                        </Select>\r\n                                        </td>\r\n                                        <td \r\n                                            onClick={() =>handleRemoveform(index)}\r\n                                        >\r\n                                            <span className='fa fa-trash' \r\n                                                style={{color: 'red'}}\r\n                                            />\r\n                                        </td>\r\n                                      </tr>\r\n                                  )\r\n                              })\r\n                          }\r\n                      </tbody>\r\n                  </table>\r\n                </MDBModalBody>\r\n                <MDBModalFooter>\r\n                    {\r\n                        Error&&\r\n                        <Typography \r\n                            className='mr-5'\r\n                            variant='h6' color='error'>\r\n                            {Error}\r\n                        </Typography>\r\n                    }\r\n                    <Button\r\n                        variant='contained'\r\n                        onClick={e =>handleSubmit(e)}\r\n                        style={{background: '#2A3F54', \r\n                        color: 'white', marginRight: '25px'}}\r\n                        disabled={Error}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <IconButton color='secondary'\r\n                        onClick={() =>setOpen(!open)}\r\n                    >\r\n                        <Close color='action' />\r\n                    </IconButton>\r\n                </MDBModalFooter>\r\n            </MDBModal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddBillCategories\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setBillCategories, setUser, setVendors} from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport BillFeed from '../components/BillFeed'\r\nimport BillWidget from '../components/BillWidget'\r\nimport AddBillCategories from '../components/global/AddBillCategories'\r\n\r\nconst BillScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n// func\r\n    const getVendors = () =>{\r\n        axios.get('/vendor', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(vendor =>{\r\n            dispatch(setVendors(vendor.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_BillCategories = () =>{\r\n        axios.get('/bill/category', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(category =>{\r\n            dispatch(setBillCategories(category.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Active_User = () =>{\r\n        axios.get('/auth/active', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        getVendors()\r\n        get_Active_User()\r\n        get_Session()\r\n    }, [])\r\n    useEffect(() =>{\r\n        return get_BillCategories()\r\n    }, [isOpen])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <AddBillCategories open={isOpen} setOpen={setIsOpen} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <BillFeed\r\n                setOpen={setOpen}\r\n                isOpen={isOpen}\r\n                setIsOpen={setIsOpen}\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <BillWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BillScreen\r\n","import { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// MUI Stuff\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport More from \"@material-ui/icons/More\";\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\nconst AccountList = ({ index, code, name, active, locked }) => {\r\n  return (\r\n    <Fragment key={index}>\r\n      <tr>\r\n        <td>{index + 1} </td>\r\n        <td> {code} </td>\r\n        <td> {name} </td>\r\n        <td>\r\n          {active == 0 ? (\r\n            <span className=\"fa fa-check-circle fa-1x\"></span>\r\n          ) : (\r\n            <span></span>\r\n          )}\r\n        </td>\r\n        <td>\r\n          {locked == 1 ? (\r\n            <span className=\"fa fa-lock fa-1x\" style={{ color: \"red\" }}></span>\r\n          ) : (\r\n            <span\r\n              className=\"fa fa-unlock-alt fa-1x\"\r\n              style={{ color: \"#1ABB9C\" }}\r\n            ></span>\r\n          )}\r\n        </td>\r\n\r\n        <td\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {locked !== 1 ? (\r\n            <Link to={`/coa/${name}/${code}`} rel=\"noopener noreferrer\">\r\n              <Tooltip title={`View ${name} Register`}>\r\n                <IconButton size=\"small\">\r\n                  {\" \"}\r\n                  <span className=\"fa fa-eye fa-1x p-1\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Link>\r\n          ) : (\r\n            <div>\r\n              <Tooltip title={`${name} is locked can not be view`}>\r\n                <IconButton size=\"small\">\r\n                  {\" \"}\r\n                  <span\r\n                    className=\"fa fa-eye fa-1x p-1\"\r\n                    style={{ color: \"red\" }}\r\n                  />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </div>\r\n          )}\r\n        </td>\r\n      </tr>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AccountList;\r\n","import { useSelector } from \"react-redux\";\r\nimport AppHeader from \"./global/AppHeader\";\r\n// MUI Stuff\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport \"./coaFeed.css\";\r\nimport { PlusOne } from \"@material-ui/icons\";\r\nimport {\r\n  selectAssetAccount,\r\n  selectEquityAccount,\r\n  selectLiabilityAccount,\r\n} from \"../appState/appSlice\";\r\nimport AccountList from \"./global/AccountList\";\r\nconst CoaFeed = ({ isWidget, setIswidget, searchWidget, setSearchWidget }) => {\r\n  const assets = useSelector(selectAssetAccount);\r\n  const equitys = useSelector(selectEquityAccount);\r\n  const liabilitys = useSelector(selectLiabilityAccount);\r\n  return (\r\n    <div className={`${isWidget ? \"isapp__Feed\" : \"app__Feed\"}`}>\r\n      <AppHeader\r\n        title=\"Chart Of Account\"\r\n        search\r\n        searchWidget={searchWidget}\r\n        setSearchWidget={setSearchWidget}\r\n      />\r\n\r\n      <div\r\n        style={{ overflow: \"auto\" }}\r\n        className=\"row align-items-center justify-content-center d-flex m-1\"\r\n      >\r\n        <div className=\"col-lg-12 col-md-12\">\r\n          {/* table */}\r\n          <h3>\r\n            Asset Accounts{\" \"}\r\n            <span>\r\n              <Tooltip title=\"Add New Account\">\r\n                <IconButton\r\n                  color=\"secondary\"\r\n                  onClick={() => setIswidget(!isWidget)}\r\n                >\r\n                  <PlusOne style={{ color: \"#1ABB9C\" }} />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </span>\r\n          </h3>\r\n          <>\r\n            <Container>\r\n              <table className=\" table-hover\" style={{ width: \"100%\" }}>\r\n                <thead>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    #\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Code\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Account Name\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Active\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Lock\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Actions\r\n                  </th>\r\n                </thead>\r\n                <tbody>\r\n                  {assets &&\r\n                    assets.map((asset, index) => {\r\n                      return <AccountList index={index} {...asset} />;\r\n                    })}\r\n                </tbody>\r\n              </table>\r\n              {assets && !assets.length > 0 && (\r\n                <div className=\"alert alert-warning\">\r\n                  <h6>No Asset Accounts Availabe</h6>\r\n                </div>\r\n              )}\r\n            </Container>\r\n          </>\r\n          {/* liability */}\r\n          <h3>\r\n            Liability Accounts{\" \"}\r\n            <span>\r\n              <Tooltip title=\"Add New Account\">\r\n                <IconButton\r\n                  color=\"secondary\"\r\n                  onClick={() => setIswidget(!isWidget)}\r\n                >\r\n                  <PlusOne style={{ color: \"#1ABB9C\" }} />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </span>\r\n          </h3>\r\n          <>\r\n            <Container>\r\n              <table className=\" table-hover\" style={{ width: \"100%\" }}>\r\n                <thead>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    #\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Code\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Account Name\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Active\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Lock\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Actions\r\n                  </th>\r\n                </thead>\r\n                <tbody>\r\n                  {liabilitys &&\r\n                    liabilitys.map((liability, index) => {\r\n                      return <AccountList index={index} {...liability} />;\r\n                    })}\r\n                </tbody>\r\n              </table>\r\n              {liabilitys && !liabilitys.length > 0 && (\r\n                <div className=\"alert alert-warning\">\r\n                  <h6>No Liability Accounts Availabe</h6>\r\n                </div>\r\n              )}\r\n            </Container>\r\n          </>\r\n          {/* Equity */}\r\n          <h3>\r\n            Expense Accounts{\" \"}\r\n            <span>\r\n              <Tooltip title=\"Add New Account\">\r\n                <IconButton\r\n                  color=\"secondary\"\r\n                  onClick={() => setIswidget(!isWidget)}\r\n                >\r\n                  <PlusOne style={{ color: \"#1ABB9C\" }} />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </span>\r\n          </h3>\r\n          <>\r\n            <Container>\r\n              <table className=\" table-hover\" style={{ width: \"100%\" }}>\r\n                <thead>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    #\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Code\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Account Name\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Active\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Lock\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Actions\r\n                  </th>\r\n                </thead>\r\n                <tbody>\r\n                  {equitys &&\r\n                    equitys.map((equity, index) => {\r\n                      return <AccountList index={index} {...equity} />;\r\n                    })}\r\n                </tbody>\r\n              </table>\r\n              {equitys && !equitys.length > 0 && (\r\n                <div className=\"alert alert-warning\">\r\n                  <h6>No Liability Accounts Availabe</h6>\r\n                </div>\r\n              )}\r\n            </Container>\r\n          </>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CoaFeed;\r\n","import Search from \"@material-ui/icons/Search\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectToken } from \"../appState/appSlice\";\r\nimport AccountList from \"./global/AccountList\";\r\n\r\nconst SearchWidget = () => {\r\n  const inpuRef = useRef();\r\n  const [search, setSearch] = useState();\r\n  const [result, setResult] = useState([]);\r\n  const token = useSelector(selectToken);\r\n  const handleSearching = () => {\r\n    if (search && search.trim().length > 0)\r\n      return axios\r\n        .get(`account/search/${search}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then((result) => {\r\n          setResult(result.data);\r\n        })\r\n        .catch((err) => {\r\n          return err;\r\n        });\r\n  };\r\n\r\n  useEffect(() => {\r\n    inpuRef.current.focus();\r\n  }, []);\r\n  useEffect(() => {\r\n    handleSearching();\r\n  }, [search]);\r\n  return (\r\n    <Fragment>\r\n      <section style={styles.section}>\r\n        <div style={styles.inputWrapper} className=\"mt-3\">\r\n          <Search style={styles.icon} />\r\n          <input\r\n            ref={inpuRef}\r\n            type=\"text\"\r\n            name=\"search\"\r\n            id=\"search\"\r\n            autoComplete={false}\r\n            style={styles.input}\r\n            placeholder=\"Search...\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n          />\r\n        </div>\r\n      </section>\r\n      <div style={styles.resultContainer}>\r\n        <table className=\"table-hover\" style={{ width: \"100%\" }}>\r\n          <tbody>\r\n            {result.length > 0 &&\r\n              result.map((resul, index) => {\r\n                if (resul[\"locked\"] !== 1)\r\n                  return <AccountList key={index} index={index} {...resul} />;\r\n              })}\r\n          </tbody>\r\n        </table>\r\n\r\n        {!result.length > 0 && (\r\n          <h6 style={{ alignSelf: \"center\" }}>Search for an account</h6>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  section: {\r\n    margin: 10,\r\n  },\r\n  error: {\r\n    width: \"100%\",\r\n  },\r\n  inputWrapper: {\r\n    margin: 5,\r\n    padding: 6,\r\n    display: \"flex\",\r\n    background: \"white\",\r\n    borderRadius: \"50px\",\r\n    boxSizing: \"border-box\",\r\n    boxShadow: \"0px 2px 3px 0px #ccc\",\r\n  },\r\n  icon: {\r\n    color: \"#EDEDED\",\r\n  },\r\n\r\n  input: {\r\n    flex: 1,\r\n    border: \"none\",\r\n    outline: \"none\",\r\n  },\r\n  resultContainer: {\r\n    flex: 1,\r\n    padding: 5,\r\n    height: \"82vh\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    position: \"sticky\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n};\r\n\r\nexport default SearchWidget;\r\n","import { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport AccountCreationForm from \"./form/AccountCreationForm\";\r\nimport AppWidgetHeader from \"./global/AppWidgetHeader\";\r\nimport SearchWidget from \"./SearchWidget\";\r\n\r\nconst CoaWidget = ({\r\n  open,\r\n  add,\r\n  setOpen,\r\n  isWidget,\r\n  setIswidget,\r\n  searchWidget,\r\n  setSearchWidget,\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {add === false ? (\r\n        <div className=\"app__Widget\">\r\n          <AppWidgetHeader\r\n            isWidget={searchWidget}\r\n            setIswidget={setSearchWidget}\r\n            title=\"Search Account\"\r\n          />\r\n          <section className=\"app__WidgetContainer\">\r\n            <SearchWidget />\r\n          </section>\r\n        </div>\r\n      ) : (\r\n        <div className=\"app__Widget\">\r\n          <AppWidgetHeader\r\n            isWidget={isWidget}\r\n            setIswidget={setIswidget}\r\n            title=\"Create Account\"\r\n          />\r\n          <section className=\"app__WidgetContainer\">\r\n            <AccountCreationForm open={open} setOpen={setOpen} />\r\n          </section>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CoaWidget;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport {\r\n  selectToken,\r\n  setAssetAccount,\r\n  setEquityAccount,\r\n  setLiabilityAccount,\r\n  setUser,\r\n} from \"../appState/appSlice\";\r\nimport CoaFeed from \"../components/CoaFeed\";\r\nimport CoaWidget from \"../components/CoaWidget\";\r\nimport AppBackdrop from \"../components/global/AppBackDrop\";\r\nimport SideBarMenu from \"../components/global/SideBarMenu\";\r\n\r\nconst CoaScreen = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const token = useSelector(selectToken);\r\n  const [open, setOpen] = useState(false);\r\n  const [isWidget, setIswidget] = useState(false);\r\n  const [add, setAdd] = useState(false);\r\n  const [searchWidget, setSearchWidget] = useState(false);\r\n\r\n  // func\r\n  const getAsset = () => {\r\n    axios\r\n      .get(\"/account/asset\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((asset) => {\r\n        dispatch(setAssetAccount(asset.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n  const getLiability = () => {\r\n    axios\r\n      .get(\"/account/liability\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((liability) => {\r\n        dispatch(setLiabilityAccount(liability.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n  const getEquity = () => {\r\n    axios\r\n      .get(\"/account/equity\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((equity) => {\r\n        dispatch(setEquityAccount(equity.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  const get_Session = () => {\r\n    axios\r\n      .get(`/auth/active`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((user) => {\r\n        dispatch(setUser(user.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    if (isWidget === true && searchWidget === false)\r\n      return setSearchWidget(!searchWidget), setAdd(false);\r\n    setSearchWidget(!searchWidget);\r\n    setAdd(false);\r\n    setIswidget(!isWidget);\r\n  };\r\n\r\n  const handleAddd = () => {\r\n    if (isWidget === true && add === false)\r\n      return setAdd(!add), setSearchWidget(false);\r\n\r\n    setAdd(!add);\r\n    setIswidget(!isWidget);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAsset();\r\n    getEquity();\r\n    getLiability();\r\n    get_Session();\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      return history.push(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <AppBackdrop open={open} />\r\n      <SideBarMenu />\r\n      {/* feed */}\r\n      <CoaFeed\r\n        isWidget={isWidget}\r\n        setIswidget={handleAddd}\r\n        searchWidget={searchWidget}\r\n        setSearchWidget={handleSearch}\r\n      />\r\n      {/* widget */}\r\n      {isWidget && (\r\n        <CoaWidget\r\n          open={open}\r\n          add={add}\r\n          setOpen={setOpen}\r\n          isWidget={isWidget}\r\n          setIswidget={handleAddd}\r\n          searchWidget={searchWidget}\r\n          setSearchWidget={handleSearch}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CoaScreen;\r\n","import IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport PlusOne from \"@material-ui/icons/PlusOne\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectCustomers } from \"../appState/appSlice\";\r\nimport AppHeader from \"./global/AppHeader\";\r\nimport CustomerList from \"./global/CustomerList\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst CustomerFeed = ({\r\n  open,\r\n  setOpen,\r\n  isWidget,\r\n  setIswidget,\r\n  setMandate,\r\n  searchWidget,\r\n  setSearchWidget,\r\n}) => {\r\n  const customers = useSelector(selectCustomers);\r\n\r\n  return (\r\n    <div className={`${isWidget ? \"isapp__Feed\" : \"app__Feed\"}`}>\r\n      <AppHeader\r\n        title=\"Customers\"\r\n        search\r\n        searchWidget={searchWidget}\r\n        setSearchWidget={setSearchWidget}\r\n      />\r\n      <div className=\"row align-items-center justify-content-center d-flex m-1\">\r\n        <div className=\"col-lg-12 col-md-12\">\r\n          {/* table */}\r\n          <h3>\r\n            Customer List{\" \"}\r\n            <span>\r\n              <Tooltip title=\"Add Customer\">\r\n                <IconButton\r\n                  color=\"secondary\"\r\n                  onClick={() => setIswidget(!isWidget)}\r\n                >\r\n                  <PlusOne style={{ color: \"#1ABB9C\" }} />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </span>\r\n          </h3>\r\n          <Paper style={{ backgroundColor: \"inherit\" }}>\r\n            <Container className=\"p-3\">\r\n              <table className=\"table-hover\" style={{ width: \"100%\" }}>\r\n                <thead style={{ position: \"sticky\", top: \"60px\", zIndex: 222 }}>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    #\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Name\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Contact\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Email\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Code\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Photo\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Active\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Lock\r\n                  </th>\r\n                  {!isWidget && (\r\n                    <th\r\n                      style={{\r\n                        border: \"1px solid #F7F7F7F7\",\r\n                        textAlign: \"center\",\r\n                      }}\r\n                    >\r\n                      Actions\r\n                    </th>\r\n                  )}\r\n                </thead>\r\n                <tbody>\r\n                  {customers &&\r\n                    customers\r\n\t\t\t\t\t\t\r\n                    .map((customer, index) => {\r\n                      return (\r\n\r\n                        <CustomerList\r\n                          key={index}\r\n                          index={index}\r\n                          {...customer}\r\n                          isWidget={isWidget}\r\n                          open={open}\r\n                          setOpen={setOpen}\r\n                          setMandate={setMandate}\r\n                        />\r\n                      );\r\n                    })}\r\n                </tbody>\r\n              </table>\r\n              {customers && !customers.length > 0 && (\r\n                <div className=\"alert alert-warning\">\r\n                  <h6>No Customer Availabe</h6>\r\n                </div>\r\n              )}\r\n            </Container>\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerFeed;\r\n","import Search from \"@material-ui/icons/Search\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectToken } from \"../appState/appSlice\";\r\nimport CustomerList from \"./global/CustomerList\";\r\n\r\nconst CusSearchWidget = ({ setMandate }) => {\r\n  const inpuRef = useRef();\r\n  const [search, setSearch] = useState();\r\n  const [result, setResult] = useState([]);\r\n  const token = useSelector(selectToken);\r\n  const handleSearching = () => {\r\n    if (search && search.trim().length > 0)\r\n      return axios\r\n        .get(`customer/search/${search}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then((result) => {\r\n          setResult(result.data);\r\n        })\r\n        .catch((err) => {\r\n          return err;\r\n        });\r\n  };\r\n\r\n  useEffect(() => {\r\n    inpuRef.current.focus();\r\n  }, []);\r\n  useEffect(() => {\r\n    handleSearching();\r\n  }, [search]);\r\n  return (\r\n    <Fragment>\r\n      <section style={styles.section}>\r\n        <div style={styles.inputWrapper} className=\"mt-3\">\r\n          <Search style={styles.icon} />\r\n          <input\r\n            ref={inpuRef}\r\n            type=\"text\"\r\n            name=\"search\"\r\n            id=\"search\"\r\n            autoComplete={false}\r\n            style={styles.input}\r\n            placeholder=\"Search...\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n          />\r\n        </div>\r\n      </section>\r\n      <div style={styles.resultContainer}>\r\n        <table className=\"table-hover\" style={{ width: \"100%\" }}>\r\n          <tbody>\r\n            {result !== [] &&\r\n              result.map((resul, index) => {\r\n                return (\r\n                  <CustomerList\r\n                    setMandate={setMandate}\r\n                    search\r\n                    key={index}\r\n                    index={index}\r\n                    {...resul}\r\n                  />\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n\r\n        {!result.length > 0 && (\r\n          <h6 style={{ alignSelf: \"center\" }}>Search for an account</h6>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  section: {\r\n    margin: 10,\r\n  },\r\n  error: {\r\n    width: \"100%\",\r\n  },\r\n  inputWrapper: {\r\n    margin: 5,\r\n    padding: 6,\r\n    display: \"flex\",\r\n    background: \"white\",\r\n    borderRadius: \"50px\",\r\n    boxSizing: \"border-box\",\r\n    boxShadow: \"0px 2px 3px 0px #ccc\",\r\n  },\r\n  icon: {\r\n    color: \"#EDEDED\",\r\n  },\r\n\r\n  input: {\r\n    flex: 1,\r\n    border: \"none\",\r\n    outline: \"none\",\r\n  },\r\n  resultContainer: {\r\n    flex: 1,\r\n    padding: 5,\r\n    height: \"82vh\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    position: \"sticky\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    backgroundColor: \"inherit\",\r\n  },\r\n};\r\n\r\nexport default CusSearchWidget;\r\n","import {\r\n  Button,\r\n  FormGroup,\r\n  FormLabel,\r\n  Grid,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAllStaffs, selectToken } from \"../../appState/appSlice\";\r\n\r\nconst CustomerCreationForm = ({ open, setOpen }) => {\r\n  const token = useSelector(selectToken);\r\n  const [Error, setError] = useState();\r\n  const [Exist, setExist] = useState();\r\n  const RMS = useSelector(selectAllStaffs);\r\n  const [cusData, setCusdata] = useState({\r\n    rm: \"\",\r\n    tx_date: \"\",\r\n    country: \"\",\r\n    phone_no: \"\",\r\n    address_1: \"\",\r\n    occupation: \"\",\r\n    place_work: \"\",\r\n    next_kin_name: \"\",\r\n    customer_sex: \"\",\r\n    customer_name: \"\",\r\n    customer_email: \"\",\r\n    customer_state: \"\",\r\n    postal_address: \"\",\r\n    customer_marital: \"\",\r\n    customer_address: \"\",\r\n    next_kin_addrss: \"\",\r\n    next_kin_relate: \"\",\r\n    business_employer_name: \"\",\r\n  });\r\n  // func\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setCusdata({\r\n      ...cusData,\r\n      [name]: value,\r\n    });\r\n  };\r\n  const isEmpty = () => {\r\n    let data = cusData;\r\n    let error = {};\r\n    Object.keys(data).forEach((v, i) => {\r\n      return !data[v].toString().length > 0\r\n        ? (error[v] = \"Is required\")\r\n        : (error = error);\r\n    });\r\n\r\n    return setError(error), Object.keys(error).length > 0 ? true : false;\r\n  };\r\n\r\n  const handle_Create_Customer = async (e) => {\r\n    await isEmpty();\r\n    e.preventDefault();\r\n\r\n    if (isEmpty()) return;\r\n    setOpen(true);\r\n    axios\r\n      .post(\"/customer\", cusData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        setOpen(false);\r\n        setCusdata({\r\n          rm: \"\",\r\n          tx_date: \"\",\r\n          country: \"\",\r\n          phone_no: \"\",\r\n          address_1: \"\",\r\n          occupation: \"\",\r\n          place_work: \"\",\r\n          next_kin_name: \"\",\r\n          customer_sex: \"\",\r\n          customer_name: \"\",\r\n          customer_email: \"\",\r\n          customer_state: \"\",\r\n          postal_address: \"\",\r\n          customer_marital: \"\",\r\n          customer_address: \"\",\r\n          next_kin_addrss: \"\",\r\n          next_kin_relate: \"\",\r\n          business_employer_name: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setOpen(false);\r\n        if (error.response.status === 400)\r\n          setTimeout(() => {\r\n            setExist(\"\");\r\n          }, 5000);\r\n        return setExist(\r\n          error.response.data.customer_email && error.response.data.phone_no\r\n            ? `Customer exist`\r\n            : `${error.response.statusText} exist`\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <form className=\"mt-3 pl-2 pr-2\" autoCorrect autoComplete={false}>\r\n        <Grid container spacing={1}>\r\n          <Grid item lg={12} md={12}>\r\n            <FormGroup>\r\n              <TextField\r\n                label=\"Date\"\r\n                size=\"small\"\r\n                required\r\n                variant=\"outlined\"\r\n                name=\"tx_date\"\r\n                type=\"date\"\r\n                placeholder=\"Date Created\"\r\n                value={cusData.tx_date}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.tx_date}\r\n                error={Error && Error.tx_date ? true : false}\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={12} md={12}>\r\n            <FormGroup>\r\n              <TextField\r\n                label=\"Name\"\r\n                size=\"small\"\r\n                required\r\n                variant=\"outlined\"\r\n                name=\"customer_name\"\r\n                placeholder=\"Full Name\"\r\n                value={cusData.customer_name}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.customer_name}\r\n                error={Error && Error.customer_name ? true : false}\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={6} md={6}>\r\n            <FormGroup>\r\n              <TextField\r\n                label=\"Contact\"\r\n                size=\"small\"\r\n                required\r\n                variant=\"outlined\"\r\n                name=\"phone_no\"\r\n                placeholder=\"Phone Number\"\r\n                value={cusData.phone_no}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.phone_no}\r\n                error={Error && Error.phone_no ? true : false}\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={6} md={6}>\r\n            <FormGroup>\r\n              <TextField\r\n                label=\"Eamil\"\r\n                size=\"small\"\r\n                required\r\n                variant=\"outlined\"\r\n                name=\"customer_email\"\r\n                placeholder=\"Email Address\"\r\n                value={cusData.customer_email}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.customer_email}\r\n                error={Error && Error.customer_email ? true : false}\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={12} md={12}>\r\n            <FormGroup>\r\n              <TextField\r\n                required\r\n                label=\"Address\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"address_1\"\r\n                placeholder=\"Residential Address\"\r\n                value={cusData.address_1}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.address_1}\r\n                error={Error && Error.address_1 ? true : false}\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={6} md={6}>\r\n            <FormLabel>Gender</FormLabel>\r\n            <FormGroup>\r\n              <Select\r\n                style={{ height: \"40px\" }}\r\n                label=\"Sex\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"customer_sex\"\r\n                value={cusData.customer_sex}\r\n                onChange={(e) => handleChange(e)}\r\n                error={Error && Error.customer_sex}\r\n              >\r\n                <option value>Select</option>\r\n                <option value=\"Male\">Male</option>\r\n                <option value=\"Female\">Female</option>\r\n              </Select>\r\n              {Error && Error.customer_sex && (\r\n                <small\r\n                  style={{ color: \"red\", fontSize: \"13px\", marginLeft: 15 }}\r\n                >\r\n                  {Error.customer_sex}\r\n                </small>\r\n              )}\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={6} md={6}>\r\n            <FormLabel>Marital Status</FormLabel>\r\n            <FormGroup>\r\n              <Select\r\n                style={{ height: \"40px\" }}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"customer_marital\"\r\n                value={cusData.customer_marital}\r\n                onChange={(e) => handleChange(e)}\r\n                error={Error && Error.customer_marital ? true : false}\r\n              >\r\n                <option value>Select</option>\r\n                <option value=\"Single\">Single</option>\r\n                <option value=\"Married\">Married</option>\r\n                <option value=\"Widow\">Widow</option>\r\n                <option value=\"Divorce\">Divorce</option>\r\n              </Select>\r\n              {Error && Error.customer_marital && (\r\n                <small\r\n                  style={{ color: \"red\", fontSize: \"13px\", marginLeft: 15 }}\r\n                >\r\n                  {Error.customer_marital}\r\n                </small>\r\n              )}\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={6} md={6}>\r\n            <FormLabel>Nationality</FormLabel>\r\n            <FormGroup>\r\n              <TextField\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"country\"\r\n                placeholder=\"Country\"\r\n                value={cusData.country}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.country}\r\n                error={Error && Error.country ? true : false}\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={6} md={6}>\r\n            <FormLabel>State of origin?</FormLabel>\r\n            <FormGroup>\r\n              <Select\r\n                style={{ height: \"40px\" }}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"customer_state\"\r\n                value={cusData.customer_state}\r\n                onChange={(e) => handleChange(e)}\r\n                error={Error && Error.customer_state ? true : false}\r\n              >\r\n                <option value=\"Abia\">Abia</option>\r\n                <option value=\"Adamawa\">Adamawa</option>\r\n                <option value=\"Akwa Ibom\">Akwa Ibom</option>\r\n                <option value=\"Anambra\">Anambra</option>\r\n                <option value=\"Bauchi\">Bauchi</option>\r\n                <option value=\"Bayelsa\">Bayelsa</option>\r\n                <option value=\"Benue\">Benue</option>\r\n                <option value=\"Borno\">Borno</option>\r\n                <option value=\"Cross Rive\">Cross River</option>\r\n                <option value=\"Delta\">Delta</option>\r\n                <option value=\"Ebonyi\">Ebonyi</option>\r\n                <option value=\"Edo\">Edo</option>\r\n                <option value=\"Ekiti\">Ekiti</option>\r\n                <option value=\"Enugu\">Enugu</option>\r\n                <option value=\"FCT\">Federal Capital Territory</option>\r\n                <option value=\"Gombe\">Gombe</option>\r\n                <option value=\"Imo\">Imo</option>\r\n                <option value=\"Jigawa\">Jigawa</option>\r\n                <option value=\"Kaduna\">Kaduna</option>\r\n                <option value=\"Kano\">Kano</option>\r\n                <option value=\"Katsina\">Katsina</option>\r\n                <option value=\"Kebbi\">Kebbi</option>\r\n                <option value=\"Kogi\">Kogi</option>\r\n                <option value=\"Kwara\">Kwara</option>\r\n                <option value=\"Lagos\">Lagos</option>\r\n                <option value=\"Nasarawa\">Nasarawa</option>\r\n                <option value=\"Niger\">Niger</option>\r\n                <option value=\"Ogun\">Ogun</option>\r\n                <option value=\"Ondo\">Ondo</option>\r\n                <option value=\"Osun\">Osun</option>\r\n                <option value=\"Oyo\">Oyo</option>\r\n                <option value=\"Plateau\">Plateau</option>\r\n                <option value=\"Rivers\">Rivers</option>\r\n                <option value=\"Sokoto\">Sokoto</option>\r\n                <option value=\"Taraba\">Taraba</option>\r\n                <option value=\"Yobe\">Yobe</option>\r\n                <option value=\"Zamfara\">Zamfara</option>\r\n              </Select>\r\n              {Error && Error.customer_state && (\r\n                <small\r\n                  style={{ color: \"red\", fontSize: \"13px\", marginLeft: 15 }}\r\n                >\r\n                  {Error.customer_state}{\" \"}\r\n                </small>\r\n              )}\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={12} md={12}>\r\n            <FormGroup>\r\n              <TextField\r\n                label=\"Home Address\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"customer_address\"\r\n                value={cusData.customer_address}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.customer_address}\r\n                error={Error && Error.customer_address ? true : false}\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={12} md={12}>\r\n            <FormGroup>\r\n              <TextField\r\n                label=\"Postal Address\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"postal_address\"\r\n                value={cusData.postal_address}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.postal_address}\r\n                error={Error && Error.postal_address ? true : false}\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={6} md={6}>\r\n            <FormGroup>\r\n              <TextField\r\n                label=\"Occupation\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"occupation\"\r\n                value={cusData.occupation}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.occupation}\r\n                error={Error && Error.occupation ? true : false}\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={6} md={6}>\r\n            <FormGroup>\r\n              <TextField\r\n                label=\"Place of work\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"place_work\"\r\n                value={cusData.place_work}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.place_work}\r\n                error={Error && Error.place_work ? true : false}\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={12} md={12}>\r\n            <FormGroup>\r\n              <TextField\r\n                label={`Business/Employer's Name`}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"business_employer_name\"\r\n                value={cusData.business_employer_name}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.business_employer_name}\r\n                error={Error && Error.business_employer_name ? true : false}\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={12} md={12}>\r\n            <FormLabel>Relationship Mannger (RM)</FormLabel>\r\n            <FormGroup>\r\n              <Select\r\n                style={{ height: \"40px\" }}\r\n                label=\"RM\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"rm\"\r\n                value={cusData.rm}\r\n                onChange={(e) => handleChange(e)}\r\n                error={Error && Error.rm ? true : false}\r\n              >\r\n                {RMS &&\r\n                  RMS.map((rm, index) => {\r\n                    const { id, first_name, last_name } = rm;\r\n\r\n                    return (\r\n                      <option key={index} value={id}>\r\n                        {first_name + \" \" + last_name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </Select>\r\n              {Error && Error.rm && (\r\n                <small\r\n                  style={{ color: \"red\", fontSize: \"13px\", marginLeft: 15 }}\r\n                >\r\n                  {Error.rm}\r\n                </small>\r\n              )}\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={12} md={12}>\r\n            <Typography variant=\"h6\">Next of Kin Details</Typography>\r\n          </Grid>\r\n          <Grid item lg={6} md={6}>\r\n            <FormGroup>\r\n              <TextField\r\n                label=\"Name\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"next_kin_name\"\r\n                value={cusData.next_kin_name}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.next_kin_name}\r\n                error={Error && Error.next_kin_name ? true : false}\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={6} md={6}>\r\n            <FormGroup>\r\n              <TextField\r\n                label=\"Address\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"next_kin_addrss\"\r\n                value={cusData.next_kin_addrss}\r\n                onChange={(e) => handleChange(e)}\r\n                error={Error && Error.next_kin_addrss ? true : false}\r\n                helperText={Error && Error.next_kin_addrss}\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={12} md={12}>\r\n            <FormLabel>Relationship</FormLabel>\r\n            <FormGroup>\r\n              <Select\r\n                style={{ height: \"40px\" }}\r\n                label=\"Relationship\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"next_kin_relate\"\r\n                value={cusData.next_kin_relate}\r\n                onChange={(e) => handleChange(e)}\r\n                error={Error && Error.next_kin_relate ? true : false}\r\n              >\r\n                <option value>Related ?</option>\r\n                <option value=\"Son\">Son</option>\r\n                <option value=\"Sister\">Sister</option>\r\n                <option value=\"Brother\">Brother</option>\r\n                <option value=\"Aunt\">Aunt</option>\r\n                <option value=\"Uncle\">Uncle</option>\r\n                <option value=\"Wife\">Wife</option>\r\n                <option value=\"Husband\">Husband</option>\r\n                <option value=\"Daughter\">Daughter</option>\r\n                <option value=\"Father\">Father</option>\r\n                <option value=\"Mother\">Mother</option>\r\n              </Select>\r\n              {Error && (\r\n                <small\r\n                  style={{ color: \"red\", fontSize: \"13px\", marginLeft: 15 }}\r\n                >\r\n                  {Error.next_kin_relate}\r\n                </small>\r\n              )}\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={12} md={12}>\r\n            {Exist && Exist && <Typography color=\"error\">{Exist}</Typography>}\r\n            <Button\r\n              className=\"mb-4\"\r\n              onClick={(e) => handle_Create_Customer(e)}\r\n              color=\"default\"\r\n              variant=\"contained\"\r\n              style={{ color: \"white\", background: \"#2A3F54\", width: \"100%\" }}\r\n            >\r\n              Create\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CustomerCreationForm;\r\n","import React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport CusSearchWidget from \"./CusSearchWidget\";\r\nimport CustomerCreationForm from \"./form/CustomerCreationForm\";\r\nimport AppWidgetHeader from \"./global/AppWidgetHeader\";\r\n\r\nconst CustomerWidget = ({\r\n  open,\r\n  add,\r\n  setOpen,\r\n  mandate,\r\n  setMandate,\r\n  isWidget,\r\n  setIswidget,\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {add === false ? (\r\n        <div className=\"app__Widget\">\r\n          <AppWidgetHeader\r\n            isWidget={isWidget}\r\n            setIswidget={setIswidget}\r\n            title=\"Search Customer\"\r\n          />\r\n\r\n          <CusSearchWidget mandate={mandate} setMandate={setMandate} />\r\n        </div>\r\n      ) : (\r\n        <div className=\"app__Widget\">\r\n          <AppWidgetHeader\r\n            isWidget={isWidget}\r\n            setIswidget={setIswidget}\r\n            title=\"Create Customer\"\r\n          />\r\n\r\n          <CustomerCreationForm open={open} setOpen={setOpen} />\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CustomerWidget;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport {\r\n  selectToken,\r\n  setAllStaffs,\r\n  setCustomers,\r\n  setUser,\r\n} from \"../appState/appSlice\";\r\nimport CustomerFeed from \"../components/CustomerFeed\";\r\nimport CustomerWidget from \"../components/CustomerWidget\";\r\nimport AppBackdrop from \"../components/global/AppBackDrop\";\r\nimport SideBarMenu from \"../components/global/SideBarMenu\";\r\nimport Mandate from \"../components/Mandate\";\r\n\r\nconst CustomerScreen = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const token = useSelector(selectToken);\r\n  const [open, setOpen] = useState(false);\r\n  const [isWidget, setIswidget] = useState(false);\r\n  const [add, setAdd] = useState(false);\r\n  const [searchWidget, setSearchWidget] = useState(false);\r\n  const [mandate, setMandate] = useState(false);\r\n  // func\r\n  const getCustomers = () => {\r\n    axios\r\n      .get(\"/customer\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((asset) => {\r\n        dispatch(setCustomers(asset.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  const get_Session = () => {\r\n    axios\r\n      .get(`/auth/active`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((user) => {\r\n        dispatch(setUser(user.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n  const get_Staffs = () => {\r\n    axios\r\n      .get(`/auth`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((staffs) => {\r\n        dispatch(setAllStaffs(staffs.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    if (isWidget === true && searchWidget === false)\r\n      return setSearchWidget(!searchWidget), setAdd(false);\r\n    setSearchWidget(!searchWidget);\r\n    setAdd(false);\r\n    setIswidget(!isWidget);\r\n  };\r\n\r\n  const handleAddd = () => {\r\n    if (isWidget === true && add === false)\r\n      return setAdd(!add), setSearchWidget(false);\r\n\r\n    setAdd(!add);\r\n    setIswidget(!isWidget);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      return history.push(\"/\");\r\n    }\r\n    getCustomers();\r\n    get_Session();\r\n    get_Staffs();\r\n  }, [open]);\r\n  return (\r\n    <div className=\"app\">\r\n      <AppBackdrop open={open} />\r\n      <Mandate\r\n        open={open}\r\n        setOpen={setOpen}\r\n        mandate={mandate}\r\n        setMandate={setMandate}\r\n        url={\r\n          mandate &&\r\n          `/customer/avatar/${mandate.split(\" \")[0]}/${mandate.split(\" \")[1]}`\r\n        }\r\n      />\r\n      <SideBarMenu />\r\n      {/* feed */}\r\n      <CustomerFeed\r\n        open={open}\r\n        setOpen={setOpen}\r\n        isWidget={isWidget}\r\n        setIswidget={handleAddd}\r\n        setMandate={setMandate}\r\n        searchWidget={searchWidget}\r\n        setSearchWidget={handleSearch}\r\n      />\r\n      {/* widget */}\r\n      {isWidget && (\r\n        <CustomerWidget\r\n          open={open}\r\n          add={add}\r\n          setOpen={setOpen}\r\n          isWidget={isWidget}\r\n          setMandate={setMandate}\r\n          setIswidget={handleAddd}\r\n          searchWidget={searchWidget}\r\n          setSearchWidget={handleSearch}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerScreen;\r\n","import { Button, Container, FormLabel, Grid, IconButton, Paper, Select, TextField, Typography } from '@material-ui/core'\r\nimport { Delete, FileCopy, PlusOne, PlusOneOutlined, PlusOneRounded } from '@material-ui/icons'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectPropServices, selectCustomers, selectToken } from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\nimport AppSnackbar from './global/AppSnackbar'\r\n\r\nconst EstimateFeed = ({ setOpen, isWidget, setIswidget }) => {\r\n    const token = useSelector(selectToken)\r\n    const [success, setSuccess] = useState(false)\r\n    const [message, setMessage] = useState()\r\n    const pss = useSelector(selectPropServices)\r\n    const customers = useSelector(selectCustomers)\r\n    const estimateFormTemplate = {pro_service:'', description: '', qty: ''};\r\n    const [estimateForm, setEstimateform] = useState([estimateFormTemplate])\r\n    const [data, setData ] = useState({\r\n        customer_FK: '', \r\n        estimate_date: '',\r\n        exp_date: '', \r\n        total: '',\r\n        status: '',\r\n        VALUES: '',\r\n        uuid:''\r\n    })\r\n   \r\n    // func\r\n    const handleSetPostData = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n    } \r\n    // func\r\n    const addEstimateFrom = () =>{\r\n        setEstimateform([\r\n            ...estimateForm,\r\n            estimateFormTemplate\r\n        ])\r\n    }\r\n    const handleChange = (e, index) =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n\r\n        const updatedestimateform = estimateForm.map((jef, i) => index == i ?\r\n        Object.assign(jef, {[name]: value, 'estimate_ID': data.uuid, 'createdAt': data.estimate_date }): jef);\r\n        setEstimateform(updatedestimateform)\r\n\r\n        if(name =='qty') {\r\n            const updatedestimateform = estimateForm.map((jef, i) => index == i ?\r\n            Object.assign(jef, {'amount': value * jef.rate }): jef);\r\n        }\r\n      \r\n        if(name =='pro_service') {\r\n            const selectedPS = pss.filter(ps => ps.id ==parseInt(value))\r\n            // console.log(selectedPS[0].description)\r\n            const updatedestimateform = estimateForm.map((jef, i) => index == i ?\r\n            Object.assign(jef, {'description': selectedPS[0].description, 'rate': +selectedPS[0].sale_price }): jef);\r\n        }\r\n    }\r\n    const handleRemoveestimateform = (index) =>{\r\n        const filterestimateform = [...estimateForm];\r\n        filterestimateform.splice(index, 1);\r\n        \r\n        setEstimateform(filterestimateform)\r\n    }\r\n    // func\r\n    const calcuAmt = (data) =>{\r\n       \r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n// handle submit\r\n    const handleSubmit = e =>{\r\n        \r\n        e.preventDefault()\r\n        setOpen(true)\r\n        axios.post('/estimate',data, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setOpen(false)\r\n            setSuccess(true)\r\n            setMessage(result.data.message)\r\n            setData({\r\n                customer_FK: '', \r\n                estimate_date: '',\r\n                exp_date: '', \r\n                total: '',\r\n                status: '',\r\n                VALUES: '',\r\n                uuid:''\r\n            })\r\n          \r\n            setEstimateform([\r\n                estimateFormTemplate\r\n            ])\r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            if(error) {\r\n                return error.response.data\r\n            }\r\n        })\r\n        // console.log(data)\r\n    }\r\n   \r\n    useEffect(() =>{\r\n        \r\n        const fdata = estimateForm.map(x =>Object.values(x))\r\n        const findal =[]\r\n        // const data = fdata\r\n        for(let i =0; i< fdata.length; i++){\r\n            const element = fdata[i]\r\n            findal.push(element)\r\n        }\r\n        \r\n         setData({\r\n            ...data,\r\n            VALUES: findal\r\n        })\r\n    }, [estimateForm])\r\n   \r\n    useEffect(() =>{\r\n        setData({\r\n            ...data,\r\n            total: calcuAmt(estimateForm)\r\n        })\r\n    }, [data.VALUES])\r\n    useEffect(() =>{\r\n        setData({\r\n            ...data,\r\n            uuid:  new Date().getSeconds().toLocaleString() + new Date().getMinutes().toLocaleString()+new Date().getMilliseconds()\r\n        })\r\n    }, [success])\r\n    return (\r\n        <div className={`${isWidget? 'isapp__Feed': 'app__Feed'}`}> \r\n            <AppSnackbar open={success} setOpen={setSuccess} message={message} />\r\n           <AppHeader title='Estimate' />\r\n           <div className=\"row align-items-center justify-content-center d-flex m-1\" >\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                    {/* table */}\r\n                    <h3>Estimate Entry<span> \r\n                        <IconButton color='secondary'\r\n                            onClick={() =>setIswidget(!isWidget)}\r\n                        >\r\n                        <FileCopy style={{ color: '#1ABB9C'}} />\r\n                        </IconButton></span></h3> \r\n                        {/* to do make it a component */}\r\n                        <Grid container spacing={2} className='p-3'>\r\n                            <Grid item lg={3} md={3}>\r\n                                <FormLabel>Customer</FormLabel>\r\n                                <select\r\n                                    name='customer_FK'\r\n                                    value={data.customer_FK}\r\n                                    placeholder='Customer'\r\n                                    style={{border: 'none'}}\r\n                                    onChange={e =>handleSetPostData(e)}\r\n                                >\r\n                                    <option value=''></option>\r\n                                    {\r\n                                        customers&&\r\n                                        customers.map((cus, index) =>{\r\n                                            const{id, customer_name} = cus\r\n                                            return <option value={id} key={index} >{customer_name} {id}</option>\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </Grid>\r\n                            \r\n                            <Grid item lg={2} md={2}>\r\n                                <FormLabel style={{float: 'center'}}>Status</FormLabel><br />\r\n                                <select\r\n                                    name='status'\r\n                                    value={data.status}\r\n                                    style={{ background: 'inherit',\r\n                                         border: 'none'\r\n                                    }}\r\n                                    onChange={e =>handleSetPostData(e)}\r\n                                >\r\n                                    <option value=''></option>\r\n                                    <option value='1'>Received</option>\r\n                                    <option value='0'>Pending</option>\r\n                                </select>\r\n                            </Grid>\r\n\r\n                            <Grid item lg={7} md={7}\r\n                                style={{display: 'flex', \r\n                                justifyContent: 'flex-end', alignItems: 'flex-end', flexDirection: 'column'}}\r\n                            >\r\n                                <FormLabel>Amount</FormLabel>\r\n                                <Typography variant='h5'>\r\n                                    <s>N</s>: {calcuAmt(estimateForm)}\r\n                                </Typography>\r\n                            </Grid>\r\n                                \r\n                            <Grid item lg={3} md={3}>\r\n                                <FormLabel>Estimate Date</FormLabel>\r\n                                <input\r\n                                    name='estimate_date'\r\n                                    type='date'\r\n                                    value={data.estimate_date}\r\n                                    onChange={e =>handleSetPostData(e)}\r\n                                    style={{width: '100%', outline: 'none', border: 'none',\r\n                                    height: '30px'}}\r\n                                />\r\n                            </Grid>\r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Expiration Date</FormLabel>\r\n                                    <input\r\n                                        name='exp_date'\r\n                                        type='date'\r\n                                        value={data.exp_date}\r\n                                        onChange={e =>handleSetPostData(e)}\r\n                                        style={{width: '100%', outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                    />\r\n                                </Grid>\r\n                            \r\n                        </Grid>\r\n                        <h5>\r\n                            Details\r\n                        </h5>\r\n                    <Paper>\r\n                        <Container className='p-3'>\r\n                        <table className=\"table-small table-hover table-bordered\" style={{width: '100%'}}>\r\n                            <thead>\r\n                                \r\n                                <th>#</th>\r\n                                <th> {' '} </th>\r\n                                <th>Property/Service</th>\r\n                                <th>Description</th>\r\n                                <th>QTY</th>\r\n                                <th>Rate</th>\r\n                                <th>Amount</th>\r\n                                <th></th>\r\n                            </thead>\r\n                            <tbody id='je__Table'>\r\n                                {\r\n                                    estimateForm.map((jef, index) =>(\r\n                                        <tr>\r\n                                            <td>{index+1} </td>\r\n                                            <td\r\n                                                    onClick={() =>addEstimateFrom()}\r\n                                                >\r\n                                                     <span className='fa fa-plus-circle fa-1x'\r\n                                                        style={{color: '#20c997'}}\r\n                                                    />\r\n                                            </td>\r\n                                            <td>\r\n                                                <select\r\n                                                    name='pro_service'\r\n                                                    value={jef.pro_service}\r\n                                                    placeholder='Account'\r\n                                                    style={{border: 'none'}}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                >\r\n                                                    <option value=''></option>\r\n                                                    {\r\n                                                        pss&&\r\n                                                        pss.map((ps, index) =>{\r\n                                                            const { id, name, ps_type } = ps\r\n                                                            return <option value={id} key={index} >{`${name}: ${ps_type}`}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </select>\r\n                                            </td>\r\n                                            \r\n                                            <td>\r\n                                                <input\r\n                                                    name='description'\r\n                                                    placeholder='Description'\r\n                                                    value={jef.description}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                            <td>\r\n                                                <input\r\n                                                    name='qty'\r\n                                                    type='number'\r\n                                                    placeholder='Quantity'\r\n                                                    value={jef.qty}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                            <td>\r\n                                                <input\r\n                                                    name='rate'\r\n                                                    type='number'\r\n                                                    placeholder='Rate'\r\n                                                    value={jef.rate}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                            <td>\r\n                                                {/* <input\r\n                                                    name='amount'\r\n                                                    type='number'\r\n                                                    readOnly\r\n                                                    placeholder='Amount'\r\n                                                    value={}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                /> */}\r\n                                               { jef.rate&&jef.qty&&jef.rate*jef.qty }\r\n                                            </td>\r\n                     \r\n                                            <td\r\n                                                onClick={() =>handleRemoveestimateform(index)}\r\n                                            >\r\n                                                    <span className='fa fa-trash'\r\n                                                        style={{color: 'red'}}\r\n                                                    ></span>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            {/*                                 \r\n                                {\r\n                                   customers&&\r\n                                   customers.map((customer, index) =>{\r\n                                        return <CustomerList\r\n                                            index={index}\r\n                                            {...customer}\r\n                                            isWidget={isWidget}\r\n                                        />\r\n                                    })\r\n\r\n                                } */}\r\n                                    \r\n                            </tbody>\r\n                        </table>\r\n                        {/* {customers&& !customers.length>0&&\r\n                            <div className=\"alert alert-warning\">\r\n                            <h6>No Asset Accounts Availabe</h6>\r\n                            </div>\r\n                        } */}\r\n                        <Button\r\n                            className='m-3'\r\n                            variant='contained'\r\n                            onClick={e =>handleSubmit(e)}\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >submit</Button>\r\n                        </Container>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EstimateFeed\r\n","import { Paper } from '@material-ui/core'\r\nimport React from 'react'\r\nimport AccountCreationForm from './form/AccountCreationForm'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst EstimateWidget = ({ open, setOpen, isWidget, setIswidget }) => {\r\n    return (\r\n        <div className='app__Widget'>\r\n            <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Estimate List' \r\n            />\r\n            <section className='app__WidgetContainer'>\r\n                {/* <AccountCreationForm\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                /> */}\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EstimateWidget\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setCustomers, setPropServices, setUser } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport EstimateFeed from '../components/EstimateFeed'\r\nimport EstimateWidget from '../components/EstimateWidget'\r\n\r\nconst EstimateScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n\r\n    // func\r\n    const get_AllCustomers =() =>{\r\n        axios.get('/customer', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(customers =>{\r\n            dispatch(setCustomers(customers.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const getProp_Services = () =>{\r\n        axios.get('/prop_service', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(ps =>{\r\n            dispatch(setPropServices(ps.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        get_AllCustomers()\r\n        getProp_Services()\r\n        get_Session()\r\n    }, [])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <EstimateFeed\r\n                open={open}\r\n                setOpen={setOpen}\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <EstimateWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EstimateScreen\r\n","import axios from \"axios\";\r\n// MUI Stuff\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ToolTip from \"@material-ui/core/ToolTip\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// Icons\r\nimport FileCopy from \"@material-ui/icons/FileCopy\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectAccounts,\r\n  selectExpenseCategories,\r\n  selectToken,\r\n} from \"../appState/appSlice\";\r\nimport AppHeader from \"./global/AppHeader\";\r\nimport AppSnackbar from \"./global/AppSnackbar\";\r\n\r\nconst ExpenseFeed = ({ setOpen, isWidget, setIswidget }) => {\r\n  const token = useSelector(selectToken);\r\n  const accounts = useSelector(selectAccounts);\r\n  const [success, setSuccess] = useState(false);\r\n  const [message, setMessage] = useState();\r\n  const [add, setAdd] = useState(false);\r\n  const [error, setError] = useState();\r\n  const [body, setbody] = useState({\r\n    name: \"\",\r\n  });\r\n  const expenseCategories = useSelector(selectExpenseCategories);\r\n  const expenseFormTemplate = { account: \"\", amount: \"\", description: \"\" };\r\n  const [expenseForm, setExpenseform] = useState([expenseFormTemplate]);\r\n  const [data, setData] = useState({\r\n    expense_date: \"\",\r\n    payee_account: \"\",\r\n    payment_account: \"\",\r\n    pay_method: \"\",\r\n    description: \"\",\r\n    tx_date: \"\",\r\n    VALUES: [],\r\n    uuid: \"\",\r\n    total: \"\",\r\n  });\r\n  // func\r\n  const addExpenseFrom = () => {\r\n    setExpenseform([...expenseForm, expenseFormTemplate]);\r\n  };\r\n  const handleChange = (e, index) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    const updatedexpenseform = expenseForm.map((jef, i) =>\r\n      index == i ? Object.assign(jef, { [name]: value }) : jef\r\n    );\r\n    setExpenseform(updatedexpenseform);\r\n    if (name == \"amount\") {\r\n      const updatedexpenseform = expenseForm.map((jef, i) =>\r\n        index == i\r\n          ? Object.assign(jef, {\r\n              expense_ID: data.uuid,\r\n              createdAt: data.expense_date,\r\n            })\r\n          : jef\r\n      );\r\n      setData({\r\n        ...data,\r\n        tx_date: data.expense_date,\r\n      });\r\n    }\r\n    if (name == \"description\")\r\n      return setData({\r\n        ...data,\r\n        description: value,\r\n      });\r\n  };\r\n  const handleRemoveexpenseform = (index) => {\r\n    const filterexpenseform = [...expenseForm];\r\n    filterexpenseform.splice(index, 1);\r\n\r\n    setExpenseform(filterexpenseform);\r\n  };\r\n\r\n  const calcuAmt = (data) => {\r\n    const total = data && data.reduce((a, v) => +v.amount + a, 0);\r\n    return total;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fdata = expenseForm.map((x) => Object.values(x));\r\n    const findal = [];\r\n    // const data = fdata\r\n    for (let i = 0; i < fdata.length; i++) {\r\n      const element = fdata[i];\r\n      findal.push(element);\r\n    }\r\n\r\n    setData({\r\n      ...data,\r\n      VALUES: findal,\r\n    });\r\n  }, [expenseForm]);\r\n\r\n  useEffect(() => {\r\n    setData({\r\n      ...data,\r\n      total: calcuAmt(expenseForm),\r\n    });\r\n  }, [data.VALUES]);\r\n\r\n  // add expense category\r\n  const handle_Add_ExpCategory = (e) => {\r\n    setOpen(true);\r\n    axios\r\n      .post(\"/expense/category\", body, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        setOpen(false);\r\n        setMessage(result.data.message);\r\n        setSuccess(true);\r\n        setAdd(!add);\r\n      })\r\n      .catch((error) => {\r\n        setOpen(false);\r\n        if (error) {\r\n          return error.response.statusText;\r\n        }\r\n      });\r\n  };\r\n  //   handle error / post\r\n  const isDisable = (Form) => {\r\n    const error =\r\n      Form &&\r\n      Form.map((exform) =>\r\n        !exform[\"account\"].length > 0 ||\r\n        !exform[\"amount\"].length > 0 ||\r\n        !exform[\"description\"].length > 0\r\n          ? true\r\n          : false\r\n      );\r\n\r\n    const filterError = error && error.includes(true) ? true : false;\r\n    // console.log(filterError);\r\n    return filterError;\r\n  };\r\n\r\n  const isEmpty = (input) => {\r\n    return data[input] === \"\" ? true : false;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const err = await Object.keys(data).map((key) => isEmpty(key));\r\n    const isError = err.includes(true);\r\n    if (isError === true) {\r\n      return setError(\"All field are required\");\r\n    } else {\r\n      setError(\"\");\r\n      setOpen(true);\r\n      axios\r\n        .post(\"/expense\", data, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then((result) => {\r\n          setOpen(false);\r\n          setMessage(result.data.message);\r\n          setExpenseform([expenseFormTemplate]);\r\n          setSuccess(true);\r\n          setData({\r\n            expense_date: \"\",\r\n            payee_account: \"\",\r\n            payment_account: \"\",\r\n            pay_method: \"\",\r\n            description: \"\",\r\n            tx_date: \"\",\r\n            VALUES: [],\r\n            uuid: \"\",\r\n            total: \"\",\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setOpen(false);\r\n          if (error) {\r\n            return error.response.statusText;\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setData({\r\n      ...data,\r\n      uuid:\r\n        new Date().getSeconds().toLocaleString() +\r\n        new Date().getMinutes().toLocaleString() +\r\n        new Date().getMilliseconds(),\r\n    });\r\n  }, [success]);\r\n  return (\r\n    <div className={`${isWidget ? \"isapp__Feed\" : \"app__Feed\"}`}>\r\n      <AppSnackbar setOpen={setOpen} open={success} message={message} />\r\n      <AppHeader title=\"Expense\" />\r\n      <div className=\"row align-items-center justify-content-center d-flex m-1\">\r\n        <div className=\"col-lg-12 col-md-12\">\r\n          {/* table */}\r\n          <h3>\r\n            Expense Entry\r\n            <span>\r\n              <ToolTip title=\"Expense List\">\r\n                <IconButton\r\n                  color=\"secondary\"\r\n                  onClick={() => setIswidget(!isWidget)}\r\n                >\r\n                  <FileCopy style={{ color: \"#1ABB9C\" }} />\r\n                </IconButton>\r\n              </ToolTip>\r\n            </span>\r\n          </h3>\r\n          {/* to do make it a component */}\r\n          <Grid container spacing={2} className=\"p-3\">\r\n            <Grid item lg={4} md={4}>\r\n              <FormLabel>Account Receivable</FormLabel>\r\n              <select\r\n                name=\"payee_account\"\r\n                placeholder=\"Account\"\r\n                style={{ border: \"none\" }}\r\n                value={data.payee_account}\r\n                onChange={(e) =>\r\n                  setData({\r\n                    ...data,\r\n                    payee_account: e.target.value,\r\n                  })\r\n                }\r\n              >\r\n                <option value=\"\"></option>\r\n                {accounts &&\r\n                  accounts.map((acc, index) => {\r\n                    const { name, code, balance_type } = acc;\r\n                    return (\r\n                      <option\r\n                        value={code}\r\n                        key={index}\r\n                      >{`${name} (${balance_type})`}</option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </Grid>\r\n            <Grid item lg={4} md={4}>\r\n              <FormLabel>Account Payable</FormLabel>\r\n              <select\r\n                name=\"payment_account\"\r\n                placeholder=\"Account\"\r\n                style={{ border: \"none\" }}\r\n                value={data.payment_account}\r\n                onChange={(e) =>\r\n                  setData({\r\n                    ...data,\r\n                    payment_account: e.target.value,\r\n                  })\r\n                }\r\n              >\r\n                <option value=\"\"></option>\r\n                {accounts &&\r\n                  accounts.map((acc, index) => {\r\n                    const { code, name, balance_type } = acc;\r\n                    return (\r\n                      <option\r\n                        value={code}\r\n                        key={index}\r\n                      >{`${name} (${balance_type})`}</option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              lg={4}\r\n              md={4}\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n                alignItems: \"flex-end\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <FormLabel>Amount</FormLabel>\r\n              <Typography variant=\"h5\">\r\n                <s>N</s>:{\" \"}\r\n                {expenseForm && calcuAmt(expenseForm).toLocaleString()}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item lg={4} md={4}>\r\n              <FormLabel>Payment Date</FormLabel>\r\n              <input\r\n                name=\"expense_date\"\r\n                type=\"date\"\r\n                value={data.expense_date}\r\n                onChange={(e) =>\r\n                  setData({\r\n                    ...data,\r\n                    expense_date: e.target.value,\r\n                  })\r\n                }\r\n                style={{\r\n                  width: \"100%\",\r\n                  outline: \"none\",\r\n                  border: \"none\",\r\n                  height: \"30px\",\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={4} md={4}>\r\n              <FormLabel>Payment Method</FormLabel>\r\n              <select\r\n                name=\"pay_method\"\r\n                value={data.pay_method}\r\n                onChange={(e) =>\r\n                  setData({\r\n                    ...data,\r\n                    pay_method: e.target.value,\r\n                  })\r\n                }\r\n                style={{\r\n                  width: \"100%\",\r\n                  outline: \"none\",\r\n                  border: \"none\",\r\n                  height: \"30px\",\r\n                }}\r\n              >\r\n                <option></option>\r\n                <option value=\"cash\">Cash</option>\r\n                <option value=\"cheque\">Cheque</option>\r\n                <option value=\"transfer\">Transfer</option>\r\n              </select>\r\n            </Grid>\r\n          </Grid>\r\n          <h5>Details</h5>\r\n          <Paper style={{ backgroundColor: \"inherit\" }}>\r\n            <Container>\r\n              <table\r\n                className=\"table-small table-hover table-bordered\"\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <thead>\r\n                  <th>#</th>\r\n                  <th> </th>\r\n                  <th>\r\n                    Category\r\n                    <span>\r\n                      <ToolTip title=\"Add New\">\r\n                        <IconButton size=\"small\" onClick={() => setAdd(!add)}>\r\n                          <span\r\n                            className=\"fa fa-plus-circle\"\r\n                            style={{ color: \"#20c997\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </ToolTip>\r\n                    </span>\r\n                    {add && (\r\n                      <div style={{ display: \"flex\" }}>\r\n                        <TextField\r\n                          size=\"small\"\r\n                          label=\"Name\"\r\n                          value={body.name}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"Category Name\"\r\n                          onChange={(e) =>\r\n                            setbody({\r\n                              ...body,\r\n                              name: e.target.value,\r\n                            })\r\n                          }\r\n                        />\r\n                        <Button\r\n                          onClick={(e) => handle_Add_ExpCategory(e)}\r\n                          variant=\"contained\"\r\n                          size=\"small\"\r\n                          style={{ background: \"#2A3F54\", color: \"white\" }}\r\n                        >\r\n                          Save\r\n                        </Button>\r\n                      </div>\r\n                    )}\r\n                  </th>\r\n                  <th>Amount</th>\r\n                  <th>Description</th>\r\n\r\n                  <th></th>\r\n                </thead>\r\n                <tbody id=\"je__Table\">\r\n                  {expenseForm.map((jef, index) => (\r\n                    <tr>\r\n                      <td>{index + 1} </td>\r\n                      <td onClick={() => addExpenseFrom()}>\r\n                        <ToolTip title=\"Add New Row\">\r\n                          <span\r\n                            className=\"fa fa-plus-circle fa-1x\"\r\n                            style={{ color: \"#20c997\" }}\r\n                          />\r\n                        </ToolTip>\r\n                      </td>\r\n                      <td>\r\n                        <select\r\n                          name=\"account\"\r\n                          value={jef.account}\r\n                          placeholder=\"Account\"\r\n                          style={{ border: \"none\" }}\r\n                          onChange={(e) => handleChange(e, index)}\r\n                        >\r\n                          <option value=\"\"></option>\r\n                          {expenseCategories &&\r\n                            expenseCategories.map((exps, index) => {\r\n                              const { id, name } = exps;\r\n                              return (\r\n                                <option\r\n                                  value={id}\r\n                                  key={index}\r\n                                >{`${name}`}</option>\r\n                              );\r\n                            })}\r\n                        </select>\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          name=\"amount\"\r\n                          type=\"number\"\r\n                          placeholder=\"Amount\"\r\n                          value={jef.amount}\r\n                          onChange={(e) => handleChange(e, index)}\r\n                        />\r\n                      </td>\r\n\r\n                      <td>\r\n                        <input\r\n                          name=\"description\"\r\n                          placeholder=\"Description\"\r\n                          value={jef.description}\r\n                          onChange={(e) => handleChange(e, index)}\r\n                        />\r\n                      </td>\r\n\r\n                      <td onClick={() => handleRemoveexpenseform(index)}>\r\n                        <ToolTip title=\"Delete Row\">\r\n                          <span\r\n                            className=\"fa fa-trash\"\r\n                            style={{ color: \"red\" }}\r\n                          ></span>\r\n                        </ToolTip>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-end\",\r\n                }}\r\n              >\r\n                {error && (\r\n                  <Button\r\n                    size=\"small\"\r\n                    variant=\"contained\"\r\n                    style={{ color: \"white\", background: \"red\" }}\r\n                  >\r\n                    {error}\r\n                  </Button>\r\n                )}\r\n                <Button\r\n                  className=\"m-3\"\r\n                  variant=\"contained\"\r\n                  disabled={isDisable(expenseForm)}\r\n                  onClick={(e) => handleSubmit(e)}\r\n                  style={{ background: \"#2A3F54\", color: \"white\" }}\r\n                >\r\n                  Post\r\n                </Button>\r\n              </div>\r\n            </Container>\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseFeed;\r\n","\r\nimport React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectUserExpenseRaised } from '../appState/appSlice'\r\nimport ExpenseViewTable from './ExpenseViewTable'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst ExpenselWidget = ({ isWidget, setIswidget }) => {\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n    const userExpneses = useSelector(selectUserExpenseRaised)\r\n    return (\r\n        <div className='app__Widget'>\r\n            <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Expense List' \r\n            />\r\n            <div className=\"pt-2\" />\r\n            <ExpenseViewTable\r\n                calcuAmt={calcuAmt} \r\n                userExpneses={userExpneses}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenselWidget\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setAccounts, setExpenseCategories, setUser, \r\n    setExpenseItems, setUserExpenseRaised } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport ExpenseFeed from '../components/ExpenseFeed'\r\nimport ExpenseWidget from '../components/ExpenseWidget'\r\n\r\nconst ExpenseScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n\r\n    // func\r\n    const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n    const get_ExpenseCategories =() =>{\r\n        axios.get('/expense/categories', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(exps =>{\r\n            dispatch(setExpenseCategories(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_Raised_Expense_Items =() =>{\r\n        axios.get('/expense/Items', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            } \r\n        })\r\n        .then(exps =>{\r\n            dispatch(setExpenseItems(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_User_Raised_Expense =() =>{\r\n        axios.get('/expense/user', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(exps =>{\r\n            dispatch(setUserExpenseRaised(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        get_AllAccounts()\r\n        get_Session()\r\n    }, [])\r\n\r\n    useEffect(() =>{\r\n        get_ExpenseCategories()\r\n        get_User_Raised_Expense()\r\n        get_Raised_Expense_Items()\r\n    }, [open])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <ExpenseFeed\r\n                setOpen={setOpen}\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <ExpenseWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseScreen\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Doughnut, } from \"react-chartjs-2\";\r\nimport { MDBContainer } from \"mdbreact\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAccounts, selectAllStaffs, selectCustomers, selectUserExpenseRaised } from \"../../appState/appSlice\";\r\n\r\nconst MultipleChart = () => {\r\n  const userExpneses = useSelector(selectUserExpenseRaised)\r\n  const customers = useSelector(selectCustomers)\r\n  const accounts = useSelector(selectAccounts)\r\n  const [dataPolar, setDataPolar] = useState({\r\n      datasets: '',\r\n      labels: [\"Expenses\", \"Staffs\", \"Customers\", \"Accounts\"]\r\n  })\r\n\r\n  useEffect(() =>{\r\n    const custotal = customers&&customers.length\r\n    const acctotal = accounts && accounts.length\r\n    const staffs = localStorage.getItem('staffs')\r\n    const calcuAmt = (data) =>{\r\n      const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n      return total\r\n  }\r\n    setDataPolar({\r\n      ...dataPolar,\r\n      datasets: [\r\n        {\r\n          data: [calcuAmt(userExpneses), +staffs, +custotal, +acctotal],\r\n          backgroundColor: [\r\n            \"rgba(247, 70, 74, 0.5)\",\r\n            \"#20c997\",\r\n            \"#111d29\",\r\n            \"rgba(148, 159, 177, 0.5)\",\r\n            \"#2A3F54\"\r\n          ],\r\n          label: \"Dataset\" // for legend\r\n        }\r\n      ],\r\n    })\r\n  },[])\r\n\r\n    return (\r\n      <div>\r\n        <h3 className=\"mt-5\">Data </h3>\r\n        <Doughnut data={dataPolar} options={{ responsive: true }} />\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default MultipleChart;","import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { MDBContainer } from \"mdbreact\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectPaidOnpaySales } from \"../../appState/appSlice\";\r\n\r\nconst SalesChart =() =>{\r\n  const data = localStorage.getItem('paid')\r\n  const onpaid = localStorage.getItem('onPaid')\r\n  const paidOnpaySales = useSelector(selectPaidOnpaySales)\r\n  const [dataLine, setDataLine] = useState({\r\n    labels: '',\r\n      datasets: [\r\n        {\r\n          label: \"Sales on progress\",\r\n          fill: true,\r\n          lineTension: 0.3,\r\n          backgroundColor: \"rgba(225, 204,230, .3)\",\r\n          borderColor: \"rgb(205, 130, 158)\",\r\n          borderCapStyle: \"butt\",\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: \"miter\",\r\n          pointBorderColor: \"rgb(205, 130,1 58)\",\r\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n          pointBorderWidth: 10,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n          pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data: [onpaid]\r\n        },\r\n        {\r\n          label: \"Completed Sales\",\r\n          fill: true,\r\n          lineTension: 0.3,\r\n          backgroundColor: \"rgba(184, 185, 210, .3)\",\r\n          borderColor: \"rgb(35, 26, 136)\",\r\n          borderCapStyle: \"butt\",\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: \"miter\",\r\n          pointBorderColor: \"rgb(35, 26, 136)\",\r\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n          pointBorderWidth: 10,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data: [data]\r\n        }\r\n      ]\r\n  })\r\n\r\n  useEffect(() =>{\r\n        \r\n    const labels = paidOnpaySales&&paidOnpaySales.map(x =>Object.values(x))\r\n    // const paiddata = paidOnpaySales && paidOnpaySales.filter((paid, i) =>paid && paid.amount == paidOnpaySales[i].amount_paid)\r\n\r\n    // const paiddataValues = paiddata && paiddata.map(x =>Object.values(x))\r\n    // console.log(paiddataValues)\r\n    const flabels =[]\r\n    // const completedPaid = []\r\n    // set labels\r\n    for(let i =0; i< labels.length; i++){\r\n        const element = labels[i][10]\r\n        flabels.push(new Date(element).toUTCString().split(' ')[2])\r\n    }\r\n    setDataLine({\r\n      ...dataLine,\r\n      labels: flabels,\r\n    })\r\n\r\n    // setDataLine(prevState =>({\r\n    //   datasets: prevState.datasets.map((obj, i) =>obj[i]==0?\r\n    //   Object.assign(obj, {'data': onpaid}): obj)\r\n     \r\n    // }))\r\n    // setDataLine(prevState =>({\r\n    //   datasets: prevState.datasets.map((obj, i) =>obj[i]==1?\r\n    //   Object.assign(obj, {'data': data}): obj)\r\n     \r\n    // }))\r\n\r\n    // const paiddata = paidOnpaySales && paidOnpaySales.filter((paid, i) =>paid && paid.amount == paidOnpaySales[i].amount_paid)\r\n    \r\n    //     const paiddataValues = paiddata && paiddata.map(x =>Object.values(x))\r\n    //     console.log(paiddataValues)\r\n    //     const completedPaid = []\r\n    //     // set completed data\r\n        \r\n    \r\n    //     for(let i =0; i< paiddataValues.length; i++){\r\n    //       const pelement = paiddataValues[i][5]\r\n    //       completedPaid.push(pelement)\r\n    //     }\r\n\r\n    // const updatepaid = dataLine.datasets.map((obj, i) =>obj[1]?\r\n    // Object.assign(obj, {'data': completedPaid}): obj)\r\n    // console.log(updatepaid)\r\n    \r\n\r\n    // const onpaiddata = paidOnpaySales && paidOnpaySales.filter((paid, i) =>paid && paid.amount > paidOnpaySales[i].amount_paid)\r\n    \r\n    // const onpaiddataValues = onpaiddata && onpaiddata.map(x =>Object.values(x))\r\n    // console.log(onpaiddataValues)\r\n    // const onPaid = []\r\n    // // set completed data\r\n    \r\n\r\n    // for(let i =0; i< onpaiddataValues.length; i++){\r\n    //   const onpelement = onpaiddataValues[i][5]\r\n    //   onPaid.push(onpelement)\r\n    // }\r\n    \r\n    // const updateOnpaid = dataLine.datasets.map((obj, i) =>obj[i] ==1?\r\n    // Object.assign(obj, {'data': onpaid}): obj)\r\n    \r\n\r\n    // setDataLine({\r\n    //   ...dataLine,\r\n    //   datasets: updatepaid\r\n    // })\r\n    // setDataLine({\r\n    //   ...dataLine,\r\n    //   datasets: updateOnpaid\r\n    // })\r\n    // console.log(dataLine.datasets)\r\n  }, [])\r\n\r\n    return (\r\n      <MDBContainer>\r\n        <h3 className=\"mt-5\">Sales</h3>\r\n        <Line data={dataLine} options={{ responsive: true }} />\r\n      </MDBContainer>\r\n    );\r\n}\r\n\r\nexport default SalesChart;","import { Grid } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectPaidOnpaySales } from \"../appState/appSlice\";\r\nimport MultipleChart from \"./charts/MultipleChart\";\r\nimport SalesChart from \"./charts/SalesChart\";\r\nimport AppHeader from \"./global/AppHeader\";\r\n\r\nconst HomeFeed = () => {\r\n  const paidOnpaySales = useSelector(selectPaidOnpaySales);\r\n  const [paid, setPaid] = useState();\r\n  const [onpaid, setOnPaid] = useState();\r\n  // const data = [65, 59, 80, 81, 56, 55, 40]\r\n  useEffect(() => {\r\n    const paiddata =\r\n      paidOnpaySales &&\r\n      paidOnpaySales.filter(\r\n        (paid, i) => paid && paid.amount == paidOnpaySales[i].amount_paid\r\n      );\r\n\r\n    const paiddataValues = paiddata && paiddata.map((x) => Object.values(x));\r\n    const completedPaid = [];\r\n    // set completed data\r\n\r\n    for (let i = 0; i < paiddataValues.length; i++) {\r\n      const pelement = paiddataValues[i][5];\r\n      completedPaid.push(pelement);\r\n    }\r\n\r\n    // set on pay data\r\n    // console.log(completedPaid)\r\n    const onpaiddata =\r\n      paidOnpaySales &&\r\n      paidOnpaySales.filter(\r\n        (paid, i) => paid && paid.amount > paidOnpaySales[i].amount_paid\r\n      );\r\n\r\n    const onpaiddataValues =\r\n      onpaiddata && onpaiddata.map((x) => Object.values(x));\r\n    const onPaid = [];\r\n    // set completed data\r\n\r\n    for (let i = 0; i < onpaiddataValues.length; i++) {\r\n      const onpelement = onpaiddataValues[i][5];\r\n      onPaid.push(onpelement);\r\n    }\r\n\r\n    return (\r\n      setPaid(completedPaid),\r\n      setOnPaid(onPaid),\r\n      localStorage.setItem(\"paid\", completedPaid),\r\n      localStorage.setItem(\"onPaid\", onPaid)\r\n    );\r\n  }, [paidOnpaySales]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"app__Feed\">\r\n        <AppHeader title=\"Dashboard\" />\r\n\r\n        <div className=\"m-3\">\r\n          <Grid container spacing={2}>\r\n            <Grid item lg={11} md={11}>\r\n              <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\r\n                <Grid item lg={9} md={9}>\r\n                  <SalesChart data={paid} onpaid={onpaid} />\r\n                </Grid>\r\n                <Grid item lg={3} md={3}>\r\n                  <MultipleChart />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HomeFeed;\r\n","import axios from \"axios\";\r\nimport React, { Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport {\r\n  selectOpen,\r\n  selectToken,\r\n  setAccounts,\r\n  setAllStaffs,\r\n  setCustomers,\r\n  setPaidOnpaySales,\r\n  setUser,\r\n  setUserExpenseRaised,\r\n} from \"../appState/appSlice\";\r\nimport SideBarMenu from \"../components/global/SideBarMenu\";\r\nimport HomeFeed from \"../components/HomeFeed\";\r\nimport \"./homeScreen.css\";\r\n\r\nconst HomeScreen = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const open = useSelector(selectOpen);\r\n  const token = useSelector(selectToken);\r\n\r\n  const get_Session = () => {\r\n    axios\r\n      .get(`/auth/active`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((user) => {\r\n        dispatch(setUser(user.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  const get_Paid_Onpay_Sales = async () => {\r\n    await localStorage.clear();\r\n    axios\r\n      .get(`/sale/paid_onpay`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((paidOnpay) => {\r\n        dispatch(setPaidOnpaySales(paidOnpay.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  const get_AllAccounts = () => {\r\n    axios\r\n      .get(\"/account\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((accounts) => {\r\n        dispatch(setAccounts(accounts.data));\r\n      })\r\n      .catch((error) => {\r\n        if (error) {\r\n          return error.response.statusText;\r\n        }\r\n      });\r\n  };\r\n\r\n  const getCustomers = () => {\r\n    axios\r\n      .get(\"/customer\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((asset) => {\r\n        dispatch(setCustomers(asset.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n  const get_Staffs = () => {\r\n    axios\r\n      .get(\"/auth\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((staffs) => {\r\n        localStorage.setItem(\"staffs\", staffs.data.length);\r\n        dispatch(setAllStaffs(staffs.data));\r\n      })\r\n      .catch((error) => {\r\n        if (error) {\r\n          return error.response.statusText;\r\n        }\r\n      });\r\n  };\r\n\r\n  const get_User_Raised_Expense = () => {\r\n    axios\r\n      .get(\"/expense/user\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((exps) => {\r\n        dispatch(setUserExpenseRaised(exps.data));\r\n      })\r\n      .catch((error) => {\r\n        if (error) {\r\n          return error.response.statusText;\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      return history.push(\"/\");\r\n    }\r\n    return (\r\n      get_Session(),\r\n      get_Paid_Onpay_Sales(),\r\n      get_AllAccounts(),\r\n      get_User_Raised_Expense(),\r\n      getCustomers(),\r\n      get_Staffs()\r\n    );\r\n  }, [open]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"app\">\r\n        {/* side__Bar */}\r\n        <SideBarMenu />\r\n        {/* feed */}\r\n        <HomeFeed />\r\n        {/* widget */}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import { Button, Container, FormLabel, Grid, IconButton, Paper, Select, TextField, Typography } from '@material-ui/core'\r\nimport { Delete, FileCopy, PlusOne, PlusOneOutlined, PlusOneRounded } from '@material-ui/icons'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectPropServices, selectCustomers, selectToken, selectOpenEstimate, setOpenEstimate } from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\nimport AppSnackbar from './global/AppSnackbar'\r\n\r\nconst InvoiceFeed = ({  open, setOpen, isWidget, setIswidget }) => {\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const props = useSelector(selectPropServices)\r\n    const customers = useSelector(selectCustomers)\r\n    const openEstimate = useSelector(selectOpenEstimate)\r\n    const pss = useSelector(selectPropServices)\r\n    const [noestimate, setNoestimate] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n    const [message, setMessage] = useState()\r\n    const invoiceFormTemplate = {pro_service:'', description: '', qty: '', rate: '',  amount: '',  };\r\n    const [invoiceForm, setInvoiceform] = useState([])\r\n\r\n    const [data, setData ] = useState({\r\n        asset_account_FK: openEstimate.asset_account_FK,\r\n        customer_FK: '', \r\n        invoice_date: '',\r\n        invoice_term: '',\r\n        due_date: '',\r\n        VALUES: [],\r\n        uuid: '',\r\n        total: ''\r\n    })\r\n\r\n    // func\r\n    const get_OpenEstimate =(cus_FK) =>{\r\n       \r\n        axios.get(`estimate/${cus_FK}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setNoestimate(false)\r\n            dispatch(setOpenEstimate(result.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error) {\r\n                setNoestimate(false)\r\n                dispatch(setOpenEstimate(''))\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSetPostData = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n\r\n    } \r\n\r\n    const handleSetTerm = (e) =>{\r\n        const d = new Date()\r\n        const sd = new Date()\r\n        const value = e.target.value;\r\n         const duedate = d.setDate(sd.getDate()+parseInt(value))\r\n            return setData({\r\n                ...data,\r\n                invoice_term: value,\r\n                due_date: new Date(duedate)\r\n            })\r\n    }\r\n\r\n    // func\r\n    const addInvoiceFrom = () =>{\r\n        setInvoiceform([\r\n            ...invoiceForm,\r\n            invoiceFormTemplate\r\n        ])\r\n    }\r\n  \r\n\r\n    useEffect(() =>{\r\n        const form = []\r\n        for(let i= 0; i <openEstimate.length;  i++){\r\n           \r\n\r\n            form.push(\r\n                {\r\n                    pro_service:  openEstimate&& openEstimate[i].id, \r\n                    description:  openEstimate&& openEstimate[i].description, \r\n                    qty:  openEstimate&& openEstimate[i].qty,\r\n                    invoice_ID: data.uuid,\r\n                    rate:  openEstimate&& openEstimate[i].rate,  \r\n                    amount:  openEstimate&& openEstimate[i].amount,\r\n                    createdAt: data.invoice_date \r\n                }\r\n            )\r\n        }\r\n        return setInvoiceform(form)\r\n    },[openEstimate])\r\n\r\n    useEffect(() =>{\r\n        setInvoiceform([\r\n            invoiceFormTemplate\r\n        ])\r\n       \r\n    },[!openEstimate])\r\n    const handleChange = (e, index) =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n   \r\n        const updatedinvoiceform =  invoiceForm.map((jef, i) => index == i ?\r\n        Object.assign(jef, {[name]: value, 'invoice_ID': data.uuid, 'createdAt': data.invoice_date }): jef);\r\n        setInvoiceform(updatedinvoiceform)\r\n\r\n        if(name =='qty') {\r\n            const updatedinvoiceform =  invoiceForm.map((jef, i) => index == i ?\r\n            Object.assign(jef, {'amount': value * jef.rate, 'invoice_ID': data.uuid, 'createdAt': data.invoice_date  }): jef);\r\n        }\r\n      \r\n        if(name =='pro_service') {\r\n            const selectedPS = pss.filter(ps => ps.id ==parseInt(value))\r\n            // console.log(selectedPS[0].description)\r\n            const updatedinvoiceform =  invoiceForm.map((jef, i) => index == i ?\r\n            Object.assign(jef, {'description': selectedPS[0].description, 'rate': +selectedPS[0].sale_price }): jef);\r\n        }\r\n    }\r\n    const handleRemoveinvoiceform = (index) =>{\r\n        const filterinvoiceform = [...invoiceForm];\r\n        filterinvoiceform.splice(index, 1);\r\n        \r\n        setInvoiceform(filterinvoiceform)\r\n    }\r\n// func\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n\r\n       // handle submit\r\n    const handleSubmit = e =>{\r\n        \r\n        e.preventDefault()\r\n        setOpen(true)\r\n        axios.post('/invoice',data, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setOpen(false)\r\n            setSuccess(true)\r\n            setMessage(result.data.message)\r\n            setData({\r\n                customer_FK: '', \r\n                invoice_date: '',\r\n                invoice_term: '',\r\n                due_date: '',\r\n                VALUES: [],\r\n                uuid: '',\r\n                total: ''\r\n            })\r\n          \r\n            setInvoiceform([\r\n                invoiceFormTemplate\r\n            ])\r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            if(error) {\r\n                return error.response.data\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        get_OpenEstimate(data.customer_FK)\r\n    }, [data.customer_FK])\r\n\r\n    useEffect(() =>{\r\n        \r\n        const fdata = invoiceForm.map(x =>Object.values(x))\r\n        const findal =[]\r\n        // const data = fdata\r\n        for(let i =0; i< fdata.length; i++){\r\n            const element = fdata[i]\r\n            findal.push(element)\r\n        }\r\n        \r\n         setData({\r\n            ...data,\r\n            VALUES: findal\r\n        })\r\n    }, [invoiceForm])\r\n   \r\n    useEffect(() =>{\r\n        setData({\r\n            ...data,\r\n            total: calcuAmt(invoiceForm)\r\n        })\r\n    }, [data.VALUES])\r\n    useEffect(() =>{\r\n        setData({\r\n            ...data,\r\n            uuid:  new Date().getSeconds().toLocaleString() + new Date().getMinutes().toLocaleString()+new Date().getMilliseconds()\r\n        })\r\n    }, [success])\r\n   \r\n    return (\r\n        <div className={`${isWidget? 'isapp__Feed': 'app__Feed'}`}>\r\n            <AppSnackbar open={success} setOpen={setSuccess} message={message} />\r\n           <AppHeader title='Invoice' />\r\n           <div className=\"row align-items-center justify-content-center d-flex m-1\" >\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                    {/* table */}\r\n                    <h3>Invoice Entry<span> \r\n                        <IconButton color='secondary'\r\n                            onClick={() =>setIswidget(!isWidget)}\r\n                        >\r\n                        <FileCopy style={{ color: '#1ABB9C'}} />\r\n                        </IconButton></span></h3> \r\n                        {/* to do make it a component */}\r\n                        <Grid container spacing={2} className='p-3'>\r\n                            <Grid item lg={4} md={4}>\r\n                                <FormLabel>Customer</FormLabel>\r\n                                <select\r\n                                    name='customer_FK'\r\n                                    value={data.customer_FK}\r\n                                    placeholder='Customer'\r\n                                    style={{border: 'none'}}\r\n                                    onChange={e =>handleSetPostData(e)}\r\n                                >\r\n                                    <option value=''>Select</option>\r\n                                    {\r\n                                        customers&&\r\n                                        customers.map((cus, index) =>{\r\n                                            const{id, customer_name} = cus\r\n                                            return <option key={index} value={id} > {customer_name} </option>\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </Grid>\r\n                                \r\n                                <Grid item lg={8} md={8}\r\n                                    style={{display: 'flex', \r\n                                    justifyContent: 'flex-end', alignItems: 'flex-end', flexDirection: 'column'}}\r\n                                >\r\n                                    <FormLabel>Due Balance</FormLabel>\r\n                                    <Typography variant='h5'>\r\n                                        <s>N</s>: {invoiceForm.length>0 && calcuAmt(invoiceForm)}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                \r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Period Term</FormLabel>\r\n                                    <select\r\n                                        name='invoice_term'\r\n                                        style={{width: '100%', \r\n                                        outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                        value={data.invoice_term}\r\n                                        onChange={ e => handleSetTerm(e)}\r\n                                    >\r\n                                        <option value=''></option>\r\n                                        <option value={7}>7 Days</option>\r\n                                        <option value={14}>14 Days</option>\r\n                                        <option value={21}>21 Days</option>\r\n                                        <option value={28}>28 Days</option>\r\n                                        <option value={30}>30 Days</option>\r\n                                        <option value={60}>60 Days</option>\r\n                                        <option value={90}>90 Days</option>\r\n                                        <option value={120}>120 Days</option>\r\n                                        <option value={150}>150 Days</option>\r\n                                        <option value={180}>180 Days</option>\r\n                                        <option value={210}>210 Days</option>\r\n                                        <option value={240}>240 Days</option>\r\n                                        <option value={270}>270 Days</option>\r\n                                        <option value={300}>300 Days</option>\r\n                                        <option value={330}>330 Days</option>\r\n                                        <option value={360}>360 Days</option>\r\n                                    </select>\r\n                                </Grid>\r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Invoice Date</FormLabel>\r\n                                    <input\r\n                                        name='invoice_date'\r\n                                        type='date'\r\n                                        value ={data.invoice_date}\r\n                                        onChange={e =>handleSetPostData(e)}\r\n                                        style={{width: '100%', outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Due Date</FormLabel>\r\n                                    <input\r\n                                        name='due_date'\r\n                                        readOnly\r\n                                        value={ data.due_date ? new Date(data.due_date).toLocaleDateString(): new Date().toLocaleDateString()}\r\n                                        onChange={e =>handleSetPostData(e)}\r\n                                        style={{width: '100%', outline: 'none', \r\n                                        border: 'none',\r\n                                        height: '30px'}}\r\n                                    />\r\n                                </Grid>\r\n                            \r\n                        </Grid>\r\n                        <h5>\r\n                            Details\r\n                        </h5>\r\n                   { !noestimate&&<Paper>\r\n                        <Container className='p-3'>\r\n                        <table className=\"table-small table-hover table-bordered\" style={{width: '100%'}}>\r\n                            <thead>\r\n                                \r\n                                <th>#</th>\r\n                                <th> {' '} </th>\r\n                                <th>Property/Service</th>\r\n                                <th>Description</th>\r\n                                <th>QTY</th>\r\n                                <th>Rate</th>\r\n                                <th>Amount</th>\r\n                                <th></th>\r\n                            </thead>\r\n                            <tbody id='je__Table'>\r\n                                {\r\n                                    invoiceForm && invoiceForm.map((jef, index) =>(\r\n                                        <tr key={index}>\r\n                                            <td>{index+1} </td>\r\n                                            <td\r\n                                                    onClick={() =>addInvoiceFrom()}\r\n                                                >\r\n                                                     <span className='fa fa-plus-circle fa-1x'\r\n                                                        style={{color: '#20c997'}}\r\n                                                    />\r\n                                            </td>\r\n                                            <td>\r\n                                                <select\r\n                                                    name='pro_service'\r\n                                                    value={jef.account}\r\n                                                    placeholder='Account'\r\n                                                    style={{border: 'none'}}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                >\r\n                                                    <option value=''></option>\r\n                                                    {\r\n                                                        props&&\r\n                                                        props.map((ps, index) =>{\r\n                                                            const { id, name, ps_type } = ps\r\n                                                            return <option value={id} key={index} >{`${name} (${ps_type})`}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </select>\r\n                                            </td>\r\n                                            \r\n                                            <td>\r\n                                                <input\r\n                                                    name='description'\r\n                                                    placeholder='Description'\r\n                                                    value={jef.description}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                            <td>\r\n                                                <input\r\n                                                    name='qty'\r\n                                                    type='number'\r\n                                                    placeholder='Quantity'\r\n                                                    value={jef.qty}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                            <td>\r\n                                                <input\r\n                                                    name='rate'\r\n                                                    type='number'\r\n                                                    placeholder='Rate'\r\n                                                    value={jef.rate}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                            <td>\r\n                                                <input\r\n                                                    name='amount'\r\n                                                    type='number'\r\n                                                    placeholder='Amount'\r\n                                                    value={jef.amount}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n                     \r\n                                            <td\r\n                                                onClick={() =>handleRemoveinvoiceform(index)}\r\n                                            >\r\n                                                    <span className='fa fa-trash'\r\n                                                        style={{color: 'red'}}\r\n                                                    ></span>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            {/*                                 \r\n                                {\r\n                                   customers&&\r\n                                   customers.map((customer, index) =>{\r\n                                        return <CustomerList\r\n                                            index={index}\r\n                                            {...customer}\r\n                                            isWidget={isWidget}\r\n                                        />\r\n                                    })\r\n\r\n                                } */}\r\n                                    \r\n                            </tbody>\r\n                        </table>\r\n                        {/* {customers&& !customers.length>0&&\r\n                            <div className=\"alert alert-warning\">\r\n                            <h6>No Asset Accounts Availabe</h6>\r\n                            </div>\r\n                        } */}\r\n                        <Button\r\n                            className='m-3'\r\n                            variant='contained'\r\n                            onClick={e =>handleSubmit(e)}\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >submit</Button>\r\n                        </Container>\r\n                    </Paper>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InvoiceFeed\r\n","import { Paper, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { selectUserInvoices } from '../appState/appSlice'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst InvoiceWidget = ({ isWidget, setIswidget }) => {\r\n    const invoices = useSelector(selectUserInvoices)\r\n// func\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n    return (\r\n        <div className='app__Widget'>\r\n            <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Invoice List' \r\n            />\r\n            <section className='app__WidgetContainer mt-3'>\r\n                <table className='table table-sm table-striped table-hover'>\r\n                    <thead>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>Description</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>Due Date</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>Amount (<s>N</s>)</th>\r\n                        {/* <th style={{ border: '1px solid #F7F7F7F7' }}>Action</th> */}\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            invoices &&\r\n                            invoices.map((invoice, index) =>{\r\n                                const { uuid, invoice_date, due_date, amount } = invoice\r\n                                return(\r\n                                <tr key={index}>\r\n                                <td> { index+1 } </td>\r\n                                <td>\r\n                                    {`Invoice #${uuid} `}\r\n                                </td>\r\n                                <td> {new Date(due_date).toLocaleDateString()} </td>\r\n                                <td> {amount} </td>\r\n                                <td></td>\r\n                                </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                        {\r\n                           invoices&&\r\n                           <tr\r\n                            style={{background: '#2A3F54', color: 'white'}} \r\n                           >\r\n                               <td colSpan={3}>\r\n                                   <Typography variant='subtitle1'\r\n                                    style={{color: 'white'}}\r\n                                   >\r\n                                        <b>Total:</b>\r\n                                    </Typography>\r\n                               </td>\r\n                               <td>\r\n                                   <Typography variant='subtitle1'\r\n                                    style={{color: 'white'}}\r\n                                   >\r\n                                    <b>{\r\n                                       calcuAmt(invoices)\r\n                                    }</b>\r\n                                   </Typography>\r\n                               </td>\r\n                               <td colSpan={1}></td>\r\n                           </tr>\r\n                       }\r\n                    </tbody>\r\n                </table>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InvoiceWidget\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setAccounts, setCustomers, setPropServices, setUser, setUserInvoices } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport InvoiceFeed from '../components/InvoiceFeed'\r\nimport InvoiceWidget from '../components/InvoiceWidget'\r\n\r\nconst InvoiceScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n\r\n    // func\r\n    const getProp_Services = () =>{\r\n        axios.get('/prop_service', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(ps =>{\r\n            dispatch(setPropServices(ps.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n     // func\r\n    const getCustomers = () =>{\r\n        axios.get('/customer', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(asset =>{\r\n            dispatch(setCustomers(asset.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n     // func\r\n     const get_My_Invoices = () =>{\r\n        axios.get(`/invoice`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(invoices =>{\r\n            dispatch(setUserInvoices(invoices.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        getProp_Services()\r\n        getCustomers()\r\n        get_Session()\r\n        \r\n    }, [])\r\n    useEffect(() =>{\r\n        return get_My_Invoices()\r\n    }, [open])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <InvoiceFeed\r\n                setOpen={setOpen}\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <InvoiceWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InvoiceScreen\r\n","import axios from \"axios\";\r\n// MUI Stuff\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// Icons\r\nimport FileCopy from \"@material-ui/icons/FileCopy\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAccounts, selectToken, selectUser } from \"../appState/appSlice\";\r\nimport AppHeader from \"./global/AppHeader\";\r\nimport AppSnackbar from \"./global/AppSnackbar\";\r\n\r\nconst JournalFeed = ({ setOpen, isWidget, setIswidget }) => {\r\n  const token = useSelector(selectToken);\r\n  const user = useSelector(selectUser);\r\n  const accounts = useSelector(selectAccounts);\r\n  const [success, setSuccess] = useState(false);\r\n  const [Error, setError] = useState();\r\n  const [message, setMessage] = useState();\r\n  const jeFormTemplate = {\r\n    account_FK: \"\",\r\n    tx_type: \"\",\r\n    paid: 1,\r\n    pay_method: \"\",\r\n    amount: \"\",\r\n    description: \"\",\r\n  };\r\n  const [jeForm, setJeform] = useState([jeFormTemplate]);\r\n  const [data, setData] = useState({\r\n    je_ID: \"\",\r\n    name: \"\",\r\n    total: \"\",\r\n    je_date: \"\",\r\n    VALUES: [],\r\n  });\r\n  // func\r\n  const addJeFrom = () => {\r\n    setJeform([...jeForm, jeFormTemplate]);\r\n  };\r\n\r\n  const handleRemoveJeform = (index) => {\r\n    const filterJeform = [...jeForm];\r\n    filterJeform.splice(index, 1);\r\n\r\n    setJeform(filterJeform);\r\n  };\r\n\r\n  const calcuAmt = (data) => {\r\n    const total = data && data.reduce((a, v) => +v.amount + a, 0);\r\n    return total;\r\n  };\r\n  const calcuTotalDR = (data) => {\r\n    const tDR = data && data.filter((dta) => dta.tx_type == \"DR\");\r\n    const total = tDR && tDR.reduce((a, v) => +v.amount + a, 0);\r\n    return total.toLocaleString();\r\n  };\r\n  const calcuTotalCR = (data) => {\r\n    const tCR = data && data.filter((dta) => dta.tx_type == \"CR\");\r\n    const total = tCR && tCR.reduce((a, v) => +v.amount + a, 0);\r\n    return total.toLocaleString();\r\n  };\r\n\r\n  const handleChange = (e, index) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    const updatedJeform = jeForm.map((jef, i) =>\r\n      index == i ? Object.assign(jef, { [name]: value }) : jef\r\n    );\r\n    setJeform(updatedJeform);\r\n\r\n    if (name == \"amount\") {\r\n      const updatedJeform = jeForm.map((jef, i) =>\r\n        index == i\r\n          ? Object.assign(jef, {\r\n              rcpt_no: data.je_ID.split(\"-\")[1],\r\n              tx_date: data.je_date,\r\n              postedBy_FK: user.username,\r\n              createdAt: new Date(),\r\n              uuid: data.je_ID,\r\n            })\r\n          : jef\r\n      );\r\n    }\r\n\r\n    if (\r\n      name == \"pay_method\" &&\r\n      calcuTotalDR(jeForm) != calcuTotalCR(jeForm) &&\r\n      calcuTotalCR(jeForm) != calcuTotalDR(jeForm)\r\n    ) {\r\n      return setJeform([...jeForm, jeFormTemplate]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fdata = jeForm.map((x) => Object.values(x));\r\n    const findal = [];\r\n    // const data = fdata\r\n    for (let i = 0; i < fdata.length; i++) {\r\n      const element = fdata[i];\r\n      findal.push(element);\r\n    }\r\n\r\n    setData({\r\n      ...data,\r\n      VALUES: findal,\r\n    });\r\n  }, [jeForm]);\r\n\r\n  useEffect(() => {\r\n    setData({\r\n      ...data,\r\n      total: calcuAmt(jeForm),\r\n    });\r\n  }, [data.VALUES]);\r\n\r\n  // handle post\r\n\r\n  const isDisable = (Form) => {\r\n    const error =\r\n      Form &&\r\n      Form.map((jform) =>\r\n        !jform[\"account_FK\"].length > 0 ||\r\n        !jform[\"tx_type\"].length > 0 ||\r\n        !jform[\"amount\"].length > 0 ||\r\n        !jform[\"description\"].length > 0 ||\r\n        !jform[\"pay_method\"].length > 0\r\n          ? true\r\n          : false\r\n      );\r\n    const filterError = error && error.includes(true) ? true : false;\r\n    return filterError;\r\n  };\r\n\r\n  const isEmpty = (input) => {\r\n    return data[input] === \"\" ? true : false;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    const err = await Object.keys(data).map((key) => isEmpty(key));\r\n    const isError = err.includes(true);\r\n    if (isError === true) {\r\n      return setError(\"All field are required\");\r\n    } else {\r\n      if (\r\n        calcuTotalDR(jeForm) > calcuTotalCR(jeForm) ||\r\n        calcuTotalCR(jeForm) > calcuTotalDR(jeForm)\r\n      ) {\r\n        return setError(\r\n          \"Debit amount and Credit must be equal, highest tolerance is 0.1\"\r\n        );\r\n      }\r\n      // console.log(data)\r\n      setError(\"\");\r\n      setOpen(true);\r\n      axios\r\n        .post(\"/journal\", data, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then((result) => {\r\n          setOpen(false);\r\n          setMessage(result.data.message);\r\n          setSuccess(true);\r\n\r\n          setData({\r\n            je_ID: \"\",\r\n            name: \"\",\r\n            total: \"\",\r\n            je_date: \"\",\r\n            VALUES: [],\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setOpen(false);\r\n          if (error) {\r\n            return error.response;\r\n          }\r\n        });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setData({\r\n      ...data,\r\n      je_ID:\r\n        \"je-\" +\r\n        new Date().getSeconds().toLocaleString() +\r\n        new Date().getMinutes().toLocaleString() +\r\n        new Date().getMilliseconds(),\r\n    });\r\n    setJeform([jeFormTemplate]);\r\n  }, [success]);\r\n\r\n  return (\r\n    <div className={`${isWidget ? \"isapp__Feed\" : \"app__Feed\"}`}>\r\n      <AppHeader title=\"Journal\" />\r\n      <AppSnackbar setOpen={setSuccess} open={success} message={message} />\r\n      <div className=\"row align-items-center justify-content-center d-flex m-1\">\r\n        <div className=\"col-lg-12 col-md-12\">\r\n          {/* table */}\r\n          <h3>\r\n            Journal Entry\r\n            <span>\r\n              <Tooltip title=\"Journal List\">\r\n                <IconButton\r\n                  color=\"secondary\"\r\n                  onClick={() => setIswidget(!isWidget)}\r\n                >\r\n                  <FileCopy style={{ color: \"#1ABB9C\" }} />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </span>\r\n          </h3>\r\n          <Grid container spacing={2} alignItems=\"center\" className=\"mt-3\">\r\n            <Grid item lg={6} md={6}>\r\n              <TextField\r\n                required\r\n                name=\"name\"\r\n                size=\"small\"\r\n                label=\"Journal Name\"\r\n                fullWidth\r\n                value={data.name}\r\n                variant=\"outlined\"\r\n                placeholder=\"Journal Name Or Description\"\r\n                onChange={(e) =>\r\n                  setData({\r\n                    ...data,\r\n                    name: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item lg={6} md={6} justify=\"flex-end\" className=\"d-flex\">\r\n              <div\r\n                className=\"d-flex align-items-center\"\r\n                style={{ flexDirection: \"column\", justifyContent: \"center\" }}\r\n              >\r\n                <Typography variant=\"p\">Amount</Typography>\r\n                <Typography variant=\"h5\">\r\n                  <b>\r\n                    <s>N</s>:{calcuAmt(jeForm).toLocaleString()}\r\n                  </b>\r\n                </Typography>\r\n              </div>\r\n            </Grid>\r\n            <Grid item lg={3} md={3}>\r\n              <TextField\r\n                required\r\n                name=\"je_date\"\r\n                size=\"small\"\r\n                type=\"date\"\r\n                fullWidth\r\n                value={data.je_date}\r\n                label=\"Transaction Date\"\r\n                variant=\"outlined\"\r\n                placeholder=\"Journal Name\"\r\n                onChange={(e) =>\r\n                  setData({\r\n                    ...data,\r\n                    je_date: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item lg={3} md={3}>\r\n              <TextField\r\n                required\r\n                disabled\r\n                fullWidth\r\n                name=\"je_ID\"\r\n                size=\"small\"\r\n                value={data.je_ID}\r\n                label=\"Journal Id\"\r\n                variant=\"outlined\"\r\n                placeholder=\"Journal Id\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Typography variant=\"h5\" className=\"mt-3 mb-3\">\r\n            Transaction Details\r\n          </Typography>\r\n          {Error && <Typography color=\"error\">{Error}</Typography>}\r\n          <Paper style={{ backgroundColor: \"inherit\" }}>\r\n            <Container className=\"p-3\">\r\n              <table\r\n                className=\"table-small table-hover table-bordered\"\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <thead>\r\n                  <th>#</th>\r\n                  <th> </th>\r\n                  <th>Account</th>\r\n                  <th>Tx. Type</th>\r\n                  <th>\r\n                    Amount (<s>N</s>)\r\n                  </th>\r\n                  <th>Description</th>\r\n                  <th>Pay Method</th>\r\n                  <th></th>\r\n                </thead>\r\n                <tbody id=\"je__Table\">\r\n                  {jeForm &&\r\n                    jeForm.map((jef, index) => (\r\n                      <tr>\r\n                        <td>{index + 1} </td>\r\n                        <td onClick={() => addJeFrom()}>\r\n                          <Tooltip title=\"Add New Row\">\r\n                            <span\r\n                              className=\"fa fa-plus-circle fa-1x\"\r\n                              style={{ color: \"#20c997\" }}\r\n                            />\r\n                          </Tooltip>\r\n                        </td>\r\n                        <td>\r\n                          <select\r\n                            name=\"account_FK\"\r\n                            value={jef.account_FK}\r\n                            placeholder=\"Account\"\r\n                            style={{ border: \"none\" }}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          >\r\n                            <option value=\"\"></option>\r\n                            {accounts &&\r\n                              accounts.map((acc, index) => {\r\n                                const { code, name, balance_type } = acc;\r\n                                return (\r\n                                  <option\r\n                                    value={code}\r\n                                    key={index}\r\n                                  >{`${name} (${balance_type})`}</option>\r\n                                );\r\n                              })}\r\n                          </select>\r\n                        </td>\r\n                        <td>\r\n                          <select\r\n                            name=\"tx_type\"\r\n                            value={jef.tx_type}\r\n                            style={{ border: \"none\" }}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"DR\">Debit</option>\r\n                            <option value=\"CR\">Credit</option>\r\n                          </select>\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            name=\"amount\"\r\n                            type=\"number\"\r\n                            placeholder=\"Amount\"\r\n                            value={jef.amount}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            name=\"description\"\r\n                            placeholder=\"Description\"\r\n                            value={jef.description}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <select\r\n                            name=\"pay_method\"\r\n                            value={jef.pay_method}\r\n                            style={{ border: \"none\" }}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"cash\">Cash</option>\r\n                            <option value=\"cheque\">Cheque</option>\r\n                          </select>\r\n                        </td>\r\n\r\n                        <td onClick={() => handleRemoveJeform(index)}>\r\n                          <Tooltip title=\"Delet Row\">\r\n                            <span\r\n                              className=\"fa fa-trash\"\r\n                              style={{ color: \"red\" }}\r\n                            />\r\n                          </Tooltip>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  <tr>\r\n                    <td colSpan={5}>\r\n                      <section\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"flex-end\",\r\n                        }}\r\n                      >\r\n                        <table\r\n                          className=\"bordered\"\r\n                          style={{ width: \"70%\", marginLeft: \"auto\" }}\r\n                        >\r\n                          <thead>\r\n                            <th>\r\n                              Total DR (<s>N</s>)\r\n                            </th>\r\n                            <th>\r\n                              Total CR (<s>N</s>)\r\n                            </th>\r\n                          </thead>\r\n                          <tbody>\r\n                            <tr>\r\n                              <td>\r\n                                <Typography variant=\"h6\" color=\"error\">\r\n                                  <b>{calcuTotalDR(jeForm)}</b>\r\n                                </Typography>\r\n                              </td>\r\n                              <td>\r\n                                <Typography variant=\"h6\">\r\n                                  <b>{calcuTotalCR(jeForm)}</b>\r\n                                </Typography>\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </section>\r\n                    </td>\r\n                    <td colSpan={4}>\r\n                      <Button\r\n                        size=\"medium\"\r\n                        className=\"m-3\"\r\n                        variant=\"contained\"\r\n                        onClick={(e) => handleSubmit(e)}\r\n                        style={{\r\n                          background: \"#2A3F54\",\r\n                          color: \"white\",\r\n                          width: \"80%\",\r\n                          margin: \"auto\",\r\n                        }}\r\n                        disabled={isDisable(jeForm)}\r\n                      >\r\n                        post\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </Container>\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JournalFeed;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Fragment } from 'react'\r\n\r\n// MUI Stuff\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectAccounts, selectTransactions } from '../appState/appSlice'\r\n\r\nconst JournalListTable = ({jeID}) => {\r\n    const dispatch = useDispatch()\r\n    const [txs, setTxs] = useState()\r\n    const transactions = useSelector(selectTransactions)\r\n    const accounts = useSelector(selectAccounts)\r\n\r\n    // func\r\n    const calcuAmt = (data) =>{\r\n        const total = data && data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n\r\n    const calcuTotalCR = (data) =>{\r\n        const crData = data && data.filter(d =>d.tx_type ==='CR');\r\n        const totalCR =  crData && crData.reduce((a, v) =>v.tx_type ==='CR' && v.amount+a, 0)\r\n        return totalCR.toLocaleString()\r\n    }\r\n    const calcuTotalDR = (data) =>{\r\n        const drData = data && data.filter(d =>d.tx_type ==='DR');\r\n        const totalDR =  drData && drData.reduce((a, v) =>v.tx_type ==='DR' && v.amount+a, 0)\r\n        return totalDR.toLocaleString()\r\n    }\r\n\r\n    const returncusName = (code) =>{\r\n        const cname = accounts && accounts.find(acc =>acc.code ===code)\r\n       if(cname) \r\n            return cname.name\r\n        return null\r\n    }\r\n    useEffect(() =>{\r\n        const fTXs = transactions && transactions.filter(tx =>tx.rcpt_no === parseInt(jeID.trim().split('-')[1]) || tx.uuid ===jeID);\r\n        console.log(fTXs)\r\n        console.log(transactions)\r\n        return setTxs(fTXs)\r\n    },[jeID])\r\n    return (\r\n        <Fragment>\r\n            <tr>\r\n                <td colSpan={5}>\r\n                <table style={{width: '100%', borderLeft: '2px solid #20c997'}} >\r\n                    <thead style={{zIndex: 222, top: '60px', position: 'sticky', background: '#EDEDED'}}>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>Account</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>Description</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>Code</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>CR (<s>N</s>)</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>DR (<s>N</s>)</th>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                            txs &&\r\n                            txs.map((tx, index) =>{\r\n                                const { tx_date, description, tx_type, amount, account_FK, pay_method, \r\n                                paid } = tx\r\n                                return (\r\n                                    <Fragment key={index}>\r\n                                        <tr>\r\n                                            <td\r\n                                                style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}\r\n                                            > {index+1} </td>\r\n                                            <td style={{textAlign: 'left'}}>\r\n                                                {returncusName(account_FK)}\r\n                                            </td>\r\n                                            \r\n                                            <td style={{textAlign: 'left'}}>\r\n                                            \r\n                                                {description}\r\n                                            \r\n                                            </td>\r\n                                            <td style={{textAlign: 'left'}}>{account_FK}</td>\r\n                                            {\r\n                                                tx_type =='CR'?\r\n                                                <td>\r\n                                                    <Typography style={{color: '#20C997'}}>\r\n                                                    { amount.toLocaleString() }\r\n                                                    </Typography>\r\n                                                </td>\r\n                                                :\r\n                                                <td> </td>\r\n                                            }\r\n                                            {\r\n                                                tx_type =='DR'?\r\n                                                <td>\r\n                                                    <Typography color='error'>\r\n                                                    { amount.toLocaleString() }\r\n                                                    </Typography>\r\n                                                </td>\r\n                                                :\r\n                                                <td> </td>\r\n                                            }\r\n                                        \r\n                                            \r\n                                        </tr>\r\n                                </Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                    {\r\n                        txs && txs.length >0 &&\r\n                        <tr>\r\n                            <td colSpan={3}>\r\n                                <Typography variant='subtitle1'\r\n                                style={{color: '#2A3F54'}}\r\n                                >\r\n                                    <b>Total:</b>\r\n                                </Typography>\r\n                            </td>\r\n                            <td></td>\r\n                            <td colSpan={1}>\r\n                                <Typography variant='subtitle1'\r\n                                style={{color: '#2A3F54'}}\r\n                                >\r\n                                <b>{\r\n                                    calcuTotalCR(txs)\r\n                                }</b>\r\n                                </Typography>\r\n                            </td>\r\n                            <td colSpan={1}>\r\n                                <Typography variant='subtitle1'\r\n                                    style={{color: 'white'}}\r\n                                    >\r\n                                    <b>{calcuTotalDR(txs)}</b>\r\n                                </Typography>\r\n                            </td>\r\n                            \r\n                        </tr>\r\n                        \r\n                    }\r\n                    \r\n                </tbody>\r\n            </table>\r\n            {\r\n                txs<=0 &&\r\n                \r\n                <div className='alert alert-warning'\r\n                    style={{width: '98%', margin: 'auto'}}\r\n                >\r\n                    {`Ops!!! No Transaction History`}\r\n                </div>                \r\n            }\r\n            </td>\r\n        </tr>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default JournalListTable\r\n","// MUI Stuff\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport MoreVertOutlined from '@material-ui/icons/MoreVertOutlined'\r\n\r\nimport { Fragment, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectStaffPosted_Journals } from '../appState/appSlice'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\nimport JournalListTable from './JournalListTable'\r\n\r\nconst JournalWidget = ({ isWidget, setIswidget }) => {\r\n    const [isView, setIsview] = useState(null)\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n    const staffJournals = useSelector(selectStaffPosted_Journals)\r\n    return (\r\n        <Fragment>\r\n            <div className='app__Widget'>\r\n                <AppWidgetHeader\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget}\r\n                    title='Journal List' \r\n                />\r\n                <>\r\n                <table className='table table-sm table-striped table-hover'>\r\n                    <thead style={{top: '60px', position: 'sticky', background: '#EDEDED'}}>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>Name or Description</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>Amount (<s>N</s>)</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>Date</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>Action</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            staffJournals&&\r\n                            staffJournals.map((sje, index) =>{\r\n                                const { name, amount, je_date, uuid, je_ID } = sje\r\n                                return (\r\n                                    <Fragment key={index}>\r\n                                        <tr>\r\n                                            <td> {index+1} </td>\r\n                                            <td> \r\n                                                <Typography variant='p'\r\n                                                    style={{color: '#20C997', cursor: 'pointer'}}\r\n                                                >\r\n                                                {`${name}`}\r\n                                                </Typography>\r\n                                            </td>\r\n                                            <td> {amount} </td>\r\n                                            <td> {new Date(je_date).toLocaleDateString()} </td>\r\n                                            <td\r\n                                                style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}\r\n                                            >\r\n                                                <div>\r\n                                                <IconButton size='small'\r\n                                                    onClick={() =>setIsview(uuid)}\r\n                                                >\r\n                                                    <MoreVertOutlined style={{color: '#20c997'}} />\r\n                                                </IconButton>\r\n                                               \r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                        {/* Component */}\r\n                                        \r\n                                        {\r\n                                        isView === uuid  &&\r\n                                        \r\n                                        <JournalListTable jeID= {je_ID} jeUID={uuid} />\r\n                                        }\r\n                                    </Fragment>\r\n                                )\r\n                            })\r\n                            \r\n                        }\r\n                        {\r\n                            staffJournals&&\r\n                            <tr\r\n                                style={{background: '#2A3F54', color: 'white'}} \r\n                            >\r\n                                <td colSpan={2}>\r\n                                    <Typography variant='subtitle1'\r\n                                        style={{color: 'white'}}\r\n                                    >\r\n                                            <b>Total:</b>\r\n                                        </Typography>\r\n                                </td>\r\n                                <td>\r\n                                    <Typography variant='subtitle1'\r\n                                        style={{color: 'white'}}\r\n                                    >\r\n                                        <b>\r\n                                            <s>N</s>: {' '}\r\n                                            {\r\n                                        calcuAmt(staffJournals)\r\n                                            }\r\n                                        </b>\r\n                                    </Typography>\r\n                                </td>\r\n                                <td colSpan={2}></td>\r\n                            </tr>\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                </>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default JournalWidget\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setAccounts, setJournals, setStaffPosted_Journals, setTransactions, setUser } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport JournalFeed from '../components/JournalFeed'\r\nimport JournalWidget from '../components/JournalWidget'\r\n\r\nconst JournalEntryScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n\r\n    // func\r\n    const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_All_Txs = () =>{\r\n        axios.get('/transaction', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(txs =>{\r\n            dispatch(setTransactions(txs.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_All_Posted_Journals =() =>{\r\n        axios.get('/journal', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(journals =>{\r\n            dispatch(setJournals(journals.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_All_Staff_Posted_Journals =() =>{\r\n        axios.get('/journal/user', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(journals =>{\r\n            dispatch(setStaffPosted_Journals(journals.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n       return (\r\n        get_AllAccounts(),\r\n        get_Session(),\r\n        get_All_Txs()\r\n       )\r\n       \r\n    }, [])\r\n    \r\n    useEffect(() =>{\r\n        get_All_Posted_Journals()\r\n        get_All_Staff_Posted_Journals()\r\n    }, [open])\r\n\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <JournalFeed\r\n                setOpen={setOpen}\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <JournalWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JournalEntryScreen\r\n","// MUI Stuff\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectPendingSales, selectToken } from \"../appState/appSlice\";\r\nimport AppBackdrop from \"./global/AppBackDrop\";\r\nimport AppHeader from \"./global/AppHeader\";\r\n\r\nconst MdFeed = ({ setApplicant, setApplication, isWidget, setIswidget }) => {\r\n  const sales = useSelector(selectPendingSales);\r\n  const token = useSelector(selectToken);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const getCustomerById = (id, applicant) => {\r\n    setOpen(true);\r\n    axios\r\n      .get(`/customer/${parseInt(id)}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((customer) => {\r\n        setOpen(false);\r\n        return (\r\n          setApplicant(customer.data[0]),\r\n          setApplication(applicant),\r\n          setIswidget(true)\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        setOpen(false);\r\n        return error;\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={`${isWidget ? \"isapp__Feed\" : \"app__Feed\"}`}>\r\n      <AppBackdrop open={open} setOpen={setOpen} />\r\n      <AppHeader title=\"Applications\" />\r\n      <section className=\"app__WidgetContainer\">\r\n        <div className=\"m-2 mt-3\">\r\n          <table\r\n            className=\"table-hover table-bordered\"\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <thead>\r\n              <th\r\n                style={{ border: \"1px solid #F7F7F7F7\", textAlign: \"center\" }}\r\n              >\r\n                #\r\n              </th>\r\n              <th\r\n                style={{ border: \"1px solid #F7F7F7F7\", textAlign: \"center\" }}\r\n              >\r\n                Customer\r\n              </th>\r\n              {!isWidget && (\r\n                <th\r\n                  style={{ border: \"1px solid #F7F7F7F7\", textAlign: \"center\" }}\r\n                >\r\n                  Property\r\n                </th>\r\n              )}\r\n              {!isWidget && (\r\n                <th\r\n                  style={{ border: \"1px solid #F7F7F7F7\", textAlign: \"center\" }}\r\n                >\r\n                  Due Date\r\n                </th>\r\n              )}\r\n              <th\r\n                style={{ border: \"1px solid #F7F7F7F7\", textAlign: \"center\" }}\r\n              >\r\n                Amount\r\n              </th>\r\n              <th\r\n                style={{ border: \"1px solid #F7F7F7F7\", textAlign: \"center\" }}\r\n              >\r\n                Paid\r\n              </th>\r\n              <th\r\n                style={{ border: \"1px solid #F7F7F7F7\", textAlign: \"center\" }}\r\n              >\r\n                Action\r\n              </th>\r\n            </thead>\r\n            <tbody>\r\n              {sales &&\r\n                sales.map((sale, index) => {\r\n                  const {\r\n                    applicant_name,\r\n                    property_name,\r\n                    due_date,\r\n                    amount,\r\n                    amount_paid,\r\n                    applicant,\r\n                  } = sale;\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td> {index + 1} </td>\r\n                      <td style={{ color: \"#2A3F54\" }}>{applicant_name}</td>\r\n                      {!isWidget && (\r\n                        <td style={{ color: \"#2A3F54\" }}>{property_name}</td>\r\n                      )}\r\n                      {!isWidget && (\r\n                        <td>{new Date(due_date).toLocaleDateString()}</td>\r\n                      )}\r\n                      <td>\r\n                        <Typography style={{ color: \"2A3F54\" }}>\r\n                          {parseInt(amount).toLocaleString()}\r\n                        </Typography>\r\n                      </td>\r\n                      <td>\r\n                        <Typography style={{ color: \"#20c997\" }}>\r\n                          {parseInt(amount_paid).toLocaleString()}\r\n                        </Typography>\r\n                      </td>\r\n                      <td\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        <div>\r\n                          <Tooltip title={`View ${applicant_name}`}>\r\n                            <IconButton\r\n                              onClick={() => getCustomerById(applicant, sale)}\r\n                              size=\"small\"\r\n                            >\r\n                              {\" \"}\r\n                              <span className=\"fa fa-eye fa-1x p-1\" />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MdFeed;\r\n","import { Button, Checkbox, FormLabel, Grid, Paper, TextField, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Fragment } from 'react'\r\n\r\nconst Receipt = ({ sale_uuid, amount, date, applicant_name, property_name }) => {\r\n    return (\r\n        <Fragment>\r\n            <Grid item lg={12} md={12} sm={12}>\r\n                <Paper className='p-2 mb-5'>\r\n                    <div style={{ display: 'flex', alignItems: 'center',\r\n                        flexDirection: 'column'\r\n                    }}>\r\n                        <Typography variant='h3'>\r\n                            SANTOS ESTATE LTD.\r\n                        </Typography>\r\n                        <Typography variant='p'>\r\n                            Suite B22 AJB Mall, Gudu District, Abuja\r\n                        </Typography>\r\n                        <Typography variant='caption'>\r\n                            Tel: 08036488807, 08023058629\r\n                        </Typography>\r\n                        <div style={{display: 'flex', alignItems: 'center'}}>\r\n                            <Button variant='contained' style={{background: '#2A3F54', \r\n                                color: 'white'}}>\r\n                                CASH RECEIPT\r\n                            </Button>\r\n                            <Typography style={{marginLeft: '10px'}}>\r\n                                <b>NO: {sale_uuid} </b>\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{display: 'flex'}}>\r\n                        <p>\r\n                            Date: </p>\r\n                            <TextField \r\n                                fullWidth\r\n                                disabled\r\n                                className='ml-3'\r\n                                value={new Date(date).toLocaleDateString()}\r\n                                size='small'\r\n                            />\r\n                        \r\n                    </div>\r\n                    <div style={{display: 'flex'}}>\r\n                        <p>\r\n                            From: </p>\r\n                            <TextField\r\n                                disabled\r\n                                fullWidth\r\n                                size='small'\r\n                                value={applicant_name}\r\n                                className='ml-3'\r\n                            />\r\n                        \r\n                    </div>\r\n                    <div style={{display: 'flex'}}>\r\n                        <p>\r\n                            Sum:  </p>\r\n                            <TextField \r\n                                fullWidth\r\n                                disabled\r\n                                size='small'\r\n                                className='ml-3'\r\n                                value={Math.round(parseInt(amount))}\r\n                            />\r\n                        \r\n                    </div>\r\n                    <div style={{display: 'flex'}}>\r\n                        \r\n                            <TextField \r\n                                fullWidth\r\n                                size='small'\r\n                                disabled\r\n                            />\r\n                            <span>Naira</span>\r\n                            <TextField \r\n                            disabled \r\n                            value={`00.00`}\r\n                            className='ml-5'\r\n                            /> Kobo\r\n                        \r\n                    </div>\r\n                    <div style={{display: 'flex'}}>\r\n                            <FormLabel> Being payment for </FormLabel>\r\n                            <TextField \r\n                                fullWidth\r\n                                disabled\r\n                                size='small'\r\n                                value={property_name}\r\n                            />\r\n                        \r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center',\r\n                    justifyContent: 'space-between'}}>\r\n                        Cheque: <Checkbox style={{border: '1px solid color: black', \r\n                                                    background: '#2A3F54'}} /> \r\n                        Cash: <Checkbox style={{border: '1px solid color: black', \r\n                                                    background: '#2A3F54'}} />\r\n                        <div\r\n                        style={{border: '2px solid black'}}\r\n                        >\r\n                            <s>N</s><input\r\n                                readOnly\r\n                                value={Math.round(parseInt(amount))}\r\n                                style={{ border: 'none', outline: 'none', margin: '5px' }}\r\n                            /> :K\r\n                        </div>\r\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                            <TextField />\r\n                            <FormLabel>\r\n                                Receiver's Signature\r\n                            </FormLabel>\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n            </Grid>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Receipt\r\n","import { Button, Grid, IconButton, } from '@material-ui/core'\r\nimport { Close, } from '@material-ui/icons'\r\nimport { MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader } from 'mdbreact'\r\nimport React from 'react'\r\nimport Receipt from './Receipt'\r\n\r\nconst CashReceipt = ({ rows, isOpen, setIsOpen}) => {\r\n    return (\r\n        <div>\r\n            <MDBModal isOpen={isOpen} size='lg'  centered\r\n            >\r\n                <MDBModalHeader\r\n                    style={{ top: '0', position: 'sticky', zIndex: 222,\r\n                    background: '#2A3F54', color: 'white'\r\n                 }}\r\n                >Receipts <sup style={{color: '#20c997'}}> {rows && rows.length} </sup> </MDBModalHeader>\r\n                <MDBModalBody>\r\n                    <Grid container>\r\n                        \r\n                        {\r\n                            rows&&\r\n                            rows.map((row, index) =>{\r\n                                return (\r\n                                    <Receipt key={index} {...row} />\r\n                                )\r\n                            })\r\n                        }\r\n                       \r\n                    </Grid>\r\n                </MDBModalBody>\r\n                <MDBModalFooter>\r\n                    \r\n                    <Button\r\n                        variant='contained'\r\n                        \r\n                        style={{background: '#2A3F54', \r\n                        color: 'white', marginRight: '25px'}}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <IconButton color='secondary'\r\n                        onClick={() =>setIsOpen(!isOpen)}\r\n                    >\r\n                        <Close color='action' />\r\n                    </IconButton>\r\n                </MDBModalFooter>\r\n            </MDBModal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CashReceipt\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  Grid,\r\n  IconButton,\r\n  Paper,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectBuildCategories,\r\n  selectPropServices,\r\n  selectToken,\r\n  selectUser,\r\n} from \"../appState/appSlice\";\r\nimport AppSnackbar from \"./global/AppSnackbar\";\r\nimport AppWidgetHeader from \"./global/AppWidgetHeader\";\r\nimport CashReceipt from \"./global/CashReceipt\";\r\n\r\nconst MdWidget = ({\r\n  applicant,\r\n  application,\r\n  open,\r\n  setOpen,\r\n  isWidget,\r\n  setIswidget,\r\n}) => {\r\n  const user = useSelector(selectUser);\r\n  const token = useSelector(selectToken);\r\n  const propServices = useSelector(selectPropServices);\r\n  const buildCategories = useSelector(selectBuildCategories);\r\n  const [success, setSuccess] = useState(false);\r\n  const [message, setMessage] = useState();\r\n  const [isOpen, setIsopen] = useState(false);\r\n  const [step, setStep] = useState(1);\r\n  const [plans, setPlans] = useState();\r\n\r\n  // handle post\r\n  const handleApproval = (e) => {\r\n    e.preventDefault();\r\n    setOpen(true);\r\n    const body = {\r\n      id: application.id,\r\n    };\r\n    axios\r\n      .post(`/sale/update`, body, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        setMessage(result.data.message);\r\n        setSuccess(true);\r\n        setOpen(false);\r\n        setIswidget(!isWidget);\r\n      })\r\n      .catch((error) => {\r\n        setOpen(false);\r\n        if (error) {\r\n          return error.response.statusText;\r\n        }\r\n      });\r\n  };\r\n\r\n  // func\r\n  const get_Sales_Scheldules = (uuid) => {\r\n    axios\r\n      .get(`/sale/scheldule/${uuid}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((scheluls) => {\r\n        setPlans(scheluls.data);\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    return get_Sales_Scheldules(application.uuid);\r\n  }, [applicant, application]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {!applicant && (\r\n        <div className=\"app__Widget\">\r\n          <Typography color=\"error\" variant=\"h6\">\r\n            Invalid Customer\r\n          </Typography>\r\n        </div>\r\n      )}\r\n      {applicant && (\r\n        <div className=\"app__Widget\">\r\n          <AppWidgetHeader\r\n            isWidget={isWidget}\r\n            setIswidget={setIswidget}\r\n            title=\"Application Form\"\r\n          />\r\n\r\n          <CashReceipt rows={plans} isOpen={isOpen} setIsOpen={setIsopen} />\r\n          <AppSnackbar open={success} setOpen={setSuccess} message={message} />\r\n\r\n          <div className=\"row align-items-center justify-content-center d-flex m-1\"></div>\r\n          <Grid container alignItems=\"center\" justify=\"center\">\r\n            <Grid item lg={11} md={11} sm={12}>\r\n              <Paper className=\"p-2\">\r\n                <Grid item lg={12} md={12} sm={12}>\r\n                  <Grid container alignItems=\"center\" justify=\"center\">\r\n                    {step == 1 && (\r\n                      <Grid\r\n                        item\r\n                        lg={9}\r\n                        md={9}\r\n                        sm={12}\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          flexDirection: \"column\",\r\n                        }}\r\n                      >\r\n                        <Avatar\r\n                          style={{\r\n                            width: \"80px\",\r\n                            height: \"80px\",\r\n                            boxSizing: \"border-box\",\r\n                            boxShadow: \"0px 0px 1px 0px #000\",\r\n                          }}\r\n                        />\r\n\r\n                        <div\r\n                          className=\"mt-1 p-1\"\r\n                          style={{\r\n                            color: \"white\",\r\n                            background: \"#2A3F54\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            height: \"40px\",\r\n                            justifyContent: \"center\",\r\n                            width: \"80%\",\r\n                            margin: \"auto\",\r\n                            boxSizing: \"border-box\",\r\n                            boxShadow: \"0px 0px 1px 0px #000\",\r\n                          }}\r\n                        >\r\n                          <h6>APPLICATION FORM</h6>\r\n                        </div>\r\n\r\n                        <div\r\n                          className=\"mt-5 p-1\"\r\n                          style={{\r\n                            color: \"white\",\r\n                            background: \"#2A3F54\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            height: \"40px\",\r\n                            justifyContent: \"center\",\r\n                            width: \"80%\",\r\n                            margin: \"auto\",\r\n                            boxSizing: \"border-box\",\r\n                            boxShadow: \"0px 0px 5px 0px #000\",\r\n                          }}\r\n                        >\r\n                          <h6>A. PERSONAL DATA</h6>\r\n                        </div>\r\n                      </Grid>\r\n                    )}\r\n\r\n                    {step == 1 && (\r\n                      <Grid\r\n                        item\r\n                        lg={3}\r\n                        md={3}\r\n                        sm={12}\r\n                        style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                      >\r\n                        <Avatar\r\n                          variant=\"square\"\r\n                          alt={applicant && applicant.customer_name[0]}\r\n                          src={applicant && applicant.avatar}\r\n                          style={{\r\n                            width: \"100px\",\r\n                            height: \"100px\",\r\n                            boxSizing: \"border-box\",\r\n                            boxShadow: \"0px 0px 1px 0px #000\",\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                    )}\r\n                  </Grid>\r\n\r\n                  {step == 1 && (\r\n                    <Grid container spacing={1} className=\"mt-3\">\r\n                      <Grid item lg={6} md={6} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          value={applicant && applicant.customer_name}\r\n                          variant=\"outlined\"\r\n                          label=\"Name of Applicant\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={6} md={6} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.business_employer_name}\r\n                          label=\"Business Name/ RC. No\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={12} md={12} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.address_1}\r\n                          label=\"Residential Address:\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={6} md={6} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.phone_no}\r\n                          label=\"Phone No.\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={6} md={6} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.customer_email}\r\n                          label=\"Email Address:\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={6} md={6} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.customer_sex}\r\n                          label=\"Gender\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={6} md={6} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.customer_marital}\r\n                          label=\"Marital Status\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={6} md={6} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.country}\r\n                          label=\"Nationality:\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={6} md={6} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.customer_state}\r\n                          label=\"State of Origin:\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={12} md={12} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.customer_address}\r\n                          label=\"Permanent Home Address\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={12} md={12} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.postal_address}\r\n                          label=\"Postal Address:\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={6} md={6} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.occupation}\r\n                          label=\"Occupation:\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={6} md={6} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.place_work}\r\n                          label=\"Place of Work:\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={6} md={6} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.next_kin_name}\r\n                          label=\"Name of Next Kin:\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={6} md={6} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.next_kin_relate}\r\n                          label=\"Related:\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={12} md={12} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.next_kin_addrss}\r\n                          label=\"Next of Kin Address\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  <Grid item lg={12} md={12} sm={12}>\r\n                    <Grid container>\r\n                      {step == 2 && (\r\n                        <Grid\r\n                          item\r\n                          lg={12}\r\n                          md={12}\r\n                          sm={12}\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            flexDirection: \"column\",\r\n                          }}\r\n                        >\r\n                          <div\r\n                            className=\"mt-2 p-1\"\r\n                            style={{\r\n                              color: \"white\",\r\n                              background: \"#2A3F54\",\r\n                              display: \"flex\",\r\n                              height: \"40px\",\r\n                              justifyContent: \"center\",\r\n                              width: \"100%\",\r\n                              boxSizing: \"border-box\",\r\n                              boxShadow: \"0px 0px 5px 0px #000\",\r\n                            }}\r\n                          >\r\n                            <h6>B.SELECT PROPERTY</h6>\r\n                          </div>\r\n                          <div className=\"mt-3\" />\r\n                          <FormLabel>Select Property</FormLabel>\r\n                          <Select\r\n                            fullWidth\r\n                            name=\"property\"\r\n                            variant=\"outlined\"\r\n                            value={application.property}\r\n                            onChange={(e) => {}}\r\n                            style={{ height: \"40px\", width: \"100%\" }}\r\n                          >\r\n                            {propServices &&\r\n                              propServices.map((ps, index) => {\r\n                                const { id, name } = ps;\r\n                                return (\r\n                                  <option key={index} value={id}>\r\n                                    {\" \"}\r\n                                    {name}{\" \"}\r\n                                  </option>\r\n                                );\r\n                              })}\r\n                          </Select>\r\n                          <FormLabel className=\"mt-3\">Amount</FormLabel>\r\n                          <TextField\r\n                            disabled\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            value={application.amount}\r\n                            placeholder=\"Amount\"\r\n                          />\r\n                          <FormLabel className=\"mt-3\">Date</FormLabel>\r\n                          <TextField\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            name=\"sale_date\"\r\n                            value={new Date(\r\n                              application.sale_date\r\n                            ).toLocaleDateString()}\r\n                            placeholder=\"Date\"\r\n                            disabled\r\n                          />\r\n\r\n                          <FormLabel className=\"mt-3\">Select Term</FormLabel>\r\n                          <Select\r\n                            fullWidth\r\n                            name=\"period\"\r\n                            variant=\"outlined\"\r\n                            value={application.period}\r\n                            style={{\r\n                              height: \"40px\",\r\n                              width: \"100%\",\r\n                              margin: \"auto\",\r\n                            }}\r\n                          >\r\n                            <option value={7}>7 Days</option>\r\n                            <option value={14}>14 Days</option>\r\n                            <option value={21}>21 Days</option>\r\n                            <option value={28}>28 Days</option>\r\n                            <option value={30}>30 Days</option>\r\n                            <option value={60}>60 Days</option>\r\n                            <option value={90}>90 Days</option>\r\n                            <option value={120}>120 Days</option>\r\n                            <option value={150}>150 Days</option>\r\n                            <option value={180}>180 Days</option>\r\n                            <option value={210}>210 Days</option>\r\n                            <option value={240}>240 Days</option>\r\n                            <option value={270}>270 Days</option>\r\n                            <option value={300}>300 Days</option>\r\n                            <option value={330}>330 Days</option>\r\n                            <option value={360}>360 Days</option>\r\n                          </Select>\r\n                          <FormLabel className=\"mt-3\">Due Date</FormLabel>\r\n                          <TextField\r\n                            disabled\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            value={new Date(\r\n                              application.due_date\r\n                            ).toLocaleDateString()}\r\n                            placeholder=\"Due Date\"\r\n                          />\r\n                          <div>\r\n                            <IconButton onClick={() => setIsopen(true)}>\r\n                              <span className=\"fa fa-eye\" />\r\n                            </IconButton>\r\n                          </div>\r\n                        </Grid>\r\n                      )}\r\n\r\n                      {step == 2 && (\r\n                        <Grid\r\n                          item\r\n                          lg={12}\r\n                          md={12}\r\n                          sm={12}\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            flexDirection: \"column\",\r\n                          }}\r\n                        >\r\n                          <div\r\n                            className=\"mt-2 mb-2 p-1\"\r\n                            style={{\r\n                              color: \"white\",\r\n                              background: \"#2A3F54\",\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              height: \"40px\",\r\n                              justifyContent: \"center\",\r\n                              width: \"100%\",\r\n                              margin: \"auto\",\r\n                              boxSizing: \"border-box\",\r\n                              boxShadow: \"0px 0px 5px 0px #000\",\r\n                            }}\r\n                          >\r\n                            <h6>C. CATEGORIES OF BUILDING</h6>\r\n                          </div>\r\n\r\n                          {buildCategories &&\r\n                            buildCategories.map((bcategory, index) => {\r\n                              const { id, name } = bcategory;\r\n                              return (\r\n                                <div className=\"d-flex ml-5\" key={index}>\r\n                                  <FormControlLabel\r\n                                    control={\r\n                                      <Checkbox\r\n                                        name=\"build_category\"\r\n                                        checked={\r\n                                          application.build_category ==\r\n                                          bcategory.id\r\n                                        }\r\n                                        style={{\r\n                                          border: \"1px solid color: black\",\r\n                                          background: \"#2A3F54\",\r\n                                        }}\r\n                                      />\r\n                                    }\r\n                                    label={name}\r\n                                  />\r\n                                </div>\r\n                              );\r\n                            })}\r\n                        </Grid>\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {step == 2 && (\r\n                    <Grid\r\n                      item\r\n                      lg={12}\r\n                      md={12}\r\n                      sm={12}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        flexDirection: \"column\",\r\n                      }}\r\n                    >\r\n                      <div\r\n                        className=\"mt-5 p-1\"\r\n                        style={{\r\n                          color: \"white\",\r\n                          background: \"#2A3F54\",\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          height: \"40px\",\r\n                          justifyContent: \"center\",\r\n                          width: \"50%\",\r\n                          margin: \"auto\",\r\n                          boxSizing: \"border-box\",\r\n                          boxShadow: \"0px 0px 5px 0px #000\",\r\n                        }}\r\n                      >\r\n                        <h6>D. MODE OF PAYMENT</h6>\r\n                      </div>\r\n                    </Grid>\r\n                  )}\r\n                  {step == 2 && (\r\n                    <Grid item lg={12} md={12} sm={12}>\r\n                      <ul className=\"mt-3\">\r\n                        <li>\r\n                          Note That Pament should be made after the developer's\r\n                          approval before allocation. Each applicant is expected\r\n                          to pay for the follwing charges:\r\n                        </li>\r\n                        <li>\r\n                          All Payments should be made to Santos Estate Ltd. and\r\n                          evidence of payment forwarded to our corporate office\r\n                          for issuance of receipt.\r\n                        </li>\r\n                        <li>\r\n                          i have agreed that all refunds shall be limited to the\r\n                          deposit i made, less 10% administrative charges.\r\n                        </li>\r\n                        <li>\r\n                          \"Disclaimer\" SANTOS ESTATE LIMITED shall not be liable\r\n                          for any plot re-allocated if terms and conditions are\r\n                          not obligated timeously.\r\n                        </li>\r\n                      </ul>\r\n                    </Grid>\r\n                  )}\r\n                  {step == 2 && (\r\n                    <Grid\r\n                      item\r\n                      lg={12}\r\n                      md={12}\r\n                      sm={12}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        flexDirection: \"column\",\r\n                      }}\r\n                    >\r\n                      <div\r\n                        className=\"mt-5 p-1\"\r\n                        style={{\r\n                          color: \"white\",\r\n                          background: \"#2A3F54\",\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          height: \"40px\",\r\n                          justifyContent: \"center\",\r\n                          width: \"50%\",\r\n                          margin: \"auto\",\r\n                          boxSizing: \"border-box\",\r\n                          boxShadow: \"0px 0px 5px 0px #000\",\r\n                        }}\r\n                      >\r\n                        <h6>D. DECLARATION</h6>\r\n                      </div>\r\n                    </Grid>\r\n                  )}\r\n                  {step == 2 && (\r\n                    <Grid item lg={12} md={12} sm={12} className=\"mt-3\">\r\n                      <ul style={{ listStyle: \"none\" }}>\r\n                        <li>\r\n                          I/We{\" \"}\r\n                          <input\r\n                            readOnly\r\n                            value={applicant.customer_name}\r\n                            style={{\r\n                              border: \"none\",\r\n                              borderBottom: \"1px solid black\",\r\n                              outline: \"none\",\r\n                            }}\r\n                          />\r\n                          whose name and address appeared above have declared\r\n                          that the above statements are true and correct to the\r\n                          best of any knowledge, and i promise to abide by all\r\n                          rules and regulations given by the Developer\r\n                        </li>\r\n                      </ul>\r\n                      <div\r\n                        className=\"m-4\"\r\n                        style={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"column\",\r\n                          justifyContent: \"space-between\",\r\n                        }}\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\",\r\n                          }}\r\n                        >\r\n                          <input\r\n                            readOnly\r\n                            style={{\r\n                              border: \"none\",\r\n                              borderBottom: \"1px solid black\",\r\n                              outline: \"none\",\r\n                            }}\r\n                            value={user.username}\r\n                          />\r\n                          <FormLabel>\r\n                            Application Checked By\r\n                            <IconButton size=\"small\">\r\n                              <span\r\n                                className=\"fa fa-pen\"\r\n                                style={{ color: \"#1ABB9C\" }}\r\n                              />\r\n                            </IconButton>\r\n                          </FormLabel>\r\n                        </div>\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\",\r\n                          }}\r\n                        >\r\n                          <input\r\n                            style={{\r\n                              border: \"none\",\r\n                              borderBottom: \"1px solid black\",\r\n                              outline: \"none\",\r\n                            }}\r\n                            value={new Date(\r\n                              application.sale_date\r\n                            ).toLocaleDateString()}\r\n                            readOnly\r\n                          />\r\n                          <FormLabel>Date</FormLabel>\r\n                        </div>\r\n                      </div>\r\n                    </Grid>\r\n                  )}\r\n                  <Grid\r\n                    item\r\n                    lg={12}\r\n                    md={12}\r\n                    sm={12}\r\n                    style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                  >\r\n                    {step == 1 && (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        className=\"m-3\"\r\n                        onClick={() => setStep(2)}\r\n                        style={{ color: \"white\", background: \"#2A3F54\" }}\r\n                      >\r\n                        Next\r\n                      </Button>\r\n                    )}\r\n                    {step == 2 && (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        className=\"m-3\"\r\n                        onClick={() => setStep(1)}\r\n                        color=\"default\"\r\n                      >\r\n                        Previous\r\n                      </Button>\r\n                    )}\r\n                    {step == 2 && (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        className=\"m-3\"\r\n                        onClick={(e) => handleApproval(e)}\r\n                        style={{ color: \"white\", background: \"#2A3F54\" }}\r\n                      >\r\n                        Approve\r\n                      </Button>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n              <div className=\"p-2\" />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MdWidget;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport {\r\n  selectToken,\r\n  setBuildCategories,\r\n  setCustomers,\r\n  setpendingSales,\r\n  setPropServices,\r\n  setUser,\r\n} from \"../appState/appSlice\";\r\nimport AppBackdrop from \"../components/global/AppBackDrop\";\r\nimport SideBarMenu from \"../components/global/SideBarMenu\";\r\nimport MdFeed from \"../components/MdFeed\";\r\nimport MdWidget from \"../components/MdWidget\";\r\n\r\nconst MdApproveScreen = () => {\r\n  const history = useHistory();\r\n  const dispacth = useDispatch();\r\n  const token = useSelector(selectToken);\r\n  const [open, setOpen] = useState(false);\r\n  const [isWidget, setIswidget] = useState(false);\r\n  const [applicant, setApplicant] = useState();\r\n  const [application, setApplication] = useState();\r\n\r\n  // func\r\n  const getProp_Services = () => {\r\n    axios\r\n      .get(\"/prop_service\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((ps) => {\r\n        dispacth(setPropServices(ps.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  // func\r\n  //   const getCustomers = () => {\r\n  //     axios\r\n  //       .get(\"/customer\", {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${token}`,\r\n  //         },\r\n  //       })\r\n  //       .then((customer) => {\r\n  //         dispacth(setCustomers(customer.data));\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         return error;\r\n  //       });\r\n  //   };\r\n\r\n  const getBuildCategories = () => {\r\n    axios\r\n      .get(\"/build_category\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((categories) => {\r\n        dispacth(setBuildCategories(categories.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  // func\r\n  const get_PendingSales = () => {\r\n    axios\r\n      .get(`/sale`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((sales) => {\r\n        dispacth(setpendingSales(sales.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  const get_Session = () => {\r\n    axios\r\n      .get(`/auth/active`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((user) => {\r\n        dispacth(setUser(user.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      return history.push(\"/\");\r\n    }\r\n    return getProp_Services(), getBuildCategories(), get_Session();\r\n  }, []);\r\n  useEffect(() => {\r\n    return get_PendingSales();\r\n  }, [open]);\r\n  return (\r\n    <div className=\"app\">\r\n      <AppBackdrop open={open} />\r\n      <SideBarMenu />\r\n      {/* feed */}\r\n      <MdFeed\r\n        setOpen={setOpen}\r\n        isWidget={isWidget}\r\n        applicant={applicant}\r\n        setIswidget={setIswidget}\r\n        setApplicant={setApplicant}\r\n        setApplication={setApplication}\r\n      />\r\n      {/* widget */}\r\n      {isWidget && (\r\n        <MdWidget\r\n          open={open}\r\n          setOpen={setOpen}\r\n          isWidget={isWidget}\r\n          applicant={applicant}\r\n          application={application}\r\n          setIswidget={setIswidget}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MdApproveScreen;\r\n","import React from 'react'\r\nimport { Avatar, IconButton, ListItem, ListItemAvatar, ListItemText, Paper } from '@material-ui/core'\r\nimport { ChevronRight, HistoryTwoTone } from '@material-ui/icons'\r\nimport { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectCustomers } from '../appState/appSlice'\r\nconst CustomerCard = ({post, uuid, name, cusID, code, amount_paid, avatar, handle_Set_Ticket}) => {\r\n    const customers = useSelector(selectCustomers)\r\n    const get_Avatar = (ID) =>{\r\n        const avatar = customers && customers.filter(cus =>cus.id ==ID)[0].avatar\r\n        return avatar\r\n    }\r\n    return (\r\n       <Fragment>\r\n            <Paper className='mb-2' \r\n                style={{\r\n                    background: '#F7F7F7F7', \r\n                }}\r\n            >\r\n                <ListItem button\r\n                    onClick={() => handle_Set_Ticket? handle_Set_Ticket(cusID, code, amount_paid): {}}\r\n                >\r\n                    <ListItemAvatar>\r\n                        <Avatar \r\n                            alt={name}\r\n                            src={get_Avatar(cusID)}\r\n                        />\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                        primary={name}\r\n                    />\r\n                    <Link to={`/sales/tx/${uuid}/${name}`}>\r\n                        <IconButton size='small'>\r\n                            <HistoryTwoTone \r\n                                style={{color: '#20c997'}}\r\n                            />\r\n                        </IconButton>\r\n                    </Link>\r\n                    {\r\n                        post&&\r\n                        <IconButton size='small'>\r\n                            <ChevronRight />\r\n                        </IconButton>\r\n                    }\r\n                </ListItem>\r\n            </Paper>\r\n        </Fragment>\r\n)\r\n}\r\n\r\nexport default CustomerCard\r\n","import { Avatar, Button, Checkbox, Divider, FormLabel, Grid, IconButton, Paper, TextField, Typography } from '@material-ui/core'\r\nimport { CheckCircle, Close, Print } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectUser } from '../appState/appSlice'\r\n\r\nconst PostingTicket = ({ data, message, Error,\r\n        handleChange, handlePost, setData, setMessage\r\n    }) => {\r\n    const user = useSelector(selectUser)\r\n    const printReceipt =()=>{\r\n        window.print()\r\n    }\r\n    return (\r\n        <Grid item lg={12} md={12} sm={12}>\r\n            <Paper className='p-2 mb-5 printerarea'>\r\n                <div style={{ display: 'flex', alignItems: 'center',\r\n                    flexDirection: 'column'\r\n                }}>\r\n                    <Typography variant='h3'>\r\n                        SANTOS ESTATE LTD.\r\n                    </Typography>\r\n                    <Typography variant='p'>\r\n                        Suite B22 AJB Mall, Gudu District, Abuja\r\n                    </Typography>\r\n                    <Typography variant='caption'>\r\n                        Tel: 08036488807, 08023058629\r\n                    </Typography>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        {\r\n                            message && \r\n                            <IconButton size='small'>\r\n                                <CheckCircle style={{color: '#20c997'}} />\r\n                            </IconButton>\r\n                        }\r\n                        <Button variant='contained' style={{background: '#2A3F54', \r\n                            color: 'white'}}>\r\n                            CASH RECEIPT\r\n                        </Button>\r\n                        <Typography style={{marginLeft: '10px'}}>\r\n                            <b>NO: {data.rcpt_no} </b>\r\n                        </Typography>\r\n                    </div>\r\n                </div>\r\n                <div style={{display: 'flex'}}>\r\n                    <p\r\n                        style={{\r\n                            flex: 1\r\n                        }}\r\n                    >InvNo: </p>\r\n                        <TextField \r\n                            fullWidth\r\n                            type='text'\r\n                            placeholder='Slip, Ticket, Receipt Or Invoice No...'\r\n                            className='ml-3'\r\n                            name='ticket_no'\r\n                            value={data.ticket_no}\r\n                            size='small'\r\n                            onChange={e =>handleChange(e)}\r\n                        />\r\n                    <p>  Date: </p>\r\n                        <TextField \r\n                            fullWidth\r\n                            type='date'\r\n                            placeholder='Tx Date'\r\n                            className='ml-3'\r\n                            name='tx_date'\r\n                            value={data.tx_date}\r\n                            size='small'\r\n                            onChange={e =>handleChange(e)}\r\n                        />\r\n                </div>\r\n                <div style={{display: 'flex'}}>\r\n                    <p>\r\n                        From: </p>\r\n                        <TextField\r\n                            fullWidth\r\n                            size='small'\r\n                            placeholder='Customer(client)'\r\n                            value={data.applicant_name}\r\n                            className='ml-3'\r\n                        />\r\n                    \r\n                </div>\r\n                <div style={{display: 'flex'}}>\r\n                    <p>\r\n                        Sum:  </p>\r\n                        <TextField \r\n                            fullWidth\r\n                            size='small'\r\n                            type='number'\r\n                            name='amount'\r\n                            className='ml-3'\r\n                            value={data.amount}\r\n                            placeholder='Amount (10000)'\r\n                            value={data.amount}\r\n                            onChange={e =>handleChange(e)}\r\n\r\n                        />\r\n                    \r\n                </div>\r\n                <div style={{display: 'flex'}}>\r\n                        <div style={{flex: 1, display: 'flex'}}>\r\n                            <p>Amt:</p>\r\n                            <TextField \r\n                            fullWidth\r\n                            size='small'\r\n                            className='ml-3'\r\n                            placeholder='Amount in words'\r\n                            name='amount_in_words'\r\n                            value={data.amount_in_words}\r\n                            onChange={e =>handleChange(e)}\r\n                        />\r\n                        </div>\r\n                        <span>Naira</span>\r\n                        <TextField \r\n                        disabled \r\n                        value={`00.00`}\r\n                        className='ml-5'\r\n                        /> Kobo\r\n                    \r\n                </div>\r\n                <div style={{display: 'flex'}}>\r\n                        <FormLabel> Being payment for:  </FormLabel>\r\n                        <TextField\r\n                            fullWidth\r\n                            size='small'\r\n                            name='description'\r\n                            placeholder='Property'\r\n                            value={data.description}\r\n                            onChange={e =>handleChange(e)}\r\n                        />\r\n                    \r\n                </div>\r\n                <div style={{display: 'flex', alignItems: 'center',\r\n                justifyContent: 'space-between'}}>\r\n                    Cheque: <Checkbox\r\n                                size='small'\r\n                                checked={data.pay_method=='cheque'}\r\n                                onChange={() =>{setData({\r\n                                    ...data,\r\n                                    pay_method: 'cheque'\r\n                                })}}\r\n                                style={{border: '1px solid color: black', \r\n                                background: '#2A3F54'}} \r\n                            /> \r\n                    Cash: <Checkbox\r\n                                size='small' \r\n                                checked={data.pay_method=='cash'}\r\n                                onChange={() =>{setData({\r\n                                    ...data,\r\n                                    pay_method: 'cash'\r\n                                })}}                           \r\n                                style={{border: '1px solid color: black', \r\n                                background: '#2A3F54'}} \r\n                            />\r\n                    Trans: <Checkbox\r\n                                size='small' \r\n                                checked={data.pay_method=='transfer'}\r\n                                onChange={() =>{setData({\r\n                                    ...data,\r\n                                    pay_method: 'transfer'\r\n                                })}}                           \r\n                                style={{border: '1px solid color: black', \r\n                                background: '#2A3F54'}} \r\n                            />\r\n                    <div\r\n                    style={{border: '2px solid black'}}\r\n                    >\r\n                        <s>N</s><input\r\n                            readOnly\r\n                            value={parseInt(data.amount).toLocaleString()}\r\n                            style={{ border: 'none', outline: 'none', margin: '5px' }}\r\n                        /> :K\r\n                    </div>\r\n                    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                        <Avatar src={user.signature} />\r\n                        <FormLabel>\r\n                            Receiver's Signature\r\n                        </FormLabel>\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div\r\n                    className='hide-on-print'\r\n                    style={{display: 'flex', alignItems: 'center', \r\n                        justifyContent: 'center', gap: '30px'}}\r\n                >\r\n                    { Error &&\r\n                    <div\r\n                        className='mt-3'\r\n                        style={{ color: 'white', background: '#F00', \r\n                        borderRadius: '5px', padding: '0 5px 0 5px', height: 35,\r\n                        alignItems: 'center', justifyContent: 'center', display: 'flex',\r\n                        boxSizing: 'border-box', boxShadow: '0 2px 2px 0 #000' }}\r\n                    >\r\n                        {Error}\r\n                    </div>\r\n                    }\r\n                   { !message &&\r\n                    <Button variant='contained'\r\n                            className='mt-3'\r\n                                onClick={e =>handlePost(e)}\r\n                            style={{ color: 'white', background: '#2A3F54', borderRadius: '5px'}}\r\n                        >\r\n                            Post\r\n                        </Button>\r\n                    }\r\n\r\n                    {\r\n                        message &&\r\n                        <Fragment>\r\n                             <Button\r\n                                variant='contained'\r\n                               className='mt-3'\r\n                               endIcon={<Print />}\r\n                                onClick={() =>printReceipt()}\r\n                                style={{ color: 'white', background: '#20c997', borderRadius: '5px'}}\r\n                            >\r\n                                print\r\n                            </Button>\r\n                            <Button\r\n                                className='mt-3'\r\n                                onClick={() =>setMessage(false)}\r\n                                endIcon={<Close color='error' />}\r\n                                variant='outlined' color='secondary'>\r\n                                Clear\r\n                            </Button>\r\n                        </Fragment>\r\n                       \r\n                    }\r\n                </div>\r\n            </Paper>\r\n        </Grid>\r\n  \r\n    )\r\n}\r\n\r\nexport default PostingTicket\r\n","import { Grid, IconButton, Paper } from \"@material-ui/core\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectDuePayments,\r\n  selectToken,\r\n  selectTxAccounts,\r\n  selectUser,\r\n  setDuePayments,\r\n} from \"../appState/appSlice\";\r\nimport CustomerCard from \"./CustomerCard\";\r\nimport AppHeader from \"./global/AppHeader\";\r\nimport AppSnackbar from \"./global/AppSnackbar\";\r\nimport PostingTicket from \"./PostingTicket\";\r\n\r\nconst PostingFeed = ({ setOpen }) => {\r\n  const user = useSelector(selectUser);\r\n  const token = useSelector(selectToken);\r\n  const [Error, setError] = useState()\r\n  const [success, setSuccess] = useState(false);\r\n  const [message, setMessage] = useState();\r\n  const [searchKey, setSearchKey] = useState();\r\n  const [txSearch, setTxSearch] = useState();\r\n  const txAccounts = useSelector(selectTxAccounts);\r\n\r\n  const [data, setData] = useState({\r\n    rcpt_no: \"\",\r\n    ticket_no: '',\r\n    tx_date: '',\r\n    tx_type: \"CR\",\r\n    pay_method: \"\",\r\n    amount: \"\",\r\n    description: \"\",\r\n    account_FK: \"\",\r\n    postBy_FK: \"\",\r\n    applicant_name: \"\",\r\n    property_name: \"\",\r\n    due_date: \"\",\r\n    amount_in_words: \"\",\r\n    amount_paid: \"\",\r\n    amount_in_words: \"\",\r\n    signature: \"\",\r\n  });\r\n\r\n  //  func\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setData({\r\n      ...data,\r\n      [name]: value,\r\n    });\r\n  };\r\n  const handle_Set_Ticket = (applicant, code, paid) => {\r\n    const filterduepay =\r\n      txAccounts && txAccounts.filter((due) => due.cusID == applicant);\r\n\r\n    if (filterduepay.length > 0) {\r\n      return setData({\r\n        ...data,\r\n        account_FK: code,\r\n        signature: user && user.signature,\r\n        rcpt_no: filterduepay[0].uuid,\r\n        applicant_name: filterduepay[0].name,\r\n        property_name: filterduepay[0].property_name,\r\n        amount_paid: parseInt(paid),\r\n        description: \"Being payment for \",\r\n      });\r\n    }\r\n  };\r\n\r\n  // handle post\r\n  const handlePost = (e) => {\r\n    e.preventDefault();\r\n    setOpen(true);\r\n    const body = {\r\n      data,\r\n    };\r\n    axios\r\n      .post(\"/transaction\", body, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        setOpen(false);\r\n        setSuccess(true);\r\n        setMessage(result.data.message);\r\n      })\r\n      .catch((error) => {\r\n        setOpen(false);\r\n        if (error) {\r\n          setError(error.response);\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setMessage(\"\");\r\n    setData({\r\n      rcpt_no: \"\",\r\n      ticket_no: '',\r\n      tx_type: \"\",\r\n      pay_method: \"\",\r\n      amount: \"\",\r\n      description: \"\",\r\n      account_FK: \"\",\r\n      tx_date: \"\",\r\n      postBy_FK: \"\",\r\n      amount_in_words: \"\",\r\n    });\r\n  };\r\n\r\n  // handle search\r\n  useEffect(() => {\r\n    const filterTxAccounts =\r\n      txAccounts &&\r\n      txAccounts.filter((txacc) => txacc.name.includes(searchKey));\r\n    if(!filterTxAccounts) return setTxSearch('');\r\n    return setTxSearch(filterTxAccounts);\r\n  }, [searchKey]);\r\n\r\n  useEffect(() =>{\r\n    return setTxSearch('');\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"app__Feed\">\r\n      <AppSnackbar open={success} setOpen={setSuccess} message={message} />\r\n      <AppHeader title=\"Posting\" />\r\n      <div className=\"m-2\">\r\n        {/* search component */}\r\n        <section className=\"search__Container\">\r\n          <div>\r\n            <input\r\n              name=\"search\"\r\n              value={searchKey}\r\n              placeholder=\"Search...\"\r\n              onChange={(e) => setSearchKey(e.target.value)}\r\n            />\r\n            <IconButton size=\"small\" className='hide-on-print'>\r\n              <Search style={{ color: \"GrayText\" }} />\r\n            </IconButton>\r\n          </div>\r\n        </section>\r\n        <Grid container spacing={2}>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            md={3}\r\n            className=\"hide-on-print\"\r\n            style={{ overflow: \"auto\", height: \"82vh\" }}\r\n          >\r\n            {txSearch\r\n              ? txSearch.map((txacc, index) => {\r\n                  return (\r\n                    <CustomerCard\r\n                      post\r\n                      key={index}\r\n                      {...txacc}\r\n                      handle_Set_Ticket={handle_Set_Ticket}\r\n                    />\r\n                  );\r\n                })\r\n              : txAccounts &&\r\n                txAccounts.map((txacc, index) => {\r\n                  return (\r\n                    <CustomerCard\r\n                      post\r\n                      key={index}\r\n                      {...txacc}\r\n                      handle_Set_Ticket={handle_Set_Ticket}\r\n                    />\r\n                  );\r\n                })}\r\n          </Grid>\r\n          <Grid item lg={9} md={9} style={{ marginTop: -40 }}>\r\n            <PostingTicket\r\n              message={message}\r\n              setMessage={handleClear}\r\n              handlePost={handlePost}\r\n              handleChange={handleChange}\r\n              data={data}\r\n              Error={Error}\r\n              setData={setData}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostingFeed;\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken,  setCustomers, setDuePayments, setTxAccounts, setUser, } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport PostingFeed from '../components/PostingFeed'\r\n\r\nconst PostingScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n\r\n     // func\r\n    const getCustomers = () =>{\r\n        axios.get('/customer', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(asset =>{\r\n            dispatch(setCustomers(asset.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Tx_Accounts = () =>{\r\n        axios.get('/transaction/accounts', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setTxAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n     // func\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    const handle_Get_Due_Repayment = () =>{\r\n        axios.get(`/transaction/scheldules`,{\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(dues =>{\r\n            dispatch(setDuePayments(dues.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error) return error.response.statusText\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        getCustomers()\r\n        get_Session()\r\n        \r\n    }, [])\r\n    useEffect(() =>{\r\n       get_Tx_Accounts()\r\n       handle_Get_Due_Repayment()\r\n    }, [open])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} setOpen={setOpen} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <PostingFeed\r\n                setOpen={setOpen}\r\n            />            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostingScreen\r\n","// MUI Stuff\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\nimport Select from '@material-ui/core/Select'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport FormLabel from '@material-ui/core/FormLabel'\r\nimport FormGroup from '@material-ui/core/FormGroup'\r\n\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectToken, } from '../../appState/appSlice'\r\nimport AppSnackbar from '../global/AppSnackbar'\r\n\r\nconst PropServiceForm = ({ open, setOpen}) => {\r\n    const token = useSelector(selectToken)\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [success, setSuccess] = useState()\r\n    const [error, setError] = useState()\r\n    const [locations, setLocations] = useState()\r\n    const [body, setBody] = useState({\r\n        name: ''\r\n    })\r\n    const [add, setAdd] = useState(false)\r\n    const [psData, setPsData] = useState({\r\n        ps_type: '',\r\n        name: '',\r\n        sku: '',\r\n        category: '',\r\n        location: '',\r\n        product_class: '',\r\n        quantity: '',\r\n        qty_athDate: '',\r\n        reorder_point: '',\r\n        purchase_info: '',\r\n        cost: '',\r\n        description: '',\r\n        sale_options: '',\r\n        sale_price: '',\r\n        purchase_option: '',\r\n        asset_account_FK: '',\r\n        createdBy_FK: '',\r\n        expense_acc_FK: '',\r\n        income_acc_FK: '',\r\n        vendor_FK: '',\r\n    })\r\n    // func\r\n    const handleGet_Locations = () =>{\r\n        axios.get('/location', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(locations =>{\r\n            setLocations(locations.data)\r\n        })\r\n        .catch(error =>{\r\n            if(error) {\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const handle_Add_Location = () =>{\r\n        axios.post('/location', body, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(locations =>{\r\n            setBody('')\r\n            setAdd(false)\r\n        })\r\n        .catch(error =>{\r\n            if(error) {\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleChange = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n\r\n        setPsData({\r\n            ...psData,\r\n            [name]: value\r\n        })\r\n    }\r\n    const handle_Add_Prop_Service =e =>{\r\n        e. preventDefault()\r\n        // if(Error){\r\n        //     return Error\r\n        // }\r\n        setOpen(true)\r\n        axios.post('/prop_service', psData, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setOpen(false)\r\n            setIsOpen(true)\r\n            setSuccess(result.data.message)\r\n            setPsData({\r\n                ps_type: '',\r\n                name: '',\r\n                sku: '',\r\n                category: '',\r\n                product_class: '',\r\n                quantity: '',\r\n                qty_athDate: '',\r\n                reorder_point: '',\r\n                purchase_info: '',\r\n                cost: '',\r\n                description: '',\r\n                sale_options: '',\r\n                sale_price: '',\r\n                purchase_option: '',\r\n                asset_account_FK: '',\r\n                createdBy_FK: '',\r\n                expense_acc_FK: '',\r\n                income_acc_FK: '',\r\n                vendor_FK: '',\r\n            })\r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            if(error){\r\n                return setError(error.response.statusText)\r\n            }\r\n        })\r\n    }\r\n    useEffect(() =>{\r\n        Object.keys(psData).map(key =>{\r\n            if(psData[key].length <=0){\r\n                return setError('Form not valid')\r\n              \r\n            }\r\n            setError('')\r\n        })\r\n        \r\n    },[psData])\r\n\r\n    useEffect(() =>{\r\n        handleGet_Locations()\r\n    }, [add])\r\n    return (\r\n        <Fragment>\r\n            <AppSnackbar \r\n                open={isOpen} \r\n                setOpen={setIsOpen} \r\n                message={success} \r\n            />\r\n            <form className='mt-3 pl-2 pr-2'>\r\n                <Grid container spacing={2}>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormLabel>Property/Service Type</FormLabel>\r\n                        <FormGroup>\r\n                            <Select style={{height: '40px'}}\r\n                                label='Type'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='ps_type'\r\n                                value={psData.ps_type}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value></option>\r\n                                <option value='service'>Service</option>\r\n                                <option value='property'>Property</option>\r\n                            </Select>\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormLabel>(District)\r\n                            <Tooltip title='Add New District'>\r\n                                <IconButton\r\n                                    onClick={() =>setAdd(!add)}\r\n                                    size='small' className=' ml-2'\r\n                                >\r\n                                    <span className='fa fa-plus-circle'\r\n                                        style={{ color: '#20c997' }}\r\n                                    />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            {\r\n                                add &&\r\n                                <Button\r\n                                    className='ml-4'\r\n                                    onClick={() =>handle_Add_Location()}\r\n                                    size='small' variant='contained'\r\n                                    style={{background: '#2A3F54', color: 'white'}}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            }\r\n                            {\r\n                                add&&\r\n                                <span>\r\n                                    <TextField\r\n                                        value={body.name}\r\n                                        placeholder='District Name'\r\n                                        onChange={e =>setBody({\r\n                                            ...body,\r\n                                            name: e.target.value\r\n                                        })}\r\n                                    />\r\n                                </span>\r\n                            }\r\n                        </FormLabel>\r\n                        {!add && <FormGroup>\r\n                            <Select style={{height: '40px'}}\r\n                                label='Location'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='location'\r\n                                value={psData.location}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value>Select</option>\r\n                               {\r\n                                   locations&&\r\n                                   locations.map((location, index) =>{\r\n                                       const {id, name} = location;\r\n                                       return (\r\n                                        <option key={index} value={id}>{name}</option>\r\n                                       )\r\n                                   })\r\n                               }\r\n                               \r\n                            </Select>\r\n                        </FormGroup>}\r\n                    </Grid>\r\n                    {/* <Grid item lg={6} md={6}>\r\n                        <FormLabel>Property/Service Class</FormLabel>\r\n                        <FormGroup>\r\n                            <Select style={{height: '40px'}}\r\n                                label='Class'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='product_class'\r\n                                value={psData.product_class}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value></option>\r\n                                <option value=\"class1\">Class1</option>\r\n                                <option value=\"class2\">Class</option>\r\n                                <option value=\"class3\">Class3</option>\r\n                            </Select>\r\n                        </FormGroup>\r\n                    </Grid> */}\r\n                    {/* <Grid item lg={6} md={6}>\r\n                        <FormLabel>Income Account</FormLabel>\r\n                        <Select\r\n                            label='Class'\r\n                            size='small'\r\n                            variant='outlined'\r\n                            name='income_acc_FK'\r\n                            fullWidth\r\n                            value={psData.income_acc_FK}\r\n                            onChange={e =>handleChange(e)}\r\n                            style={{height: '40px'}}\r\n                        >\r\n                            <option value=''></option>\r\n                            {\r\n                                accounts&&\r\n                                accounts.map((acc, index) =>{\r\n                                    const { id, name, balance_type } = acc\r\n                                    return <option value={id} key={index} >{`${name} (${balance_type})`}</option>\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </Grid> */}\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Name'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='name'\r\n                                value={psData.name}\r\n                                placeholder='Property/Service Name'\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    {/* <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='SKU'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='sku'\r\n                                value={psData.sku}\r\n                                placeholder='Stock unit'\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid> */}\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label={`Price/Rate ${\r\n                                    parseInt(psData.sale_price).toLocaleString()\r\n                                }`}\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='sale_price'\r\n                                type='number'\r\n                                placeholder='Salling Price'\r\n                                value={psData.sale_price}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    \r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Quantity'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='quantity'\r\n                                placeholder='Product Quantity'\r\n                                value={psData.quantity}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    {/* <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Qty as of Date ?'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='qty_athDate'\r\n                                type='date'\r\n                                placeholder='Qty as of date ?'\r\n                                value={psData.qty_athDate}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid> */}\r\n                    {/* <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Reorder Point'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='reorder_point'\r\n                                placeholder='Qty Reorder Point '\r\n                                value={psData.reorder_point}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid> */}\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label={`Property Cost ${parseInt(psData.cost).toLocaleString()}`}\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='cost'\r\n                                type='number'\r\n                                placeholder='Purchase Cost price'\r\n                                value={psData.cost}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={12} md={12}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Description'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='description'\r\n                                placeholder='Description'\r\n                                value={psData.description}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    {/* <Grid item lg={12} md={12}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Purchase Info'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='purchase_info'\r\n                                placeholder='Purchase Information'\r\n                                value={psData.purchase_info}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid> */}\r\n\r\n                    {/* <Grid item lg={6} md={6}>\r\n                        <FormLabel>Expense Account</FormLabel>\r\n                        <FormGroup>\r\n                            <Select style={{height: '40px'}}\r\n                                label='Sex'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='expense_acc_FK'\r\n                                value={psData.expense_acc_FK}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value>Select</option>\r\n                                {\r\n                                    accounts&&\r\n                                    accounts.map((acc, index) =>{\r\n                                        const { id, name, balance_type } = acc\r\n                                        return <option value={id} key={index} >{`${name} (${balance_type})`}</option>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </FormGroup>\r\n                    </Grid> */}\r\n                    {/* <Grid item lg={6} md={6}>\r\n                        <FormLabel>Inventory Asset Account</FormLabel>\r\n                        <FormGroup>\r\n                            <Select style={{height: '40px'}}\r\n                                label='Inventory asset account'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='asset_account_FK'\r\n                                value={psData.asset_account_FK}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value>Select</option>\r\n                                {\r\n                                    accounts&&\r\n                                    accounts.map((acc, index) =>{\r\n                                        const { id, name, balance_type } = acc\r\n                                        return <option value={id} key={index} >{`${name} (${balance_type})`}</option>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </FormGroup>\r\n                    </Grid> */}\r\n                    {/* <Grid item lg={12} md={12}>\r\n                        <FormLabel>Vendor Buying From</FormLabel>\r\n                        <FormGroup>\r\n                            <Select style={{height: '40px'}}\r\n                                label='Vendor Buying From'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='vendor_FK'\r\n                                value={psData.vendor_FK}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value>Select</option>\r\n                                {\r\n                                    vendors&&\r\n                                    vendors.map((vendor, index) =>{\r\n                                        const { id, vendor_name} = vendor\r\n                                        return <option value={id} key={index} >{`${vendor_name}`}</option>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </FormGroup>\r\n                    </Grid>                             */}\r\n                   \r\n                    <Grid item lg={12} md={12}>\r\n                        {/* {\r\n                            Error&&\r\n                            <Typography variant='caption' color='error'>\r\n                                {Error}\r\n                            </Typography>\r\n                        } */}\r\n                        <Button\r\n                            // disabled={Error}\r\n                            onClick={e =>handle_Add_Prop_Service(e)}\r\n                            color='default' variant='contained'\r\n                            style={{ color: 'white', background: '#2A3F54', width: '100%'}}\r\n                        >\r\n                            Add\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default PropServiceForm\r\n","import React from 'react'\r\nimport PropServiceForm from './form/PropServiceForm'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst PropServiceWidget = ({ open, setOpen, isWidget, setIswidget }) => {\r\n    return (\r\n        <div className='app__Widget'>\r\n            <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Add Property/ Service' \r\n            />\r\n            <section className='app__WidgetContainer'>\r\n                <PropServiceForm\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                />\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PropServiceWidget\r\n","import React from 'react'\r\nimport { Fragment } from 'react'\r\n\r\nconst PropServiceList = ({ index, sale_price, \r\n        description, name, ps_type,cost, \r\n        active, isWidget\r\n    }) => {\r\n    return (\r\n        <Fragment>\r\n            <tr>\r\n                <td className='p-2'>{index+1} </td>\r\n                <td className='p-2'> {name} </td>\r\n                <td className='p-2'> {ps_type} </td>\r\n                <td className='p-2'> {description} </td>\r\n                <td className='p-2'> {sale_price.toLocaleString()} </td>\r\n                \r\n            </tr>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default PropServiceList\r\n","// MUI Stuff\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\n// Icons\r\nimport PlusOne from '@material-ui/icons/PlusOne'\r\n\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectLocations, selectPropServices } from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\nimport PropServiceList from './global/PropServiceList'\r\n\r\nconst PropertyServiceFeed = ({ isWidget, setIswidget }) => {\r\n    const propServices = useSelector(selectPropServices)\r\n    const locations = useSelector(selectLocations)\r\n\r\n    const renderPs = (l) =>{\r\n        const fPs = propServices && propServices.filter(ps =>ps.location == l);\r\n        return (\r\n            fPs.map((ps, index) =>(\r\n                <PropServiceList\r\n                    key={index}\r\n                    index={index}\r\n                    {...ps}\r\n                    isWidget={isWidget}\r\n                />\r\n            ))\r\n        )\r\n    }\r\n    return (\r\n        <div className={`${isWidget? 'isapp__Feed': 'app__Feed'}`}>\r\n           <AppHeader title='Property/Service' />\r\n           <div className=\"row align-items-center justify-content-center d-flex m-1\" >\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                    {/* table */}\r\n                    <h3>Property/ Servicer List <span> \r\n                        <Tooltip title='Add New Property/ Service'>\r\n                            <IconButton color='secondary'\r\n                                onClick={() =>setIswidget(!isWidget)}\r\n                            >\r\n                            <PlusOne style={{ color: '#1ABB9C'}} />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        </span></h3> \r\n                        <div className='p-3'>\r\n                        <table className=\"table-small \" style={{width: '100%', }}>\r\n                            <thead style={{position: 'sticky', top: '60px', zIndex: 222, color: 'white', background: '#2A3F54'}}>\r\n                                <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>#</th>\r\n                                <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Name</th>\r\n                                <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Type</th>\r\n                                <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}> Description</th>\r\n                                <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Sale Price</th>\r\n                                {/* <th style={{ border: '1px solid #F7F7F7F7' }}>Purchase Price</th>\r\n                                {!isWidget&&<th style={{ border: '1px solid #F7F7F7F7' }}>Actions</th>} */}\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    locations && locations.map((l, i) =>{\r\n                                        const {name, id} = l;\r\n                                        return (\r\n                                            <Fragment key={i}>\r\n                                                <tr>\r\n                                                    <td colSpan={5}>\r\n                                                        <Typography style={{color: '#20c997'}}>\r\n                                                            {name.toUpperCase()}:\r\n                                                        </Typography>\r\n                                                        \r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td colSpan={5}>\r\n                                                    {\r\n                                                        <table className=\"table-small table-hover\" style={{width: '100%'}}>\r\n                                                        <thead>\r\n                                                            <th></th>\r\n                                                            <th></th>\r\n                                                            <th></th>\r\n                                                            <th> </th>\r\n                                                            <th></th>\r\n                                                            \r\n                                                        </thead>\r\n                                                            <tbody>\r\n                                                                {renderPs(id)}\r\n                                                            </tbody>\r\n                                                       </table>\r\n                                                    }\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </Fragment>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                \r\n                            </tbody>\r\n                        </table>\r\n                        {propServices&& !propServices.length>0&&\r\n                            <div className=\"alert alert-warning\">\r\n                            <h6>No Property or Service Availabe</h6>\r\n                            </div>\r\n                        }\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PropertyServiceFeed\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setAccounts, setLocations, setPropServices, setUser, setVendors } from '../appState/appSlice'\r\nimport PropServiceWidget from '../components/PropServiceWidget'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport PropertyServiceFeed from '../components/PropertyServiceFeed'\r\n\r\nconst PropertyServiceScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n    // func\r\n    const getProp_Services = () =>{\r\n        axios.get('/prop_service', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(ps =>{\r\n            dispatch(setPropServices(ps.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n       // func\r\n       const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const getVendors = () =>{\r\n        axios.get('/vendor', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(vendor =>{\r\n            dispatch(setVendors(vendor.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    const handleGet_Locations = () =>{\r\n        axios.get('/location', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(locations =>{\r\n            dispatch(setLocations(locations.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error) {\r\n                return error\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        getProp_Services()\r\n        get_AllAccounts()\r\n        getVendors()\r\n        get_Session()\r\n        handleGet_Locations()\r\n    },[open])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <PropertyServiceFeed\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <PropServiceWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PropertyServiceScreen\r\n","import { Button, Container, FormLabel, Grid, IconButton, Paper, Select, TextField, Typography } from '@material-ui/core'\r\nimport { Delete, FileCopy, PlusOne, PlusOneOutlined, PlusOneRounded } from '@material-ui/icons'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectAccounts, selectCustomers, selectToken } from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\n\r\nconst ReceivePaymentFeed = ({ isWidget, setIswidget }) => {\r\n    const token = useSelector(selectToken)\r\n    const accounts = useSelector(selectAccounts)\r\n    const customers = useSelector(selectCustomers)\r\n    const [invoice, setInvoice] = useState()\r\n    const recievePayFormTemplate = {description: '', due_date:'', orig_amount: '', amount_pay: '',  };\r\n    const [receivePayForm, setReceivePayform] = useState([recievePayFormTemplate])\r\n    const [data, setData ] = useState({\r\n        customer_FK: '',\r\n        pay_date: '',\r\n        pay_method: '',\r\n        total: '',\r\n        deposit_account: ''\r\n    })\r\n    const handleSetPostData = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n\r\n    } \r\n\r\n    // func\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n\r\n    // func\r\n    const addReceivePayFrom = () =>{\r\n        setReceivePayform([\r\n            ...receivePayForm,\r\n            recievePayFormTemplate\r\n        ])\r\n    }\r\n    const handleChange = (e, index) =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n        const updatedreceivePayform = receivePayForm.map((jef, i) => index == i ? Object.assign(jef, {[name]: value}): jef);\r\n        setReceivePayform(updatedreceivePayform)\r\n    }\r\n    const handleRemovereceivePayform = (index) =>{\r\n        const filterreceivePayform = [...receivePayForm];\r\n        filterreceivePayform.splice(index, 1);\r\n        \r\n        setReceivePayform(filterreceivePayform)\r\n    }\r\n    const handleSubmit =e =>{\r\n        console.log(receivePayForm)\r\n    }\r\n\r\n    const get_Customer_Invoice = () =>{\r\n        axios.get(`/invoice/open_invoice/${data.customer_FK}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setInvoice(result.data)\r\n            console.log(result.data)\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        get_Customer_Invoice()\r\n    }, [data.customer_FK])\r\n    return (\r\n        <div className={`${isWidget? 'isapp__Feed': 'app__Feed'}`}>\r\n           <AppHeader title='Receive Payment' />\r\n           <div className=\"row align-items-center justify-content-center d-flex m-1\" >\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                    {/* table */}\r\n                    {/* <h3>Received Payment\r\n                        <span> \r\n                        <IconButton color='secondary'\r\n                            onClick={() =>setIswidget(!isWidget)}\r\n                        >\r\n                        <FileCopy style={{ color: '#1ABB9C'}} />\r\n                        </IconButton></span>\r\n                    </h3>  */}\r\n                        {/* to do make it a component */}\r\n                        <Grid container spacing={2} className='p-3'>\r\n                            <Grid item lg={4} md={4}>\r\n                                <FormLabel>Customer</FormLabel>\r\n                                <select\r\n                                    name='customer_FK'\r\n                                   \r\n                                    placeholder='Customer'\r\n                                    style={{border: 'none'}}\r\n                                    onChange={e =>handleSetPostData(e)}\r\n                                >\r\n                                    <option value=''>Select</option>\r\n                                    {\r\n                                        customers&&\r\n                                        customers.map((cus, index) =>{\r\n                                            const{id, customer_name} = cus\r\n                                            return <option key={index} value={id} > {customer_name} </option>\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </Grid>\r\n                                \r\n                                <Grid item lg={8} md={8}\r\n                                    style={{display: 'flex', \r\n                                    justifyContent: 'flex-end', alignItems: 'flex-end', flexDirection: 'column'}}\r\n                                >\r\n                                    <FormLabel>Received Amount</FormLabel>\r\n                                    <Typography variant='h5'>\r\n                                        <s>N</s>: {\r\n                                            invoice&&\r\n                                            calcuAmt(invoice)\r\n                                        }\r\n                                    </Typography>\r\n                                </Grid>\r\n                                \r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Pay Method</FormLabel>\r\n                                    <select\r\n                                        name='pay_method'\r\n                                        onChange={e =>handleSetPostData(e)}\r\n                                        style={{width: '100%', outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                    >\r\n                                        <option></option>\r\n                                        <option value='cash'>Cash</option>\r\n                                        <option value='cheque'>Cheque</option>\r\n                                    </select>\r\n                                </Grid>\r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Payment Date</FormLabel>\r\n                                    <input\r\n                                        name='pay_date'\r\n                                        type='date'\r\n                                        value={data.pay_date}\r\n                                        onChange={e =>handleSetPostData(e)}\r\n                                        style={{width: '100%', outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Deposit To</FormLabel>\r\n                                    <select\r\n                                        name='deposit_account'\r\n                                        value={data.deposit_account}\r\n                                        style={{width: '100%', outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                    >\r\n                                        <option></option>\r\n                                        <option value='cash'>Cash</option>\r\n                                        {\r\n                                            accounts&&\r\n                                            accounts.map((acc, index) =>{\r\n                                                const{id, name} = acc;\r\n                                                return <option key={index} value={id}> {name} </option>\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                </Grid>\r\n                            \r\n                        </Grid>\r\n                        <h5>\r\n                            Details\r\n                        </h5>\r\n                    <Paper>\r\n                        <Container className='p-3'>\r\n                        <table className=\"table-small table-hover table-bordered\" style={{width: '100%'}}>\r\n                            <thead>\r\n                                \r\n                                <th>#</th>\r\n                                {/* <th> {' '} </th> */}\r\n                                <th>Description</th>\r\n                                <th>Due Date</th>\r\n                                <th>Amount (<s>N</s>) </th>\r\n                               \r\n                            </thead>\r\n                            <tbody id='je__Table'>\r\n                                {\r\n                                    invoice && \r\n                                    invoice.map((invoi, index) =>{\r\n                                        const { amount, uuid, due_date } = invoi\r\n                                        return (\r\n                                            <Fragment key={index}>\r\n                                                <tr>\r\n                                                    <td> { index+1} </td>\r\n                                                    <td>\r\n                                                        <Typography variant='p'\r\n                                                            style={{cursor: 'pointer', color: '#20C997'}}\r\n                                                        >\r\n                                                            { `Invoice (${uuid})` }\r\n                                                        </Typography>\r\n                                                    </td>\r\n                                                    <td> { new Date(due_date).toLocaleDateString() } </td>\r\n                                                    <td> { amount } </td>\r\n                                                </tr>\r\n                                            </Fragment>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                {/* {\r\n                                    receivePayForm.map((jef, index) =>(\r\n                                        <tr>\r\n                                            <td>{index+1} </td>\r\n                                            <td\r\n                                                    onClick={() =>addReceivePayFrom()}\r\n                                                >\r\n                                                    <span className='fa fa-plus-circle fa-1x'></span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <select\r\n                                                    name='pro_service'\r\n                                                    value={jef.account}\r\n                                                    placeholder='Account'\r\n                                                    style={{border: 'none'}}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                >\r\n                                                    <option value=''></option>\r\n                                                    {\r\n                                                        accounts&&\r\n                                                        accounts.map((acc, index) =>{\r\n                                                            const { id, name, balance_type } = acc\r\n                                                            return <option value={id} key={index} >{`${name} (${balance_type})`}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </select>\r\n                                            </td>\r\n                                            \r\n                                            <td>\r\n                                                <input\r\n                                                    name='due_date'\r\n                                                    value={jef.due_date}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                            <td>\r\n                                                <input\r\n                                                    name='qty'\r\n                                                    type='number'\r\n                                                    placeholder='Old Amount'\r\n                                                    value={jef.orig_amount}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                            <td>\r\n                                                <input\r\n                                                    name='rate'\r\n                                                    type='number'\r\n                                                    placeholder='Payment Amount'\r\n                                                    value={jef.amount_pay}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                         \r\n                                        </tr>\r\n                                    ))\r\n                                } */}\r\n                            \r\n                            </tbody>\r\n                        </table>\r\n                        {invoice&& !invoice.length>0&&\r\n                            <div className=\"alert alert-warning\">\r\n                            <h6>No Invoice Availabe For Selected Customer</h6>\r\n                            </div>\r\n                        }\r\n                        <Button\r\n                           className='m-3'\r\n                           variant='contained'\r\n                           onClick={e =>handleSubmit(e)}\r\n                           style={{background: '#2A3F54', color: 'white'}}\r\n                        >Save</Button>\r\n                        </Container>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReceivePaymentFeed\r\n","import { Paper } from '@material-ui/core'\r\nimport React from 'react'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst ReceivePaymentWidget = ({ open, setOpen, isWidget, setIswidget }) => {\r\n    return (\r\n        <div className='app__Widget'>\r\n            <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Received Payment' \r\n            />\r\n            <section className='app__WidgetContainer'>\r\n                {/* <AccountCreationForm\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                /> */}\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReceivePaymentWidget\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setAccounts, setCustomers, setUser } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport ReceivePaymentFeed from '../components/ReceivePaymentFeed'\r\nimport ReceivePaymentWidget from '../components/ReceivePaymentWidget'\r\n\r\nconst ReceivePaymentScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n\r\n    // func\r\n    const getCustomers = () =>{\r\n        axios.get('/customer', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(asset =>{\r\n            dispatch(setCustomers(asset.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        get_AllAccounts()\r\n        getCustomers()\r\n        get_Session()\r\n    }, [])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <ReceivePaymentFeed\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <ReceivePaymentWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReceivePaymentScreen\r\n","import { Button, Grid, Typography } from '@material-ui/core'\r\nimport { UndoRounded } from '@material-ui/icons'\r\nimport React, {useEffect} from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectAccounts, selectPaymentHistory, selectTxAccounts } from '../appState/appSlice'\r\nimport CustomerCard from './CustomerCard'\r\nimport AppHeader from './global/AppHeader'\r\n\r\nconst SalePaidHistoryFeed = () => {\r\n    const params = useParams()\r\n    const {name} = params\r\n    const history = useHistory()\r\n    const txAccounts = useSelector(selectTxAccounts)\r\n    const paymentHistorys = useSelector(selectPaymentHistory)\r\n    const accounts = useSelector(selectAccounts)\r\n\r\n    const renderAccountDetails = (account_FK) =>{\r\n        \r\n        const account = accounts && accounts.find(acc =>acc.code == account_FK )\r\n        console.log(account_FK)\r\n        return account && account.name\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className='app__Feed'>\r\n            <AppHeader title='Posting' />\r\n            <div className='m-3'>\r\n                <Grid container spacing={2}>\r\n                    <Grid item lg={3} md={3}\r\n                        style={{\r\n                            height: '90vh',\r\n                            overflow: 'auto',\r\n                            position: 'sticky'\r\n                        }}\r\n                    >\r\n                    {\r\n                        txAccounts&&\r\n                        txAccounts.map((txacc, index) => {\r\n                            return (\r\n                                <CustomerCard key={index} {...txacc} \r\n                                    \r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                        \r\n                    </Grid>\r\n                    <Grid item lg={9} md={9} >\r\n                        <table className='table table-sm table-striped table-hover'>\r\n                            <thead>\r\n                                <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                                <th style={{ border: '1px solid #F7F7F7F7' }}>Description</th>\r\n                                <th style={{ border: '1px solid #F7F7F7F7' }}>Date</th>\r\n                                <th style={{ border: '1px solid #F7F7F7F7' }}>RCPT. NO.</th>\r\n                                {/* <th style={{ border: '1px solid #F7F7F7F7' }}>Name</th> */}\r\n                                <th style={{ border: '1px solid #F7F7F7F7' }}>Amount (<s>N</s>)</th>\r\n                                <th style={{ border: '1px solid #F7F7F7F7' }}> Pay Method </th>\r\n                                <th style={{ border: '1px solid #F7F7F7F7' }}> Status </th>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    paymentHistorys &&\r\n                                    paymentHistorys.map((pay, index) =>{\r\n                                        const { tx_date, description, tx_amount, rcpt_no, pay_method, account_FK, paid } = pay\r\n                                        return (\r\n                                            <Fragment key={index}>\r\n                                                <tr>\r\n                                                    <td> {index+1} </td>\r\n                                                    <td>\r\n                                                    \r\n                                                        {description}\r\n                                                    \r\n                                                    </td>\r\n                                                    <td> {new Date(tx_date).toLocaleDateString()} </td>\r\n                                                    <td> {rcpt_no} </td>\r\n                                                    {/* <td> {account_FK} </td> */}\r\n                                                    <td>\r\n                                                        <Typography color='error'>\r\n                                                        { tx_amount.toLocaleString() }\r\n                                                        </Typography>\r\n                                                    </td>\r\n                                                    <td> {pay_method} </td>\r\n                                                    <td>\r\n                                                        {\r\n                                                            paid === 0 ?(\r\n                                                                <Typography>\r\n                                                                    Posted\r\n                                                                </Typography>\r\n                                                            ):\r\n                                                            (\r\n                                                                <Typography>\r\n                                                                    Credited\r\n                                                                </Typography>\r\n                                                            )\r\n                                                        }\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </Fragment>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                {paymentHistorys && paymentHistorys.length > 0 &&\r\n                                    <tr\r\n                                    style={{background: '#2A3F54', color: 'white'}}\r\n                                    >\r\n                                        <td  colSpan={2}>\r\n                                            <Typography\r\n                                                style={{\r\n                                                    color: '#20c997',\r\n                                                    fontWeight: '500'\r\n                                                }}\r\n                                            >\r\n                                            <span style={{color: 'lightgray'}} >Amount:</span> <s>N</s>: {paymentHistorys[0].amount.toLocaleString()}  \r\n                                            </Typography>\r\n                                        </td>\r\n                                        <td colSpan={2}>\r\n                                            <Typography >\r\n                                                Outstanding Balance\r\n                                            </Typography>\r\n                                        </td>\r\n                                    {\r\n                                        paymentHistorys && paymentHistorys.length>0&&\r\n                                        <td colSpan={3}>\r\n                                            <Typography\r\n                                                style={{color: 'white'}}\r\n                                            >\r\n                                                <s>N</s>: \r\n                                            {\r\n                                                parseInt(parseInt(paymentHistorys[0].amount) -parseInt(paymentHistorys[0].amount_paid))\r\n                                                .toLocaleString()\r\n                                            }\r\n                                            </Typography>\r\n                                            \r\n                                        </td>\r\n                                    }\r\n                                    </tr>\r\n                                }\r\n                            </tbody>\r\n                           \r\n                        </table>\r\n                        {\r\n                            !paymentHistorys.length >0&&\r\n                            \r\n                            <div className='alert alert-warning'>\r\n                                {`Ops!!! ${name} have no repayment history`}\r\n                            </div>\r\n                        \r\n                        }\r\n                        <section\r\n                            className='mt-5'\r\n                            style={{display: 'flex', alignItems: 'center', \r\n                            justifyContent: 'center'}}\r\n                        >\r\n                        <Button\r\n                            size='medium'\r\n                            variant='contained'\r\n                            onClick={() =>history.goBack()}\r\n                            style={{background: '#2A3F54',color: 'white'}}\r\n                            endIcon={<UndoRounded style={{color: '#20c997'}} />}\r\n                        >\r\n                            Back\r\n                        </Button>\r\n                        </section>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SalePaidHistoryFeed\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken,  setAccounts,  setCustomers, setDuePayments, setPaymentHistory, setTxAccounts, setUser, } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport SalePaidHistoryFeed from '../components/SalePaidHistoryFeed'\r\n\r\nconst SalePaymentHistScreen = () => {\r\n    const params = useParams()\r\n    const {uuid} = params\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n\r\n     // func\r\n    const getCustomers = () =>{\r\n        axios.get('/customer', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(asset =>{\r\n            dispatch(setCustomers(asset.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    const get_Payment_History = () =>{\r\n        axios.get(`/sale/payment_history/${uuid}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(phistory =>{\r\n            dispatch(setPaymentHistory(phistory.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n  \r\n\r\n    const get_Tx_Accounts = () =>{\r\n        axios.get('/transaction/accounts', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setTxAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n     // func\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    const handle_Get_Due_Repayment = () =>{\r\n        axios.get(`/transaction/scheldules`,{\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(dues =>{\r\n            dispatch(setDuePayments(dues.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error) return error.response.statusText\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        getCustomers()\r\n        get_Session()\r\n        \r\n    }, [])\r\n    useEffect(() =>{\r\n        get_Tx_Accounts()\r\n        handle_Get_Due_Repayment()\r\n      \r\n    }, [open])\r\n\r\n    useEffect(() => {\r\n        get_Payment_History()\r\n        \r\n    }, [uuid])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} setOpen={setOpen} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <SalePaidHistoryFeed\r\n                setOpen={setOpen}\r\n            />            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SalePaymentHistScreen\r\n","import { IconButton, Select } from '@material-ui/core'\r\nimport { Close } from '@material-ui/icons'\r\nimport { MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader } from 'mdbreact'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectCustomers } from '../../appState/appSlice'\r\n\r\nconst SelectApplicant = ({ open, setOpen, applicant, setApplicant }) => {\r\n    const [selected, setSelected] = useState()\r\n    const customers = useSelector(selectCustomers)\r\n    useEffect(() =>{\r\n        const selectedApplicant = customers&& customers.filter(customer => parseInt(customer.id) == parseInt(selected))\r\n        setApplicant(selectedApplicant[0])\r\n        setOpen(!open)\r\n        \r\n    }, [selected])\r\n    return (\r\n        <div>\r\n            <MDBModal isOpen={open} centered backdrop={false}>\r\n                <MDBModalHeader>Select Applicant</MDBModalHeader>\r\n                <MDBModalBody>\r\n                   \r\n                    <select\r\n                        name='custom_FK'\r\n                        value={selected}\r\n                        style={{height: '40px', width: '100%'}}\r\n                        onChange={e =>setSelected(e.target.value)}\r\n                    >\r\n                        <option>Select</option>\r\n                        {\r\n                            customers&&\r\n                            customers.map((customer, i) =>{\r\n                                const {id, customer_name} = customer\r\n                                return <option key={i} value={id}> {customer_name} </option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                                        \r\n                </MDBModalBody>\r\n                <MDBModalFooter>\r\n                   \r\n                    <IconButton color='secondary'\r\n                        onClick={() =>setOpen(!open)}\r\n                    >\r\n                        <Close color='action' />\r\n                    </IconButton>\r\n                </MDBModalFooter>\r\n            </MDBModal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectApplicant\r\n","import axios from \"axios\";\r\n// MUI Stuff\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ToolTip from \"@material-ui/core/ToolTip\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectLocations,\r\n  selectPropServices,\r\n  selectBuildCategories,\r\n} from \"../appState/appSlice\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst SaleMultipleFeed = ({\r\n  add,\r\n  data,\r\n  error,\r\n  success,\r\n  setData,\r\n  Exist,\r\n  setAdd,\r\n  body,\r\n  setBody,\r\n  handlePost,\r\n  add_BuildCategories,\r\n}) => {\r\n  const locations = useSelector(selectLocations);\r\n  const buildCategories = useSelector(selectBuildCategories);\r\n\r\n  const properties = useSelector(selectPropServices);\r\n  const saleFormTemplate = {\r\n    qty: \"\",\r\n    amount: \"\",\r\n    sale_ID: \"\",\r\n    property: \"\",\r\n    location: \"\",\r\n    createdAt: \"\",\r\n    build_category: \"\",\r\n  };\r\n  const [saleForm, setSaleForm] = useState([saleFormTemplate]);\r\n\r\n  // func\r\n  const addSaleFrom = () => {\r\n    setSaleForm([...saleForm, saleFormTemplate]);\r\n  };\r\n  const handleChange = (e, index) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    const updatedsaleform = saleForm.map((salef, i) =>\r\n      index == i ? Object.assign(salef, { [name]: value }) : salef\r\n    );\r\n    setSaleForm(updatedsaleform);\r\n\r\n    if (name == \"qty\" || name == \"property\") {\r\n      const updatedsaleform = saleForm.map((salef, i) =>\r\n        index == i\r\n          ? Object.assign(salef, {\r\n              sale_ID: data.uuid,\r\n              createdAt: data.sale_date,\r\n              amount: renderAmount(\r\n                saleForm[index].property,\r\n                index,\r\n                saleForm[index].qty\r\n              ),\r\n            })\r\n          : salef\r\n      );\r\n      return setData({\r\n        ...data,\r\n\r\n        tx_date: data.sale_date,\r\n        total: calcuAmt(saleForm),\r\n      });\r\n    }\r\n  };\r\n\r\n  const renderAmount = (pro, formIndex, qty) => {\r\n    const proExist = properties && properties.find((prop) => prop.id == pro);\r\n\r\n    const total = proExist && parseInt(proExist.sale_price) * parseInt(qty);\r\n    return total;\r\n  };\r\n  const handleRemovesaleform = (index) => {\r\n    const filtersaleform = [...saleForm];\r\n    filtersaleform.splice(index, 1);\r\n\r\n    setSaleForm(filtersaleform);\r\n  };\r\n\r\n  const calcuAmt = (data) => {\r\n    const total = data && data.reduce((a, v) => +v.amount + a, 0);\r\n    return total;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fdata = saleForm.map((x) => Object.values(x));\r\n    const findal = [];\r\n    // const data = fdata\r\n    for (let i = 0; i < fdata.length; i++) {\r\n      const element = fdata[i];\r\n      findal.push(element);\r\n    }\r\n\r\n    setData({\r\n      ...data,\r\n      VALUES: findal,\r\n    });\r\n  }, [saleForm]);\r\n\r\n  useEffect(() => {\r\n    setData({\r\n      ...data,\r\n      total: calcuAmt(saleForm),\r\n    });\r\n  }, [data.VALUES]);\r\n\r\n  //   handle error / post\r\n  //   const isDisable = (Form) => {\r\n  //     const error =\r\n  //       Form &&\r\n  //       Form.map((exform) =>\r\n  //         !exform[\"property\"].length > 0 ||\r\n  //         !exform[\"amount\"].length > 0 ||\r\n  //         !exform[\"build_category\"].length > 0\r\n  //           ? true\r\n  //           : false\r\n  //       );\r\n\r\n  //     const filterError = error && error.includes(true) ? true : false;\r\n  //     // console.log(filterError);\r\n  //     return filterError;\r\n  //   };\r\n\r\n  const handleSetTerm = (e) => {\r\n    const d = new Date();\r\n    const sd = new Date();\r\n    const value = e.target.value;\r\n    const duedate = d.setDate(sd.getDate() + parseInt(value));\r\n    return setData({\r\n      ...data,\r\n      period: value,\r\n      due_date: new Date(duedate),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    return setSaleForm([saleFormTemplate]);\r\n  }, [success]);\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: \"#ededed\",\r\n        position: \"sticky\",\r\n        zIndex: 222,\r\n        top: \"60px\",\r\n      }}\r\n    >\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-12 col-md-12\">\r\n          {/* to do make it a component */}\r\n          <Grid container spacing={2} className=\"p-3\">\r\n            <Grid item lg={4} md={4}>\r\n              <FormLabel>Date</FormLabel>\r\n              <input\r\n                name=\"sale_date\"\r\n                type=\"date\"\r\n                value={data.sale_date}\r\n                onChange={(e) =>\r\n                  setData({\r\n                    ...data,\r\n                    sale_date: e.target.value,\r\n                  })\r\n                }\r\n                style={{\r\n                  width: \"100%\",\r\n                  outline: \"none\",\r\n                  border: \"none\",\r\n                  height: \"30px\",\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={4} md={4}>\r\n              <FormLabel>Term</FormLabel>\r\n              <select\r\n                name=\"period\"\r\n                style={{ border: \"none\" }}\r\n                value={data.period}\r\n                onChange={(e) => handleSetTerm(e)}\r\n              >\r\n                <option value=\"\"></option>\r\n                <option value={7}>7 Days</option>\r\n                <option value={14}>14 Days</option>\r\n                <option value={21}>21 Days</option>\r\n                <option value={28}>28 Days</option>\r\n                <option value={30}>30 Days</option>\r\n                <option value={60}>60 Days</option>\r\n                <option value={90}>90 Days</option>\r\n                <option value={120}>120 Days</option>\r\n                <option value={150}>150 Days</option>\r\n                <option value={180}>180 Days</option>\r\n                <option value={210}>210 Days</option>\r\n                <option value={240}>240 Days</option>\r\n                <option value={270}>270 Days</option>\r\n                <option value={300}>300 Days</option>\r\n                <option value={330}>330 Days</option>\r\n                <option value={360}>360 Days</option>\r\n              </select>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              lg={4}\r\n              md={4}\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n                alignItems: \"flex-end\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <FormLabel>Amount</FormLabel>\r\n              <Typography variant=\"h5\" style={{ color: \"#20c997\" }}>\r\n                <s>N</s>: {saleForm && calcuAmt(saleForm).toLocaleString()}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item lg={4} md={4}>\r\n              <TextField\r\n                disabled\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                label=\"Due Date\"\r\n                value={new Date(data.due_date).toLocaleDateString()}\r\n                placeholder=\"Due Date\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <h5 className=\"ml-3\">Details</h5>\r\n          <Paper elevation={0} style={{ backgroundColor: \"inherit\" }}>\r\n            <Container>\r\n              <table\r\n                className=\"table-small table-hover\"\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <thead>\r\n                  <th>#</th>\r\n                  <th> </th>\r\n                  <th>Location</th>\r\n                  <th>Property</th>\r\n                  <th>Quantity</th>\r\n                  <th>Amount</th>\r\n                  <th>\r\n                    Building Category\r\n                    <span className=\"ml-3\">\r\n                      <IconButton size=\"small\" onClick={() => setAdd(!add)}>\r\n                        <span\r\n                          className=\"fa fa-plus-circle\"\r\n                          style={{ color: \"#20c997\" }}\r\n                        />\r\n                      </IconButton>\r\n                    </span>\r\n                    {add && (\r\n                      <div\r\n                        className=\"m-3\"\r\n                        style={{\r\n                          display: \"flex\",\r\n                          flex: 1,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        <TextField\r\n                          fullWidth\r\n                          size=\"small\"\r\n                          value={body.name}\r\n                          variant=\"outlined\"\r\n                          label=\"Build Category\"\r\n                          placeholder=\"New...\"\r\n                          onChange={(e) =>\r\n                            setBody({\r\n                              ...body,\r\n                              name: e.target.value,\r\n                            })\r\n                          }\r\n                        />\r\n                        <div\r\n                          onClick={() => setAdd(!add)}\r\n                          className=\"d-flex align-items-center\"\r\n                        >\r\n                          <Button\r\n                            onClick={() => add_BuildCategories(body)}\r\n                            size=\"medium\"\r\n                            variant=\"contained\"\r\n                            style={{ background: \"#2A3F54\", color: \"white\" }}\r\n                          >\r\n                            Save\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </th>\r\n\r\n                  <th></th>\r\n                </thead>\r\n                <tbody id=\"je__Table\">\r\n                  {saleForm.map((salef, index) => (\r\n                    <Fragment key={index}>\r\n                      <tr>\r\n                        <td>{index + 1} </td>\r\n                        <td onClick={() => addSaleFrom()}>\r\n                          <ToolTip title=\"Add New Row\">\r\n                            <span\r\n                              className=\"fa fa-plus-circle fa-1x\"\r\n                              style={{ color: \"#20c997\" }}\r\n                            />\r\n                          </ToolTip>\r\n                        </td>\r\n                        <td>\r\n                          <select\r\n                            name=\"location\"\r\n                            value={salef.location}\r\n                            style={{ border: \"none\" }}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          >\r\n                            <option value=\"\"></option>\r\n                            {locations &&\r\n                              locations.map((locat, index) => {\r\n                                const { id, name } = locat;\r\n                                return (\r\n                                  <Fragment key={index}>\r\n                                    <option\r\n                                      value={id}\r\n                                      key={index}\r\n                                    >{`${name}`}</option>\r\n                                  </Fragment>\r\n                                );\r\n                              })}\r\n                          </select>\r\n                        </td>\r\n                        <td>\r\n                          <select\r\n                            name=\"property\"\r\n                            value={salef.property}\r\n                            placeholder=\"Property\"\r\n                            style={{ border: \"none\" }}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          >\r\n                            <option value=\"\"></option>\r\n                            {properties &&\r\n                              properties.map((ps) => {\r\n                                const { id, name, location } = ps;\r\n                                if (location == salef.location)\r\n                                  return (\r\n                                    <Fragment key={id}>\r\n                                      <option key={id} value={id}>\r\n                                        {\" \"}\r\n                                        {name}{\" \"}\r\n                                      </option>\r\n                                    </Fragment>\r\n                                  );\r\n                              })}\r\n                          </select>\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            name=\"qty\"\r\n                            type=\"number\"\r\n                            placeholder=\"Quantity\"\r\n                            value={salef.qty}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            name=\"amount\"\r\n                            type=\"number\"\r\n                            placeholder=\"Amount\"\r\n                            value={salef.amount}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          />\r\n                        </td>\r\n\r\n                        <td>\r\n                          <select\r\n                            name=\"build_category\"\r\n                            value={salef.build_category}\r\n                            style={{ border: \"none\" }}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          >\r\n                            <option value=\"\"></option>\r\n                            {buildCategories &&\r\n                              buildCategories.map((building, index) => {\r\n                                const { id, name } = building;\r\n                                return (\r\n                                  <option\r\n                                    value={id}\r\n                                    key={index}\r\n                                  >{`${name}`}</option>\r\n                                );\r\n                              })}\r\n                          </select>\r\n                        </td>\r\n\r\n                        <td onClick={() => handleRemovesaleform(index)}>\r\n                          <ToolTip title=\"Delete Row\">\r\n                            <span\r\n                              className=\"fa fa-trash\"\r\n                              style={{ color: \"red\" }}\r\n                            ></span>\r\n                          </ToolTip>\r\n                        </td>\r\n                      </tr>\r\n                    </Fragment>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-end\",\r\n                }}\r\n              >\r\n                {Exist && (\r\n                  <Typography variant=\"body2\" color=\"error\">\r\n                    {\" \"}\r\n                    {Exist}{\" \"}\r\n                  </Typography>\r\n                )}\r\n                {error && (\r\n                  <div\r\n                    style={{ \r\n                      height: 40,\r\n                      display: 'flex',\r\n                      color: \"white\", \r\n                      background: \"red\",\r\n                      flexDirection: 'row',\r\n                      alignItems: 'center',\r\n                      alignSelf: 'center',\r\n                      borderRadius: 5,\r\n                      padding: '0 5px 0 5px',\r\n                      justifyContent: 'center',\r\n                      boxSizing: 'border-box',\r\n                      boxShadow: '0 2px 3px 0 gray'\r\n                  }}\r\n                  >\r\n                    {error}\r\n                  </div>\r\n                )}\r\n                <Button\r\n                  className=\"m-3\"\r\n                  variant=\"contained\"\r\n                  //   disabled={isDisable(saleForm)}\r\n                  onClick={(e) => handlePost(e)}\r\n                  style={{ background: \"#2A3F54\", color: \"white\" }}\r\n                >\r\n                  Post\r\n                </Button>\r\n              </div>\r\n            </Container>\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SaleMultipleFeed;\r\n","import axios from \"axios\";\r\n// MUI Stuff\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FileCopy from \"@material-ui/icons/FileCopy\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  selectBuildCategories,\r\n  selectLocations,\r\n  selectPropServices,\r\n  selectToken,\r\n  selectUser,\r\n  setLocations,\r\n} from \"../appState/appSlice\";\r\nimport AppHeader from \"./global/AppHeader\";\r\nimport AppSnackbar from \"./global/AppSnackbar\";\r\nimport SelectApplicant from \"./global/SelectApplicant\";\r\nimport { Fragment } from \"react\";\r\nimport SaleMultipleFeed from \"./SaleMultipleFeed\";\r\n\r\nconst SaleFeed = ({ setOpen, isWidget, setIswidget, add_BuildCategories }) => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  const token = useSelector(selectToken);\r\n  const propServices = useSelector(selectPropServices);\r\n  const [success, setSuccess] = useState(false);\r\n  const [message, setMessage] = useState();\r\n  const [select, setSelect] = useState(false);\r\n  const [applicant, setApplicant] = useState();\r\n  const [step, setStep] = useState(1);\r\n  const [error, setError] = useState();\r\n  const [Exist, setExist] = useState();\r\n  const [body, setBody] = useState({\r\n    name: \"\",\r\n  });\r\n  const [add, setAdd] = useState(false);\r\n  const [data, setData] = useState({\r\n    uuid: \"\",\r\n    tx_date: \"\",\r\n    applicant_name: \"\",\r\n    due_date: \"\",\r\n    period: \"\",\r\n    sale_date: \"\",\r\n    applicant: \"\",\r\n    VALUES: [],\r\n    total: \"\",\r\n  });\r\n\r\n  //   const handleChange = (index) => {\r\n  //     setData({ ...data, build_category: index });\r\n  //   };\r\n\r\n  //   const handleSetTerm = (e) => {\r\n  //     const d = new Date();\r\n  //     const sd = new Date();\r\n  //     const value = e.target.value;\r\n  //     const duedate = d.setDate(sd.getDate() + parseInt(value));\r\n  //     return setData({\r\n  //       ...data,\r\n  //       period: value,\r\n  //       due_date: new Date(duedate),\r\n  //     });\r\n  //   };\r\n\r\n  //   const start = data.sale_date ? new Date(data.sale_date) : new Date();\r\n  //   const end = new Date(data.due_date);\r\n  //   const rows = [];\r\n  //   const handleDate = () => {\r\n  //     let loop = new Date(start);\r\n  //     const division = data.period / 30;\r\n  //     while (loop <= end) {\r\n  //       const newDate = loop.setDate(\r\n  //         data.period <= 28 ? loop.getDate() + data.period : loop.getDate() + 31\r\n  //       );\r\n  //       loop = new Date(newDate);\r\n  //       rows.push({\r\n  //         sale_uuid: data.uuid,\r\n  //         applicant_name: applicant && applicant.customer_name,\r\n  //         amount:\r\n  //           data.period <= 28\r\n  //             ? parseInt(data.amount) / 1\r\n  //             : parseInt(data.amount) / Math.round(division),\r\n  //         period: data.period,\r\n  //         date: new Date(newDate),\r\n  //         property_name: data.property_name,\r\n  //       });\r\n  //     }\r\n  //   };\r\n  //   const handleSetValues = (d) => {\r\n  //     const fdata = d.map((x) => Object.values(x));\r\n  //     const findal = [];\r\n  //     for (let i = 0; i < fdata.length; i++) {\r\n  //       const element = fdata[i];\r\n  //       findal.push(element);\r\n  //     }\r\n  //     // console.log(findal)\r\n  //     return setData({\r\n  //       ...data,\r\n  //       VALUES: findal,\r\n  //     });\r\n  //   };\r\n\r\n  // handle post\r\n  const isEmpty = (input) => {\r\n    return data[input] === \"\" ? true : false;\r\n  };\r\n\r\n  const handlePost = async (e) => {\r\n    e.preventDefault();\r\n    const err = await Object.keys(data).map((key) => isEmpty(key));\r\n    console.log(\"hello\", data);\r\n    const isError = err.includes(true);\r\n    if (isError === true) {\r\n      return setError(\"All field are required\");\r\n    } else {\r\n      setError(\"\");\r\n      console.log(data.VALUES);\r\n      setOpen(true);\r\n      axios\r\n        .post(\"/sale\", data, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then((result) => {\r\n          setOpen(false);\r\n          setMessage(result.data.message);\r\n          setSuccess(true);\r\n          setData({\r\n            uuid: \"\",\r\n            applicant_name: \"\",\r\n            build_category: \"\",\r\n            property: \"\",\r\n            due_date: \"\",\r\n            period: \"\",\r\n            amount: \"\",\r\n            sale_date: \"\",\r\n            applicant: \"\",\r\n            property_name: \"\",\r\n            VALUES: [],\r\n            total: \"\",\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setOpen(false);\r\n          if (error && error.response.status == 401) {\r\n            return setExist(error.response.data.message);\r\n          }\r\n          setError(error.response.data.message);\r\n        });\r\n    }\r\n  };\r\n\r\n  //   useEffect(() => {\r\n  //     handleDate();\r\n  //     setPlans(rows);\r\n  //     handleSetValues(rows);\r\n  //   }, [data.property, data.due_date]);\r\n\r\n  const handleGet_Locations = () => {\r\n    axios\r\n      .get(\"/location\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((locations) => {\r\n        dispatch(setLocations(locations.data));\r\n      })\r\n      .catch((error) => {\r\n        if (error) {\r\n          return error;\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data.property) {\r\n      const prop = parseInt(data.property);\r\n      const filterProperty = propServices\r\n        ? propServices.filter((ps) => parseInt(ps.id) == prop)\r\n        : null;\r\n\r\n      setData({\r\n        ...data,\r\n        property_name: filterProperty ? filterProperty[0].name : null,\r\n        property: filterProperty ? filterProperty[0].id : null,\r\n        amount: filterProperty ? filterProperty[0].sale_price : 0,\r\n      });\r\n    }\r\n  }, [data.property]);\r\n\r\n  useEffect(() => {\r\n    setData({\r\n      ...data,\r\n      applicant: applicant && applicant.id,\r\n      applicant_name: applicant && applicant.customer_name,\r\n    });\r\n  }, [applicant]);\r\n\r\n  useEffect(() => {\r\n    setData({\r\n      ...data,\r\n      uuid:\r\n        new Date().getSeconds().toLocaleString() +\r\n        new Date().getMinutes().toLocaleString() +\r\n        new Date().getMilliseconds(),\r\n    });\r\n    return handleGet_Locations();\r\n  }, [\"\", success]);\r\n\r\n  return (\r\n    <div className={`${isWidget ? \"isapp__Feed\" : \"app__Feed\"}`} id=\"step2\">\r\n      <SelectApplicant\r\n        open={select}\r\n        setOpen={setSelect}\r\n        applicant={applicant}\r\n        setApplicant={setApplicant}\r\n      />\r\n      <AppSnackbar open={success} setOpen={setSuccess} message={message} />\r\n      <AppHeader title=\"Application Form\" />\r\n      <div className=\"row align-items-center justify-content-center d-flex m-1\"\r\n      >\r\n        <div className=\"col-lg-12 col-md-12\">\r\n          {/* table */}\r\n          <h3 style={{ marginLeft: 80 }}>\r\n            Application Entry\r\n            <span>\r\n              <Tooltip title=\"Application List\">\r\n                <IconButton\r\n                  color=\"secondary\"\r\n                  onClick={() => setIswidget(!isWidget)}\r\n                >\r\n                  <FileCopy style={{ color: \"#1ABB9C\" }} />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </span>\r\n          </h3>\r\n        </div>\r\n      </div>\r\n      <Grid container alignItems=\"center\" justify=\"center\">\r\n        <Grid item lg={10} md={10} sm={12}>\r\n          <Paper className=\"p-2\" style={{ backgroundColor: \"inherit\" }}>\r\n            <Grid item lg={12} md={12} sm={12}>\r\n              <Grid container alignItems=\"center\" justify=\"center\">\r\n                {step == 1 && (\r\n                  <Grid\r\n                    item\r\n                    lg={9}\r\n                    md={9}\r\n                    sm={12}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      flexDirection: \"column\",\r\n                    }}\r\n                  >\r\n                    <Avatar\r\n                      style={{\r\n                        width: \"100px\",\r\n                        height: \"100px\",\r\n                        boxSizing: \"border-box\",\r\n                        boxShadow: \"0px 0px 1px 0px #000\",\r\n                      }}\r\n                    />\r\n\r\n                    {applicant && (\r\n                      <Fragment>\r\n                        <div\r\n                          className=\"mt-2 p-1\"\r\n                          style={{\r\n                            color: \"white\",\r\n                            background: \"#2A3F54\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            height: \"40px\",\r\n                            justifyContent: \"center\",\r\n                            width: \"50%\",\r\n                            margin: \"auto\",\r\n                            boxSizing: \"border-box\",\r\n                            boxShadow: \"0px 0px 1px 0px #000\",\r\n                          }}\r\n                        >\r\n                          <h6>APPLICATION FORM</h6>\r\n                        </div>\r\n                        <div\r\n                          className=\"mt-5 p-1\"\r\n                          style={{\r\n                            color: \"white\",\r\n                            background: \"#2A3F54\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            height: \"40px\",\r\n                            justifyContent: \"center\",\r\n                            width: \"50%\",\r\n                            margin: \"auto\",\r\n                            boxSizing: \"border-box\",\r\n                            boxShadow: \"0px 0px 5px 0px #000\",\r\n                          }}\r\n                        >\r\n                          <h6>A. PERSONAL DATA</h6>\r\n                        </div>{\" \"}\r\n                      </Fragment>\r\n                    )}\r\n                  </Grid>\r\n                )}\r\n\r\n                {step === 1 && (\r\n                  <Grid\r\n                    item\r\n                    lg={3}\r\n                    md={3}\r\n                    sm={12}\r\n                    style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                  >\r\n                    <Avatar\r\n                      variant=\"square\"\r\n                      alt={applicant && applicant.customer_name[0]}\r\n                      src={applicant && applicant.avatar}\r\n                      style={{\r\n                        width: \"150px\",\r\n                        height: \"150px\",\r\n                        boxSizing: \"border-box\",\r\n                        boxShadow: \"0px 0px 1px 0px #000\",\r\n                      }}\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        marginTop: \"100px\",\r\n                        marginLeft: \"10px\",\r\n                      }}\r\n                    >\r\n                      <Tooltip title=\"Select New Applicant\">\r\n                        <IconButton onClick={() => setSelect(!select)}>\r\n                          <span\r\n                            className=\"fa fa-plus-circle\"\r\n                            style={{ color: \"#1ABB9C\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    </div>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n\r\n              {applicant && step == 1 && (\r\n                <Grid container spacing={2} className=\"mt-3\">\r\n                  <Grid item lg={6} md={6} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      value={applicant && applicant.customer_name}\r\n                      variant=\"outlined\"\r\n                      label=\"Name of Applicant\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} md={6} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.business_employer_name}\r\n                      label=\"Business Name & RC. No Corporate Body\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={12} md={12} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.address_1}\r\n                      label=\"Residential Address:\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} md={6} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.phone_no}\r\n                      label=\"Phone No.\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} md={6} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.customer_email}\r\n                      label=\"Email Address:\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} md={6} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.customer_sex}\r\n                      label=\"Gender\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} md={6} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.customer_marital}\r\n                      label=\"Marital Status\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} md={6} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.country}\r\n                      label=\"Nationality:\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} md={6} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.customer_state}\r\n                      label=\"State of Origin:\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={12} md={12} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.customer_address}\r\n                      label=\"Permanent Home Address\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={12} md={12} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.postal_address}\r\n                      label=\"Postal Address:\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} md={6} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.occupation}\r\n                      label=\"Occupation:\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} md={6} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.place_work}\r\n                      label=\"Place of Work:\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item lg={6} md={6} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.next_kin_name}\r\n                      label=\"Name of Next Kin:\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} md={6} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.next_kin_relate}\r\n                      label=\"Relationship With Next of Kin:\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={12} md={12} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.next_kin_addrss}\r\n                      label=\"Next of Kin Address\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n              {step == 2 && (\r\n                <SaleMultipleFeed\r\n                  data={data}\r\n                  add={add}\r\n                  body={body}\r\n                  error={error}\r\n                  setBody={setBody}\r\n                  setData={setData}\r\n                  success={success}\r\n                  Exist={Exist}\r\n                  setAdd={setAdd}\r\n                  handlePost={handlePost}\r\n                  add_BuildCategories={add_BuildCategories}\r\n                />\r\n              )}\r\n\r\n              {step == 2 && (\r\n                <Grid\r\n                  item\r\n                  lg={9}\r\n                  md={9}\r\n                  sm={12}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    flexDirection: \"column\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\" p-1\"\r\n                    style={{\r\n                      color: \"white\",\r\n                      background: \"#2A3F54\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      height: \"40px\",\r\n                      justifyContent: \"center\",\r\n                      width: \"50%\",\r\n                      margin: \"auto\",\r\n                      boxSizing: \"border-box\",\r\n                      boxShadow: \"0px 0px 5px 0px #000\",\r\n                    }}\r\n                  >\r\n                    <h6>D. MODE OF PAYMENT</h6>\r\n                  </div>\r\n                </Grid>\r\n              )}\r\n              {step == 2 && (\r\n                <Grid item lg={12} md={12} sm={12}>\r\n                  <ul className=\"mt-3\">\r\n                    <li>\r\n                      Note That Pament should be made after the developer's\r\n                      approval before allocation. Each applicant is expected to\r\n                      pay for the follwing charges:\r\n                    </li>\r\n                    <li>\r\n                      All Payments should be made to Santos Estate Ltd. and\r\n                      evidence of payment forwarded to our corporate office for\r\n                      issuance of receipt.\r\n                    </li>\r\n                    <li>\r\n                      i have agreed that all refunds shall be limited to the\r\n                      deposit i made, less 10% administrative charges.\r\n                    </li>\r\n                    <li>\r\n                      \"Disclaimer\" SANTOS ESTATE LIMITED shall not be liable for\r\n                      any plot re-allocated if terms and conditions are not\r\n                      obligated timeously.\r\n                    </li>\r\n                  </ul>\r\n                </Grid>\r\n              )}\r\n              {step == 2 && (\r\n                <Grid\r\n                  item\r\n                  lg={9}\r\n                  md={9}\r\n                  sm={12}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    flexDirection: \"column\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\" p-1\"\r\n                    style={{\r\n                      color: \"white\",\r\n                      background: \"#2A3F54\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      height: \"40px\",\r\n                      justifyContent: \"center\",\r\n                      width: \"50%\",\r\n                      margin: \"auto\",\r\n                      boxSizing: \"border-box\",\r\n                      boxShadow: \"0px 0px 5px 0px #000\",\r\n                    }}\r\n                  >\r\n                    <h6>E. DECLARATION</h6>\r\n                  </div>\r\n                </Grid>\r\n              )}\r\n              {step == 2 && (\r\n                <Grid item lg={12} md={12} sm={12} className=\"mt-3\">\r\n                  <ul style={{ listStyle: \"none\" }}>\r\n                    <li>\r\n                      I/We{\" \"}\r\n                      <input\r\n                        readOnly\r\n                        value={applicant.customer_name}\r\n                        style={{\r\n                          border: \"none\",\r\n                          borderBottom: \"1px solid black\",\r\n                          outline: \"none\",\r\n                        }}\r\n                      />\r\n                      whose name and address appeared above have declared that\r\n                      the above statements are true and correct to the best of\r\n                      any knowledge, and i promise to abide by all rules and\r\n                      regulations given by the Developer\r\n                    </li>\r\n                  </ul>\r\n                  <div\r\n                    className=\"m-4\"\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\",\r\n                    }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <input\r\n                        readOnly\r\n                        style={{\r\n                          border: \"none\",\r\n                          borderBottom: \"1px solid black\",\r\n                          outline: \"none\",\r\n                        }}\r\n                        value={user.username}\r\n                      />\r\n                      <FormLabel>\r\n                        Initiate By\r\n                        <IconButton size=\"small\">\r\n                          <span\r\n                            className=\"fa fa-pen\"\r\n                            style={{ color: \"#1ABB9C\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </FormLabel>\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <input\r\n                        type=\"date\"\r\n                        style={{\r\n                          border: \"none\",\r\n                          borderBottom: \"1px solid black\",\r\n                          outline: \"none\",\r\n                        }}\r\n                        value={data.sale_date}\r\n                        readOnly\r\n                      />\r\n                      <FormLabel>Date</FormLabel>\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n              )}\r\n              <Grid\r\n                item\r\n                lg={12}\r\n                md={12}\r\n                sm={12}\r\n                style={{ display: \"flex\", justifyContent: \"center\" }}\r\n              >\r\n                {applicant && step == 1 && (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className=\"m-3\"\r\n                    onClick={() => setStep(2)}\r\n                    style={{\r\n                      color: \"white\",\r\n                      background: \"#2A3F54\",\r\n                    }}\r\n                  >\r\n                    Next\r\n                  </Button>\r\n                )}\r\n                {step == 2 && (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className=\"m-3\"\r\n                    onClick={() => setStep(1)}\r\n                    color=\"default\"\r\n                  >\r\n                    Previous\r\n                  </Button>\r\n                )}\r\n                {/* {step == 2 && (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className=\"m-3\"\r\n                    onClick={(e) => handlePost(e)}\r\n                    style={{ color: \"white\", background: \"#2A3F54\" }}\r\n                    disabled={\r\n                      !data.due_date ||\r\n                      !data.build_category ||\r\n                      !data.property ||\r\n                      !data.amount ||\r\n                      !data.sale_date\r\n                    }\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                )} */}\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n          <div className=\"p-2\" />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SaleFeed;\r\n","import { IconButton, Paper, Typography } from '@material-ui/core'\r\nimport { MoreHoriz } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectPendingSales,} from '../appState/appSlice'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst SaleWidget = ({ isWidget, setIswidget }) => {\r\n    const sales = useSelector(selectPendingSales)\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n    return (\r\n        <div className='app__Widget'>\r\n            <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Sales List' \r\n            />\r\n            <table className='table table-sm table-striped table-hover mt-3'>\r\n                <thead>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Customer</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Due Date</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Amount (<s>N</s>)</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}> </th>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        sales &&\r\n                        sales.map((sale, index) =>{\r\n                            const {applicant_name, sale_date, due_date, amount } = sale\r\n                            return(\r\n                            <Fragment key={index}>\r\n                                <tr>\r\n                                    <td> {index+1} </td>\r\n                                    <td>\r\n                                        {applicant_name}\r\n                                    </td>\r\n                                    <td> {new Date(due_date).toLocaleDateString()} </td>\r\n                                    <td> {amount} </td>\r\n                                    <td style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n                                        <div>\r\n                                        <IconButton size='small'>\r\n                                            <MoreHoriz style={{color: '#20c997'}} />\r\n                                        </IconButton>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                    {\r\n                    sales&&\r\n                    <tr\r\n                    style={{background: '#2A3F54', color: 'white'}} \r\n                    >\r\n                        <td colSpan={3}>\r\n                            <Typography variant='subtitle1'\r\n                            style={{color: 'white'}}\r\n                            >\r\n                                <b>Total:</b>\r\n                            </Typography>\r\n                        </td>\r\n                        <td>\r\n                            <Typography variant='subtitle1'\r\n                            style={{color: 'white'}}\r\n                            >\r\n                            <b>{\r\n                                calcuAmt(sales)\r\n                            }</b>\r\n                            </Typography>\r\n                        </td>\r\n                        <td colSpan={2}></td>\r\n                    </tr>\r\n                }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SaleWidget\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport {\r\n  selectToken,\r\n  setBuildCategories,\r\n  setCustomers,\r\n  setpendingSales,\r\n  setPropServices,\r\n  setUser,\r\n} from \"../appState/appSlice\";\r\nimport AppBackdrop from \"../components/global/AppBackDrop\";\r\nimport SideBarMenu from \"../components/global/SideBarMenu\";\r\nimport SaleFeed from \"../components/SaleFeed\";\r\nimport SaleWidget from \"../components/SaleWidget\";\r\n\r\nconst SaleScreen = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const token = useSelector(selectToken);\r\n  const [open, setOpen] = useState(false);\r\n  const [isWidget, setIswidget] = useState(false);\r\n\r\n  // func\r\n  const getProp_Services = () => {\r\n    axios\r\n      .get(\"/prop_service\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((ps) => {\r\n        dispatch(setPropServices(ps.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  // func\r\n  const getCustomers = () => {\r\n    axios\r\n      .get(\"/customer\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((asset) => {\r\n        dispatch(setCustomers(asset.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  const getBuildCategories = () => {\r\n    axios\r\n      .get(\"/build_category\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((categories) => {\r\n        dispatch(setBuildCategories(categories.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  // func\r\n  const get_PendingSales = () => {\r\n    axios\r\n      .get(`/sale`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((sales) => {\r\n        dispatch(setpendingSales(sales.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  const add_BuildCategories = (body) => {\r\n    setOpen(true);\r\n    axios\r\n      .post(\"/build_category\", body, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((categories) => {\r\n        setOpen(false);\r\n      })\r\n      .catch((error) => {\r\n        setOpen(false);\r\n        return error;\r\n      });\r\n  };\r\n\r\n  const get_Session = () => {\r\n    axios\r\n      .get(`/auth/active`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((user) => {\r\n        dispatch(setUser(user.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      return history.push(\"/\");\r\n    }\r\n    return getCustomers(), get_Session(), getProp_Services();\r\n  }, []);\r\n  useEffect(() => {\r\n    return getBuildCategories(), get_PendingSales();\r\n  }, [open]);\r\n  return (\r\n    <div className=\"app\">\r\n      <AppBackdrop open={open} />\r\n      <SideBarMenu />\r\n      {/* feed */}\r\n      <SaleFeed\r\n        setOpen={setOpen}\r\n        isWidget={isWidget}\r\n        setIswidget={setIswidget}\r\n        add_BuildCategories={add_BuildCategories}\r\n      />\r\n      {/* widget */}\r\n      {isWidget && (\r\n        <SaleWidget\r\n          open={open}\r\n          setOpen={setOpen}\r\n          isWidget={isWidget}\r\n          setIswidget={setIswidget}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SaleScreen;\r\n","// MUI Stuff\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\n// Icons\r\nimport Undo from \"@material-ui/icons/Undo\";\r\nimport FileCopy from \"@material-ui/icons/FileCopy\";\r\n\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { selectToken } from \"../appState/appSlice\";\r\nimport AppHeader from \"./global/AppHeader\";\r\nimport AppSnackbar from \"./global/AppSnackbar\";\r\n\r\nconst StaffFeed = ({ setOpen, isWidget, setIswidget }) => {\r\n  const history = useHistory();\r\n  const token = useSelector(selectToken);\r\n  const [success, setSuccess] = useState(false);\r\n  const [message, setMessage] = useState();\r\n  const [Error, setError] = useState();\r\n  const [Exist, setExist] = useState();\r\n  const [data, setData] = useState({\r\n    password: \"\",\r\n    password2: \"\",\r\n    is_superuser: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    md: \"\",\r\n    entries: \"\",\r\n    sales: \"\",\r\n    expense: \"\",\r\n    accountant: \"\",\r\n    date_joined: \"\",\r\n  });\r\n  // func\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setData({\r\n      ...data,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const isEmpty = () => {\r\n    let userData = data;\r\n    let error = {};\r\n    Object.keys(userData).forEach((v, i) => {\r\n      return !userData[v].toString().length > 0\r\n        ? (error[v] = \"Is required\")\r\n        : (error = error);\r\n    });\r\n\r\n    return setError(error), Object.keys(error).length > 0 ? true : false;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    isEmpty();\r\n    e.preventDefault();\r\n\r\n    if (isEmpty()) return console.log(Error);\r\n    setOpen(true);\r\n\r\n    axios\r\n      .post(\"/auth\", data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        setOpen(false);\r\n        setMessage(result.data.message);\r\n        setSuccess(true);\r\n        setData({\r\n          password: \"\",\r\n          password2: \"\",\r\n          is_superuser: \"\",\r\n          first_name: \"\",\r\n          last_name: \"\",\r\n          email: \"\",\r\n          mobile: \"\",\r\n          md: \"\",\r\n          entries: \"\",\r\n          sales: \"\",\r\n          expense: \"\",\r\n          accountant: \"\",\r\n          date_joined: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setOpen(false);\r\n        if (error) {\r\n          if (error.status == 500) {\r\n            return setExist(error.response.statusText);\r\n          }\r\n          const err = error.response.data.split(\":\")[1];\r\n          setExist(err);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={`${isWidget ? \"isapp__Feed\" : \"app__Feed\"}`}>\r\n      <AppSnackbar setOpen={setSuccess} open={success} message={message} />\r\n      <AppHeader title=\"Staff\" />\r\n      <div className=\"row align-items-center justify-content-center\">\r\n        <div className=\"col-lg-11 col-md-11 col-sm=12 col-xs-12\">\r\n          {/* table */}\r\n          <h3 className=\"ml-3\">\r\n            Staff Entry\r\n            <span>\r\n              <Tooltip title=\"View Staff List\">\r\n                <IconButton\r\n                  color=\"secondary\"\r\n                  onClick={() => setIswidget(!isWidget)}\r\n                >\r\n                  <FileCopy style={{ color: \"#1ABB9C\" }} />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </span>\r\n          </h3>\r\n          {Exist && (\r\n            <Typography className=\"ml-3\" color=\"error\" variant=\"h6\">\r\n              {Exist}\r\n            </Typography>\r\n          )}\r\n          {/* to do make it a component */}\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            spacing={1}\r\n            justify=\"center\"\r\n            className=\"p-2\"\r\n          >\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                size=\"small\"\r\n                name=\"first_name\"\r\n                variant=\"outlined\"\r\n                label=\"First Name\"\r\n                placeholder=\"First Name\"\r\n                value={data.first_name}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.first_name}\r\n                error={Error && Error.first_name ? true : false}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                size=\"small\"\r\n                name=\"last_name\"\r\n                variant=\"outlined\"\r\n                label=\"Last Name\"\r\n                placeholder=\"Last Name\"\r\n                value={data.last_name}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.last_name}\r\n                error={Error && Error.last_name ? true : false}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                size=\"small\"\r\n                name=\"mobile\"\r\n                variant=\"outlined\"\r\n                label=\"Mobile No\"\r\n                value={data.mobile}\r\n                onChange={(e) => handleChange(e)}\r\n                placeholder=\"Mobile Number 08010000900\"\r\n                helperText={Error && Error.mobile}\r\n                error={Error && Error.mobile ? true : false}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                size=\"small\"\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n                value={data.email}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.email}\r\n                error={Error && Error.email ? true : false}\r\n                placeholder=\"Email Address(example@gmail.com)\"\r\n              />\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                size=\"small\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                variant=\"outlined\"\r\n                label=\"Password\"\r\n                placeholder=\"Password\"\r\n                value={data.password}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.password}\r\n                error={Error && Error.password ? true : false}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                size=\"small\"\r\n                name=\"password2\"\r\n                type=\"password\"\r\n                variant=\"outlined\"\r\n                label=\"Confirm Password\"\r\n                placeholder=\"Confirm Password\"\r\n                value={data.password2}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.password2}\r\n                error={Error && Error.password2 ? true : false}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={12} md={12}>\r\n              <Typography>System Rights</Typography>\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <FormLabel>Entries</FormLabel>\r\n              <Select\r\n                variant=\"outlined\"\r\n                name=\"entries\"\r\n                value={data.entries}\r\n                onChange={(e) => handleChange(e)}\r\n                style={{\r\n                  width: \"100%\",\r\n                  outline: \"none\",\r\n                  border: \"none\",\r\n                  height: \"40px\",\r\n                }}\r\n                defaultValue=\"\"\r\n                error={Error && Error.entries}\r\n              >\r\n                <option></option>\r\n                <option value=\"entries\">Yes</option>\r\n                <option value=\"no\">No</option>\r\n              </Select>\r\n              {Error && Error.entries && (\r\n                <small style={{ color: \"red\" }} className=\"ml-3\">\r\n                  {Error.entries}\r\n                </small>\r\n              )}\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <FormLabel>Sales</FormLabel>\r\n              <Select\r\n                variant=\"outlined\"\r\n                name=\"sales\"\r\n                value={data.sales}\r\n                onChange={(e) => handleChange(e)}\r\n                style={{\r\n                  width: \"100%\",\r\n                  outline: \"none\",\r\n                  border: \"none\",\r\n                  height: \"40px\",\r\n                }}\r\n                error={Error && Error.sales ? true : false}\r\n              >\r\n                <option></option>\r\n                <option value=\"sales\">Yes</option>\r\n                <option value=\"no\">No</option>\r\n              </Select>\r\n              {Error && Error.sales && (\r\n                <small style={{ color: \"red\" }} className=\"ml-3\">\r\n                  {Error.sales}\r\n                </small>\r\n              )}\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <FormLabel>Expense</FormLabel>\r\n              <Select\r\n                variant=\"outlined\"\r\n                name=\"expense\"\r\n                value={data.expense}\r\n                onChange={(e) => handleChange(e)}\r\n                style={{\r\n                  width: \"100%\",\r\n                  outline: \"none\",\r\n                  border: \"none\",\r\n                  height: \"40px\",\r\n                }}\r\n                error={Error && Error.expense}\r\n              >\r\n                <option></option>\r\n                <option value=\"expense\">Yes</option>\r\n                <option value=\"no\">No</option>\r\n              </Select>\r\n              {Error && Error.expense && (\r\n                <small style={{ color: \"red\" }} className=\"ml-3\">\r\n                  {Error.expense}\r\n                </small>\r\n              )}\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <FormLabel>Accountant</FormLabel>\r\n              <Select\r\n                variant=\"outlined\"\r\n                name=\"accountant\"\r\n                value={data.accountant}\r\n                onChange={(e) => handleChange(e)}\r\n                style={{\r\n                  width: \"100%\",\r\n                  outline: \"none\",\r\n                  border: \"none\",\r\n                  height: \"40px\",\r\n                }}\r\n                error={Error && Error.accountant ? true : false}\r\n              >\r\n                <option></option>\r\n                <option value=\"accountant\">Yes</option>\r\n                <option value=\"no\">No</option>\r\n              </Select>\r\n              {Error && Error.accountant && (\r\n                <small style={{ color: \"red\" }} className=\"ml-3\">\r\n                  {Error.accountant}\r\n                </small>\r\n              )}\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <FormLabel>Administrator</FormLabel>\r\n              <Select\r\n                variant=\"outlined\"\r\n                name=\"is_superuser\"\r\n                value={data.is_superuser}\r\n                onChange={(e) => handleChange(e)}\r\n                style={{\r\n                  width: \"100%\",\r\n                  outline: \"none\",\r\n                  border: \"none\",\r\n                  height: \"40px\",\r\n                }}\r\n                error={Error && Error.is_superuser ? true : false}\r\n              >\r\n                <option></option>\r\n                <option value=\"1\">Yes</option>\r\n                <option value=\"0\">No</option>\r\n              </Select>\r\n              {Error && Error.is_superuser && (\r\n                <small style={{ color: \"red\" }} className=\"ml-3\">\r\n                  {Error.is_superuser}\r\n                </small>\r\n              )}\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <FormLabel>MD</FormLabel>\r\n              <Select\r\n                variant=\"outlined\"\r\n                name=\"md\"\r\n                value={data.md}\r\n                onChange={(e) => handleChange(e)}\r\n                style={{\r\n                  width: \"100%\",\r\n                  outline: \"none\",\r\n                  border: \"none\",\r\n                  height: \"40px\",\r\n                }}\r\n                error={Error && Error.md}\r\n              >\r\n                <option></option>\r\n                <option value=\"md\">Yes</option>\r\n                <option value=\"no\">No</option>\r\n              </Select>\r\n              {Error && Error.md && (\r\n                <small style={{ color: \"red\" }} className=\"ml-3\">\r\n                  {Error.md}\r\n                </small>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <FormLabel>Date Joined</FormLabel>\r\n              <TextField\r\n                fullWidth\r\n                size=\"small\"\r\n                name=\"date_joined\"\r\n                type=\"date\"\r\n                variant=\"outlined\"\r\n                value={data.date_joined}\r\n                onChange={(e) => handleChange(e)}\r\n                error={Error && Error.date_joined ? true : false}\r\n                helperText={Error && Error.date_joined}\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              lg={6}\r\n              md={6}\r\n              sm={12}\r\n              xs={12}\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Button\r\n                onClick={(e) => handleSubmit(e)}\r\n                variant=\"contained\"\r\n                size=\"medium\"\r\n                style={{\r\n                  background: \"#2A3F54\",\r\n                  color: \"white\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                Create\r\n              </Button>\r\n              <Button\r\n                className=\"ml-5\"\r\n                onClick={(e) => history.goBack()}\r\n                startIcon={<Undo color=\"error\" />}\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                size=\"medium\"\r\n                style={{ color: \"#73879c\", marginTop: \"10px\" }}\r\n              >\r\n                Return\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StaffFeed;\r\n","// MUI Stuff\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n// Icons\r\nimport AttachFile from \"@material-ui/icons/AttachFile\";\r\nimport CheckCircle from \"@material-ui/icons/CheckCircle\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAllStaffs } from \"../appState/appSlice\";\r\nimport Mandate from \"./Mandate\";\r\nimport AppWidgetHeader from \"./global/AppWidgetHeader\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst StaffWidget = ({ open, setOpen, isWidget, setIswidget }) => {\r\n  const [mandate, setMandate] = useState(false);\r\n\r\n  const staffs = useSelector(selectAllStaffs);\r\n  return (\r\n    <div className=\"app__Widget\">\r\n      <Mandate\r\n        open={open}\r\n        setOpen={setOpen}\r\n        mandate={mandate}\r\n        setMandate={setMandate}\r\n        url={\r\n          mandate &&\r\n          `/auth/signature/${mandate.split(\" \")[0]}/${mandate.split(\" \")[1]}`\r\n        }\r\n      />\r\n      <AppWidgetHeader\r\n        isWidget={isWidget}\r\n        setIswidget={setIswidget}\r\n        title=\"Staff List\"\r\n      />\r\n      <table className=\"table-hover mt-3\" style={{ width: \"100%\" }}>\r\n        <thead>\r\n          <th style={{ border: \"1px solid #F7F7F7F7\" }}>#</th>\r\n          <th style={{ border: \"1px solid #F7F7F7F7\" }}>Name</th>\r\n          <th style={{ border: \"1px solid #F7F7F7F7\" }}>Mobile</th>\r\n          {/* <th style={{ border: \"1px solid #F7F7F7F7\" }}>Email</th> */}\r\n          <th style={{ border: \"1px solid #F7F7F7F7\" }}>Sign</th>\r\n        </thead>\r\n        <tbody>\r\n          {staffs &&\r\n            staffs.map((staff, index) => {\r\n              const { id, first_name, last_name, email, mobile, signature } =\r\n                staff;\r\n              return (\r\n                <Fragment key={index}>\r\n                  <tr>\r\n                    <td> {index + 1} </td>\r\n                    <td>{`${first_name} ${last_name}`}</td>\r\n                    <td> {mobile} </td>\r\n                    {/* <td> {email} </td> */}\r\n                    <td\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                    >\r\n                      {signature ? (\r\n                        <Tooltip title={`${first_name} signature uploaded`}>\r\n                          <CheckCircle style={{ color: \"#20c997\" }} />\r\n                        </Tooltip>\r\n                      ) : (\r\n                        <div className=\"p-1\">\r\n                          <Tooltip title={`Upload ${first_name} signature`}>\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              onClick={() => setMandate(id + \" \" + first_name)}\r\n                            >\r\n                              <AttachFile />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </div>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                </Fragment>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StaffWidget;\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setAccounts, setAllStaffs, setExpenseCategories, setUser, setUserExpenseRaised } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport StaffFeed from '../components/StaffFeed'\r\nimport StaffWidget from '../components/StaffWidget'\r\n\r\nconst StaffScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(true)\r\n\r\n    // func\r\n \r\n    const get_Staffs =() =>{\r\n        axios.get('/auth', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(staffs =>{\r\n            dispatch(setAllStaffs(staffs.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    \r\n  \r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        get_Session()\r\n    }, [])\r\n\r\n    useEffect(() =>{\r\n        get_Staffs()\r\n    }, [open])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <StaffFeed\r\n                setOpen={setOpen}\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <StaffWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StaffScreen\r\n","import React from 'react'\r\nimport { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst VendorList = ({ index, hidden, customer_sex, \r\n        email, vendor_name, phone, balance_type, \r\n        active, isWidget\r\n    }) => {\r\n    return (\r\n        <Fragment>\r\n            <tr>\r\n                <td>{index+1} </td>\r\n                <td> {vendor_name} </td>\r\n                <td> {phone} </td>\r\n                <td> {email} </td>\r\n                <td>\r\n                    {\r\n                        active ==1?\r\n                        <span className=\"fa fa-check-circle fa-1x\"></span>\r\n                        :\r\n                        <span></span>\r\n                    }\r\n                </td>\r\n                <td>\r\n                    {\r\n                        hidden ==1?\r\n                        <span className=\"fa fa-lock fa-1x\" style={{color: 'red'}}></span>\r\n                    :\r\n                        <span className=\"fa fa-unlock-alt fa-1x\" style={{color: '#1ABB9C'}}></span>\r\n                    }\r\n                </td>\r\n                {!isWidget&& <td id=\"btn\">\r\n                    <button>Actions</button>\r\n                    <div className=\"btn__poper\">\r\n                        <Link to='#' rel=\"noopener noreferrer\">View register</Link>\r\n                        <Link to='#' rel=\"noopener noreferrer\">Update</Link>\r\n                    </div>\r\n                </td> }                      \r\n            </tr>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default VendorList\r\n","import { Container, IconButton, Paper } from '@material-ui/core'\r\nimport { PlusOne } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectVendors } from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\nimport VendorList from './VendorList'\r\n\r\nconst VendorFeed = ({ isWidget, setIswidget }) => {\r\n    const vendors = useSelector(selectVendors)\r\n    return (\r\n        <div className={`${isWidget? 'isapp__Feed': 'app__Feed'}`}>\r\n           <AppHeader title='Vendors' />\r\n           <div className=\"row align-items-center justify-content-center d-flex m-1\" >\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                    {/* table */}\r\n                    <h3>Vendor List <span> \r\n                        <IconButton color='secondary'\r\n                            onClick={() =>setIswidget(!isWidget)}\r\n                        >\r\n                        <PlusOne style={{ color: '#1ABB9C'}} />\r\n                        </IconButton></span></h3> \r\n                    <Paper>\r\n                        <Container className='p-3'>\r\n                        <table className=\"table-small table-hover table-bordered\" style={{width: '100%'}}>\r\n                            <thead>\r\n                                <th>#</th>\r\n                                <th>Name</th>\r\n                                <th>Contact</th>\r\n                                <th>Email</th>\r\n                                <th>Active</th>\r\n                                <th>Lock</th>\r\n                                {!isWidget&&<th>Actions</th>}\r\n                            </thead>\r\n                            <tbody>\r\n                                \r\n                                {\r\n                                   vendors&&\r\n                                   vendors.map((vendor, index) =>{\r\n                                        return <VendorList\r\n                                            index={index}\r\n                                            {...vendor}\r\n                                            isWidget={isWidget}\r\n                                        />\r\n                                    })\r\n\r\n                                }\r\n                                    \r\n                            </tbody>\r\n                        </table>\r\n                        {vendors&& !vendors.length>0&&\r\n                            <div className=\"alert alert-warning\">\r\n                            <h6>No Asset Accounts Availabe</h6>\r\n                            </div>\r\n                        }\r\n                        </Container>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VendorFeed\r\n","import { Button, FormGroup, FormLabel, Grid, Select, TextField, Typography } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectAccounts, selectToken } from '../../appState/appSlice'\r\n\r\nconst VendorCreationForm = ({ open, setOpen}) => {\r\n    const token = useSelector(selectToken)\r\n    const [Error, setError] = useState()\r\n    const accounts = useSelector(selectAccounts)\r\n    const [vendorData, setVendordata] = useState({\r\n            vendor_name: '',\r\n            address_1: '',\r\n            address_2: '',\r\n            city: '',\r\n            state: '',\r\n            zip_code: '',\r\n            country: '',\r\n            email: '',\r\n            website: '',\r\n            phone: '',\r\n            exp_account_FK: '',\r\n    })\r\n    // func\r\n    const handleChange = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n\r\n        setVendordata({\r\n            ...vendorData,\r\n            [name]: value\r\n        })\r\n    }\r\n    const handle_Create_Vendor =e =>{\r\n        e. preventDefault()\r\n        if(Error){\r\n            return Error\r\n        }\r\n        setOpen(true)\r\n        axios.post('/vendor', vendorData, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setOpen(false)\r\n            setVendordata({\r\n                vendor_name: '',\r\n                address_1: '',\r\n                address_2: '',\r\n                city: '',\r\n                state: '',\r\n                zip_code: '',\r\n                country: '',\r\n                email: '',\r\n                website: '',\r\n                phone: '',\r\n                exp_account_FK: '',\r\n            \r\n            })\r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            if(error){\r\n                return setError(error.response.statusText)\r\n            }\r\n        })\r\n    }\r\n    useEffect(() =>{\r\n        Object.keys(vendorData).map(key =>{\r\n            if(vendorData[key].length <=0){\r\n                return setError('Form not valid')\r\n              \r\n            }\r\n            setError('')\r\n        })\r\n        \r\n    },[vendorData])\r\n    return (\r\n        <Fragment>\r\n            <form className='mt-3 pl-2 pr-2'>\r\n                <Grid container spacing={2}>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Name'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='vendor_name'\r\n                                value={vendorData.vendor_name}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Contact'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='phone'\r\n                                value={vendorData.phone}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Eamil'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='email'\r\n                                value={vendorData.email}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    \r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Nationality'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='country'\r\n                                value={vendorData.country}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                   \r\n                    <Grid item lg={12} md={12}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Home Address'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='address_2'\r\n                                value={vendorData.address_2}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='City'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='city'\r\n                                value={vendorData.city}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Website'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='website'\r\n                                value={vendorData.website}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={12} md={12}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Residential Address'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='address_1'\r\n                                value={vendorData.address_1}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={12} md={12}>\r\n                        <FormLabel>Appear for all vendor payment</FormLabel>\r\n                        <Select\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            name='exp_account_FK'\r\n                            value={vendorData.exp_account_FK}\r\n                            onChange={e =>handleChange(e)}\r\n                            style={{ height: '40px' }}\r\n                        >\r\n                            <option value=''></option>\r\n                            {\r\n                                accounts&&\r\n                                accounts.map((acc, index) =>{\r\n                                    const { id, name, balance_type } = acc\r\n                                    return <option value={id} key={index} >{`${name} (${balance_type})`}</option>\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </Grid>\r\n                    <Grid item lg={12} md={12}>\r\n                        <FormLabel>State of origin?</FormLabel>\r\n                        <FormGroup>\r\n                            <Select style={{height: '40px'}}\r\n                                label='Marital Status'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='state'\r\n                                value={vendorData.state}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value></option>\r\n                                <option value='Abia'>Abia</option>\r\n                                <option value='Adamawa'>Adamawa</option>\r\n                                <option value='Anambara'>Anambara</option>\r\n                                <option value='Akwa-ibom'>Akwa-ibom</option>\r\n                                <option value='Benue'>Benue</option>\r\n                                <option value='Enugu'>Enugu</option>\r\n                                <option value='Cross-River'>Cross-River</option>\r\n                                <option value='Imo'>Imo</option>\r\n                                <option value='FCT'>FCT</option>\r\n                                <option value='Nsarawa'>Nsarawa</option>\r\n                                <option value='Kaduna'>Kaduna</option>\r\n                                <option value='Kano'>Kano</option>\r\n                            </Select>\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={12} md={12}>\r\n                        {/* {\r\n                            Error&&\r\n                            <Typography variant='caption' color='error'>\r\n                                {Error}\r\n                            </Typography>\r\n                        } */}\r\n                        <Button\r\n                            disabled={Error}\r\n                            onClick={e =>handle_Create_Vendor(e)}\r\n                            color='default' variant='contained'\r\n                            style={{ color: 'white', background: '#2A3F54', width: '100%'}}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default VendorCreationForm\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport VendorCreationForm from './form/VendorCreationForm'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst VendorrWidget = ({ open, setOpen, isWidget, setIswidget }) => {\r\n    return (\r\n        <div className='app__Widget'>\r\n            <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Create Vendor' \r\n            />\r\n            <section className='app__WidgetContainer'>\r\n                <VendorCreationForm\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                />\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VendorrWidget\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setAccounts, setUser, setVendors } from '../appState/appSlice'\r\nimport VendorFeed from '../components/VendorFeed'\r\nimport VendorWidget from '../components/VendorWidget'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\n\r\nconst VendorScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n    // func\r\n    const getVendors = () =>{\r\n        axios.get('/vendor', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(vendor =>{\r\n            dispatch(setVendors(vendor.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n       // func\r\n       const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        getVendors()\r\n        get_AllAccounts()\r\n        get_Session()\r\n    },[open])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <VendorFeed\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <VendorWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VendorScreen\r\n","import { Button, Typography } from '@material-ui/core'\r\nimport { Search } from '@material-ui/icons'\r\nimport React, { Fragment } from 'react'\r\nimport { DownloadSaleRepmt } from './ExcelDownload'\r\n\r\nconst SaleRepayViewTable = ({ data, reports, handleChange, handle_Get_Report}) => {\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total.toLocaleString()\r\n    }\r\n\r\n    const calcuAimed = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount_paid+ a, 0)\r\n        return total.toLocaleString()\r\n    }\r\n\r\n    \r\n    const calcuLastPaid = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.tx_amount+ a, 0)\r\n        return total.toLocaleString()\r\n    }\r\n\r\n    const tx_Status = (x) =>{\r\n        const status = x && x == 1 ?\r\n            <span className='fa fa-plus-circle' style={{color: '#20c997'}} />\r\n        :\r\n       \r\n        <span className='fa fa-minus-circle' style={{color: 'red'}} />\r\n        return status\r\n    }\r\n    return (\r\n        <Fragment>\r\n            \r\n            <table className='mt-1 table-bordered hide-on-print' style={{width: '98%', margin: 'auto', \r\n                    position: 'sticky', top: 0, zIndex: 222}}>\r\n                    <thead>\r\n                        <th>From</th>\r\n                        <th>\r\n                            <input\r\n                                type='date'\r\n                                value={data.start_date}\r\n                                placeholder='Staff'\r\n                                name='start_date' list='staffs'\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                            \r\n                        </th>\r\n                        <th>To</th>\r\n                        <th>\r\n                            <input\r\n                                name='end_date'\r\n                                type='date'\r\n                                value={data.end_date}\r\n                                onChange={e =>handleChange(e)}\r\n                                \r\n                            />\r\n                        </th>\r\n                        <th>\r\n                            <Button size='small'\r\n                                endIcon={<Search  />}\r\n                                onClick={() =>handle_Get_Report()}\r\n                                style={{background: '#2a3f54', color: 'white', width: '100%'}}\r\n                            >\r\n                            Search\r\n                            </Button>\r\n                        </th>\r\n                                            \r\n                    </thead>\r\n            </table>\r\n                {/* transaction table */}\r\n            {reports && reports.length>0 &&\r\n            <table className='table-hover table-bordered'\r\n                style={{width: '98%', margin: 'auto',}}\r\n            >\r\n                <thead style={{top: '34px', position: 'sticky', background: '#2a3f54', color: 'white'}}>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Name</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Property</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Due Date</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Cost AMT(<s>N</s>)</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Aimed AMT(<s>N</s>)</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>RCPT. NO.</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>TX Date</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>LT Paymnt(<s>N</s>)</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Pay Method</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}> Remark </th>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        reports && \r\n                        reports.map((tx, index) =>{\r\n                        const { applicant_name, amount, property_name,status, tx_date,\r\n                                amount_paid, due_date, tx_amount, rcpt_no, pay_method, \r\n                            } = tx\r\n                            return (\r\n                                <Fragment key={index}>\r\n                                    <tr>\r\n                                        <td\r\n                                            style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}\r\n                                        > {index+1} </td>\r\n                                        <td style={{textAlign: 'left'}}>\r\n                                            {applicant_name}\r\n                                        </td>\r\n                                        <td style={{textAlign: 'left'}}> {property_name} </td>\r\n                                        <td style={{textAlign: 'left', margin: '5px'}}>\r\n                                        \r\n                                            {new Date(due_date).toLocaleDateString()}\r\n                                        \r\n                                        </td>\r\n                                        {/* <td> {new Date(tx_date).toLocaleDateString()} </td> */}\r\n                                        \r\n                                        <td>\r\n                                                <Typography color='error'>\r\n                                                { amount.toLocaleString() }\r\n                                                </Typography>\r\n                                            </td>\r\n                                            <td>\r\n                                                <Typography style={{color: '#20C997'}}>\r\n                                                { amount_paid.toLocaleString() }\r\n                                                </Typography>\r\n                                            </td>\r\n                                            <td> {rcpt_no} </td>\r\n                                            <td> {new Date(tx_date).toLocaleDateString()} </td>\r\n                                            <td>\r\n                                                <Typography style={{color: '#20C997'}}>\r\n                                                { tx_amount.toLocaleString() }\r\n                                                </Typography>\r\n                                            </td>\r\n                                        <td> {pay_method} </td>\r\n                                        <td\r\n                                            style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}\r\n                                        >\r\n                                            <div className='p-2'>\r\n                                            {tx_Status(status)}\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                    {\r\n                        reports &&reports.length >0 &&\r\n                        <tr\r\n                        style={{background: '#2A3F54', color: 'white'}} \r\n                        >\r\n                            <td colSpan={2}>\r\n                                <Typography variant='subtitle1'\r\n                                style={{color: 'white'}}\r\n                                >\r\n                                    <b>Total:</b>\r\n                                </Typography>\r\n                            </td>\r\n                            <td colSpan={3}>\r\n                                <Typography variant='subtitle1'\r\n                                style={{color: 'white'}}\r\n                                >\r\n                                <b>{\r\n                                    calcuAmt(reports)\r\n                                }</b>\r\n                                </Typography>\r\n                            </td>\r\n                            <td colSpan={1}>\r\n                                <Typography variant='subtitle1'\r\n                                    style={{color: 'white'}}\r\n                                    >\r\n                                    <b>{calcuAimed(reports)}</b>\r\n                                </Typography>\r\n                            </td>\r\n                            <td colSpan={3}>\r\n                                <Typography variant='subtitle1'\r\n                                    style={{color: 'white'}}\r\n                                    >\r\n                                    <b>{ calcuLastPaid(reports)}</b>\r\n                                </Typography>\r\n                            </td>\r\n                            <td colSpan={2}></td>\r\n                        </tr>\r\n                        \r\n                    }\r\n                    \r\n                </tbody>\r\n                \r\n            </table>\r\n            }\r\n             {\r\n                reports && reports.length>0 &&\r\n                <table className='hide-on-print table'>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                        <DownloadSaleRepmt\r\n                            dataSet1={reports}\r\n                            date={data.start_date + '-'+data.end_date}\r\n                        />\r\n                        </td>\r\n                        <td>\r\n                            <button\r\n                                onClick={() =>window.print()}\r\n                                >\r\n                                    Print\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default SaleRepayViewTable\r\n","import { Grid, Typography } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport React, {Fragment, useState, useEffect} from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectToken } from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\nimport SaleRepayViewTable from './SaleRepayViewTable'\r\nconst SaleRepaymentFeed = () => {\r\n    const token = useSelector(selectToken)\r\n    const [reports, setReports] = useState()\r\n    const [data, setData] = useState({\r\n        start_date: '',\r\n        end_date: ''\r\n    })\r\n\r\n    const handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n        setData ({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handle_Get_Report =()=>{\r\n        if(data.start_date && data.end_date)\r\n            return(\r\n                axios.get(`/sale/report/${data.start_date}/${data.end_date}`, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`\r\n                    }\r\n                })\r\n                .then(result =>{\r\n                   setReports(result.data)\r\n                })\r\n                .catch(error =>{\r\n                    if(error){\r\n                        return error\r\n                    }\r\n                })\r\n            )\r\n    }\r\n\r\n    \r\n\r\n    useEffect(() =>{\r\n        return handle_Get_Report()\r\n    }, [data])\r\n    return (\r\n        <Fragment>\r\n            <div className='app__Feed'>\r\n                <AppHeader title='Sale Repayment Report' />\r\n                <div className='admin__FeedContainer'>\r\n                    <Grid container spacing={2} >\r\n                        <Grid item lg={12} md={12} sm={12}>\r\n                            <div className='admin__Title'>\r\n                                <section>\r\n                                    <Typography variant='h3'>Reports Pool</Typography>\r\n                                </section>\r\n                            </div>\r\n                            <div className='p-1' />\r\n                           {/* Tableview */}\r\n                           <SaleRepayViewTable\r\n                                data={data}\r\n                                reports={reports}\r\n                                handleChange={handleChange}\r\n                                handle_Get_Report={handle_Get_Report}\r\n                           \r\n                           />\r\n                            {\r\n                                reports<=0 &&\r\n                                \r\n                                <div className='alert alert-warning'\r\n                                    style={{width: '98%', margin: 'auto'}}\r\n                                >\r\n                                    {`Ops!!! No Transaction History`}\r\n                                </div>                \r\n                            }\r\n               \r\n                           </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div> \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default SaleRepaymentFeed\r\n","import React, { Fragment } from 'react'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport SaleRepaymentFeed from '../components/SaleRepaymentFeed'\r\n\r\nconst SaleRepaymentReportScreen = () => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"app\">\r\n                <SideBarMenu />\r\n                {/* feed */}\r\n                <SaleRepaymentFeed />\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default SaleRepaymentReportScreen\r\n","// MUI Stuff\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Search from \"@material-ui/icons/Search\";\r\n\r\nimport axios from \"axios\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectToken,\r\n  selectExpenseItems,\r\n  selectExpenseCategories,\r\n  selectAccounts,\r\n} from \"../appState/appSlice\";\r\nimport { DownloadExpenseReport } from \"./ExcelDownload\";\r\nimport AppHeader from \"./global/AppHeader\";\r\nconst ExpenseReportFeed = () => {\r\n  const token = useSelector(selectToken);\r\n  const accounts = useSelector(selectAccounts);\r\n  const expItems = useSelector(selectExpenseItems);\r\n  const expCategories = useSelector(selectExpenseCategories);\r\n  const [reports, setReports] = useState();\r\n  const [data, setData] = useState({\r\n    start_date: \"\",\r\n    end_date: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setData({\r\n      ...data,\r\n      [name]: value,\r\n    });\r\n  };\r\n  const calcuAmt = (data) => {\r\n    const total = data && data.reduce((a, v) => +v.amount + a, 0);\r\n    return total.toLocaleString();\r\n  };\r\n\r\n  const renderExpCategory = (id) => {\r\n    const expCat =\r\n      expCategories && expCategories.find((category) => category.id == id);\r\n    return expCat ? (expCat.name ? expCat.name : null) : null;\r\n  };\r\n\r\n  const renderAccount = (code) => {\r\n    const acc = accounts && accounts.find((acc) => acc.code == code);\r\n    return acc.name;\r\n  };\r\n\r\n  const handle_Get_Report = () => {\r\n    if (data.start_date && data.end_date)\r\n      return axios\r\n        .get(`/expense/report/${data.start_date}/${data.end_date}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then((result) => {\r\n          setReports(result.data);\r\n        })\r\n        .catch((error) => {\r\n          if (error) {\r\n            return error;\r\n          }\r\n        });\r\n  };\r\n\r\n  useEffect(() => {\r\n    return handle_Get_Report();\r\n  }, [data]);\r\n  return (\r\n    <Fragment>\r\n      <div className=\"app__Feed\">\r\n        <AppHeader title=\"Expenses Report\" />\r\n        <div className=\"admin__FeedContainer\">\r\n          <Grid container spacing={2}>\r\n            <Grid item lg={12} md={12} sm={12}>\r\n              <div className=\"admin__Title\">\r\n                <section>\r\n                  <Typography variant=\"h3\">Reports Pool {}</Typography>\r\n                </section>\r\n              </div>\r\n              <div className=\"p-1\" />\r\n              {/* Expense Tableview */}\r\n              <table\r\n                className=\"mt-1 table-bordered hide-on-print\"\r\n                style={{\r\n                  width: \"98%\",\r\n                  margin: \"auto\",\r\n                  position: \"sticky\",\r\n                  top: 0,\r\n                  zIndex: 222,\r\n                }}\r\n              >\r\n                <thead>\r\n                  <th>From</th>\r\n                  <th>\r\n                    <input\r\n                      type=\"date\"\r\n                      value={data.start_date}\r\n                      placeholder=\"Staff\"\r\n                      name=\"start_date\"\r\n                      list=\"staffs\"\r\n                      onChange={(e) => handleChange(e)}\r\n                    />\r\n                  </th>\r\n                  <th>To</th>\r\n                  <th>\r\n                    <input\r\n                      name=\"end_date\"\r\n                      type=\"date\"\r\n                      value={data.end_date}\r\n                      onChange={(e) => handleChange(e)}\r\n                    />\r\n                  </th>\r\n                  <th>\r\n                    <Button\r\n                      size=\"small\"\r\n                      endIcon={<Search />}\r\n                      onClick={() => handle_Get_Report()}\r\n                      style={{\r\n                        background: \"#2a3f54\",\r\n                        color: \"white\",\r\n                        width: \"100%\",\r\n                      }}\r\n                    >\r\n                      Search\r\n                    </Button>\r\n                  </th>\r\n                </thead>\r\n              </table>\r\n\r\n              <table\r\n                className=\"table-hover table-bordered\"\r\n                style={{ width: \"98%\", margin: \"auto\" }}\r\n              >\r\n                <thead\r\n                  style={{\r\n                    top: 35,\r\n                    position: \"sticky\",\r\n                    background: \"#2A3F54\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  <th style={{ border: \"1px solid #F7F7F7F7\" }}>#</th>\r\n                  <th style={{ border: \"1px solid #F7F7F7F7\" }}>Item</th>\r\n                  <th style={{ border: \"1px solid #F7F7F7F7\" }}>Description</th>\r\n                  <th style={{ border: \"1px solid #F7F7F7F7\" }}>\r\n                    Account Payable\r\n                  </th>\r\n                  <th style={{ border: \"1px solid #F7F7F7F7\" }}>\r\n                    Account Receivable\r\n                  </th>\r\n                  <th style={{ border: \"1px solid #F7F7F7F7\" }}>\r\n                    Amount (<s>N</s>)\r\n                  </th>\r\n                  <th style={{ border: \"1px solid #F7F7F7F7\" }}>Date</th>\r\n                  <th style={{ border: \"1px solid #F7F7F7F7\" }}>Pay Method</th>\r\n                </thead>\r\n                <tbody>\r\n                  {reports &&\r\n                    reports.map((exp, index) => {\r\n                      const {\r\n                        expense_FK,\r\n                        description,\r\n                        amount,\r\n                        pay_method,\r\n                        expense_date,\r\n                        payee_account,\r\n                        payment_account,\r\n                      } = exp;\r\n                      return (\r\n                        <Fragment key={index}>\r\n                          <tr>\r\n                            <td style={{ textAlign: \"center\" }}>\r\n                              {\" \"}\r\n                              {index + 1}{\" \"}\r\n                            </td>\r\n                            <td style={{ textAlign: \"left\" }}>\r\n                              {\" \"}\r\n                              {renderExpCategory(expense_FK)}{\" \"}\r\n                            </td>\r\n                            <td style={{ textAlign: \"left\" }}>\r\n                              {\" \"}\r\n                              {description}{\" \"}\r\n                            </td>\r\n                            <td style={{ textAlign: \"left\" }}>\r\n                              {\" \"}\r\n                              {renderAccount(payment_account)}{\" \"}\r\n                            </td>\r\n                            <td style={{ textAlign: \"left\" }}>\r\n                              {\" \"}\r\n                              {renderAccount(payee_account)}{\" \"}\r\n                            </td>\r\n                            <td>\r\n                              <Typography color=\"error\">\r\n                                {amount.toLocaleString()}\r\n                              </Typography>\r\n                            </td>\r\n                            <td>\r\n                              {\" \"}\r\n                              {new Date(expense_date).toLocaleDateString()}{\" \"}\r\n                            </td>\r\n                            <td> {pay_method} </td>\r\n                          </tr>\r\n                        </Fragment>\r\n                      );\r\n                    })}\r\n                  {reports && reports.length > 0 && (\r\n                    <tr style={{ background: \"#2A3F54\", color: \"white\" }}>\r\n                      <td colSpan={3}>\r\n                        <Typography\r\n                          variant=\"subtitle1\"\r\n                          style={{ color: \"white\" }}\r\n                        >\r\n                          <b>Total:</b>\r\n                        </Typography>\r\n                      </td>\r\n                      <td colSpan={3}>\r\n                        <Typography\r\n                          variant=\"subtitle1\"\r\n                          style={{ color: \"white\" }}\r\n                        >\r\n                          <b>{calcuAmt(reports)}</b>\r\n                        </Typography>\r\n                      </td>\r\n                      <td colSpan={2}></td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n              {!expItems && (\r\n                <div\r\n                  className=\"alert alert-warning\"\r\n                  style={{ width: \"98%\", margin: \"auto\" }}\r\n                >\r\n                  {`Ops!!! No Transaction History`}\r\n                </div>\r\n              )}\r\n              {reports && reports.length > 0 && (\r\n                <table className=\"table hide-on-print\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>\r\n                        <DownloadExpenseReport\r\n                          dataSet1={reports}\r\n                          renderAccount={renderAccount}\r\n                          renderExpCategory={renderExpCategory}\r\n                          date={data.start_date + \"-\" + data.end_date}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <button\r\n                          onClick={() => window.print()}\r\n                          variant=\"contained\"\r\n                          color=\"inherit\"\r\n                        >\r\n                          Print\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ExpenseReportFeed;\r\n","import axios from 'axios'\r\nimport React, { Fragment, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectToken, setAccounts, setExpenseCategories, setExpenseItems } from '../appState/appSlice'\r\nimport ExpenseReportFeed from '../components/ExpenseReportFeed'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\n\r\nconst ExpenseReportScreen = () => {\r\n    const token = useSelector(selectToken)\r\n    const dispatch = useDispatch()\r\n    const get_Raised_Expense_Items =() =>{\r\n        axios.get('/expense/Items', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            } \r\n        })\r\n        .then(exps =>{\r\n            dispatch(setExpenseItems(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_ExpenseCategories =() =>{\r\n        axios.get('/expense/categories', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(exps =>{\r\n            dispatch(setExpenseCategories(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        return (\r\n            get_Raised_Expense_Items(),\r\n            get_ExpenseCategories(),\r\n            get_AllAccounts()\r\n        )\r\n    }, [])\r\n    return (\r\n        <Fragment>\r\n            <div className=\"app\">\r\n                <SideBarMenu />\r\n                {/* feed */}\r\n                <ExpenseReportFeed />\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ExpenseReportScreen\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport AccountScreen from './screens/AccountScreen'\r\nimport AdminScreen from './screens/AdminScreen'\r\nimport ReportsScreen from './screens/ReportScreen'\r\nimport { AuthScreen } from './screens/AuthScreen'\r\nimport BillScreen from './screens/BillScreen'\r\nimport CoaScreen from './screens/CoaScreen'\r\nimport CustomerScreen from './screens/CustomerScreen'\r\nimport EstimateScreen from './screens/EstimateScreen'\r\nimport ExpenseScreen from './screens/ExpenseScreen'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport InvoiceScreen from './screens/InvoiceScreen'\r\nimport JournalEntryScreen from './screens/JournalEntryScreen'\r\nimport MdApproveScreen from './screens/MdApproveScreen'\r\nimport PostingScreen from './screens/PostingScreen'\r\nimport PropertyServiceScreen from './screens/PropertyServiceScreen'\r\nimport ReceivePaymentScreen from './screens/RceivePaymentScreen'\r\nimport SalePaymentHistScreen from './screens/SalePaymentHistScreen'\r\nimport SaleScreen from './screens/SaleScreen'\r\nimport StaffScreen from './screens/StaffScreen'\r\nimport VendorScreen from './screens/VendorScreen'\r\nimport SaleRepaymentReportScreen from './screens/SaleRepaymentReportScreen'\r\nimport ExpenseReportScreen from './screens/ExpenseReportScreen'\r\n\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path='/' component={AuthScreen} />\r\n                <Route exact path='/staffs' component={StaffScreen} />\r\n                <Route exact path='/home' component={HomeScreen} />\r\n                <Route exact path='/coa' component={CoaScreen} />\r\n                <Route exact path='/customers' component={CustomerScreen} />\r\n                <Route exact path='/je_entry' component={JournalEntryScreen} />\r\n                <Route exact path='/expense' component={ExpenseScreen} />\r\n                <Route exact path='/bills' component ={BillScreen } />\r\n                <Route exact path='/invoice' component={InvoiceScreen} />\r\n                <Route exact path='/vendor' component={VendorScreen} />\r\n                <Route exact path='/estimate' component={EstimateScreen} />\r\n                <Route exact path ='/ps' component={PropertyServiceScreen} />\r\n                <Route exact path ='/rpayment' component={ReceivePaymentScreen} />\r\n                <Route exact path ='/sales' component ={SaleScreen} />\r\n                <Route exact path ='/applications' component={MdApproveScreen} />\r\n                <Route exact path ='/sales/tx' component={PostingScreen }/>\r\n                <Route exact path ='/sales/tx/:uuid/:name' component={SalePaymentHistScreen }/>\r\n                <Route exact path ='/coa/:name/:uuid' component={AccountScreen }/>\r\n                <Route exact path='/admin-settings-dashboard/:id' component={AdminScreen} />\r\n                <Route exact path='/:accountant/reports' component={ReportsScreen} />\r\n                <Route exact path='/:staff/sale_repmt_reports' component={SaleRepaymentReportScreen} />\r\n                <Route exact path='/:staff/exp_reports' component={ExpenseReportScreen} />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React, { Fragment } from 'react';\nimport Routes from './Routes';\n\nfunction App() {\n  return (\n    <Fragment>\n      <Routes />\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport appReducer from '../appState/appSlice'\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        app_state: appReducer,\r\n    },\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\nimport appStore from './app/appStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={appStore}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}