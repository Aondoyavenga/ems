{"version":3,"sources":["appState/appSlice.js","components/global/AppBackDrop.js","components/global/UserRoles.js","components/global/SideBarNavigation.js","components/global/SideBarMenu.js","components/global/AppHeader.js","components/AccountFeed.js","screens/AccountScreen.js","components/global/TxTableView.js","components/AdminAccountSetting.js","components/global/AppSnackbar.js","components/global/PurchaseRepayment.js","components/SaleViewTable.js","components/AdminCustomerSetting.js","components/AdminPosting.js","components/PsViewTable.js","components/AdminPsSetting.js","components/UploadAvatar.js","components/Mandate.js","components/global/CustomerList.js","components/global/CustomerViewTable.js","components/AdminStaffSetting.js","components/global/AdminMenuList.js","components/charts/AdminSideMenu.js","components/AdminFeed.js","screens/AdminScreen.js","components/auth/LoginForm.js","components/auth/UserCreationForm.js","components/auth/CreateStaff.js","screens/AuthScreen.js","components/BillFeed.js","components/form/AccountCreationForm.js","components/global/AppWidgetHeader.js","components/BillWidget.js","components/global/AddBillCategories.js","screens/BillScreen.js","components/global/AccountList.js","components/CoaFeed.js","components/CoaWidget.js","screens/CoaScreen.js","components/CustomerFeed.js","components/form/CustomerCreationForm.js","components/CustomerWidget.js","screens/CustomerScreen.js","components/EstimateFeed.js","components/EstimateWidget.js","screens/EstimateScreen.js","components/ExpenseFeed.js","components/ExpenseWidget.js","screens/ExpenseScreen.js","components/charts/MultipleChart.js","components/charts/SalesChart.js","components/HomeFeed.js","screens/HomeScreen.js","components/InvoiceFeed.js","components/InvoiceWidget.js","screens/InvoiceScreen.js","components/JournalFeed.js","components/JournalWidget.js","screens/JournalEntryScreen.js","components/MdFeed.js","components/global/Receipt.js","components/global/CashReceipt.js","components/MdWidget.js","screens/MdApproveScreen.js","components/CustomerCard.js","components/PostingTicket.js","components/PostingFeed.js","screens/PostingScreen.js","components/form/PropServiceForm.js","components/PropServiceWidget.js","components/global/PropServiceList.js","components/PropertyServiceFeed.js","screens/PropertyServiceScreen.js","components/ReceivePaymentFeed.js","components/ReceivePaymentWidget.js","screens/RceivePaymentScreen.js","components/SalePaidHistoryFeed.js","screens/SalePaymentHistScreen.js","components/global/SelectApplicant.js","components/SaleFeed.js","components/SaleWidget.js","screens/SaleScreen.js","components/StaffFeed.js","components/StaffWidget.js","screens/StaffScreen.js","components/VendorList.js","components/VendorFeed.js","components/form/VendorCreationForm.js","components/VendorWidget.js","screens/VendorScreen.js","Routes.js","App.js","serviceWorker.js","app/appStore.js","index.js"],"names":["appSlice","createSlice","name","initialState","open","token","user","vendors","accounts","customers","propServices","appWidget","assetAccounts","equityAccounts","liabilityAccounts","openEstimate","userInvoices","billCategories","buildCategories","pendingSales","txAccounts","duePayments","expenseCategories","userExpenseRaised","allStaffs","paymentHistory","paidOnpaySales","journals","staffPosted_Journals","accountTxs","sales","filterSale","locations","transactions","filterTx","filterCus","psSold","reducers","setOpen","state","action","payload","setToken","setUser","setAppWidget","setAssetAccount","setLiabilityAccount","setEquityAccount","setCustomers","setAccounts","setVendors","setPropServices","setOpenEstimate","setUserInvoices","setBillCategories","setBuildCategories","setpendingSales","setTxAccounts","setDuePayments","setExpenseCategories","setUserExpenseRaised","setAllStaffs","setPaymentHistory","setPaidOnpaySales","setJournals","setStaffPosted_Journals","setAccountTxs","setSAles","setFilterSale","setLocations","setTransactions","setfilterTx","setFilterCus","setPsSold","actions","selectOpen","app_state","selectSales","selectFilterSale","selectToken","selectUser","selectVendors","selectCustomers","selectPsSold","selectPropServices","selectAccounts","selectAssetAccount","selectEquityAccount","selectLiabilityAccount","selectOpenEstimate","selectUserInvoices","selectBillCategories","selectBuildCategories","selectPendingSales","selectPaymentHistory","selectPaidOnpaySales","selectTxAccounts","selectExpenseCategories","selectUserExpenseRaised","selectAllStaffs","selectStaffPosted_Journals","selectAccountTxs","selectLocations","selectTransactions","selectFilterTx","selectFilterCus","useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","AppBackdrop","classes","Backdrop","className","onClick","CircularProgress","root","width","maxWidth","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","UserRoles","admin","expense","entries","accountant","ico","md","useSelector","to","ListItem","button","ListItemIcon","style","fontSize","ListItemText","secondary","username","SideBarNavigation","useState","collapse","setCollapse","Edit","primary","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","MonetizationOn","ShoppingCart","HistoryTwoTone","CheckCircle","is_superuser","Person","SideBarMenu","history","useHistory","dispatch","useDispatch","useEffect","push","Typography","variant","first_name","Button","size","IconButton","Settings","Fullscreen","Power","AppHeader","title","Dashboard","MoreVert","AccountFeed","useParams","calcuTotalDR","data","tDR","filter","dta","tx_type","reduce","a","v","amount","calcuTotalCR","tCR","Grid","container","item","lg","border","map","pay","index","tx_date","description","pay_method","rcpt_no","Date","toLocaleDateString","colSpan","balance_type","ccolSpan","length","display","alignItems","justifyContent","goBack","endIcon","UndoRounded","AccountScreen","uuid","axios","get","headers","Authorization","then","catch","error","console","log","txs","TxTableView","margin","top","position","tx","x","paid","textAlign","AdminAccountSetting","staffs","tab","setTab","code","active","locked","acc_type","account","accData","setAccdata","handleChange","e","target","value","facc","acc","table","ftxs","account_FK","startIcon","placeholder","list","onChange","id","staff","borderColor","outline","paddingRight","borderLeft","borderBottom","borderTop","borderRight","readOnly","label","AppSnackbar","message","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Fragment","aria-label","PurchaseRepayment","purchases","amount_paid","parseInt","SaleViewTable","setRcpt_no","proptxs","setProptxs","sale","property_name","sale_date","due_date","More","applicant_name","AdminCustomerSetting","success","setSuccess","setMessage","rm","country","phone_no","address_1","occupation","place_work","next_kin_name","customer_sex","customer_name","customer_email","customer_state","postal_address","customer_marital","customer_address","next_kin_addrss","next_kin_relate","business_employer_name","customer","cusData","setCusdata","fcus","cus","fsales","applicant","post","result","response","statusText","last_name","AdminPostingSetting","PsViewTable","psSolds","returnBuildCategory","bCategory","cat","build_category","status","AdminPsSetting","add","setAdd","setError","body","setBody","cost","ps_type","category","location","quantity","sale_price","psData","setPsData","fps","ps","getSoldFps","property","flexDirection","l","type","AvatarUpload","blob","src","crop","unit","height","aspect","appDialog","onSelectFile","files","reader","FileReader","addEventListener","setState","readAsDataURL","onImageLoaded","image","imageRef","onCropComplete","makeClientCrop","handleCropComplete","onCropChange","percentCrop","handleSubmitAvatar","props","FormData","append","url","res","sessionFunc","profileUser","err","this","getCroppedImg","croppedImageUrl","fileName","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","y","Promise","resolve","reject","toBlob","window","URL","revokeObjectURL","fileUrl","createObjectURL","htmlFor","myInput","click","Avatar","AddAPhoto","marginLeft","ref","accept","ruleOfThirds","onComplete","keepSelection","flex","gap","Check","History","PureComponent","Mandate","mandate","setMandate","isOpen","fullHeight","split","CustomerList","hidden","isWidget","avatar","alt","role","rel","CustomerViewTable","AdminStaffSetting","password","email","mobile","is_active","setData","fstaff","staf","postBy_FK","AdminMenuList","setIsActive","draggable","divider","AdminSideMenu","AdminFeed","isActive","AdminPosting","renderAdminMenu","AdminScreen","get_Paid_Onpay_Sales","localStorage","clear","paidOnpay","exps","asset","setItem","categories","LoginForm","preventDefault","handle_Login","UserCreationForm","swap","setSwap","authData","setAuthdata","handle_Change","userId","setTimeout","alert","handle_CreateStaff","CreateStaff","Error","method","Paper","ChevronLeft","PlusOne","AuthScreen","BillFeed","setIsOpen","setIswidget","vendorSales","setVendorSales","billFormTemplate","billcategory","billForm","setBillform","vendor_FK","bill_date","bill_term","VALUES","total","handleSetPostData","updatedbillform","jef","i","Object","assign","calcuAmt","fdata","values","findal","element","getSeconds","toLocaleString","getMinutes","getMilliseconds","filterCategories","FileCopy","FormLabel","required","vendor","vendor_name","d","sd","duedate","setDate","getDate","handleSetTerm","Container","categ","vsales","filterbillform","splice","handleRemovebillform","handleSubmit","AccountCreationForm","snackbar","setSnackbar","class","TextField","fullWidth","Select","native","defaultValue","FormControl","trim","handle_Post","AppWidgetHeader","BillWidget","AddBillCategories","billCategoryFormTemplate","createdBy_FK","createdAt","billCategoryForm","setBillCategoryform","upbillCategoryform","centered","form","filterbillCategoryform","handleRemoveform","marginRight","disabled","BillScreen","AccountList","CoaFeed","assets","equitys","liabilitys","liability","equity","CoaWidget","CoaScreen","CustomerFeed","CustomerCreationForm","RMS","keys","key","FormGroup","handle_Create_Customer","CustomerWidget","CustomerScreen","EstimateFeed","pss","estimateFormTemplate","pro_service","qty","estimateForm","setEstimateform","customer_FK","estimate_date","exp_date","updatedestimateform","rate","selectedPS","float","filterestimateform","handleRemoveestimateform","EstimateWidget","EstimateScreen","ExpenseFeed","setbody","expenseFormTemplate","expenseForm","setExpenseform","expense_date","payee_account","payment_account","updatedexpenseform","filterexpenseform","handleRemoveexpenseform","ExpenselWidget","userExpneses","cursor","ExpenseScreen","ExpenseWidget","MultipleChart","datasets","labels","dataPolar","setDataPolar","custotal","acctotal","getItem","options","responsive","SalesChart","onpaid","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","dataLine","setDataLine","flabels","toUTCString","HomeFeed","setPaid","setOnPaid","paiddata","paiddataValues","completedPaid","pelement","onpaiddata","onpaiddataValues","onPaid","onpelement","justify","HomeScreen","InvoiceFeed","noestimate","setNoestimate","invoiceFormTemplate","invoiceForm","setInvoiceform","asset_account_FK","invoice_date","invoice_term","invoice_ID","updatedinvoiceform","cus_FK","filterinvoiceform","handleRemoveinvoiceform","InvoiceWidget","invoices","invoice","InvoiceScreen","JournalFeed","jeFormTemplate","jeForm","setJeform","je_ID","je_date","updatedJeform","filterJeform","handleRemoveJeform","JournalWidget","staffJournals","sje","MoreVertOutlined","JournalEntryScreen","MdFeed","setApplicant","setApplication","elevation","selected","application","selectedApplicant","handleSelect","borderRadius","Receipt","sale_uuid","date","sm","Math","round","Checkbox","CashReceipt","rows","row","MdWidget","setIsopen","step","setStep","plans","setPlans","scheluls","boxSizing","boxShadow","period","bcategory","FormControlLabel","control","checked","listStyle","handleApproval","MdApproveScreen","dispacth","CustomerCard","ID","cusID","handle_Set_Ticket","ListItemAvatar","ChevronRight","PostingTicket","handlePost","amount_in_words","signature","Divider","Print","print","PostingFeed","searchKey","setSearchKey","txSearch","setTxSearch","filterduepay","due","filterTxAccounts","txacc","includes","Search","marginTop","PostingScreen","dues","PropServiceForm","sku","product_class","qty_athDate","reorder_point","purchase_info","sale_options","purchase_option","expense_acc_FK","income_acc_FK","handle_Add_Prop_Service","PropServiceWidget","PropServiceList","PropertyServiceFeed","PropertyServiceScreen","ReceivePaymentFeed","setInvoice","recievePayFormTemplate","orig_amount","amount_pay","receivePayForm","pay_date","deposit_account","invoi","ReceivePaymentWidget","ReceivePaymentScreen","SalePaidHistoryFeed","paymentHistorys","tx_amount","SalePaymentHistScreen","phistory","SelectApplicant","setSelected","SaleFeed","add_BuildCategories","select","setSelect","start","end","loop","division","newDate","handleDate","handleSetValues","prop","filterProperty","SaleWidget","MoreHoriz","SaleScreen","StaffFeed","password2","last_login","date_joined","Undo","StaffWidget","AttachFile","StaffScreen","VendorList","phone","VendorFeed","VendorCreationForm","address_2","city","zip_code","website","exp_account_FK","vendorData","setVendordata","handle_Create_Vendor","VendorrWidget","VendorScreen","VendorWidget","Routes","exact","path","App","Boolean","hostname","match","configureStore","reducer","appReducer","ReactDOM","render","StrictMode","store","appStore","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c739bac1.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const appSlice = createSlice({\r\n    name: 'app_state',\r\n    initialState: {\r\n        open: '',\r\n        token: '',\r\n        user: '',\r\n        vendors: '',\r\n        accounts: '',\r\n        customers: '',\r\n        propServices: '',\r\n        appWidget: false,\r\n        assetAccounts: '',\r\n        equityAccounts: '',\r\n        liabilityAccounts: '',\r\n        openEstimate: '',\r\n        userInvoices: '',\r\n\r\n        billCategories: '',\r\n        buildCategories: '',\r\n        pendingSales: '',\r\n\r\n        txAccounts: '',\r\n        duePayments: '',\r\n        expenseCategories: '',\r\n        userExpenseRaised: '',\r\n        allStaffs: '',\r\n        paymentHistory: '',\r\n        paidOnpaySales: '',\r\n\r\n        journals: '',\r\n        staffPosted_Journals: '',\r\n        accountTxs: '',\r\n\r\n        sales: '',\r\n        filterSale: '',\r\n        locations: '',\r\n        transactions: '',\r\n        filterTx: '',\r\n        filterCus: '',\r\n        psSold: '',\r\n    },\r\n\r\n    reducers: {\r\n        setOpen: (state, action) =>{\r\n            state.open = action.payload\r\n        },\r\n        setToken: (state, action) =>{\r\n            state.token = action.payload;\r\n        },\r\n        setUser: (state, action) =>{\r\n            state.user = action.payload\r\n        },\r\n        setAppWidget: (state, action) =>{\r\n            state.appWidget = action.payload\r\n        },\r\n        setAssetAccount: (state, action) =>{\r\n            state.assetAccounts = action.payload\r\n        },\r\n        setLiabilityAccount: (state, action) =>{\r\n            state.liabilityAccounts = action.payload\r\n        },\r\n        setEquityAccount: (state, action) =>{\r\n            state.equityAccounts = action.payload\r\n        },\r\n        setCustomers: (state, action) =>{\r\n            state.customers = action.payload\r\n        },\r\n        setAccounts: (state, action) =>{\r\n            state.accounts = action.payload\r\n        },\r\n        setVendors: (state, action) =>{\r\n            state.vendors = action.payload\r\n        },\r\n        setPropServices: (state, action) =>{\r\n            state.propServices = action.payload\r\n        },\r\n        setOpenEstimate: (state, action) =>{\r\n            state.openEstimate = action.payload\r\n        },\r\n        setUserInvoices: (state, action) =>{\r\n            state.userInvoices = action.payload\r\n        },\r\n        setBillCategories: (state, action) =>{\r\n            state.billCategories = action.payload\r\n        },\r\n        setBuildCategories: (state, action) =>{\r\n            state.buildCategories = action.payload\r\n        },\r\n        setpendingSales: (state, action) =>{\r\n            state.pendingSales = action.payload\r\n        },\r\n\r\n        setTxAccounts: (state, action ) =>{\r\n            state.txAccounts = action.payload\r\n        },\r\n        setDuePayments: (state, action) =>{\r\n            state.duePayments = action.payload\r\n        },\r\n        setExpenseCategories: (state, action) =>{\r\n            state.expenseCategories = action.payload\r\n        },\r\n        setUserExpenseRaised: (state, action) =>{\r\n            state.userExpenseRaised = action.payload\r\n        },\r\n        setAllStaffs: (state, action) =>{\r\n            state.allStaffs = action.payload\r\n        },\r\n        setPaymentHistory: (state, action) =>{\r\n            state.paymentHistory = action.payload\r\n        },\r\n        setPaidOnpaySales: (state, action) =>{\r\n            state.paidOnpaySales = action.payload\r\n        },\r\n\r\n        setJournals: (state, action) =>{\r\n            state.journals = action.payload\r\n        },\r\n        setStaffPosted_Journals: (state, action) =>{\r\n            state.staffPosted_Journals = action.payload\r\n        },\r\n        setAccountTxs: (state, action) =>{\r\n            state.accountTxs = action.payload\r\n        },\r\n        setSAles: (state, action) =>{\r\n            state.sales = action.payload\r\n        },\r\n        setFilterSale: (state, action) =>{\r\n            state.filterSale = action.payload\r\n        },\r\n        setLocations: (state, action) =>{\r\n            state.locations = action.payload\r\n        },\r\n        setTransactions: (state, action) =>{\r\n            state.transactions = action.payload\r\n        },\r\n        setfilterTx: (state, action) =>{\r\n            state.filterTx = action.payload\r\n        },\r\n        setFilterCus: (state, action) =>{\r\n            state.filterCus = action.payload\r\n        },\r\n\r\n        setPsSold: (state, action) =>{\r\n            state.psSold = action.payload\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    setOpen,\r\n    setToken,\r\n    setUser,\r\n    setVendors,\r\n    setAccounts,\r\n    setCustomers,\r\n    setAppWidget,\r\n    setAssetAccount,\r\n    setEquityAccount,\r\n    setLiabilityAccount,\r\n\r\n    setPropServices,\r\n    setPsSold,\r\n\r\n    setOpenEstimate,\r\n    setUserInvoices,\r\n    setBillCategories,\r\n    setBuildCategories,\r\n    setpendingSales,\r\n    setTxAccounts,\r\n    setDuePayments,\r\n    setExpenseCategories,\r\n    setUserExpenseRaised,\r\n    setAllStaffs,\r\n    setPaymentHistory,\r\n    setPaidOnpaySales,\r\n\r\n    setJournals,\r\n    setStaffPosted_Journals,\r\n\r\n    setAccountTxs,\r\n    setSAles,\r\n    setFilterSale,\r\n    setLocations,\r\n    setTransactions,\r\n    setfilterTx,\r\n    setFilterCus,\r\n    \r\n} = appSlice.actions;\r\n\r\nexport const selectOpen = state => state.app_state.open;\r\n\r\nexport const selectSales = state => state.app_state.sales;\r\nexport const selectFilterSale = state => state.app_state.filterSale;\r\n\r\nexport const selectToken = state => state.app_state.token;\r\nexport const selectUser = state => state.app_state.user;\r\n\r\nexport const selectVendors = state => state.app_state.vendors;\r\nexport const selectAppWidget = state =>state.app_state.appWidget;\r\n\r\nexport const selectCustomers = state => state.app_state.customers;\r\n\r\nexport const selectPsSold = state =>state.app_state.psSold;\r\nexport const selectPropServices = state => state.app_state.propServices;\r\n\r\nexport const selectAccounts = state => state.app_state.accounts;\r\nexport const selectAssetAccount = state => state.app_state.assetAccounts;\r\nexport const selectEquityAccount = state => state.app_state.equityAccounts\r\nexport const selectLiabilityAccount = state => state.app_state.liabilityAccounts\r\n\r\nexport const selectOpenEstimate = state => state.app_state.openEstimate;\r\n\r\nexport const selectUserInvoices = state => state.app_state.userInvoices;\r\n\r\nexport const selectBillCategories = state => state.app_state.billCategories;\r\nexport const selectBuildCategories = state => state.app_state.buildCategories;\r\n\r\nexport const selectPendingSales = state => state.app_state.pendingSales;\r\nexport const selectPaymentHistory = state => state.app_state.paymentHistory;\r\nexport const selectPaidOnpaySales = state => state.app_state.paidOnpaySales;\r\n\r\nexport const selectTxAccounts = state => state.app_state.txAccounts;\r\nexport const selectDuePayments = state => state.app_state.duePayments;\r\n\r\nexport const selectExpenseCategories = state => state.app_state.expenseCategories;\r\nexport const selectUserExpenseRaised = state => state.app_state.userExpenseRaised;\r\n\r\nexport const selectAllStaffs  = state =>state.app_state.allStaffs;\r\n\r\nexport const selectJournals = state => state.app_state.journals;\r\nexport const selectStaffPosted_Journals = state => state.app_state.staffPosted_Journals;\r\n\r\nexport const selectAccountTxs = state => state.app_state.accountTxs;\r\nexport const selectLocations = state => state.app_state.locations;\r\n\r\nexport const selectTransactions = state => state.app_state.transactions;\r\nexport const selectFilterTx = state => state.app_state.filterTx;\r\n\r\nexport const selectFilterCus = state => state.app_state.filterCus;\r\n\r\nexport default appSlice.reducer;","import React from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nexport default function AppBackdrop({open, setOpen}) {\r\n  const classes = useStyles();\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleToggle = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n","import { ListItem, ListItemIcon, ListItemText, makeStyles } from '@material-ui/core'\r\nimport { Group, House, HowToVote, IndeterminateCheckBox, Lock, LockOpen, Person, PersonAdd, RedeemRounded } from '@material-ui/icons'\r\nimport React, { Fragment } from 'react'\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../../appState/appSlice';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n  }));\r\n\r\nfunction UserRoles({ admin, expense, sales, entries, accountant, ico, md }) {\r\n    const classes = useStyles()\r\n    const user = useSelector(selectUser)\r\n    return (\r\n        <Fragment>\r\n          {/* entries */}\r\n          { entries&&\r\n            <Fragment>\r\n              {/* <Link to='/bills'>\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon>\r\n                    <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                  </ListItemIcon>\r\n                  <ListItemText secondary=\"Bills\" />\r\n                </ListItem>\r\n              </Link> */}\r\n              {/* <Link to='/invoice'>\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon>\r\n                    <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                  </ListItemIcon>\r\n                  <ListItemText secondary=\"Invoices\" />\r\n                </ListItem>\r\n              </Link> */}\r\n              <Link to='/staffs'>\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon>\r\n                    <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                  </ListItemIcon>\r\n                  <ListItemText secondary=\"Staffs\" />\r\n                </ListItem>\r\n              </Link>\r\n              <Link to='/customers'>\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon>\r\n                    <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                  </ListItemIcon>\r\n                  <ListItemText secondary=\"Customers\" />\r\n                </ListItem>\r\n              </Link>\r\n              {/* <ListItem button className={classes.nested}>\r\n                <ListItemIcon>\r\n                  <AllInbox style={{ fontSize: '12px', color: 'gray' }} />\r\n                </ListItemIcon>\r\n                <ListItemText secondary=\"Cubicle\" />\r\n              </ListItem> */}\r\n            </Fragment>\r\n          }\r\n          {/* Banking officer */}\r\n            { expense &&\r\n              <Fragment>\r\n                <Link to='/expense'>\r\n                  <ListItem button className={classes.nested}>\r\n                    <ListItemIcon>\r\n                      <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                    </ListItemIcon>\r\n                    <ListItemText secondary=\"Expense\" />\r\n                  </ListItem>\r\n                </Link>\r\n                {/* <Link to='/vendor'>\r\n                  <ListItem button className={classes.nested}>\r\n                    <ListItemIcon>\r\n                      <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                    </ListItemIcon>\r\n                    <ListItemText secondary=\"Vendors\" />\r\n                  </ListItem>\r\n                </Link> */}\r\n              </Fragment>\r\n            }\r\n              {/* Sales */}\r\n              { sales &&\r\n                <Fragment>\r\n                  \r\n                  <Link to='/sales'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Sales\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to='/sales/tx'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Posting\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to='/ps'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Property & Services\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  {/* <Link to='/estimate'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Estimate\" />\r\n                    </ListItem>\r\n                  </Link> */}\r\n                  {/* <Link to='/rpayment'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Receive Payment\" />\r\n                    </ListItem>\r\n                  </Link> */}\r\n                </Fragment>\r\n              }\r\n              {/* Accounting */}\r\n              {\r\n                accountant&&\r\n                <Fragment>\r\n                  <Link to='/coa'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Chart of Accounts\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to='/je_entry'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Journal Entry\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                </Fragment>\r\n              }\r\n\r\n              {/* Ico */}\r\n              {\r\n                ico&&\r\n                <Fragment>\r\n                  <Link to='/inter_control_sme'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"SME Loans\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to='/inter_control_micro_credit'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Micro-credit Loans\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                </Fragment>\r\n              }\r\n              {\r\n                md&&\r\n                <Fragment>\r\n                  <Link to='/applications'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Approve\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  \r\n                </Fragment>\r\n              }\r\n          {/* Admin */}\r\n          \r\n          {\r\n            admin &&\r\n            <Link to={`/admin-settings-dashboard/${user.username}`} >\r\n              <ListItem button className={classes.nested}>\r\n                <ListItemIcon>\r\n                <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                </ListItemIcon>\r\n                <ListItemText secondary=\"Admin\" />\r\n              </ListItem>\r\n            </Link>\r\n          }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UserRoles\r\n","import { Collapse, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core'\r\nimport { CheckCircle, Edit, ExpandLess, ExpandMore, HistoryTwoTone, MonetizationOn, Person, Receipt, ShoppingCart } from '@material-ui/icons';\r\nimport React, { useState } from 'react'\r\nimport { Fragment } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../../appState/appSlice';\r\nimport UserRoles from './UserRoles'\r\n\r\nconst SideBarNavigation = () => {\r\n    const user = useSelector(selectUser)\r\n    const [collapse, setCollapse] = useState()\r\n    return (\r\n        <div className='list__Box'>\r\n            {\r\n                user&&\r\n                user.entries&&\r\n                <Fragment>\r\n                    <ListItem button onClick={() =>setCollapse(1)} className={collapse==1?'isactive': ''}>\r\n                        <ListItemIcon>\r\n                        <Edit />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Entries\" />\r\n                        {collapse==1 ? <ExpandLess /> : <ExpandMore />}\r\n                    </ListItem>\r\n                    <Collapse in={collapse==1? true: false} timeout=\"auto\" unmountOnExit className='list__Container'>\r\n                        <List component=\"div\" disablePadding>\r\n                            <UserRoles  entries={user.entries} />\r\n                        </List>\r\n                    </Collapse>\r\n                </Fragment>\r\n            }\r\n            {\r\n                user&&\r\n                user.expense&&\r\n                <Fragment>\r\n                    <ListItem button onClick={() =>setCollapse(2)} className={collapse==2?'isactive': ''}>\r\n                        <ListItemIcon>\r\n                        <MonetizationOn />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Expense\" />\r\n                        {collapse==2 ? <ExpandLess /> : <ExpandMore />}\r\n                    </ListItem>\r\n                    <Collapse in={collapse ==2?true:false} timeout=\"auto\" unmountOnExit className='list__Container'>\r\n                        <List component=\"div\" disablePadding>\r\n                        {\r\n                            user&&\r\n                            <UserRoles  expense={user.expense} />\r\n                        }\r\n                        </List>\r\n                    </Collapse>\r\n                </Fragment>\r\n            }\r\n            {\r\n                user&&\r\n                user.sales&&\r\n                <Fragment>\r\n                <ListItem button onClick={() =>setCollapse(3)} className={collapse==3?'isactive': ''}>\r\n                    <ListItemIcon>\r\n                    <ShoppingCart />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Sales\" />\r\n                    {collapse==2 ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={collapse==3?true:false} timeout=\"auto\" unmountOnExit className='list__Container'>\r\n                    <List component=\"div\" disablePadding>\r\n                        <UserRoles  sales={user.sales} />\r\n                    </List>\r\n                </Collapse>\r\n                </Fragment>\r\n            }\r\n            {\r\n                user&&\r\n                user.accountant&&\r\n                <Fragment>\r\n                    <ListItem button onClick={() =>setCollapse(4)} className={collapse==4?'isactive': ''}>\r\n                        <ListItemIcon>\r\n                        <HistoryTwoTone />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Accounting\" />\r\n                        {collapse==4 ? <ExpandLess /> : <ExpandMore />}\r\n                    </ListItem>\r\n                    <Collapse in={collapse==4?true:false} timeout=\"auto\" unmountOnExit className='list__Container'>\r\n                        <List component=\"div\" disablePadding>\r\n                            <UserRoles  accountant={user.accountant}/>\r\n                        </List>\r\n                    </Collapse>\r\n                </Fragment>\r\n            }\r\n            {\r\n                user&&\r\n                user.md&&\r\n                <Fragment>\r\n                    <ListItem button onClick={() =>setCollapse(5)} className={collapse==5?'isactive': ''}>\r\n                        <ListItemIcon>\r\n                        <CheckCircle />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Approval\" />\r\n                        {collapse==5 ? <ExpandLess /> : <ExpandMore />}\r\n                    </ListItem>\r\n                    <Collapse in={collapse==5?true:false} timeout=\"auto\" unmountOnExit className='list__Container'>\r\n                        <List component=\"div\" disablePadding>\r\n                        \r\n                            <UserRoles  md={user.md} />\r\n                                \r\n                        </List>\r\n                    </Collapse>\r\n                </Fragment>\r\n            }\r\n            {\r\n                user&&\r\n                user.is_superuser&&\r\n                <Fragment>\r\n                    <ListItem button onClick={() =>setCollapse(6)} className={collapse==6?'isactive': ''}>\r\n                        <ListItemIcon>\r\n                        <Person />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Adminstrator\" />\r\n                        {collapse==6 ? <ExpandLess /> : <ExpandMore />}\r\n                    </ListItem>\r\n                    <Collapse in={collapse==6?true:false} timeout=\"auto\" unmountOnExit className='list__Container'>\r\n                        <List component=\"div\" disablePadding>\r\n                        \r\n                            <UserRoles  admin={user.is_superuser} />\r\n                                \r\n                        </List>\r\n                    </Collapse>\r\n                </Fragment>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBarNavigation\r\n","import { Button, IconButton, Typography } from '@material-ui/core'\r\nimport { Fullscreen, Power, Settings } from '@material-ui/icons'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, selectUser, setToken } from '../../appState/appSlice'\r\nimport SideBarNavigation from './SideBarNavigation'\r\n\r\nconst SideBarMenu = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const user = useSelector(selectUser)\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n    }, [token])\r\n    return (\r\n        <div className='side__BarContainer p-1'>\r\n            <div className='side__BarHeader p-2 hide-on-print' >\r\n               <Typography variant='subtitle1'>EMS</Typography>\r\n               {\r\n                user &&\r\n                <Typography\r\n                    variant='subtitle1'\r\n                    style={{color: '#20c997'}}\r\n                >\r\n                    {`${user.first_name} ${user.username}`}\r\n                </Typography>\r\n                }\r\n            </div>\r\n            <section className='p-3'>\r\n                <Button\r\n                    variant='contained' size='small'\r\n                    style={{background: '#2A3F54', width: '100%', color: 'white'}}\r\n                >\r\n                    System Right\r\n                </Button>\r\n                \r\n            </section>\r\n            \r\n            <section className='side__BarMenuContainer'>\r\n               <SideBarNavigation user={user} />\r\n            </section>\r\n            <div className='side__BarFooter'>\r\n                {\r\n                    user &&\r\n                    <Link>\r\n                        <IconButton>\r\n                            <Settings />\r\n                        </IconButton>\r\n                    </Link>\r\n                }\r\n                <IconButton>\r\n                    <Fullscreen />\r\n                </IconButton>\r\n                <IconButton\r\n                    onClick={() =>dispatch(setToken(''))}\r\n                >\r\n                    <Power />\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBarMenu\r\n","import { IconButton, Typography } from '@material-ui/core'\r\nimport { Dashboard, MoreVert, Search, Settings } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport './appHeader.css'\r\n\r\nconst AppHeader = ({ title }) => {\r\n    const history = useHistory()\r\n    return (\r\n        <div className='app__HeaderContainer hide-on-print'>\r\n            <div className='app__HeaderLeft'>\r\n                {\r\n                    title&&\r\n                    <Typography variant='subtitle1' className='ml-2'>\r\n                        {title}\r\n                    </Typography>\r\n                }\r\n            </div>\r\n            <aside className='app__HeaderRight'>\r\n                <IconButton\r\n                    onClick={() =>history.push('/')}\r\n                >\r\n                    <Dashboard />\r\n                </IconButton>\r\n                <IconButton>\r\n                    <Settings />\r\n                </IconButton>\r\n                <IconButton>\r\n                    <MoreVert />\r\n                </IconButton>\r\n            </aside>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader\r\n","import { Button, Grid, Typography } from '@material-ui/core'\r\nimport { UndoRounded } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectAccountTxs } from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\n\r\nconst AccountFeed = () => {\r\n    const params = useParams()\r\n    const {name} = params\r\n    const history = useHistory()\r\n    const accountTxs = useSelector(selectAccountTxs)\r\n    const calcuAmt = (data) =>{\r\n        const total = data && data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n    const calcuTotalDR = (data) =>{\r\n        const tDR = data && data.filter(dta => dta.tx_type =='DR')\r\n        const total = tDR&& tDR.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n    const calcuTotalCR = (data) =>{\r\n        const tCR = data && data.filter(dta => dta.tx_type =='CR')\r\n        const total = tCR&& tCR.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n    return (\r\n        <div className='app__Feed'>\r\n            <AppHeader title='Posting' />\r\n            <div className='m-3'>\r\n                <Grid container spacing={2}>\r\n                    <Grid item lg={12} md={12} >\r\n                        <table className='table table-sm table-striped table-hover'>\r\n                            <thead>\r\n                                <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                                <th style={{ border: '1px solid #F7F7F7F7' }}>Description</th>\r\n                                <th style={{ border: '1px solid #F7F7F7F7' }}>Date</th>\r\n                                <th style={{ border: '1px solid #F7F7F7F7' }}>DR (<s>N</s>)</th>\r\n                                <th style={{ border: '1px solid #F7F7F7F7' }}>CR (<s>N</s>)</th>\r\n                                <th style={{ border: '1px solid #F7F7F7F7' }}> Pay Method </th>\r\n                                {/* <th style={{ border: '1px solid #F7F7F7F7' }}> Status </th> */}\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    accountTxs &&\r\n                                    accountTxs.map((pay, index) =>{\r\n                                        const { tx_date, tx_type, description, amount, rcpt_no, pay_method } = pay\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td> {index+1} </td>\r\n                                                <td>\r\n                                                \r\n                                                    {description}\r\n                                                \r\n                                                </td>\r\n                                                <td> {new Date(tx_date).toLocaleDateString()} </td>\r\n                                                <td>\r\n                                                    <Typography variant='p'\r\n                                                        style={{color: '#2A3F54'}} \r\n                                                    >\r\n                                                        {tx_type =='DR'? amount: null}\r\n                                                    </Typography> \r\n                                                </td>\r\n                                                <td>\r\n                                                    <Typography variant='p'\r\n                                                        style={{color: '#20c997'}} \r\n                                                    >\r\n                                                        {tx_type =='CR'? amount: null}\r\n                                                    </Typography> \r\n                                                </td>\r\n                                                <td> {pay_method} </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                                {\r\n                                    accountTxs&&\r\n                                    <tr\r\n                                        style={{background: 'none'}}\r\n                                    >\r\n                                        <td colSpan={1}></td>\r\n                                        <td colSpan={1}>\r\n                                           <Button variant='contained'\r\n                                            style={{color: 'white', background: 'red'}}\r\n                                           >\r\n                                                <b>Total Debit :</b>\r\n                                           </Button>\r\n                                        </td>\r\n                                        <td colSpan={1}></td>\r\n                                        <td colSpan={1}>\r\n                                            <Typography variant='h5'>\r\n                                                <b>\r\n                                                    <s>N</s>:\r\n                                                    {calcuTotalDR(accountTxs)}\r\n                                                </b>\r\n                                            </Typography>\r\n                                        </td>\r\n                                        <td colSpan={2}></td>\r\n                                    </tr>\r\n                                }\r\n\r\n                                {\r\n                                    accountTxs&&\r\n                                    <tr\r\n                                        style={{background: 'none'}}\r\n                                    >\r\n                                        <td colSpan={1}></td>\r\n                                        <td colSpan={1}>\r\n                                           <Button variant='contained'\r\n                                            style={{color: 'white', background: '#2A3F54'}}\r\n                                           >\r\n                                                <b>Total Credit :</b>\r\n                                           </Button>\r\n                                        </td>\r\n                                        \r\n                                        <td colSpan={2}></td>\r\n                                        <td colSpan={1}>\r\n                                            <Typography variant='h5'\r\n                                                style={{color: '#20c997',}}\r\n                                            >\r\n                                                <b>\r\n                                                    <s>N</s>:\r\n                                                    {calcuTotalCR(accountTxs)}\r\n                                                </b>\r\n                                            </Typography>\r\n                                        </td>\r\n                                        <td colSpan={1}></td>\r\n                                    </tr>\r\n                                }\r\n\r\n{\r\n                                    accountTxs&&\r\n                                    <tr\r\n                                        style={{background: 'none'}}\r\n                                    >\r\n                                        <td colSpan={1}></td>\r\n                                        <td >\r\n                                           <Button variant='contained'\r\n                                            style={{color: 'white', background: '#20c997'}}\r\n                                           >\r\n                                                <b>Close Balance :</b>\r\n                                           </Button>\r\n                                        </td>\r\n                                        <td colSpan={accountTxs && accountTxs.balance_type=='DR'? 2: 2}></td>\r\n                                        <td ccolSpan={2}>\r\n                                            <Typography variant='h5'\r\n                                                style={{color: '#20c997',}}\r\n                                            >\r\n                                                <b>\r\n                                                    <s>N</s>:\r\n                                                    {calcuTotalDR(accountTxs) >0? calcuTotalCR(accountTxs) - calcuTotalDR(accountTxs):\r\n                                                     calcuTotalCR(accountTxs)}\r\n                                                </b>\r\n                                            </Typography>\r\n                                        </td>\r\n                                        <td colSpan={accountTxs && accountTxs.balance_type=='DR'? 1: 1}></td>\r\n                                    </tr>\r\n                                }\r\n                                \r\n                            </tbody>\r\n                           \r\n                        </table>\r\n                        {\r\n                            !accountTxs.length >0&&\r\n                            <Fragment>\r\n                                <div className='alert alert-warning'>\r\n                                    {`Ops!!! ${name} have no transaction history`}\r\n                                </div>\r\n                            </Fragment>\r\n                            \r\n                        \r\n                        }\r\n                        <section\r\n                            className='mt-5'\r\n                            style={{display: 'flex', alignItems: 'center', \r\n                            justifyContent: 'center'}}\r\n                        >\r\n                        <Button\r\n                            size='medium'\r\n                            variant='contained'\r\n                            onClick={() =>history.goBack()}\r\n                            style={{background: '#2A3F54',color: 'white'}}\r\n                            endIcon={<UndoRounded style={{color: '#20c997'}} />}\r\n                        >\r\n                            Back\r\n                        </Button>\r\n                        </section>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccountFeed\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken,  setAccountTxs,  setCustomers, setUser, } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport AccountFeed from '../components/AccountFeed'\r\n\r\nconst AccountScreen = () => {\r\n    const params = useParams()\r\n    const {uuid} = params\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n\r\n     // func\r\n\r\n    const get_Accounts_Tx = () =>{\r\n        console.log(uuid)\r\n        axios.get(`/account/tx/${uuid}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(txs =>{\r\n            dispatch(setAccountTxs(txs.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n     // func\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    \r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        get_Session()\r\n        \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        get_Accounts_Tx()\r\n    }, [uuid])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} setOpen={setOpen} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <AccountFeed\r\n                setOpen={setOpen}\r\n            />            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccountScreen\r\n","import { IconButton, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectFilterTx } from '../../appState/appSlice'\r\n\r\nconst TxTableView = ({name}) => {\r\n    const txs = useSelector(selectFilterTx)\r\n    // func \r\n    const tx_Status = (x) =>{\r\n        const status = x && x == 1 ?\r\n            <span className='fa fa-plus-circle' style={{color: '#20c997'}} />\r\n        :\r\n       \r\n        <span className='fa fa-minus-circle' style={{color: 'red'}} />\r\n        return status\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <table className='table-hover'\r\n                style={{width: '98%', margin: 'auto'}}\r\n            >\r\n                <thead style={{top: '6+++0px', position: 'sticky'}}>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Description</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Date</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>RCPT. NO.</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Amount (<s>N</s>)</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}> Pay Method </th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}> Status </th>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        txs &&\r\n                        txs.map((tx, index) =>{\r\n                            const { tx_date, description, amount, rcpt_no, pay_method, \r\n                               paid } = tx\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td\r\n                                         style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}\r\n                                    > {index+1} </td>\r\n                                    <td style={{textAlign: 'left', margin: '5px'}}>\r\n                                    \r\n                                        {description}\r\n                                    \r\n                                    </td>\r\n                                    <td> {new Date(tx_date).toLocaleDateString()} </td>\r\n                                    <td> {rcpt_no} </td>\r\n                                    <td> { amount } </td>\r\n                                    <td> {pay_method} </td>\r\n                                    <td\r\n                                        style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}\r\n                                    >\r\n                                        <div className='p-2'>\r\n                                        {tx_Status(paid)}\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                    \r\n                </tbody>\r\n                \r\n            </table>\r\n            {\r\n                !txs && name.length >0 &&\r\n                \r\n                <div className='alert alert-warning'\r\n                    style={{width: '98%', margin: 'auto'}}\r\n                >\r\n                    {`Ops!!! No Transaction History`}\r\n                </div>                \r\n            }\r\n            {\r\n                name && !name.length >0 &&\r\n                <div className='alert alert-warning'\r\n                    style={{width: '98%', margin: 'auto'}}\r\n                >\r\n                    {`Ops!!! No Staff Selected`}\r\n                </div>\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default TxTableView\r\n","import { Button, Typography } from '@material-ui/core'\r\nimport { Check } from '@material-ui/icons'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { selectAccounts, selectAllStaffs, \r\n    selectBuildCategories, \r\n    selectLocations, \r\n    selectPropServices,\r\n    selectSales,\r\n    selectTransactions,\r\n    setfilterTx, } from '../appState/appSlice'\r\nimport TxTableView from './global/TxTableView'\r\n\r\nconst AdminAccountSetting = () => {\r\n    const dispatch = useDispatch()\r\n    const staffs = useSelector(selectAllStaffs)\r\n    const accounts = useSelector(selectAccounts)\r\n    const transactions = useSelector(selectTransactions)\r\n    const [tab, setTab] = useState('gen')\r\n        const [accData, setAccdata] = useState({\r\n        name: '',\r\n        code: '',\r\n        active: '',\r\n        locked: '',\r\n        acc_type: '',\r\n        account: '',\r\n        balance_type: ''\r\n\r\n    })\r\n    // func\r\n    const handleChange = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setAccdata({\r\n            ...accData,\r\n            [name]: value\r\n        })\r\n    }\r\n    useEffect(() =>{\r\n        const facc = accounts && accounts.filter(acc => acc.code == accData.account)[0];\r\n        console.table(facc)\r\n        if(facc) {\r\n            return setAccdata({\r\n                ...accData,\r\n                name: facc.name,\r\n                code: facc.code,\r\n                active: facc.active,\r\n                locked: facc.locked,\r\n                acc_type: facc.acc_type,\r\n                balance_type: facc.balance_type\r\n            })\r\n        }\r\n    }, [accData.account])\r\n\r\n    useEffect(() =>{\r\n        const ftxs = transactions && transactions.filter(tx =>tx.account_FK ==accData.code);\r\n       \r\n        dispatch(setfilterTx(ftxs))\r\n\r\n       return\r\n    }, [accData])\r\n\r\n    return (\r\n        <div>\r\n            <div className='admin__Title'>\r\n                <section>\r\n                    <Typography variant='h3'>ACCOUNT</Typography>\r\n                </section>\r\n                <div>\r\n                    <Link to='/' className='ml-3'>\r\n                        <Button \r\n                            variant='contained'\r\n                            startIcon={<span className='fa fa-arrow-right' />}\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Account Lists\r\n                            </Typography>\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div className='p-1' />\r\n            \r\n            <table className='mt-1 table-bordered' style={{width: '98%', margin: 'auto', \r\n                position: 'sticky', top: 0, zIndex: 222}}>\r\n                <thead>\r\n                    <th>Account</th>\r\n                    <th>\r\n                        <input\r\n                            placeholder='Select'\r\n                            value={accData.account}\r\n                            name='account' list='account'\r\n                            onChange={e =>handleChange(e)}\r\n                        />\r\n                        <datalist id='account'>\r\n                            {\r\n                                accounts&&\r\n                                accounts.map((account, index) =>{\r\n                                    const {id, code, name} = account\r\n                                    return <option key={index} value={code}> {name} </option>\r\n                                })\r\n                            }\r\n                        </datalist>\r\n                    </th>\r\n                    <th>Staff Username</th>\r\n                    <th>\r\n                    <input\r\n                            list='usernames'\r\n                            name='username'\r\n                            placeholder='Process by ?'\r\n                        />\r\n                        <datalist id='usernames'>\r\n                            {\r\n                                staffs&&\r\n                                staffs.map((staff, index) =>{\r\n                                    return <option key={index} value={staff.username}></option>\r\n                                })\r\n                            }\r\n                        </datalist>\r\n                    </th>\r\n                    <th\r\n                        style={{borderColor: 'none'}}\r\n                    >\r\n                        <Link to='/' className='ml-3'>\r\n                            <Button \r\n                                variant='contained'\r\n                                startIcon={<span className='fa fa-plus' />}\r\n                                style={{background: '#2A3F54', color: 'white'}}\r\n                            >\r\n                                <Typography variant='caption'>\r\n                                    Add New\r\n                                </Typography>\r\n                            </Button>\r\n                        </Link>\r\n                    </th>\r\n                    <th\r\n                        style={{border: 'none', outline: 'none'}}\r\n                    >\r\n                        <Button\r\n                            startIcon={<span className='fa fa-check />' />}\r\n                            variant='contained'\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Update \r\n                            </Typography>\r\n                        </Button>\r\n                    </th>\r\n                    <th\r\n                        style={{border: 'none', outline: 'none'}}\r\n                    >\r\n                        <Button\r\n                            startIcon={<span className='fa fa-trash />' />}\r\n                            variant='contained'\r\n                            style={{background: '#2A3F54', color: 'white', width: '100%'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Delete \r\n                            </Typography>\r\n                        </Button>\r\n                    </th>\r\n                </thead>\r\n            </table>\r\n            <div className='p-1' />\r\n            <table className='mt-1 table-bordered' style={{width: '98%', margin: 'auto',\r\n                position: 'sticky', top: '40px', zIndex: 222}}>\r\n                <thead>\r\n                    <th\r\n                        onClick={() =>setTab('gen')}\r\n                        style={{background: tab=='gen'?'':'#2A3F54', color: tab=='gen'? '#2A3F54': 'white',  paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       \r\n                        General Info\r\n                           \r\n                    </th>\r\n                    <th\r\n                        onClick={() =>setTab('tx')}\r\n                        style={{background: tab=='tx'?'':'#2A3F54', color: tab=='tx'? '#2A3F54': 'white',  paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Transaction\r\n                    </th>\r\n                    <th\r\n                        onClick={() =>setTab('rep')}\r\n                        style={{background: tab=='rep'?'':'#2A3F54', color: tab=='rep'? '#2A3F54': 'white',  paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                      Report\r\n                    </th>\r\n                    <th\r\n                        style={{color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none',\r\n                        borderTop: 'none', borderRight: 'none'}}\r\n                    >\r\n                      \r\n                    </th>\r\n                    {/* <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Sales\r\n                    </th> */}\r\n                    {/* <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Journal\r\n                    </th> */}\r\n                </thead>\r\n                {accData.code && tab=='gen' && <tbody>\r\n                    <div className='p-1' />\r\n                    <tr>\r\n                        <td>Code</td>\r\n                        <td>\r\n                            <input\r\n                                name='code'\r\n                                readOnly\r\n                                value={accData.code}\r\n                                placeholder='Select'\r\n                            />\r\n                        </td>\r\n                        <td>Name</td>\r\n                        <td>\r\n                            <input\r\n                                name='name'\r\n                                value={accData.name}\r\n                                placeholder='Account Name'\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </td>\r\n                        <td>Account Type</td>\r\n                        <td>\r\n                            \r\n                            <select \r\n                                id='acctype' \r\n                                name='acc_type'\r\n                                value={accData.acc_type}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                            <option value=''>Select</option>\r\n                            <optgroup label=\"Assets\">\r\n                                <option value=\"asset_ca_cash\">Current Asset</option>\r\n                                <option value=\"asset_ca_mkt_sec\">Marketable Securities</option>\r\n                                <option value=\"asset_ca_recv\">Receivables</option>\r\n                                <option value=\"asset_ca_inv\">Inventory</option>\r\n                                <option value=\"asset_ca_uncoll\">Uncollectibles</option>\r\n                                <option value=\"asset_ca_prepaid\">Prepaid</option>\r\n                                <option value=\"asset_ca_other\">Other Liquid Assets</option>\r\n                                <option value=\"asset_lti_notes\">Notes Receivable</option>\r\n                                <option value=\"asset_lti_land\">Land</option>\r\n                                <option value=\"asset_lti_sec\">Securities</option>\r\n                                <option value=\"asset_ppe\">Property Plant &amp; Equipment</option>\r\n                                <option value=\"asset_ia\">Intangible Assets</option>\r\n                                <option value=\"asset_adjustment\">Other Assets</option>\r\n                            </optgroup>\r\n\r\n                            <optgroup label=\"Liabilities\">\r\n                                <option value=\"lia_cl_acc_pay\">Accounts Payable</option>\r\n                                <option value=\"lia_cl_wage_pay\">Wages Payable</option>\r\n                                <option value=\"lia_cl_wage_pay\">Interest Payable</option>\r\n                                <option value=\"lia_cl_st_notes_payable\">Notes Payable</option>\r\n                                <option value=\"lia_cl_ltd_mat\">Current Maturities of Long Tern Debt</option>\r\n                                <option value=\"lia_cl_def_rev\">Deferred Revenue</option>\r\n                                <option value=\"lia_cl_other\">Other Liabilities</option>\r\n                                <option value=\"lia_ltl_notes\">Notes Payable</option>\r\n                                <option value=\"lia_ltl_bonds\">Bonds Payable</option>\r\n                                <option value=\"lia_ltl_mortgage\">Mortgage Payable</option>\r\n                            </optgroup>\r\n                            <optgroup label=\"Equity\">\r\n                                <option value=\"eq_capital\">Capital</option>\r\n                                <option value=\"eq_stock_c\">Common Stock</option>\r\n                                <option value=\"eq_stock_p\">Preferred Stock</option>\r\n                                <option value=\"eq_adjustment\">Other Equity Adjustments</option>\r\n                                <option value=\"in_sales\">Sales Income</option>\r\n                                <option value=\"in_pass\">Passive Income</option>\r\n                                <option value=\"in_other\">Other Income</option>\r\n                                <option value=\"ex_cogs\">Cost of Goods Sold</option>\r\n                                <option value=\"ex_op\">Operational Expense</option>\r\n                                <option value=\"ex_interest\">Interest Expense</option>\r\n                                <option value=\"ex_taxes\">Tax Expense</option>\r\n                                <option value=\"ex_cap\">Capital Expense</option>\r\n                                <option value=\"ex_other\">Other Expense</option>\r\n                            </optgroup>\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    <div className='p-1' />\r\n                    <tr>\r\n                        <td>Balance Type</td>\r\n                        <td>\r\n                            \r\n                            <select id='accbalance'\r\n                                name='balance_type'\r\n                                value={accData.balance_type}\r\n                                onChange={e =>handleChange(e)}\r\n                                \r\n                            >\r\n                                <option value='CR'>Credit</option>\r\n                                <option value='DR'>Debit</option>\r\n                            </select>\r\n                        </td>\r\n                        <td>Active</td>\r\n                        <td>\r\n                            <select\r\n                                name='active'\r\n                                placeholder='Select'\r\n                                value={accData.active}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value=''>Select</option>\r\n                                <option value={1}>Yes</option>\r\n                                <option value={0}>No</option>\r\n                            </select>\r\n                            \r\n                        </td>\r\n                        <td>Locked</td>\r\n                        <td>\r\n                            <select\r\n                                list='locked'\r\n                                name='locked'\r\n                                placeholder='Select'\r\n                                value={accData.locked}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value=''>Select</option>\r\n                                <option value={1}>Yes</option>\r\n                                <option value={0}>No</option>\r\n                            </select>\r\n                            \r\n                        </td>\r\n                    </tr>\r\n                    \r\n                </tbody>}\r\n            </table>\r\n           {\r\n               tab =='tx' &&\r\n               <TxTableView />\r\n           }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminAccountSetting\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst AppSnackbar = ({ message, open, setOpen }) => {\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message={message}\r\n        action={\r\n          <React.Fragment>\r\n            \r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppSnackbar\r\n","import { Button, IconButton, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectFilterSale } from '../../appState/appSlice'\r\n\r\nconst PurchaseRepayment = ({name, txs}) => {\r\n    const purchases = useSelector(selectFilterSale)\r\n    // func \r\n    const tx_Status = (x) =>{\r\n        const status = x && x == 1 ?\r\n            <span className='fa fa-plus-circle' style={{color: '#20c997'}} />\r\n        :\r\n        <span className='fa fa-minus-circle' style={{color: 'red'}} />\r\n        return status\r\n    }\r\n\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <table className='table-hover'\r\n                style={{width: '98%', margin: 'auto'}}\r\n            >\r\n                <thead style={{top: '6+++0px', position: 'sticky'}}>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Description</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Date</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>RCPT. NO.</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Amount (<s>N</s>)</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}> Pay Method </th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}> Status </th>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        txs &&\r\n                        txs.map((tx, index) =>{\r\n                            const { tx_date, description, amount, rcpt_no, pay_method, \r\n                               paid } = tx\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td\r\n                                         style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}\r\n                                    > {index+1} </td>\r\n                                    <td style={{textAlign: 'left', margin: '5px'}}>\r\n                                    \r\n                                        {description}\r\n                                    \r\n                                    </td>\r\n                                    <td> {new Date(tx_date).toLocaleDateString()} </td>\r\n                                    <td> {rcpt_no} </td>\r\n                                    <td> { amount } </td>\r\n                                    <td> {pay_method} </td>\r\n                                    <td\r\n                                        style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}\r\n                                    >\r\n                                        <div className='p-2'>\r\n                                        {tx_Status(paid)}\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                     {\r\n                purchases && purchases[0].amount_paid < calcuAmt(txs)?\r\n                <tr\r\n                    style={{background: '#2A3F54', color: 'white'}}\r\n                >\r\n                    <td>  </td>\r\n                    <td colSpan={1}>\r\n                        <Typography variant={'h6'}>\r\n                            Outstanding Balance\r\n                        </Typography>\r\n                    </td>\r\n                    {\r\n                        purchases && purchases.length >0&&\r\n                        <td colSpan={3}>\r\n                            <Typography variant={'h6'}\r\n                                style={{color: 'red'}}\r\n                            >\r\n                                <s>N</s>: \r\n                            {\r\n                                parseInt(purchases[0].amount) -\r\n                                parseInt(purchases[0].amount_paid)\r\n                            }\r\n                            </Typography>\r\n                            \r\n                        </td>\r\n                        \r\n                    }\r\n                    <td colSpan={2}></td>\r\n                </tr>\r\n                :\r\n                <Button variant='contained'\r\n                    style={{background: '#2A3F54', color: 'white'}}\r\n                >Close Deal</Button>\r\n\r\n            }\r\n                </tbody>\r\n                \r\n            </table>\r\n            {\r\n                !txs && name.length >0 &&\r\n                \r\n                <div className='alert alert-warning'\r\n                    style={{width: '98%', margin: 'auto'}}\r\n                >\r\n                    {`Ops!!! No Transaction History`}\r\n                </div>                \r\n            }\r\n            {\r\n                name && !name.length >0 &&\r\n                <div className='alert alert-warning'\r\n                    style={{width: '98%', margin: 'auto'}}\r\n                >\r\n                    {`Ops!!! No Staff Selected`}\r\n                </div>\r\n            }\r\n           \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default PurchaseRepayment\r\n","import { IconButton, Typography } from '@material-ui/core'\r\nimport { More } from '@material-ui/icons'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectFilterSale, selectTransactions, setfilterTx,} from '../appState/appSlice'\r\nimport PurchaseRepayment from './global/PurchaseRepayment.js'\r\n\r\nconst SaleViewTable = () => {\r\n    const purchases = useSelector(selectFilterSale)\r\n    const transactions = useSelector(selectTransactions)\r\n    const [rcpt_no, setRcpt_no] = useState()\r\n    const [proptxs, setProptxs] = useState()\r\n   \r\n\r\n    useEffect(() =>{\r\n        const ftxs = transactions && transactions.filter(tx =>tx.rcpt_no == purchases[0].uuid);\r\n        return setProptxs(ftxs)\r\n    }, [purchases, rcpt_no])\r\n    return (\r\n        <Fragment>\r\n            <table className='table-hover'\r\n                style={{width: '98%', margin: 'auto'}}\r\n            >\r\n                <thead>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>#</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Property</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Date Sold</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Due Date</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Amount (<s>N</s>)</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}> </th>\r\n                </thead>\r\n                <tbody>\r\n                           {\r\n                               purchases &&\r\n                               purchases.map((sale, index) =>{\r\n                                   const {property_name, sale_date, due_date, uuid, amount } = sale\r\n                                   return(\r\n                                    <tr key={index}>\r\n                                        <td style={{textAlign: 'center'}}> {index+1} </td>\r\n                                    <td style={{textAlign: 'center'}}>\r\n                                        {property_name}\r\n                                    </td>\r\n                                    <td style={{textAlign: 'center'}}> {new Date(sale_date).toLocaleDateString()} </td>\r\n                                    <td style={{textAlign: 'center'}}> {new Date(due_date).toLocaleDateString()} </td>\r\n                                    <td style={{textAlign: 'center'}}> {amount} </td>\r\n                                    <td style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n                                        <div>\r\n                                        <IconButton size='small'\r\n                                            onClick={() =>setRcpt_no(uuid)}\r\n                                        >\r\n                                            <More style={{color: '#20c997'}} />\r\n                                        </IconButton>\r\n                                        </div>\r\n                                    </td>\r\n                                    </tr>\r\n                                   )\r\n                               })\r\n                           }\r\n                           {\r\n                           rcpt_no&&\r\n                           <tr\r\n                            style={{background: '#2A3F54', color: 'white'}} \r\n                           >\r\n                               <td colSpan={3}>\r\n                                   <Typography variant='h6'\r\n                                    style={{color: '#20c997'}}\r\n                                   >\r\n                                        Repayment History\r\n                                    </Typography>\r\n                               </td>\r\n                               <td style={{textAlign: 'center'}}>\r\n                                   <Typography variant='subtitle1'\r\n                                    style={{color: 'white'}}\r\n                                   >\r\n                                    \r\n                                   </Typography>\r\n                               </td>\r\n                               <td colSpan={2}></td>\r\n                           </tr>\r\n                       }\r\n                       </tbody>\r\n            </table>\r\n            {\r\n               rcpt_no &&\r\n                <PurchaseRepayment txs={proptxs} name={purchases[0].applicant_name} />\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default SaleViewTable\r\n","import { Button, Typography } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { selectAllStaffs, selectCustomers, selectSales, selectToken, selectTransactions, setFilterSale, setfilterTx, setOpen } from '../appState/appSlice'\r\nimport AppSnackbar from './global/AppSnackbar'\r\nimport TxTableView from './global/TxTableView'\r\nimport SaleViewTable from './SaleViewTable'\r\n\r\nconst AdminCustomerSetting = () => {\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const staffs = useSelector(selectAllStaffs)\r\n    const sales = useSelector(selectSales)\r\n    const customers = useSelector(selectCustomers)\r\n    const transactions = useSelector(selectTransactions)\r\n    const [success, setSuccess] = useState(false)\r\n    const [message, setMessage] = useState()\r\n    const [tab, setTab] = useState('gen')\r\n    const [cusData, setCusdata] = useState({\r\n        rm:'',\r\n        active: '',\r\n        country: '',\r\n        phone_no: '',\r\n        address_1: '',\r\n        occupation: '',\r\n        place_work: '',\r\n        next_kin_name: '',\r\n        customer_sex: '',\r\n        customer_name: '',\r\n        customer_email: '',\r\n        customer_state: '',\r\n        postal_address: '',\r\n        customer_marital: '',\r\n        customer_address: '',\r\n        next_kin_addrss: '',\r\n        next_kin_relate: '',\r\n        business_employer_name: '',\r\n        customer: ''\r\n    })\r\n\r\n    // func\r\n\r\n    const handleChange = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        \r\n        setCusdata({\r\n            ...cusData,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleUpdate = () =>{\r\n        dispatch(setOpen(true))\r\n        axios.post(`/customer/${cusData.customer}`, cusData, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setMessage(result.data.message)\r\n            dispatch(setOpen(false))\r\n            setSuccess(true)\r\n            setCusdata({\r\n                customer: ''\r\n            })\r\n        })\r\n        .catch(error =>{\r\n            dispatch(setOpen(false))\r\n            if(error) {\r\n                setMessage(error.response.statusText)\r\n                setSuccess(true)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        const fcus = customers && customers.filter(cus =>cus.id == cusData.customer)[0];\r\n        if(fcus) {\r\n            return setCusdata({\r\n                ...cusData,\r\n                rm:fcus.rm,\r\n                code: fcus.code,\r\n                country: fcus.country,\r\n                phone_no: fcus.phone_no,\r\n                address_1: fcus.address_1,\r\n                occupation: fcus.occupation,\r\n                place_work: fcus.place_work,\r\n                next_kin_name: fcus.next_kin_name,\r\n                customer_sex: fcus.customer_sex,\r\n                customer_name: fcus.customer_name,\r\n                customer_email: fcus.customer_email,\r\n                customer_state: fcus.customer_state,\r\n                postal_address: fcus.postal_address,\r\n                customer_marital: fcus.customer_marital,\r\n                customer_address: fcus.customer_address,\r\n                next_kin_addrss: fcus.next_kin_addrss,\r\n                next_kin_relate: fcus.next_kin_relate,\r\n                business_employer_name: fcus.business_employer_name\r\n            })\r\n        }\r\n    }, [cusData.customer])\r\n\r\n    useEffect(() =>{\r\n        const ftxs = transactions && transactions.filter(tx =>tx.account_FK == cusData.code);\r\n        const fsales = sales && sales.filter(sale =>sale.applicant == cusData.customer);\r\n       \r\n        dispatch(setfilterTx(ftxs))\r\n\r\n        dispatch(setFilterSale(fsales))\r\n       return\r\n    }, [cusData])\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <AppSnackbar open={success} setOpen={setSuccess} message={message} />\r\n            <div className='admin__Title'>\r\n                <section>\r\n                    <Typography variant='h3'>CUSTOMER</Typography>\r\n                </section>\r\n                <div>\r\n                    <Link to='/' className='ml-3'>\r\n                        <Button \r\n                            variant='contained'\r\n                            startIcon={<span className='fa fa-arrow-right' />}\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Customer Lists\r\n                            </Typography>\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div className='p-1' />\r\n            \r\n            <table className='mt-1 table-bordered' style={{width: '98%', margin: 'auto', \r\n                position: 'sticky', top: 0, zIndex: 222}}>\r\n                <thead>\r\n                    <th>Select</th>\r\n                    <th>\r\n                       \r\n                        <select \r\n                            name='customer'\r\n                            value={cusData.customer}\r\n                            onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value=''></option>\r\n                            {\r\n                                customers&&\r\n                                customers.map((cus, index) =>{\r\n                                    return <option key={index} value={cus.id}> {cus.customer_name} </option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </th>\r\n                    <th>Customer Id</th>\r\n                    <th>\r\n                        <input\r\n                            value={cusData.customer}\r\n                            placeholder='Customer'\r\n                            onChange={e =>handleChange(e)}\r\n                            name='customer' list='customers' \r\n                        />\r\n                        <datalist id='customers'>\r\n                            {\r\n                                customers&&\r\n                                customers.map((cus, index) =>{\r\n                                    return <option key={index} value={cus.id}> {cus.customer_name} </option>\r\n                                })\r\n                            }\r\n                        </datalist>\r\n                    </th>\r\n                    <th\r\n                        style={{borderColor: 'none'}}\r\n                    >\r\n                        <Link to='/' className='ml-3'>\r\n                            <Button \r\n                                variant='contained'\r\n                                startIcon={<span className='fa fa-plus' />}\r\n                                style={{background: '#2A3F54', color: 'white'}}\r\n                            >\r\n                                <Typography variant='caption'>\r\n                                    Add New\r\n                                </Typography>\r\n                            </Button>\r\n                        </Link>\r\n                    </th>\r\n                    <th\r\n                        style={{border: 'none', outline: 'none'}}\r\n                    >\r\n                        <Button\r\n                            onClick={() =>handleUpdate()}\r\n                            startIcon={<span className='fa fa-check />' />}\r\n                            variant='contained'\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Update \r\n                            </Typography>\r\n                        </Button>\r\n                    </th>\r\n                    <th\r\n                        style={{border: 'none', outline: 'none'}}\r\n                    >\r\n                        <Button\r\n                            startIcon={<span className='fa fa-trash />' />}\r\n                            variant='contained'\r\n                            style={{background: '#2A3F54', color: 'white', width: '100%'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Delete \r\n                            </Typography>\r\n                        </Button>\r\n                    </th>\r\n                </thead>\r\n            </table>\r\n            <div className='p-1' />\r\n            <table className='mt-1 table-bordered' style={{width: '98%', margin: 'auto',\r\n                position: 'sticky', top: '40px', zIndex: 222}}>\r\n                <thead>\r\n                    <th\r\n                        onClick={() =>setTab('gen')}\r\n                        style={{background: tab=='gen'?'':'#2A3F54', color: tab=='gen'? '#2A3F54': 'white',  paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderBottom: 'none' }}\r\n                    >\r\n                       \r\n                        General Info\r\n                           \r\n                    </th>\r\n                    <th\r\n                        onClick={() =>setTab('tx')}\r\n                        style={{background: tab=='tx'?'':'#2A3F54', color: tab=='tx'? '#2A3F54': 'white',  paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Transactions\r\n                    </th>\r\n                    <th\r\n                        onClick={() =>setTab('pur')}\r\n                        style={{background: tab=='pur'?'':'#2A3F54', color: tab=='pur'? '#2A3F54': 'white',  paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Purchase\r\n                    </th>\r\n                    <th\r\n                        onClick={() =>setTab('bal')}\r\n                        style={{background: tab=='bal'?'':'#2A3F54', color: tab=='bal'? '#2A3F54': 'white',  paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Balance\r\n                    </th>\r\n                    <th\r\n                        onClick={() =>setTab('man')}\r\n                        style={{background: tab=='man'?'':'#2A3F54', color: tab=='man'? '#2A3F54': 'white',  paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Mandate\r\n                    </th>\r\n                    <th\r\n                        onClick={() =>setTab('jou')}\r\n                        style={{background: tab=='jou'?'':'#2A3F54', color: tab=='jou'? '#2A3F54': 'white',  paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Journal\r\n                    </th>\r\n                    \r\n                </thead>\r\n                {\r\n                    cusData.customer && tab=='gen' &&\r\n                    <tbody>\r\n                        <div className='p-1' />\r\n                        <tr>\r\n                            <td>Name</td>\r\n                            <td>\r\n                                <input\r\n                                    name='customer_name'\r\n                                    value={cusData.customer_name}\r\n                                    onChange={e =>handleChange(e)}\r\n                                />\r\n                            </td>\r\n                            <td>Contact</td>\r\n                            <td>\r\n                                <input \r\n                                    name='phone_no' \r\n                                    value={cusData.phone_no}\r\n                                    onChange={e =>handleChange(e)}\r\n                                />\r\n                            </td>\r\n                            <td>Email</td>\r\n                            <td>\r\n                                <input \r\n                                    name='customer_email' \r\n                                    value={cusData.customer_email}\r\n                                    onChange={e =>handleChange(e)}\r\n                                />\r\n                            </td>\r\n                            \r\n                        </tr>\r\n                        <div className='p-1' />\r\n                        <tr>\r\n                            <td>Nationality</td>\r\n                            <td>\r\n                                <input \r\n                                    name='country'\r\n                                    value={cusData.country}\r\n                                    onChange={e =>handleChange(e)}\r\n                                />\r\n                            </td>\r\n                            <td>Address</td>\r\n                            <td colSpan={3}>\r\n                                <input \r\n                                    name='customer_address'\r\n                                    style={{width: '100%'}} \r\n                                    placeholder='Customer Address'\r\n                                    value={cusData.customer_address}\r\n                                    onChange={e =>handleChange(e)}\r\n                                   \r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                        <div className='p-1' />\r\n                        <tr>\r\n                            <td>Marital Status</td>\r\n                            <td>\r\n                                <select \r\n                                    name='customer_marital'\r\n                                    onChange={e =>handleChange=(e)}\r\n                                    value={cusData.customer_marital}\r\n                                >\r\n                                    <option value='Single'>Single</option>\r\n                                    <option value='Married'>Married</option>\r\n                                    <option value='Widow'>Widow</option>\r\n                                    <option value='Divorce'>Divorce</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>Gender</td>\r\n                            <td>\r\n                                <select \r\n                                    name='customer_sex'\r\n                                    onChange={e =>handleChange(e)}\r\n                                    value={cusData.customer_sex}\r\n                                >\r\n                                    <option value='male'>Male</option>\r\n                                    <option value='female'>Female</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>State</td>\r\n                            <td>\r\n                                <select \r\n                                    name='customer_state'\r\n                                    onChange={e =>handleChange(e)}\r\n                                    value={cusData.customer_state}\r\n                                >\r\n                                    <option value=\"Abia\">Abia</option>\r\n                                    <option value=\"Adamawa\">Adamawa</option>\r\n                                    <option value=\"Akwa Ibom\">Akwa Ibom</option>\r\n                                    <option value=\"Anambra\">Anambra</option>\r\n                                    <option value=\"Bauchi\">Bauchi</option>\r\n                                    <option value=\"Bayelsa\">Bayelsa</option>\r\n                                    <option value=\"Benue\">Benue</option>\r\n                                    <option value=\"Borno\">Borno</option>\r\n                                    <option value=\"Cross Rive\">Cross River</option>\r\n                                    <option value=\"Delta\">Delta</option>\r\n                                    <option value=\"Ebonyi\">Ebonyi</option>\r\n                                    <option value=\"Edo\">Edo</option>\r\n                                    <option value=\"Ekiti\">Ekiti</option>\r\n                                    <option value=\"Enugu\">Enugu</option>\r\n                                    <option value=\"FCT\">Federal Capital Territory</option>\r\n                                    <option value=\"Gombe\">Gombe</option>\r\n                                    <option value=\"Imo\">Imo</option>\r\n                                    <option value=\"Jigawa\">Jigawa</option>\r\n                                    <option value=\"Kaduna\">Kaduna</option>\r\n                                    <option value=\"Kano\">Kano</option>\r\n                                    <option value=\"Katsina\">Katsina</option>\r\n                                    <option value=\"Kebbi\">Kebbi</option>\r\n                                    <option value=\"Kogi\">Kogi</option>\r\n                                    <option value=\"Kwara\">Kwara</option>\r\n                                    <option value=\"Lagos\">Lagos</option>\r\n                                    <option value=\"Nasarawa\">Nasarawa</option>\r\n                                    <option value=\"Niger\">Niger</option>\r\n                                    <option value=\"Ogun\">Ogun</option>\r\n                                    <option value=\"Ondo\">Ondo</option>\r\n                                    <option value=\"Osun\">Osun</option>\r\n                                    <option value=\"Oyo\">Oyo</option>\r\n                                    <option value=\"Plateau\">Plateau</option>\r\n                                    <option value=\"Rivers\">Rivers</option>\r\n                                    <option value=\"Sokoto\">Sokoto</option>\r\n                                    <option value=\"Taraba\">Taraba</option>\r\n                                    <option value=\"Yobe\">Yobe</option>\r\n                                    <option value=\"Zamfara\">Zamfara</option>\r\n                                </select>\r\n                            </td>\r\n                        </tr>\r\n                        <div className='p-1' />\r\n                        <tr>\r\n                            <td>Occupation</td>\r\n                            <td>\r\n                                <input \r\n                                    name='occupation'\r\n                                    value={cusData.occupation}\r\n                                    onChange={e =>handleChange(e)}\r\n                                />\r\n                            </td>\r\n                            <td>Address</td>\r\n                            <td colSpan={3}>\r\n                                <input \r\n                                    name='postal_address'\r\n                                    placeholder='Post Address'\r\n                                    style={{width: '100%'}}\r\n                                    onChange={e =>handleChange(e)}\r\n                                    value={cusData.postal_address}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                        <div className='p-1' />\r\n                        <tr>\r\n                            <td>Business/Employer's</td>\r\n                            <td colSpan={3}>\r\n                                <input\r\n                                    style={{width: '100%'}}\r\n                                    onChange={e =>handleChange(e)}\r\n                                    name='business_employer_address'\r\n                                    placeholder=\"Business/Employer's Name\"\r\n                                    value={cusData.business_employer_name}\r\n                                />\r\n                            </td>\r\n                            <td>Place of work</td>\r\n                            <td>\r\n                                <input \r\n                                    name='place_work'\r\n                                    value={cusData.place_work}\r\n                                    onChange={e =>handleChange(e)}\r\n                                    placeholder='Name of place of work'\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                        <div className='p-1' />\r\n                        <tr>\r\n                        <td>Next Kin name</td>\r\n                            <td>\r\n                                <input \r\n                                    name='next_kin_name'\r\n                                    onChange={e =>handleChange(e)}\r\n                                    value={cusData.next_kin_name}\r\n                                    placeholder='Name of next of kin'\r\n                                />\r\n                            </td>\r\n                            <td>Kin Address</td>\r\n                            <td colSpan={3}>\r\n                                <input \r\n                                    name='next_kin_addrss'\r\n                                    style={{width: '100%'}}\r\n                                    onChange={e =>handleChange(e)}\r\n                                    placeholder='Next of kin address'\r\n                                    value={cusData.next_kin_addrss}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                        <div className='p-1' />\r\n                        <tr>\r\n                            <td>Relationship</td>\r\n                            <td>\r\n                                <select \r\n                                    name='next_kin_relate'\r\n                                    onChange={e =>handleChange(e)}\r\n                                    value={cusData.next_kin_relate}\r\n                                >\r\n                                    <option value='Son'>Son</option>\r\n                                    <option value='Sister'>Sister</option>\r\n                                    <option value='Brother'>Brother</option>\r\n                                    <option value='Aunt'>Aunt</option>\r\n                                    <option value='Uncle'>Uncle</option>\r\n                                    <option value='Wife'>Wife</option>\r\n                                    <option value='Husband'>Husband</option>\r\n                                    <option value='Daughter'>Daughter</option>\r\n                                    <option value='Father'>Father</option>\r\n                                    <option value='Mother'>Mother</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>(RM)</td>\r\n                            <td>\r\n                                <select \r\n                                    name='rm'\r\n                                    value={cusData.rm}\r\n                                    onChange={e =>handleChange(e)}\r\n                                >\r\n                                    <option value=''>Relationship Manager</option>\r\n                                    {\r\n                                        staffs &&\r\n                                        staffs.map((staff, index) =>{\r\n                                            const {id, first_name, last_name} = staff\r\n                                            return (\r\n                                                <option value={index}> {`${first_name} ${last_name}`} </option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </td>\r\n                            <td>Active</td>\r\n                            <td>\r\n                                <select \r\n                                    name='active'\r\n                                    value={cusData.active}\r\n                                    onChange={e =>handleChange(e)}\r\n                                >\r\n                                    <option value={1}>Yes</option>\r\n                                    <option value={0}>No</option>\r\n                                </select>\r\n                            </td>\r\n                            \r\n                        </tr>\r\n                        \r\n                    </tbody>\r\n                }\r\n            </table>\r\n            {\r\n                tab == 'tx' &&\r\n                <TxTableView name={cusData.customer_name} />\r\n            }\r\n            {\r\n                tab == 'pur' &&\r\n                <SaleViewTable />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminCustomerSetting\r\n","import { Button, Typography } from '@material-ui/core'\r\nimport { Check } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { selectAccounts, selectAllStaffs, \r\n    selectBuildCategories, \r\n    selectPropServices, selectSales, } from '../appState/appSlice'\r\n\r\nconst AdminPostingSetting = () => {\r\n    const staffs = useSelector(selectAllStaffs)\r\n    const accounts = useSelector(selectAccounts)\r\n    const sales = useSelector(selectSales)\r\n    const propServices = useSelector(selectPropServices)\r\n    const buildCategories = useSelector(selectBuildCategories)\r\n    console.log(buildCategories)\r\n    return (\r\n        <div>\r\n            <div className='admin__Title'>\r\n                <section>\r\n                    <Typography variant='h3'>POST</Typography>\r\n                </section>\r\n                <div>\r\n                    <Link to='/' className='ml-3'>\r\n                        <Button \r\n                            variant='contained'\r\n                            startIcon={<span className='fa fa-arrow-right' />}\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Post Lists\r\n                            </Typography>\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div className='p-1' />\r\n            \r\n            <table className='mt-1 table-bordered' style={{width: '98%', margin: 'auto'}}>\r\n                <thead>\r\n                    <th>Posts</th>\r\n                    <th>\r\n                        <input\r\n                            placeholder='Receipt No'\r\n                            name='sale' list='items' \r\n                        />\r\n                        <datalist id='items'>\r\n                            {\r\n                                sales&&\r\n                                sales.map((sale, index) =>{\r\n                                    const {uuid, property_name} = sale\r\n                                    return <option key={index} value={uuid}> {property_name} </option>\r\n                                })\r\n                            }\r\n                        </datalist>\r\n                    </th>\r\n                    <th>Staff Username</th>\r\n                    <th>\r\n                    <input\r\n                            list='usernames'\r\n                            name='username'\r\n                            placeholder='Process by ?'\r\n                        />\r\n                        <datalist id='usernames'>\r\n                            {\r\n                                staffs&&\r\n                                staffs.map((staff, index) =>{\r\n                                    return <option key={index} value={staff.username}></option>\r\n                                })\r\n                            }\r\n                        </datalist>\r\n                    </th>\r\n                    <th\r\n                        style={{borderColor: 'none'}}\r\n                    >\r\n                        <Link to='/' className='ml-3'>\r\n                            <Button \r\n                                variant='contained'\r\n                                startIcon={<span className='fa fa-plus' />}\r\n                                style={{background: '#2A3F54', color: 'white'}}\r\n                            >\r\n                                <Typography variant='caption'>\r\n                                    Add New\r\n                                </Typography>\r\n                            </Button>\r\n                        </Link>\r\n                    </th>\r\n                    <th\r\n                        style={{border: 'none', outline: 'none'}}\r\n                    >\r\n                        <Button\r\n                            startIcon={<span className='fa fa-check />' />}\r\n                            variant='contained'\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Update \r\n                            </Typography>\r\n                        </Button>\r\n                    </th>\r\n                    <th\r\n                        style={{border: 'none', outline: 'none'}}\r\n                    >\r\n                        <Button\r\n                            startIcon={<span className='fa fa-trash />' />}\r\n                            variant='contained'\r\n                            style={{background: '#2A3F54', color: 'white', width: '100%'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Delete \r\n                            </Typography>\r\n                        </Button>\r\n                    </th>\r\n                </thead>\r\n            </table>\r\n            <div className='p-1' />\r\n            <table className='mt-1 table-bordered' style={{width: '98%', margin: 'auto'}}>\r\n                <thead>\r\n                    <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderBottom: 'none' }}\r\n                    >\r\n                       \r\n                        General Info\r\n                           \r\n                    </th>\r\n                    <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Post History\r\n                    </th>\r\n                    <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                      Post Report\r\n                    </th>\r\n                    <th\r\n                        style={{color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none',\r\n                        borderTop: 'none', borderRight: 'none'}}\r\n                    >\r\n                      \r\n                    </th>\r\n                    {/* <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Sales\r\n                    </th> */}\r\n                    {/* <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Journal\r\n                    </th> */}\r\n                </thead>\r\n                <tbody>\r\n                    <div className='p-1' />\r\n                    <tr>\r\n                        <td>Receipt No</td>\r\n                        <td>\r\n                            <input\r\n                                readOnly\r\n                                name='rcpt_no'\r\n                                placeholder='Receipt No(read only)'\r\n                            />\r\n                        </td>\r\n                        <td>Account</td>\r\n                        <td>\r\n                            <input\r\n                                list='account'\r\n                                name='account_FK'\r\n                                placeholder='Customer Name' \r\n                            />\r\n                            <datalist id='account'>\r\n                            {\r\n                                accounts&&\r\n                                accounts.map((account, index) =>{\r\n                                    const {code, name} = account\r\n                                    return (\r\n                                        <option key={index} value={code}> {name} </option>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </datalist>\r\n                        </td>\r\n                        <td>Amount</td>\r\n                        <td>\r\n                            <input\r\n                                name='amount' \r\n                                placeholder='Amount'\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <div className='p-1' />\r\n                    <tr>\r\n                        <td>Transaction Type</td>\r\n                        <td>\r\n                            <input\r\n                                list='txtype'\r\n                                name='tx_type'\r\n                                placeholder='Payment Method'\r\n                            />\r\n                            <datalist id='txtype'>\r\n                                <option value='CR'></option>\r\n                                <option value='DR'></option>\r\n                            </datalist>\r\n                        </td>\r\n                        <td>Pay Method</td>\r\n                        <td>\r\n                            <input\r\n                                list='paymethod'\r\n                                name='pay_method'\r\n                                placeholder='Payment Method'\r\n                            />\r\n                            <datalist id='paymethod'>\r\n                                <option value='cash'></option>\r\n                                <option value='cheque'></option>\r\n                                <option value='transfer'></option>\r\n                            </datalist>\r\n                        </td>\r\n                        <td>Status</td>\r\n                        <td>\r\n                            <input\r\n                                list='status'\r\n                                name='status'\r\n                                placeholder='Select'\r\n                            />\r\n                            <datalist id='status'>\r\n                                <option value='0'>Not Paid</option>\r\n                                <option value='1'>Paid</option>\r\n                            </datalist>\r\n                        </td>\r\n                    </tr>\r\n                    <div className='p-1' />\r\n                    <tr>\r\n                        <td>Narration</td>\r\n                        <td colSpan={5}>\r\n                            <input\r\n                                name='description'\r\n                                placeholder='Transaction Narration'\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminPostingSetting\r\n","import { Typography } from '@material-ui/core'\r\nimport React, { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectBuildCategories, selectPsSold } from '../appState/appSlice'\r\n\r\nconst PsViewTable = () => {\r\n    const psSolds = useSelector(selectPsSold)\r\n    const buildCategories = useSelector(selectBuildCategories)\r\n    const returnBuildCategory = (id) =>{\r\n        console.log(id)\r\n        const bCategory = buildCategories && \r\n            buildCategories.filter(cat =>cat.id == id)[0].name;\r\n            console.log(bCategory, buildCategories)\r\n        return bCategory \r\n    }\r\n    return (\r\n        <Fragment>\r\n            <table className='table-hover'\r\n                style={{width: '98%', margin: 'auto'}}\r\n            >\r\n                <thead>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>#</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Client</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Build Category</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Date Sold</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Due Date</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Amount</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Amount Paid</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Status</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}></th>\r\n                   \r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        psSolds &&\r\n                        psSolds.map((psSold, index) =>{\r\n                            const { amount, amount_paid, applicant_name, \r\n                                build_category, sale_date, due_date, status } = psSold;\r\n                            return <tr key={index}>\r\n                                <td\r\n                                    style={{textAlign: 'center'}}\r\n                                > {index+1} </td>\r\n                                <td\r\n                                    style={{textAlign: 'left'}}\r\n                                > {applicant_name} </td>\r\n                                <td> {returnBuildCategory(build_category)} </td>\r\n                                <td> {new Date(sale_date).toLocaleDateString()} </td>\r\n                                <td>\r\n                                    <Typography color='error'>\r\n                                    {new Date(due_date).toLocaleDateString()}\r\n                                    </Typography>\r\n                                </td>\r\n                                <td> {amount} </td>\r\n                                <td>\r\n                                    <Typography style={{color: '#20c997'}}>\r\n                                        {amount_paid}\r\n                                    </Typography>\r\n                                </td>\r\n                                <td>  </td>\r\n                            </tr>\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default PsViewTable\r\n","import { Button, IconButton, Typography } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { selectAccounts, selectAllStaffs, \r\n    selectLocations, \r\n    selectOpen, \r\n    selectPropServices,\r\n    selectSales,\r\n    selectToken,\r\n    setOpen,\r\n    setPsSold, } from '../appState/appSlice'\r\nimport AppBackdrop from './global/AppBackDrop'\r\nimport AppSnackbar from './global/AppSnackbar'\r\nimport PsViewTable from './PsViewTable'\r\n\r\nconst AdminPsSetting = () => {\r\n    const dispatch = useDispatch()\r\n    const open = useSelector(selectOpen)\r\n    const token = useSelector(selectToken)\r\n    const staffs = useSelector(selectAllStaffs)\r\n    const accounts = useSelector(selectAccounts)\r\n    const sales = useSelector(selectSales)\r\n    const locations = useSelector(selectLocations)\r\n    const propServices = useSelector(selectPropServices)\r\n    const [tab, setTab] = useState('gen')\r\n    const [add, setAdd] = useState(false)\r\n    const [error, setError] = useState()\r\n    const [success, setSuccess] = useState()\r\n    const [body, setBody] = useState({\r\n        name: ''\r\n    })\r\n    const [psData, setPsData] = useState({\r\n        id: '',\r\n        cost: '',\r\n        status: '',\r\n        name: '',\r\n        ps_type: '',\r\n        category: '',\r\n        location: '',\r\n        quantity: '',\r\n        description: '',\r\n        sale_price: '',\r\n    })\r\n    // func\r\n    const handleChange = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n\r\n        setPsData({\r\n            ...psData,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handle_Edit_Ps = () =>{\r\n        dispatch(setOpen(true))\r\n        axios.post(`/prop_service/${psData.id}`, psData, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            dispatch(setOpen(false))\r\n            setSuccess(result.data.message)\r\n            setPsData({\r\n                id: '',\r\n                cost: '',\r\n                name: '',\r\n                status: '',\r\n                ps_type: '',\r\n                category: '',\r\n                location: '',\r\n                quantity: '',\r\n                description: '',\r\n                sale_price: '',\r\n            })\r\n        })\r\n        .catch(error =>{\r\n            dispatch(setOpen(false))\r\n            if(error){\r\n                return setError(error.response.statusText)\r\n            }\r\n        })\r\n    }\r\n\r\n    const handle_Add_Location = () =>{\r\n        dispatch(setOpen(true))\r\n        axios.post('/location', body, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(locations =>{\r\n            setBody('')\r\n            dispatch(setOpen(false))\r\n            setAdd(false)\r\n        })\r\n        .catch(error =>{\r\n            dispatch(setOpen(false))\r\n            if(error) {\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n        const fps = propServices && propServices.filter(ps =>ps.id == psData.id)[0];\r\n        if(fps) {\r\n            return setPsData({\r\n                id: fps.id,\r\n                cost: fps.cost,\r\n                name: fps.name,\r\n                status: fps.status,\r\n                ps_type: fps.ps_type,\r\n                category: fps.category,\r\n                location: fps.location,\r\n                quantity: fps.quantity,\r\n                description: fps.description,\r\n                sale_price: fps.sale_price,\r\n            })\r\n        }\r\n       \r\n    }, [psData.id])\r\n\r\n    useEffect(() =>{\r\n        const getSoldFps = sales && sales.filter(sale =>sale.property == psData.id);\r\n        \r\n        if(getSoldFps) {\r\n            return dispatch(setPsSold(getSoldFps))\r\n        }\r\n    },[psData])\r\n\r\n    return (\r\n        <div>\r\n            <AppBackdrop open={open} />\r\n            <AppSnackbar open={success} setOpen={setSuccess} message={success} />\r\n            <div className='admin__Title'>\r\n                <section>\r\n                    <Typography variant='h3'>PROPERTY</Typography>\r\n                </section>\r\n                <div>\r\n                    <Link to='/' className='ml-3'>\r\n                        <Button \r\n                            variant='contained'\r\n                            startIcon={<span className='fa fa-arrow-right' />}\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Property Lists\r\n                            </Typography>\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div className='p-1' />\r\n            \r\n            <table className='mt-1 table-bordered' style={{width: '98%', margin: 'auto'}}>\r\n                <thead>\r\n                    <th>Property</th>\r\n                    <th>\r\n                        \r\n                        <select\r\n                            name='id'\r\n                            value={psData.id}\r\n                            onChange={e =>handleChange(e)}\r\n                        >\r\n                                <option value=\"\"></option>\r\n                            {\r\n                                propServices&&\r\n                                propServices.map((sale, index) =>{\r\n                                    const {id, name} = sale\r\n                                    return <option key={index} value={id}> {name} </option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </th>\r\n                    \r\n                    <th\r\n                        style={{borderColor: 'none'}}\r\n                    >\r\n                        <Link to='/ps' className='ml-3'>\r\n                            <Button \r\n                                variant='contained'\r\n                                startIcon={<span className='fa fa-plus' />}\r\n                                style={{background: '#2A3F54', color: 'white'}}\r\n                            >\r\n                                <Typography variant='caption'>\r\n                                    Add New\r\n                                </Typography>\r\n                            </Button>\r\n                        </Link>\r\n                    </th>\r\n                    <th\r\n                        style={{border: 'none', outline: 'none'}}\r\n                    >\r\n                        <Button\r\n                            onClick={() =>handle_Edit_Ps()}\r\n                            startIcon={<span className='fa fa-check />' />}\r\n                            variant='contained'\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Update \r\n                            </Typography>\r\n                        </Button>\r\n                    </th>\r\n                    <th\r\n                        style={{border: 'none', outline: 'none'}}\r\n                    >\r\n                        <Button\r\n                            startIcon={<span className='fa fa-trash />' />}\r\n                            variant='contained'\r\n                            style={{background: '#2A3F54', color: 'white', width: '100%'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Delete \r\n                            </Typography>\r\n                        </Button>\r\n                    </th>\r\n                </thead>\r\n            </table>\r\n            <div className='p-1' />\r\n            <table className='mt-1 table-bordered' style={{width: '98%', margin: 'auto'}}>\r\n                <thead>\r\n                    <th\r\n                        onClick={() =>setTab('gen')}\r\n                        style={{background: tab=='gen'?'':'#2A3F54', color: tab=='gen'? '#2A3F54': 'white',  paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderBottom: 'none' }}\r\n                    >\r\n                       \r\n                        General Info\r\n                           \r\n                    </th>\r\n                    <th\r\n                       onClick={() =>setTab('sol')}\r\n                       style={{background: tab=='sol'?'':'#2A3F54', color: tab=='sol'? '#2A3F54': 'white',  paddingLeft: '5px',\r\n                       paddingRight: '5px', border: '1px solid #000', borderBottom: 'none' }}\r\n                    >\r\n                       Sold\r\n                    </th>\r\n                    <th\r\n                        onClick={() =>setTab('pos')}\r\n                        style={{background: tab=='pos'?'':'#2A3F54', color: tab=='pos'? '#2A3F54': 'white',  paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderBottom: 'none' }}\r\n                    >\r\n                      Post Report\r\n                    </th>\r\n                    <th\r\n                        style={{color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none',\r\n                        borderTop: 'none', borderRight: 'none'}}\r\n                    >\r\n                      \r\n                    </th>\r\n                    \r\n                </thead>\r\n                { tab=='gen' && psData.id && <tbody>\r\n                    <div className='p-1' />\r\n                    <tr>\r\n                        <td>Property/Service</td>\r\n                        <td>\r\n                            <input\r\n                                list='ps'\r\n                                name='ps_type'\r\n                                value={psData.ps_type}\r\n                                placeholder='Select'\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                            <datalist id='ps'>\r\n                                <option value=\"\"></option>\r\n                                <option value='property'></option>\r\n                                <option value='service'></option>\r\n                            </datalist>\r\n                        </td>\r\n                        <td>Name</td>\r\n                        <td>\r\n                            <input\r\n                                name='name'\r\n                                value={psData.name}\r\n                                placeholder='Property Name'\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                            \r\n                        </td>\r\n                        <td\r\n                            style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}\r\n                        >Location\r\n                            <span>\r\n                                \r\n                            <IconButton\r\n                                onClick={() =>setAdd(!add)}\r\n                                size='small' className=' ml-2'\r\n                            >\r\n                                <span className='fa fa-plus-circle'\r\n                                    style={{ color: '#20c997' }}\r\n                                />\r\n                            </IconButton>\r\n                            </span>\r\n                        </td>\r\n                        { !add ?\r\n                            <td>\r\n                            \r\n                            <select\r\n                                name='location'\r\n                                value={psData.location}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                {\r\n                                    locations &&\r\n                                    locations.map((l, index) =>{\r\n                                        const {id, name} = l\r\n                                        return <option key={index} value={id}>{name}</option>\r\n                                    })\r\n                                }\r\n                            </select>\r\n                            </td>\r\n                            :\r\n                            <td\r\n                            >\r\n                            {\r\n                                add&&\r\n                                <div style={{display: 'flex',\r\n                                    flexDirection: 'row', justifyContent: 'space-between'}}>\r\n                              \r\n                                    <input\r\n                                        value={body.name}\r\n                                        placeholder='Location Name'\r\n                                        onChange={e =>setBody({\r\n                                            ...body,\r\n                                            name: e.target.value\r\n                                        })}\r\n                                        \r\n                                    />\r\n                                    <Button\r\n                                    className='ml-4'\r\n                                    onClick={() =>handle_Add_Location()}\r\n                                    size='small' variant='contained'\r\n                                    style={{background: '#2A3F54', color: 'white', width: '200px'}}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </div>\r\n                                \r\n                            }\r\n                            \r\n                        \r\n                            </td>\r\n                        }\r\n                    </tr>\r\n                    <div className='p-1' />\r\n                    <tr>\r\n                        <td>Sale Price</td>\r\n                        <td>\r\n                            <input\r\n                                name='sale_price'\r\n                                value={psData.sale_price}\r\n                                placeholder='Selling Price'\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                            \r\n                        </td>\r\n                        <td>Quantity</td>\r\n                        <td>\r\n                            <input\r\n                                name='quantity'\r\n                                type='number'\r\n                                value={psData.quantity}\r\n                                placeholder='Quantity'\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </td>\r\n                        <td>Status</td>\r\n                        <td>\r\n                            \r\n                            <select \r\n                                name='status'\r\n                                value={psData.status}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value={1}>Active</option>\r\n                                <option value={0}>InActive</option>\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    <div className='p-1' />\r\n                    <tr>\r\n                        <td>Description</td>\r\n                        <td colSpan={5}>\r\n                            <input\r\n                                name='description'\r\n                                value={psData.description}\r\n                                onChange={e =>handleChange(e)}\r\n                                placeholder='Property Description'\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>}\r\n            </table>\r\n            {/* imported component */}\r\n            {\r\n                tab =='sol' &&\r\n                <PsViewTable />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminPsSetting\r\n","\r\nimport { Avatar, Button, CircularProgress, IconButton, Typography } from '@material-ui/core';\r\nimport { AddAPhoto, Check, History, Restore } from '@material-ui/icons';\r\nimport React, { Fragment, PureComponent } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './uploadAvatar.css'\r\nimport axios from 'axios'\r\nimport AppSnackbar from './global/AppSnackbar';\r\n\r\nclass AvatarUpload extends PureComponent {\r\n   \r\n  state = {\r\n    blob: null,\r\n    src: null,\r\n    crop: {\r\n      unit: '%',\r\n      width: 50,\r\n      height: 50,\r\n      margin: 'auto',\r\n      aspect: 5 / 5,\r\n    },\r\n    appDialog: false,\r\n    message: '',\r\n    success: false,\r\n  };\r\n\r\n  onSelectFile = e => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener('load', () =>\r\n        this.setState({ src: reader.result })\r\n      );\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  // If you setState the crop in here you should return false.\r\n  onImageLoaded = image => {\r\n    this.imageRef = image;\r\n  };\r\n\r\n  onCropComplete = crop => {\r\n    this.makeClientCrop(crop);\r\n    // this.setState({src: null})\r\n  };\r\n\r\n  handleCropComplete = () =>{\r\n      this.setState({\r\n          src: null\r\n      })\r\n  }\r\n\r\n  onCropChange = (crop, percentCrop) => {\r\n    // You could also use percentCrop:\r\n    // this.setState({ crop: percentCrop });\r\n    this.setState({ crop });\r\n  };\r\n\r\n  async makeClientCrop(crop) {\r\n    if (this.imageRef && crop.width && crop.height) {\r\n      const croppedImageUrl = await this.getCroppedImg(\r\n        this.imageRef,\r\n        crop,\r\n        'newFile.jpeg'\r\n      );\r\n      this.setState({ croppedImageUrl });\r\n    }\r\n  }\r\n\r\n  getCroppedImg(image, crop, fileName) {\r\n    const canvas = document.createElement('canvas');\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      canvas.toBlob(blob => {\r\n        if (!blob) {\r\n          //reject(new Error('Canvas is empty'));\r\n          console.error('Canvas is empty');\r\n          return;\r\n        }\r\n        blob.name = fileName;\r\n        window.URL.revokeObjectURL(this.fileUrl);\r\n        this.fileUrl = window.URL.createObjectURL(blob);\r\n        resolve(this.fileUrl);\r\n        this.setState({blob: blob})\r\n      }, 'image/jpeg');\r\n    });\r\n  }\r\n\r\n  handleSubmitAvatar =() =>{\r\n    \r\n    this.setState({\r\n      appDialog: true\r\n    })\r\n    this.props.setOpen(true)\r\n      const data = new FormData()\r\n      // const id = this.props.mandate.split(' ')[0]\r\n      data.append('photo', this.state.blob)\r\n      axios.post(this.props.url, data,{\r\n          headers: {\r\n              'Authorization': `Bearer ${this.props.token}`\r\n          }\r\n      })\r\n      .then(res =>{\r\n          this.setState({\r\n            src: null,\r\n            appDialog: false,\r\n            message: res.data.message,\r\n            success: true\r\n          })\r\n          this.props.setOpen(false)\r\n         \r\n          // this.props.toggle(!this.props.isOpen)\r\n          this.props.sessionFunc()\r\n          return this.props.actions.profileUser()\r\n\r\n        })\r\n      .catch(err =>{\r\n        this.setState({\r\n          appDialog: false\r\n        })\r\n        this.props.setOpen(false)\r\n      })\r\n\r\n  }\r\n\r\n  render() {\r\n    const { crop, croppedImageUrl, src, success, message } = this.state;\r\n    const setOpen = () =>{\r\n        this.setState({\r\n            success: false\r\n        })\r\n    }\r\n    return (\r\n      <div className='upload_avatar'>\r\n        <AppSnackbar open={success} message={message} setOpen={setOpen} />\r\n        <div className='avatar_container'>\r\n            <label htmlFor='upload'>\r\n            <IconButton size='small'\r\n              style={{background: '#2A3F54'}}\r\n              onClick={() =>this.myInput.click()}>\r\n                <Avatar>\r\n                  <AddAPhoto style={{color: '#1ABB9C',}} />\r\n                </Avatar>\r\n            </IconButton>\r\n            </label>\r\n            <Typography variant='p'\r\n              style={{color: '#1ABB9C', marginLeft: 10}}\r\n            > Select photo for upload</Typography>\r\n          <input\r\n           ref={(ref) => this.myInput = ref}\r\n          id='upload' \r\n          type=\"file\" style={{ display: \"none\" }} \r\n          accept=\"image/*\" onChange={this.onSelectFile} />\r\n        </div>\r\n        \r\n        {src && (\r\n          <ReactCrop\r\n            src={src}\r\n            crop={crop}\r\n            ruleOfThirds\r\n            onImageLoaded={this.onImageLoaded}\r\n            onComplete={this.onCropComplete}\r\n            onChange={this.onCropChange}\r\n            keepSelection={true}\r\n            style={{height: '200px', width: '200px', margin: 'auto'}}\r\n          />\r\n        )}\r\n        {croppedImageUrl && (\r\n            <Fragment>\r\n\r\n                <div style={{flex: 1, \r\n                    justifyContent: 'center', \r\n                    alignItems: 'center', flexDirection: 'column'}}\r\n                >\r\n            \r\n                 <Avatar\r\n                    src={croppedImageUrl}\r\n                    variant='square'\r\n                    style={{width: '130px', height: '130px'}}\r\n                 />\r\n                </div>\r\n                 \r\n                \r\n            \r\n                <section \r\n                    className='m-4'\r\n                    style={{display: 'flex', alignItems: 'center',\r\n                    flexDirection: 'row', justifyContent: 'center', gap: '5px'}}\r\n                >\r\n                    <div>\r\n                    <Button\r\n                        size='small'\r\n                        startIcon={<Check style={{color:'#20c997'}} />}\r\n                        style={{background: '#2A3F54', color: 'white'}}\r\n                        variant='contained' onClick={this.handleSubmitAvatar}>\r\n                        upload\r\n                    </Button>\r\n                    </div>\r\n                    <div>\r\n                        <Button\r\n                            startIcon={<History color='secondary' />}\r\n                            variant='outlined' color='secondary' onClick={() =>{\r\n                            this.setState({src: null})\r\n                            this.myInput.click()\r\n                        }}>\r\n                            Reset\r\n                        </Button>\r\n                    </div>\r\n                  {this.state.appDialog&&\r\n                    <CircularProgress size='20px' color='secondary' />\r\n                  }\r\n\r\n                </section>\r\n                \r\n            </Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default AvatarUpload\r\n","import { Button, IconButton } from '@material-ui/core'\r\nimport { Close } from '@material-ui/icons'\r\nimport { MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader } from 'mdbreact'\r\nimport React from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectToken } from '../appState/appSlice'\r\nimport AvatarUpload from './UploadAvatar'\r\n\r\nconst Mandate = ({ url, mandate, setMandate, setOpen }) => {\r\n    const token = useSelector(selectToken)\r\n    return (\r\n        <Fragment>\r\n            <MDBModal isOpen={mandate} backdrop={false} \r\n            position='right' fullHeight={true}\r\n            >\r\n                <Button variant='contained'\r\n                    className='p-2'\r\n                    style={{background: '#2A3F54', color: 'white'}}\r\n                > \r\n                    Upload {mandate && mandate.split(' ')[1]} Mandate\r\n                </Button>\r\n                <MDBModalBody>\r\n                    {/* imported component */}\r\n                    <AvatarUpload setOpen={setOpen} \r\n                        mandate={mandate} token={token}\r\n                        url={url}\r\n                    />\r\n                </MDBModalBody>\r\n                <MDBModalFooter>                    \r\n                    <IconButton color='secondary'\r\n                        onClick={() =>setMandate(!mandate)}\r\n                    >\r\n                        <Close color='action' />\r\n                    </IconButton>\r\n                </MDBModalFooter>\r\n            </MDBModal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Mandate\r\n","import { Avatar } from '@material-ui/core'\r\nimport { More } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CustomerList = ({ id, index, hidden, \r\n        customer_email, customer_name, phone_no, code, \r\n        active, isWidget, setMandate, avatar\r\n    }) => {\r\n    return (\r\n        <Fragment>\r\n            <tr>\r\n                <td>{index+1} </td>\r\n                <td> \r\n                    {customer_name}\r\n                    \r\n                </td>\r\n                <td> {phone_no} </td>\r\n                <td> {customer_email} </td>\r\n                <td> {code} </td>\r\n                <td\r\n                    style={{display: 'flex', alignItems: 'center', justifyContent:'center'}}\r\n                >\r\n                    {\r\n                        avatar&&\r\n                        <Avatar alt={customer_name[0]} src={avatar} />\r\n                    }\r\n                </td>\r\n                <td>\r\n                    {\r\n                        active ==1?\r\n                        <span className=\"fa fa-check-circle fa-1x\"></span>\r\n                        :\r\n                        <span></span>\r\n                    }\r\n                </td>\r\n                <td>\r\n                    {\r\n                        hidden ==1?\r\n                        <span className=\"fa fa-lock\" style={{color: 'red'}}></span>\r\n                    :\r\n                        <span className=\"fa fa-unlock-alt\" style={{color: '#1ABB9C'}}></span>\r\n                    }\r\n                </td>\r\n                {!isWidget&& <td id=\"btn\"  className='p-2'>\r\n                    <button>\r\n                        <More\r\n                            style={{color: '#2A3F54'}}\r\n                        />\r\n                    </button>\r\n                    <div className=\"btn__poper\">\r\n                        <Link to='#' role='button' rel=\"noopener noreferrer\"\r\n                            onClick={() =>setMandate(`${id} ${customer_name}`)}\r\n                        >Mandate</Link>\r\n                        \r\n                    </div>\r\n                </td> }                      \r\n            </tr>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CustomerList\r\n","import React, { useState } from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectFilterCus } from '../../appState/appSlice'\r\nimport Mandate from '../Mandate'\r\nimport CustomerList from './CustomerList'\r\n\r\nconst CustomerViewTable = () => {\r\n    const customers = useSelector(selectFilterCus)\r\n    const [open, setOpen] = useState(false)\r\n    const [mandate, setMandate] = useState(false)\r\n    \r\n    return (\r\n        <Fragment>\r\n            <Mandate\r\n                open={open} \r\n                setOpen={setOpen}\r\n                mandate={mandate}\r\n                setMandate={setMandate}\r\n                url={mandate && `/customer/avatar/${mandate.split(' ')[0]}`}\r\n            />\r\n            <table className='table-hover'\r\n                style={{width: '98%', margin: 'auto'}}\r\n            >\r\n                <thead>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Name</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Contact</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Email</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Code</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Photo</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Active</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Lock</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Action</th>\r\n                   \r\n                </thead>\r\n                <tbody>\r\n                    \r\n                    {\r\n                        customers&&\r\n                        customers.map((customer, index) =>{\r\n                            return <CustomerList\r\n                                index={index}\r\n                                {...customer}\r\n                                \r\n                                open={open}\r\n                                setOpen={setOpen}\r\n                                mandate={mandate}\r\n                                setMandate={setMandate}\r\n                            />\r\n                        })\r\n\r\n                    }\r\n                        \r\n                </tbody>\r\n            </table>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CustomerViewTable\r\n","import { Button, Typography } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { selectAllStaffs, selectTransactions, selectOpen, \r\n    selectToken, setOpen, setfilterTx, selectCustomers,\r\n    setFilterCus,\r\n} from '../appState/appSlice'\r\nimport AppBackdrop from './global/AppBackDrop'\r\nimport AppSnackbar from './global/AppSnackbar'\r\nimport CustomerViewTable from './global/CustomerViewTable'\r\nimport TxTableView from './global/TxTableView'\r\n\r\nconst AdminStaffSetting = () => {\r\n    const dispatch = useDispatch()\r\n    const open = useSelector(selectOpen)\r\n    const token = useSelector(selectToken)\r\n    const staffs = useSelector(selectAllStaffs)\r\n    const customers = useSelector(selectCustomers)\r\n    const transactions = useSelector(selectTransactions)\r\n    const [tab, setTab] = useState('gen')\r\n    const [message, setMessage] = useState()\r\n    const [success, setSuccess] = useState(false)\r\n    const [data, setData] = useState({\r\n        id:'',\r\n        staff: '',\r\n        first_name: '',\r\n        last_name: '',\r\n        password: '',\r\n        email: '',\r\n        mobile: '',\r\n        is_active: '',\r\n        username: '',\r\n        md: '',\r\n        entries: '',\r\n        sales: '',\r\n        expense: '',\r\n        accountant: '',\r\n    })\r\n    const handleChange = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleUpdate = () =>{\r\n        dispatch(setOpen(true))\r\n        axios.post(`/auth/edit/${data.username}`, data, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(res =>{\r\n            setMessage(res.data.message)\r\n            setSuccess(true)\r\n            dispatch(setOpen(false))\r\n            setData({\r\n                staff: ''\r\n            })\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                setMessage(error.response.statusText)\r\n                dispatch(setOpen(false))\r\n            }\r\n        })\r\n    }\r\n    useEffect(() =>{        \r\n        const fstaff = staffs && staffs.filter(staf =>staf.username == data.staff)[0]\r\n        if (fstaff) {\r\n            setData({\r\n                ...data,\r\n                id: fstaff.id,\r\n                md: fstaff.md,\r\n                sales: fstaff.sales,\r\n                email: fstaff.email,\r\n                mobile: fstaff.mobile,\r\n                entries: fstaff.entries,\r\n                expense: fstaff.expense,\r\n                username: fstaff.username,\r\n                last_name: fstaff.last_name,\r\n                first_name: fstaff.first_name,\r\n                is_active:  fstaff.is_active,\r\n                accountant: fstaff.accountant,\r\n                \r\n                \r\n            })\r\n\r\n           \r\n        }\r\n        const ftxs = transactions && transactions.filter(tx =>tx.postBy_FK == `${data.username}`);\r\n        const fcus = customers && customers.filter(cus =>cus.rm == data.id);\r\n        dispatch(setfilterTx(ftxs))\r\n        dispatch(setFilterCus(fcus))\r\n        return\r\n    },[data.staff, data.username])\r\n    \r\n    return (\r\n        <div>\r\n            <AppBackdrop open={open} setOpen={setOpen} />\r\n            <AppSnackbar open={success} setOpen={setSuccess} message={message} />\r\n            <div className='admin__Title'>\r\n                <section>\r\n                    <Typography variant='h3'>STAFF</Typography>\r\n                </section>\r\n                <div>\r\n                    <Link to='/staffs' className='ml-3'>\r\n                        <Button \r\n                            variant='contained'\r\n                            startIcon={<span className='fa fa-arrow-right' />}\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Staff Lists\r\n                            </Typography>\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div className='p-1' />\r\n            {/* table */}\r\n            <table className='mt-1 table-bordered' style={{width: '98%', margin: 'auto', \r\n                position: 'sticky', top: 0, zIndex: 222}}>\r\n                <thead>\r\n                    <th>Select</th>\r\n                    <th>\r\n                        <input\r\n                            value={data.staff}\r\n                            placeholder='Staff'\r\n                            name='staff' list='staffs'\r\n                            onChange={e =>handleChange(e)}\r\n                        />\r\n                        <datalist id='staffs'>\r\n                            {\r\n                                staffs&&\r\n                                staffs.map((staff, index) =>{\r\n                                    const {username, first_name, last_name} = staff\r\n                                    return <option key={index} value={username}> {`${first_name} ${last_name}`} </option>\r\n                                })\r\n                            }\r\n                        </datalist>\r\n                    </th>\r\n                    <th>Staff Username</th>\r\n                    <th>\r\n                        <input\r\n                            list='usernames'\r\n                            name='staff'\r\n                            value={data.staff}\r\n                            onChange={e =>handleChange(e)}\r\n                            \r\n                        />\r\n                        <datalist id='usernames'>\r\n                            {\r\n                                staffs&&\r\n                                staffs.map((staff, index) =>{\r\n                                    return <option key={index} value={staff.username}></option>\r\n                                })\r\n                            }\r\n                        </datalist>\r\n                    </th>\r\n                    <th\r\n                        style={{borderColor: 'none'}}\r\n                    >\r\n                        <Link to='/staffs' className='ml-3'>\r\n                            <Button \r\n                                variant='contained'\r\n                                startIcon={<span className='fa fa-plus' />}\r\n                                style={{background: '#2A3F54', color: 'white'}}\r\n                            >\r\n                                <Typography variant='caption'>\r\n                                    Add New\r\n                                </Typography>\r\n                            </Button>\r\n                        </Link>\r\n                    </th>\r\n                    <th\r\n                        style={{border: 'none', outline: 'none'}}\r\n                    >\r\n                        <Button\r\n                            onClick={() =>handleUpdate()}\r\n                            startIcon={<span className='fa fa-check />' />}\r\n                            variant='contained'\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Update \r\n                            </Typography>\r\n                        </Button>\r\n                    </th>\r\n                    <th\r\n                        style={{border: 'none', outline: 'none'}}\r\n                    >\r\n                        <Button\r\n                            startIcon={<span className='fa fa-trash />' />}\r\n                            variant='contained'\r\n                            style={{background: '#2A3F54', color: 'white', width: '100%'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Delete \r\n                            </Typography>\r\n                        </Button>\r\n                    </th>\r\n                </thead>\r\n            </table>\r\n            \r\n            <div className='p-1' />\r\n            <table className='mt-1 table-bordered' style={{width: '98%', margin: 'auto',\r\n                position: 'sticky', top: '40px', zIndex: 222}}>\r\n                <thead>\r\n                    <th\r\n                        onClick={() =>setTab('gen')}\r\n                        style={{background: tab=='gen'?'':'#2A3F54', color: tab=='gen'? '#2A3F54': 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderBottom: 'none' }}\r\n                    >\r\n                       \r\n                        General Info\r\n                           \r\n                    </th>\r\n                    <th\r\n                        onClick={() =>setTab('tx')}\r\n                        style={{background: tab=='tx'?'':'#2A3F54', color: tab=='tx'? '#2A3F54': 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Transactions\r\n                    </th>\r\n                    <th\r\n                        onClick={() =>setTab('cus')}\r\n                        style={{background: tab=='cus'?'':'#2A3F54', color: tab=='cus'? '#2A3F54': 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Customers\r\n                    </th>\r\n                    <th\r\n                        onClick={() =>setTab('exp')}\r\n                        style={{background: tab=='exp'?'':'#2A3F54', color: tab=='exp'? '#2A3F54': 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Expense\r\n                    </th>\r\n                    <th\r\n                        onClick={() =>setTab('sal')}\r\n                        style={{background: tab=='sal'?'':'#2A3F54', color: tab=='sal'? '#2A3F54': 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Sales\r\n                    </th>\r\n                    <th\r\n                        onClick={() =>setTab('jou')}\r\n                        style={{background: tab=='jou'?'':'#2A3F54', color: tab=='jou'? '#2A3F54': 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Journal\r\n                    </th>\r\n                </thead>\r\n                {\r\n                    data.username && tab=='gen'?\r\n                    <tbody>\r\n                        <div className='p-1' />\r\n                        <tr>\r\n                            <td>First Name</td>\r\n                            <td>\r\n                                <input \r\n                                    name='first_name'\r\n                                    value={data.first_name}\r\n                                    placeholder='First Name'\r\n                                    onChange={e =>handleChange(e)}\r\n                                />\r\n                            </td>\r\n                            <td>Last Name</td>\r\n                            <td>\r\n                                <input \r\n                                    name='last_name'\r\n                                    value={data.last_name}\r\n                                    placeholder='Last Name'\r\n                                    onChange={e =>handleChange(e)}\r\n                                />\r\n                            </td>\r\n                            <td>User Name</td>\r\n                            <td>\r\n                                <input\r\n                                    readOnly \r\n                                    name='username'\r\n                                    value={data.username}\r\n                                    placeholder='Staff Username (read only)'\r\n                                />\r\n                            </td>\r\n                            \r\n                        </tr>\r\n                        <div className='p-1' />\r\n                        <tr>\r\n                            <td>Mobile</td>\r\n                            <td>\r\n                                <input\r\n                                    name='mobile'\r\n                                    value={data.mobile}\r\n                                    placeholder='Staff Phone Number'\r\n                                    onChange={e =>handleChange(e)}\r\n                                />\r\n                            </td>\r\n                            <td>Email</td>\r\n                            <td colSpan={3}>\r\n                                <input \r\n                                    name='email'\r\n                                    value={data.email}\r\n                                    onChange={e =>handleChange(e)}\r\n                                    placeholder='Staff Email Address (example@mail.com)'\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                        <div className='p-1' />\r\n                        <tr>\r\n                            <td>Entries</td>\r\n                            <td>\r\n                                <select \r\n                                    name='entries'\r\n                                    value={data.entries}\r\n                                    onChange={e =>handleChange(e)}\r\n                                >\r\n                                    <option value=''>Select</option>\r\n                                    <option value='entries'>Yes</option>\r\n                                    <option value=''>No</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>Expense</td>\r\n                            <td>\r\n                                <select \r\n                                    name='expense'\r\n                                    value={data.expense}\r\n                                    onChange={e =>handleChange(e)}\r\n                                >\r\n                                    <option value=''>Select</option>\r\n                                    <option value='expense'>Yes</option>\r\n                                    <option value=''>No</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>Sales</td>\r\n                            <td>\r\n                                <select \r\n                                    name='sales'\r\n                                    value={data.sales}\r\n                                    onChange={e =>handleChange(e)}\r\n                                >\r\n                                    <option value=''>Select</option>\r\n                                    <option value='sales'>Yes</option>\r\n                                    <option value=''>No</option>\r\n                                </select>\r\n                            </td>\r\n                        </tr>\r\n                        <div className='p-1' />\r\n                        <tr>\r\n                            <td>Accountant</td>\r\n                            <td>\r\n                                <select \r\n                                    name='accountant'\r\n                                    value={data.accountant}\r\n                                    onChange={e =>handleChange(e)}\r\n                                >\r\n                                    <option value=''>Select</option>\r\n                                    <option value='accountant'>Yes</option>\r\n                                    <option value=''>No</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>MD</td>\r\n                            <td>\r\n                                <select \r\n                                    name='md'\r\n                                    value={data.md}\r\n                                    onChange={e =>handleChange(e)}\r\n                                >\r\n                                    <option value=''>Select</option>\r\n                                    <option value='md'>Yes</option>\r\n                                    <option value=''>No</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>Active</td>\r\n                            <td>\r\n                                <select \r\n                                    name='is_active'\r\n                                    value={data.is_active}\r\n                                    onChange={e =>handleChange(e)}\r\n                                >\r\n                                <option value=''>Select</option>\r\n                                    <option value={1}>Yes</option>\r\n                                    <option value={0}>No</option>\r\n                                </select>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                    :null\r\n                }\r\n\r\n                \r\n            </table>\r\n                {\r\n                    tab =='tx' &&\r\n                    <TxTableView\r\n                        name={`${data.first_name} ${data.last_name}`} \r\n                    />\r\n                }\r\n                {\r\n                    tab =='cus' &&\r\n                    <CustomerViewTable />\r\n                }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminStaffSetting\r\n","import { IconButton, ListItem, ListItemText } from '@material-ui/core'\r\nimport { More } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { Fragment } from 'react'\r\n\r\nconst AdminMenuList = ({setIsActive}) => {\r\n    return (\r\n        <Fragment>\r\n            <ListItem draggable divider button\r\n                onClick={() =>setIsActive('staff')}\r\n            >\r\n                <ListItemText\r\n                    primary='Staff'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem>\r\n            <ListItem draggable divider button\r\n                onClick={() =>setIsActive('customer')}\r\n            >\r\n                <ListItemText\r\n                    primary='Customer'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem>\r\n            {/* <ListItem draggable divider button\r\n                onClick={() =>setIsActive('expense')}\r\n            >\r\n                <ListItemText\r\n                    primary='Expense'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem>\r\n            <ListItem draggable divider button\r\n                onClick={() =>setIsActive('sale')}\r\n            >\r\n                <ListItemText\r\n                    primary='Sale'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem> */}\r\n            {/* <ListItem draggable divider button\r\n                onClick={() =>setIsActive('posting')}\r\n            >\r\n                <ListItemText\r\n                    primary='Posting'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem> */}\r\n            <ListItem draggable divider button\r\n                onClick={() =>setIsActive('ps')}\r\n            >\r\n                <ListItemText\r\n                    primary='Property/Service'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem>\r\n            <ListItem draggable divider button\r\n                onClick={() =>setIsActive('account')}\r\n            >\r\n                <ListItemText\r\n                    primary='Account'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem>\r\n            {/* <ListItem draggable divider button\r\n                onClick={() =>setIsActive('journal')}\r\n            >\r\n                <ListItemText\r\n                    primary='Journal'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem> */}\r\n            <ListItem draggable divider button\r\n                onClick={() =>setIsActive('security')}\r\n            >\r\n                <ListItemText\r\n                    primary='Security'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminMenuList\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { MDBContainer } from \"mdbreact\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAccounts, selectAllStaffs, selectCustomers, selectUserExpenseRaised } from \"../../appState/appSlice\";\r\nimport { Fragment } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AdminMenuList from \"../global/AdminMenuList\";\r\n\r\nconst AdminSideMenu = ({setIsActive}) => {\r\n  const userExpneses = useSelector(selectUserExpenseRaised)\r\n  const customers = useSelector(selectCustomers)\r\n  const accounts = useSelector(selectAccounts)\r\n\r\n    return (\r\n        <Fragment>\r\n            <section className='p-2'>\r\n                <Button \r\n                    variant='contained' size='small'\r\n                    style={{background: '#2A3F54', width: '100%', color: 'white'}}\r\n                >\r\n                    Admin Menu\r\n                </Button>\r\n                <div className='admin__MenuList mt-2'>\r\n                    <AdminMenuList\r\n                        setIsActive={setIsActive}\r\n                    />\r\n                </div>\r\n            </section>\r\n        </Fragment>\r\n    );\r\n  }\r\n\r\nexport default AdminSideMenu;","import { Grid } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { Fragment } from 'react'\r\nimport AdminAccountSetting from './AdminAccountSetting'\r\nimport AdminCustomerSetting from './AdminCustomerSetting'\r\nimport AdminExpenseSetting from './AdminExpenseSetting'\r\nimport AdminPostingSetting from './AdminPosting'\r\nimport AdminPsSetting from './AdminPsSetting'\r\nimport AdminSaleSetting from './AdminSaleSetting'\r\nimport AdminStaffSetting from './AdminStaffSetting'\r\nimport AdminSideMenu from './charts/AdminSideMenu'\r\nimport AppHeader from './global/AppHeader'\r\n\r\nconst AdminFeed = () => {\r\n    const [isActive, setIsActive] = useState()\r\n\r\n    const renderAdminMenu = (active) =>{\r\n        switch (active) {\r\n            case 'staff':\r\n            return <AdminStaffSetting />\r\n\r\n            case 'customer':\r\n            return <AdminCustomerSetting />\r\n\r\n            // case 'expense':\r\n            // return <AdminExpenseSetting />\r\n\r\n            // case 'sale':\r\n            // return <AdminSaleSetting />\r\n\r\n            case  'posting':\r\n            return <AdminPostingSetting />\r\n\r\n            case 'ps':\r\n                return <AdminPsSetting />\r\n            \r\n            case 'account':\r\n                return <AdminAccountSetting />\r\n        \r\n            default:\r\n                return <AdminStaffSetting />\r\n                \r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    return (\r\n        <Fragment>\r\n            <div className='app__Feed'>\r\n                <AppHeader title='Settings' />\r\n                <div className='admin__FeedContainer'>\r\n                    <Grid container spacing={2} >\r\n                        <Grid item lg={2} md={2} className='admin__Menu'>\r\n                            <AdminSideMenu\r\n                                isActive={isActive}\r\n                                setIsActive={setIsActive}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item lg={10} md={10}>\r\n                            {\r\n                               renderAdminMenu(isActive)\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div> \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminFeed\r\n","import axios from 'axios'\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectOpen, selectToken, setAccounts, setAllStaffs, setBuildCategories, setCustomers, setLocations, setPaidOnpaySales, setPropServices, setSAles, setTransactions, setUser, setUserExpenseRaised } from '../appState/appSlice'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport AdminFeed from '../components/AdminFeed'\r\nimport './homeScreen.css'\r\n\r\nconst AdminScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const open = useSelector(selectOpen)\r\n    const token = useSelector(selectToken)\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Paid_Onpay_Sales = async () =>{\r\n        await localStorage.clear()\r\n        axios.get(`/sale/paid_onpay`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(paidOnpay =>{\r\n            dispatch(setPaidOnpaySales(paidOnpay.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const getCustomers = () =>{\r\n        axios.get('/customer', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(asset =>{\r\n            dispatch(setCustomers(asset.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_All_Txs = () =>{\r\n        axios.get('/transaction', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(txs =>{\r\n            dispatch(setTransactions(txs.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Staffs =() =>{\r\n        axios.get('/auth', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(staffs =>{\r\n            localStorage.setItem('staffs', staffs.data.length)\r\n            dispatch(setAllStaffs(staffs.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_Raised_Expenses =() =>{\r\n        axios.get('/expense', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(exps =>{\r\n            dispatch(setUserExpenseRaised(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_All_Sales =() =>{\r\n        axios.get('/sale/all', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(sales =>{\r\n            dispatch(setSAles(sales.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const getProp_Services = () =>{\r\n        axios.get('/prop_service', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(ps =>{\r\n            dispatch(setPropServices(ps.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const handleGet_Locations = () =>{\r\n        axios.get('/location', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(locations =>{\r\n            dispatch(setLocations(locations.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error) {\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n    \r\n    const getBuildCategories = () =>{\r\n        axios.get('/build_category', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(categories =>{\r\n            dispatch(setBuildCategories(categories.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        get_Session()\r\n        get_Paid_Onpay_Sales()\r\n        get_AllAccounts()\r\n        get_Raised_Expenses()\r\n        getCustomers()\r\n        get_Staffs()\r\n        get_All_Sales()\r\n        getProp_Services()\r\n        handleGet_Locations()\r\n        get_All_Txs()\r\n        getBuildCategories()\r\n    }, [open])\r\n    \r\n\r\n    return (\r\n        <Fragment>\r\n           <div className='app'>\r\n                {/* side__Bar */}\r\n                <SideBarMenu />\r\n                {/* feed */}\r\n                <AdminFeed />\r\n                {/* widget */}\r\n           </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminScreen\r\n","import axios from 'axios'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {setToken } from '../../appState/appSlice'\r\n\r\nconst LoginForm = ({ setSuccess, setError, setOpen, user, setUser}) => {\r\n    const dispatch = useDispatch()\r\n   \r\n    const handle_Login = e =>{\r\n        e.preventDefault()\r\n        setOpen(true)\r\n        axios.post('/auth/login', user)\r\n\r\n        .then(result =>{\r\n            setSuccess(false)\r\n            return dispatch(setToken(result.data))\r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            setSuccess(true)\r\n            if(error.status ==500){\r\n                setSuccess(true)\r\n                return setError(error.response.statusText)\r\n            }\r\n            setSuccess(true)\r\n            setError(error.response.data.message)\r\n        })\r\n    }\r\n    return (\r\n        <div className='row'>\r\n            <div className='col-lg-12 col-md-12'>\r\n                <input\r\n                    name='User Id'\r\n                    value={user.username}\r\n                    placeholder='User name'\r\n                    onChange={e =>setUser({\r\n                        ...user,\r\n                        username: e.target.value\r\n                    })}\r\n                />\r\n            </div>\r\n            <div className='col-lg-12 col-md-12'>\r\n                <input\r\n                    type='password'\r\n                    name='password'\r\n                    value={user.password}\r\n                    placeholder='Password'\r\n                    onChange={e =>setUser({\r\n                        ...user,\r\n                        password: e.target.value\r\n                    })}\r\n                />\r\n            </div>\r\n            \r\n            <div className='col-lg-12 col-md-12'>\r\n                <div className='btn__Container'>\r\n                <button\r\n                    onClick={e =>handle_Login(e)}\r\n                    type='submit' className='p-1'>Log In</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","import { Typography } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport React, { useState } from 'react'\r\nimport AppBackdrop from '../global/AppBackDrop';\r\n\r\nconst UserCreationForm = ({ user, setUser, swap, setSwap }) => {\r\n    const [open, setOpen] = useState(false)\r\n    const [success, setSuccess] = useState()\r\n    const [authData, setAuthdata] = useState({\r\n        first_name: '',\r\n        last_name: '',\r\n        password: '',\r\n        email: '',\r\n        is_active: '',\r\n        is_superuser: ''\r\n    })\r\n\r\n    // func\r\n    const handle_Change =e=>{\r\n        const value = e.target.value;\r\n        const name = e.target.name\r\n\r\n        setAuthdata({\r\n            ...authData,\r\n            [name]: value\r\n        })\r\n    }\r\n    const handle_CreateStaff =e=>{\r\n        e.preventDefault()\r\n        setOpen(true)\r\n        axios.post('/auth', authData)\r\n        .then(result =>{\r\n            setSuccess('User created with id: '+result.data.userId)\r\n            setUser({\r\n                ...user,\r\n                username: result.data.userId\r\n            })\r\n            setOpen(false)\r\n            setTimeout(() => {\r\n                setSwap(!swap)\r\n            }, 5000);\r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            alert(error)\r\n        })\r\n    }\r\n    return (\r\n        <div className='row'>\r\n            <AppBackdrop open={open} setOpen={setOpen} />\r\n            {   success?\r\n                <Typography variant='caption' color='initial'>\r\n                    {success}\r\n                </Typography>\r\n                :null\r\n            }\r\n            <div className='col-lg-12 col-md-12'>\r\n                <input\r\n                    name='first_name'\r\n                    placeholder='First Name'\r\n                    value={authData.first_name}\r\n                    onChange={e =>handle_Change(e)}\r\n                />\r\n            </div>\r\n            <div className='col-lg-12 col-md-12'>\r\n                <input \r\n                    name='last_name'\r\n                    placeholder='Last name'\r\n                    value={authData.last_name}\r\n                    onChange={e =>handle_Change(e)}\r\n                />\r\n            </div>\r\n            <div className='col-lg-12 col-md-12'>\r\n                <input \r\n                    name='email'\r\n                    placeholder='Email'\r\n                    value={authData.email}\r\n                    onChange={e =>handle_Change(e)}\r\n                />\r\n            </div>\r\n            <div className='col-lg-12 col-md-12'>\r\n                <input \r\n                    name='password'\r\n                    type='password'\r\n                    placeholder='password'\r\n                    value={authData.password}\r\n                    onChange={e =>handle_Change(e)}\r\n                />\r\n            </div>\r\n            <div className='col-lg-12 col-md-12'>\r\n                <select\r\n                    name='is_superuser'\r\n                    value={authData.is_superuser}\r\n                    onChange={e =>handle_Change(e)}\r\n                >\r\n                    <option value=''>Admin?</option>\r\n                    <option value={1}>Yes</option>\r\n                    <option value={0}>No</option>\r\n                </select>\r\n            </div>\r\n            <div className='col-lg-12 col-md-12'>\r\n                <select\r\n                    name='is_active'\r\n                    value={authData.is_active}\r\n                    onChange={e =>handle_Change(e)}\r\n                >\r\n                    <option value=''>Active?</option>\r\n                    <option value={1}>Yes</option>\r\n                    <option value={0}>No</option>\r\n                </select>\r\n            </div>\r\n            <div className='col-lg-12 col-md-12'>\r\n                <div className='btn__Container'>\r\n                <button \r\n                    type='submit' className='p-1'\r\n                    onClick={e =>handle_CreateStaff(e)}\r\n                >Create</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCreationForm\r\n","import { IconButton, Paper, } from '@material-ui/core'\r\nimport { ChevronLeft, PlusOne } from '@material-ui/icons'\r\nimport React, { useState } from 'react'\r\nimport AppBackdrop from '../global/AppBackDrop'\r\nimport AppSnackbar from '../global/AppSnackbar'\r\nimport LoginForm from './LoginForm'\r\nimport UserCreationForm from './UserCreationForm'\r\n\r\nconst CreateStaff = () => {\r\n    const [Error, setError] = useState()\r\n    const [open, setOpen] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n    const [user, setUser] = useState({\r\n        username: '',\r\n        password: ''\r\n    })\r\n    const [swap, setSwap] = useState(false)\r\n    return (\r\n        <div className='auth__FormContainer'>\r\n            <AppBackdrop setOpen={setOpen} open={open} />\r\n            <AppSnackbar message={Error} open={success} setOpen={setSuccess} />\r\n           <form method='post'>\r\n               <div className='row align-items-center justify-content-center d-flex'>\r\n                    <Paper className='col-lg-4 col-md-4 p-4'>\r\n                       {    swap&&\r\n                           <UserCreationForm\r\n                           swap={swap}\r\n                           user={user}\r\n                           setUser={setUser}\r\n                           setSwap={setSwap}\r\n                           />\r\n                       }\r\n                       {!swap&&\r\n                           <LoginForm\r\n                            user={user}\r\n                            open={open}\r\n                            Error={Error}\r\n                            setOpen={setOpen}\r\n                            setUser={setUser}\r\n                            setError={setError}\r\n                            setSuccess={setSuccess}\r\n                           />\r\n                        }\r\n                       <IconButton\r\n                        onClick={() =>setSwap(!swap)}\r\n                       >\r\n                          {\r\n                              swap?\r\n                              <ChevronLeft />\r\n                              :\r\n                              <PlusOne />\r\n                          }\r\n                       </IconButton>\r\n                    </Paper>\r\n                </div>\r\n           </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateStaff\r\n// password, is_superuser, username,\r\n// first_name, last_name, email, is_staff, is_active, date_joined","import React, { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken } from '../appState/appSlice'\r\nimport '../components/auth/auth.css'\r\nimport CreateStaff from '../components/auth/CreateStaff'\r\n\r\nexport const AuthScreen = () => {\r\n    const token = useSelector(selectToken)\r\n    const history = useHistory()\r\n  \r\n   if(token){\r\n     history.push('/home')\r\n   }\r\n    return (\r\n        <Fragment>\r\n            <div className='auth__Container'>\r\n                <CreateStaff />\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\n","import { Button, Container, FormLabel, Grid, IconButton, Paper, Select, TextField, Typography } from '@material-ui/core'\r\nimport { FileCopy, PlusOne,} from '@material-ui/icons'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectAccounts, selectBillCategories, selectToken, selectVendors, setBillCategories } from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\nimport AppSnackbar from './global/AppSnackbar'\r\n\r\nconst BillFeed = ({ setOpen, isOpen, setIsOpen, isWidget, setIswidget }) => {\r\n    const token = useSelector(selectToken)\r\n    const vendors = useSelector(selectVendors)\r\n    const categories = useSelector(selectBillCategories)\r\n    const [success, setSuccess] = useState(false)\r\n    const [message, setMessage] = useState()\r\n    const [vendorSales, setVendorSales] = useState()\r\n    const billFormTemplate = {billcategory:'', amount: '',  description: ''};\r\n    const [billForm, setBillform] = useState([billFormTemplate])\r\n\r\n    const [data, setData ] = useState({\r\n        vendor_FK: '', \r\n        bill_date: '',\r\n        bill_term: '',\r\n        due_date: '',\r\n        VALUES: [],\r\n        uuid: '',\r\n        total: ''\r\n    })\r\n// func\r\n    const handleSetPostData = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n\r\n    } \r\n\r\n    const handleSetTerm = (e) =>{\r\n        const d = new Date()\r\n        const sd = new Date()\r\n        const value = e.target.value;\r\n         const duedate = d.setDate(sd.getDate()+parseInt(value))\r\n            return setData({\r\n                ...data,\r\n                bill_term: value,\r\n                due_date: new Date(duedate)\r\n            })\r\n    }\r\n\r\n    const addBillFrom = () =>{\r\n        setBillform([\r\n            ...billForm,\r\n            billFormTemplate\r\n        ])\r\n    }\r\n    const handleChange = (e, index) =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n        const updatedbillform = billForm.map((jef, i) => index == i ? Object.assign(jef, {[name]: value}): jef);\r\n        setBillform(updatedbillform)\r\n\r\n        if(name =='amount') {\r\n            const updatedbillform =  billForm.map((jef, i) => index == i ?\r\n            Object.assign(jef, {'bill_ID': data.uuid, 'createdAt': data.bill_date  }): jef);\r\n        }\r\n    }\r\n    const handleRemovebillform = (index) =>{\r\n        const filterbillform = [...billForm];\r\n        filterbillform.splice(index, 1);\r\n        \r\n        setBillform(filterbillform)\r\n    }\r\n\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n    // submit post\r\n    const handleSubmit =e =>{\r\n        e.preventDefault()\r\n        setOpen(true)\r\n        axios.post('/bill',data, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setOpen(false)\r\n            setSuccess(true)\r\n            setMessage(result.data.message)\r\n            setData({\r\n                vendor_FK: '', \r\n                bill_date: '',\r\n                bill_term: '',\r\n                due_date: '',\r\n                VALUES: [],\r\n                uuid: '',\r\n                total: ''\r\n            })\r\n          \r\n            setBillform([\r\n               billFormTemplate\r\n            ])\r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            if(error) {\r\n                return error.response.data\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    // useEffect func\r\n    useEffect(() =>{\r\n        \r\n        const fdata = billForm.map(x =>Object.values(x))\r\n        const findal =[]\r\n        // const data = fdata\r\n        for(let i =0; i< fdata.length; i++){\r\n            const element = fdata[i]\r\n            findal.push(element)\r\n        }\r\n        \r\n         setData({\r\n            ...data,\r\n            VALUES: findal\r\n        })\r\n    }, [billForm])\r\n   \r\n    useEffect(() =>{\r\n        setData({\r\n            ...data,\r\n            total: calcuAmt(billForm)\r\n        })\r\n    }, [data.VALUES])\r\n    useEffect(() =>{\r\n        setData({\r\n            ...data,\r\n            uuid:  new Date().getSeconds().toLocaleString() + new Date().getMinutes().toLocaleString()+new Date().getMilliseconds()\r\n        })\r\n    }, [success])\r\n\r\n    useEffect(() =>{\r\n        const filterCategories = categories&&categories.filter(cat => parseInt(cat.vendor_FK) == parseInt(data.vendor_FK))\r\n       if(filterCategories) {\r\n           return  setVendorSales(filterCategories)\r\n       }\r\n      setVendorSales('')\r\n       \r\n    },[data.vendor_FK])\r\n    return (\r\n        <div className={`${isWidget? 'isapp__Feed': 'app__Feed'}`}>\r\n            <AppSnackbar open={success} setOpen={setSuccess} message={message} />\r\n           <AppHeader title='Bill' />\r\n           <div className=\"row align-items-center justify-content-center d-flex m-1\" >\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                    {/* table */}\r\n                    <h3>Bill Entry<span> \r\n                        <IconButton color='secondary'\r\n                            onClick={() =>setIswidget(!isWidget)}\r\n                        >\r\n                        <FileCopy style={{ color: '#1ABB9C'}} />\r\n                        </IconButton></span></h3> \r\n                        {/* to do make it a component */}\r\n                        <Grid container spacing={2} className='p-3'>\r\n                            <Grid item lg={4} md={4}>\r\n                                <FormLabel>Vendor</FormLabel>\r\n                                <select\r\n                                    required\r\n                                    name='vendor_FK'\r\n                                    placeholder='Vendor'\r\n                                    style={{border: 'none'}}\r\n                                    value={data.vendor_FK}\r\n                                    onChange={e =>handleSetPostData(e)}\r\n                                >\r\n                                    <option value=''>Select</option>\r\n                                    <option value='-1'>All</option>\r\n                                    {\r\n                                    vendors&&\r\n                                    vendors.map((vendor, index) =>{\r\n                                        const { id, vendor_name} = vendor\r\n                                        return <option value={id} key={index} >{`${vendor_name}`}</option>\r\n                                    })\r\n                                }\r\n                                </select>\r\n                            </Grid>\r\n                                \r\n                                <Grid item lg={8} md={8}\r\n                                    style={{display: 'flex', \r\n                                    justifyContent: 'flex-end', alignItems: 'flex-end', flexDirection: 'column'}}\r\n                                >\r\n                                    <FormLabel>Amount</FormLabel>\r\n                                    <Typography variant='h5'>\r\n                                        <s>N</s>: {calcuAmt(billForm)}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                \r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Period Term</FormLabel>\r\n                                    <select\r\n                                        required\r\n                                        name='bill_term'\r\n                                        value={data.bill_term}\r\n                                        onChange={e =>handleSetTerm(e)}\r\n                                        style={{width: '100%', outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                    >\r\n                                        <option></option>\r\n                                        <option value={7}>7 Days</option>\r\n                                        <option value={14}>14 Days</option>\r\n                                        <option value={21}>21 Days</option>\r\n                                        <option value={28}>28 Days</option>\r\n                                        <option value={30}>30 Days</option>\r\n                                        <option value={60}>60 Days</option>\r\n                                        <option value={90}>90 Days</option>\r\n                                        <option value={120}>120 Days</option>\r\n                                        <option value={150}>150 Days</option>\r\n                                        <option value={180}>180 Days</option>\r\n                                        <option value={210}>210 Days</option>\r\n                                        <option value={240}>240 Days</option>\r\n                                        <option value={270}>270 Days</option>\r\n                                        <option value={300}>300 Days</option>\r\n                                        <option value={330}>330 Days</option>\r\n                                        <option value={360}>360 Days</option>\r\n                                    </select>\r\n                                </Grid>\r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Bill Date</FormLabel>\r\n                                    <input\r\n                                        required\r\n                                        name='bill_date'\r\n                                        type='date'\r\n                                        value={data.bill_date}\r\n                                        onChange={e =>handleSetPostData(e)}\r\n                                        style={{width: '100%', outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Due Date</FormLabel>\r\n                                    <input\r\n                                        name='due_date'\r\n                                        value={data.due_date ? new Date(data.due_date).toLocaleDateString(): new Date().toLocaleDateString()}\r\n                                        style={{width: '100%', outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                    />\r\n                                </Grid>\r\n                            \r\n                        </Grid>\r\n                        <h5>\r\n                            Category Details\r\n                            <span>\r\n                                <IconButton\r\n                                    color='secondary'\r\n                                    onClick={() =>setIsOpen(!isOpen)}\r\n                                >\r\n                                    <PlusOne style={{color: '#20c997'}} />\r\n                                </IconButton>\r\n                            </span>\r\n                        </h5>\r\n                    <Paper>\r\n                        <Container className='p-3'>\r\n                        <table className=\"table-small table-hover table-bordered\" style={{width: '100%'}}>\r\n                            <thead>\r\n                                \r\n                                <th>#</th>\r\n                                <th> {' '} </th>\r\n                                <th>Category</th>\r\n                                <th>Amount</th>\r\n                                <th>Description</th>\r\n                               \r\n                                <th></th>\r\n                            </thead>\r\n                            <tbody id='je__Table'>\r\n                                {\r\n                                    billForm.map((categ, index) =>(\r\n                                        <tr>\r\n                                            <td>{index+1} </td>\r\n                                            <td\r\n                                                    onClick={() =>addBillFrom()}\r\n                                                >\r\n                                                    <span className='fa fa-plus-circle fa-1x'\r\n                                                        style={{color: '#20c997'}}\r\n                                                    />\r\n                                            </td>\r\n                                            <td>\r\n                                                <select\r\n                                                    name='billcategory'\r\n                                                    value={categ.billcategory}\r\n                                                    placeholder='Category'\r\n                                                    style={{border: 'none'}}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                >\r\n                                                    <option value=''></option>\r\n                                                    {\r\n                                                        vendorSales&& vendorSales.length > 0?\r\n                                                        vendorSales.map((vsales, index) =>{\r\n                                                            const { id, name} = vsales\r\n                                                            return <option value={id} key={index} >{`${name}`}</option>\r\n                                                        })\r\n                                                    :\r\n                                                       categories&&\r\n                                                       categories.map((category, index) =>{\r\n                                                            const { id, name} = category\r\n                                                            return <option value={id} key={index} >{`${name}`}</option>\r\n                                                        })\r\n                                                    }\r\n                                                   \r\n                                                </select>\r\n                                            </td>\r\n                                            <td>\r\n                                                <input\r\n                                                    name='amount'\r\n                                                    type='number'\r\n                                                    placeholder='Amount'\r\n                                                    value={categ.amount}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n                                            \r\n                                            <td>\r\n                                                <input\r\n                                                    name='description'\r\n                                                    placeholder='Description'\r\n                                                    value={categ.description}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n                     \r\n                                            <td\r\n                                                onClick={() =>handleRemovebillform(index)}\r\n                                            >\r\n                                                    <span className='fa fa-trash'\r\n                                                        style={{color: 'red'}}\r\n                                                    ></span>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                                    \r\n                            </tbody>\r\n                        </table>\r\n                       \r\n                        <Button\r\n                            className='m-3'\r\n                            variant='contained'\r\n                            onClick={e =>handleSubmit(e)}\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >submit</Button>\r\n                        </Container>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BillFeed\r\n","import { Button, FormControl, Select, TextField, Typography } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectToken } from '../../appState/appSlice'\r\nimport AppSnackbar from '../global/AppSnackbar'\r\n\r\nconst AccountCreationForm = ({ open, setOpen }) => {\r\n    const token = useSelector(selectToken)\r\n    const [success, setSuccess] = useState()\r\n    const [snackbar, setSnackbar] = useState(false)\r\n    const [Error, setError] = useState('')\r\n    const [accData, setAccdata] = useState({\r\n        name: '',\r\n        code: '',\r\n        active: '',\r\n        locked: '',\r\n        acc_type: '',\r\n        balance_type: ''\r\n\r\n    })\r\n    // func\r\n    const handleChange = e =>{\r\n        const value = e.target.value;\r\n        const name = e.target.name;\r\n        setAccdata({\r\n            ...accData,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handle_Post = e =>{\r\n        e.preventDefault()\r\n\r\n        if(!accData.name.trim().length>3 || \r\n        !accData.acc_type.trim().length>0){\r\n            setTimeout(() =>{\r\n                setError('')\r\n            },5000)\r\n            return setError('Invalid Form')\r\n        }\r\n        setOpen(!open)\r\n\r\n        axios.post('/account', accData,{\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            if(result.status ==201){\r\n                setAccdata({\r\n                    name: '',\r\n                    code: '',\r\n                    active: '',\r\n                    locked: '',\r\n                    acc_type: '',\r\n                    balance_type: ''\r\n                })\r\n                setError('')\r\n                setOpen(false)\r\n                setSuccess(result.data.message)\r\n                return setSnackbar(true)\r\n            }\r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            if(error){\r\n                setError(error.response.statusText)\r\n                console.log(error.response.statusText)\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        \r\n            <div class=\"form__container\">\r\n                <AppSnackbar open={snackbar} setOpen={setSnackbar} message={success} />\r\n                <form action=\"\" method=\"post\" className='p-3'>\r\n                    <TextField\r\n                        name='name'\r\n                        label='Name'\r\n                        size='small'\r\n                        fullWidth\r\n                        required\r\n                        variant='outlined'\r\n                        value={accData.name}\r\n                        placeholder='Full name'\r\n                        onChange={e =>handleChange(e)}\r\n\r\n                    />\r\n                     <TextField \r\n                        name='code'\r\n                        label='code'\r\n                        className='mt-2'\r\n                        size='small'\r\n                        fullWidth\r\n                        variant='outlined'\r\n                        value={accData.code}\r\n                        onChange={e =>handleChange(e)}\r\n                    />\r\n     \r\n                    <Select \r\n                        fullWidth\r\n                        name='acc_type'\r\n                        className='mt-2'\r\n                        value={accData.acc_type}\r\n                        onChange={e =>handleChange(e)}\r\n                        variant='outlined' size='small' label='Type'\r\n                        native defaultValue=\"\" id=\"grouped-native-select\"\r\n                        style={{height: '40px'}}\r\n                    >\r\n                    <option aria-label=\"None\" value=\"\">Select</option>\r\n                    <optgroup label=\"Assets\">\r\n                        <option value=\"asset_ca_cash\">Current Asset</option>\r\n                        <option value=\"asset_ca_mkt_sec\">Marketable Securities</option>\r\n                        <option value=\"asset_ca_recv\">Receivables</option>\r\n                        <option value=\"asset_ca_inv\">Inventory</option>\r\n                        <option value=\"asset_ca_uncoll\">Uncollectibles</option>\r\n                        <option value=\"asset_ca_prepaid\">Prepaid</option>\r\n                        <option value=\"asset_ca_other\">Other Liquid Assets</option>\r\n                        <option value=\"asset_lti_notes\">Notes Receivable</option>\r\n                        <option value=\"asset_lti_land\">Land</option>\r\n                        <option value=\"asset_lti_sec\">Securities</option>\r\n                        <option value=\"asset_ppe\">Property Plant &amp; Equipment</option>\r\n                        <option value=\"asset_ia\">Intangible Assets</option>\r\n                        <option value=\"asset_adjustment\">Other Assets</option>\r\n                    </optgroup>\r\n\r\n                    <optgroup label=\"Liabilities\">\r\n                        <option value=\"lia_cl_acc_pay\">Accounts Payable</option>\r\n                        <option value=\"lia_cl_wage_pay\">Wages Payable</option>\r\n                        <option value=\"lia_cl_wage_pay\">Interest Payable</option>\r\n                        <option value=\"lia_cl_st_notes_payable\">Notes Payable</option>\r\n                        <option value=\"lia_cl_ltd_mat\">Current Maturities of Long Tern Debt</option>\r\n                        <option value=\"lia_cl_def_rev\">Deferred Revenue</option>\r\n                        <option value=\"lia_cl_other\">Other Liabilities</option>\r\n                        <option value=\"lia_ltl_notes\">Notes Payable</option>\r\n                        <option value=\"lia_ltl_bonds\">Bonds Payable</option>\r\n                        <option value=\"lia_ltl_mortgage\">Mortgage Payable</option>\r\n                    </optgroup>\r\n                    <optgroup label=\"Equity\">\r\n                        <option value=\"eq_capital\">Capital</option>\r\n                        <option value=\"eq_stock_c\">Common Stock</option>\r\n                        <option value=\"eq_stock_p\">Preferred Stock</option>\r\n                        <option value=\"eq_adjustment\">Other Equity Adjustments</option>\r\n                        <option value=\"in_sales\">Sales Income</option>\r\n                        <option value=\"in_pass\">Passive Income</option>\r\n                        <option value=\"in_other\">Other Income</option>\r\n                        <option value=\"ex_cogs\">Cost of Goods Sold</option>\r\n                        <option value=\"ex_op\">Operational Expense</option>\r\n                        <option value=\"ex_interest\">Interest Expense</option>\r\n                        <option value=\"ex_taxes\">Tax Expense</option>\r\n                        <option value=\"ex_cap\">Capital Expense</option>\r\n                        <option value=\"ex_other\">Other Expense</option>\r\n                    </optgroup>\r\n                    </Select>\r\n                    <Select \r\n                        fullWidth\r\n                        className='mt-2'\r\n                        name='balance_type'\r\n                        style={{height: '40px'}}\r\n                        value={accData.balance_type}\r\n                        onChange={e =>handleChange(e)}\r\n                        variant='outlined' size='small' label='Type'\r\n                        native defaultValue=\"\" id=\"grouped-native-select\"\r\n                    >\r\n                        <option value=''>Select</option>\r\n                        <option value='CR'>Credit</option>\r\n                        <option value='DR'>Debit</option>\r\n                    </Select>\r\n                    <Select \r\n                        fullWidth\r\n                        name='active'\r\n                        className='mt-2'\r\n                        value={accData.active}\r\n                        onChange={e =>handleChange(e)}\r\n                        variant='outlined' size='small' label='Type'\r\n                        native defaultValue=\"\" id=\"grouped-native-select\"\r\n                        style={{height: '40px'}}\r\n                    >\r\n                        <option value=''>Active</option>\r\n                        <option value={0}>Yes</option>\r\n                        <option value={1}>No</option>\r\n                    </Select>\r\n                    <Select \r\n                        fullWidth\r\n                        name='locked'\r\n                        className='mt-2'\r\n                        value={accData.locked}\r\n                        onChange={e =>handleChange(e)}\r\n                        variant='outlined' size='small' label='Lock'\r\n                        native defaultValue=\"\"\r\n                        style={{height: '40px'}}\r\n                    >\r\n                        <option value=''>Locked</option>\r\n                        <option value={1}>Yes</option>\r\n                        <option value={0}>No</option>\r\n                    </Select>\r\n                    <FormControl className='mt-2'>\r\n                        {\r\n                            Error&&\r\n                            <Typography variant='caption' color='error'>\r\n                                {Error}\r\n                            </Typography>\r\n                        }\r\n                        <Button type='submit' \r\n                            variant='contained' \r\n                            color='default'\r\n                            onClick={e =>handle_Post(e)}\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </FormControl>\r\n                </form>\r\n            </div>\r\n         \r\n    )\r\n}\r\n\r\nexport default AccountCreationForm\r\n","import { IconButton, Typography } from '@material-ui/core'\r\nimport { Close, } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst AppWidgetHeader = ({ title, isWidget, setIswidget }) => {\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <div className='app__HeaderContainer'>\r\n            <div className='app__HeaderLeft'>\r\n                <IconButton\r\n                    onClick={() =>setIswidget(!isWidget)}\r\n                >\r\n                    <Close />\r\n                </IconButton>\r\n            </div>\r\n            <aside className='app__HeaderRight'>\r\n                <Typography variant='subtitle1' className='mr-2'>\r\n                    {title}\r\n                </Typography>\r\n            </aside>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppWidgetHeader\r\n","import { Paper } from '@material-ui/core'\r\nimport React from 'react'\r\nimport AccountCreationForm from './form/AccountCreationForm'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst BillWidget = ({ open, setOpen, isWidget, setIswidget }) => {\r\n    return (\r\n        <div className='app__Widget'>\r\n            <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Bill List' \r\n            />\r\n            <section className='app__WidgetContainer'>\r\n                {/* <AccountCreationForm\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                /> */}\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BillWidget\r\n","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { selectToken, selectUser, selectVendors } from '../../appState/appSlice';\r\nimport { Button, IconButton, Select, TextField, Typography } from '@material-ui/core';\r\nimport { MDBBtn, MDBContainer, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader } from 'mdbreact'\r\nimport { Close } from '@material-ui/icons';\r\nimport axios from 'axios';\r\nimport AppBackdrop from './AppBackDrop';\r\nimport AppSnackbar from './AppSnackbar';\r\n\r\nconst AddBillCategories = ({  open, setOpen }) => {\r\n    const vendors = useSelector(selectVendors)\r\n    const [body, setBody] = useState()\r\n    const [Error, setError] = useState()\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const token = useSelector(selectToken)\r\n    const [success, setSuccess] = useState(false)\r\n    const [message, setMessage] = useState()\r\n    const billCategoryFormTemplate = {name:'',  vendor_FK: '',  createdBy_FK: '', createdAt: ''  };\r\n    const [billCategoryForm, setBillCategoryform] = useState([billCategoryFormTemplate])\r\n    const user = useSelector(selectUser)\r\n    const createdAt = new Date().toLocaleDateString()\r\n    // func\r\n    const handleChange = (e, index) =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n        const upbillCategoryform =  billCategoryForm.map((jef, i) => index == i ?\r\n        Object.assign(jef, {[name]: value, 'createdBy_FK': user.id, 'createdAt': createdAt  }): jef);\r\n        setBillCategoryform(upbillCategoryform)\r\n    }\r\n\r\n    const addBillCategoryFrom = () =>{\r\n        setBillCategoryform([\r\n            ...billCategoryForm,\r\n            billCategoryFormTemplate\r\n        ])\r\n    }\r\n\r\n    const handleRemoveform = (index) =>{\r\n        const filterbillCategoryform = [...billCategoryForm];\r\n        filterbillCategoryform.splice(index, 1);\r\n        \r\n        setBillCategoryform(filterbillCategoryform)\r\n    }\r\n\r\n    // handleSubmit\r\n    const handleSubmit =e=>{\r\n        e.preventDefault()\r\n        setIsOpen(true)\r\n        \r\n        axios.post('/bill/category', body, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setIsOpen(false)\r\n            setOpen(false)\r\n            setBillCategoryform([billCategoryFormTemplate])\r\n            setMessage(result.statusText)\r\n            setSuccess(true)\r\n\r\n        })\r\n        .catch(error =>{\r\n            setTimeout(() =>{\r\n                setError('')\r\n            }, 5000)\r\n            setIsOpen(false)\r\n           if(error) {\r\n              if(error.response.status ==500){\r\n                return  setError('Fields required')\r\n              }\r\n               return  setError(error.response.statusText)\r\n           }\r\n        })\r\n        \r\n    }\r\n\r\n       \r\n    useEffect(() =>{\r\n        \r\n        const fdata = billCategoryForm.map(x =>Object.values(x))\r\n        const findal =[]\r\n        // const data = fdata\r\n        for(let i =0; i< fdata.length; i++){\r\n            const element = fdata[i]\r\n            findal.push(element)\r\n        }\r\n        \r\n        return setBody(findal)\r\n    }, [billCategoryForm])\r\n   \r\n    return (\r\n        <div>\r\n            <AppBackdrop open={isOpen} setOpen={setIsOpen} />\r\n            <AppSnackbar open={success} \r\n                setOpen={setSuccess}\r\n                message={message}\r\n            />\r\n            <MDBModal isOpen={open} centered backdrop={false}>\r\n                <MDBModalHeader>Add Bill Category</MDBModalHeader>\r\n                <MDBModalBody>\r\n                    <table className='table table-hover'>\r\n                      <thead>\r\n                          <th>#</th>\r\n                          <th></th>\r\n                          <th>Name</th>\r\n                          <th>Vendor/Supplier</th>\r\n                          <th></th>\r\n                      </thead>\r\n                      <tbody>\r\n                          {\r\n                              billCategoryForm&&\r\n                              billCategoryForm.map((form, index) =>{\r\n                                  return(\r\n                                      <tr key={index}>\r\n                                        <td> {index+1} </td>\r\n                                        <td\r\n                                            onClick={() =>addBillCategoryFrom()}\r\n                                        >\r\n                                            <span className='fa fa-plus-circle' />\r\n                                        </td>\r\n                                        <td>\r\n                                            <TextField\r\n                                                size='small'\r\n                                                name='name'\r\n                                                label='Name'\r\n                                                required\r\n                                                value={form.name}\r\n                                                variant='outlined'\r\n                                                placeholder='Bill Name'\r\n                                                onChange={e =>handleChange(e, index)}\r\n                                            />\r\n                                        </td>\r\n                                        <td>\r\n                                        <Select\r\n                                            variant='outlined'\r\n                                            name='vendor_FK'\r\n                                            value={form.vendor_FK}\r\n                                            style={{height: '40px', width: '100%'}}\r\n                                            onChange={e =>handleChange(e, index)}\r\n                                        >\r\n                                            <option>Select</option>\r\n                                            <option value={0}>Basic</option>\r\n                                            {\r\n                                                vendors&&\r\n                                                vendors.map((vendor, i) =>{\r\n                                                    const {id, vendor_name} = vendor\r\n                                                    return <option key={i} value={id}> {vendor_name} </option>\r\n                                                })\r\n                                            }\r\n                                        </Select>\r\n                                        </td>\r\n                                        <td \r\n                                            onClick={() =>handleRemoveform(index)}\r\n                                        >\r\n                                            <span className='fa fa-trash' \r\n                                                style={{color: 'red'}}\r\n                                            />\r\n                                        </td>\r\n                                      </tr>\r\n                                  )\r\n                              })\r\n                          }\r\n                      </tbody>\r\n                  </table>\r\n                </MDBModalBody>\r\n                <MDBModalFooter>\r\n                    {\r\n                        Error&&\r\n                        <Typography \r\n                            className='mr-5'\r\n                            variant='h6' color='error'>\r\n                            {Error}\r\n                        </Typography>\r\n                    }\r\n                    <Button\r\n                        variant='contained'\r\n                        onClick={e =>handleSubmit(e)}\r\n                        style={{background: '#2A3F54', \r\n                        color: 'white', marginRight: '25px'}}\r\n                        disabled={Error}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <IconButton color='secondary'\r\n                        onClick={() =>setOpen(!open)}\r\n                    >\r\n                        <Close color='action' />\r\n                    </IconButton>\r\n                </MDBModalFooter>\r\n            </MDBModal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddBillCategories\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setBillCategories, setUser, setVendors} from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport BillFeed from '../components/BillFeed'\r\nimport BillWidget from '../components/BillWidget'\r\nimport AddBillCategories from '../components/global/AddBillCategories'\r\n\r\nconst BillScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n// func\r\n    const getVendors = () =>{\r\n        axios.get('/vendor', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(vendor =>{\r\n            dispatch(setVendors(vendor.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_BillCategories = () =>{\r\n        axios.get('/bill/category', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(category =>{\r\n            dispatch(setBillCategories(category.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Active_User = () =>{\r\n        axios.get('/auth/active', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        getVendors()\r\n        get_Active_User()\r\n        get_Session()\r\n    }, [])\r\n    useEffect(() =>{\r\n        return get_BillCategories()\r\n    }, [isOpen])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <AddBillCategories open={isOpen} setOpen={setIsOpen} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <BillFeed\r\n                setOpen={setOpen}\r\n                isOpen={isOpen}\r\n                setIsOpen={setIsOpen}\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <BillWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BillScreen\r\n","import React from 'react'\r\nimport { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst AccountList = ({ index, code, name, balance_type, active, locked }) => {\r\n    return (\r\n        <Fragment>\r\n            <tr>\r\n                <td>{index+1} </td>\r\n                <td> {code} </td>\r\n                <td> {name} </td>\r\n                <td>\r\n                    {\r\n                        active ==0?\r\n                        <span className=\"fa fa-check-circle fa-1x\"></span>\r\n                        :\r\n                        <span></span>\r\n                    }\r\n                </td>\r\n                <td>\r\n                    {\r\n                        locked ==1?\r\n                        <span className=\"fa fa-lock fa-1x\" style={{color: 'red'}}></span>\r\n                    :\r\n                        <span className=\"fa fa-unlock-alt fa-1x\" style={{color: '#1ABB9C'}}></span>\r\n                    }\r\n                </td>\r\n                <td id=\"btn\"  className='p-2'>\r\n                    <button>Actions</button>\r\n                    <div className=\"btn__poper\">\r\n                        <Link to={`/coa/${name}/${code}`} rel=\"noopener noreferrer\">View register</Link>\r\n                        <Link to='#' rel=\"noopener noreferrer\">Update</Link>\r\n                    </div>\r\n                </td>                       \r\n            </tr>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AccountList\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport AppHeader from './global/AppHeader'\r\nimport { Container, IconButton, Paper } from '@material-ui/core'\r\nimport './coaFeed.css'\r\nimport { PlusOne } from '@material-ui/icons'\r\nimport { selectAssetAccount, selectEquityAccount, selectLiabilityAccount } from '../appState/appSlice'\r\nimport AccountList from './global/AccountList'\r\nconst CoaFeed = ({ isWidget, setIswidget }) => {\r\n    const assets = useSelector(selectAssetAccount)\r\n    const equitys = useSelector(selectEquityAccount)\r\n    const liabilitys = useSelector(selectLiabilityAccount)\r\n    return (\r\n        <div className={`${isWidget? 'isapp__Feed': 'app__Feed'}`}>\r\n           <AppHeader title='Chart Of Account' />\r\n          \r\n            <div className=\"row align-items-center justify-content-center d-flex m-1\" >\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                    {/* table */}\r\n                    <h3>Asset Accounts <span> \r\n                        <IconButton color='secondary'\r\n                            onClick={() =>setIswidget(!isWidget)}\r\n                        >\r\n                        <PlusOne style={{ color: '#1ABB9C'}} />\r\n                        </IconButton></span></h3> \r\n                    <Paper>\r\n                        <Container className='p-3'>\r\n                        <table className=\"table-small table-hover table-bordered\" style={{width: '100%'}}>\r\n                            <thead>\r\n                                <th>#</th>\r\n                                <th>Code</th>\r\n                                <th>Account Name</th>\r\n                                <th>Active</th>\r\n                                <th>Lock</th>\r\n                                <th>Actions</th>\r\n                            </thead>\r\n                            <tbody>\r\n                                \r\n                                {\r\n                                    assets&&\r\n                                    assets.map((asset, index) =>{\r\n                                        return <AccountList \r\n                                            index={index}\r\n                                            {...asset}\r\n                                        />\r\n                                    })\r\n\r\n                                }\r\n                                    \r\n                            </tbody>\r\n                        </table>\r\n                        { assets&& !assets.length>0&&\r\n                            <div className=\"alert alert-warning\">\r\n                            <h6>No Asset Accounts Availabe</h6>\r\n                            </div>\r\n                        }\r\n                        </Container>\r\n                    </Paper>\r\n                    {/* liability */}\r\n                    <h3 className='p-2'>Liability Accounts </h3> \r\n                    <Paper>\r\n                        <Container className='p-3'>\r\n                        <table className=\"table-small table-hover table-bordered\" style={{width: '100%'}}>\r\n                            <thead>\r\n                                <th>#</th>\r\n                                <th>Code</th>\r\n                                <th>Account Name</th>\r\n                                <th>Active</th>\r\n                                <th>Lock</th>\r\n                                <th>Actions</th>\r\n                            </thead>\r\n                            <tbody>\r\n                                \r\n                                {\r\n                                    liabilitys&&\r\n                                    liabilitys.map((liability, index) =>{\r\n                                        return <AccountList \r\n                                            index={index}\r\n                                            {...liability}\r\n                                        />\r\n                                    })\r\n\r\n                                }\r\n                                    \r\n                            </tbody>\r\n                        </table>\r\n                        {\r\n                           liabilitys&& !liabilitys.length>0&&\r\n                            <div className=\"alert alert-warning\">\r\n                            <h6>No Liability Accounts Availabe</h6>\r\n                        </div>\r\n                        }\r\n                        </Container>\r\n                    </Paper>\r\n                    {/* Equity */}\r\n                    <h3 className='p-2'>Expense Accounts <span> \r\n                        <IconButton color='secondary'\r\n                            onClick={() =>setIswidget(!isWidget)}\r\n                        >\r\n                        <PlusOne style={{ color: '#1ABB9C'}} />\r\n                        </IconButton></span></h3> \r\n                    <Paper>\r\n                        <Container className='p-3'>\r\n                        <table className=\"table-small table-hover table-bordered\" style={{width: '100%'}}>\r\n                            <thead>\r\n                                <th>#</th>\r\n                                <th>Code</th>\r\n                                <th>Account Name</th>\r\n                                <th>Active</th>\r\n                                <th>Lock</th>\r\n                                <th>Actions</th>\r\n                            </thead>\r\n                            <tbody>\r\n                                \r\n                                {\r\n                                    equitys&&\r\n                                    equitys.map((equity, index) =>{\r\n                                        return <AccountList \r\n                                            index={index}\r\n                                            {...equity}\r\n                                        />\r\n                                    })\r\n\r\n                                }\r\n                                    \r\n                            </tbody>\r\n                        </table>\r\n                        {\r\n                            equitys&&!equitys.length >0&&\r\n                            <div className=\"alert alert-warning\">\r\n                            <h6>No Liability Accounts Availabe</h6>\r\n                        </div>\r\n                        }\r\n                        </Container>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoaFeed\r\n","import { Paper } from '@material-ui/core'\r\nimport React from 'react'\r\nimport AccountCreationForm from './form/AccountCreationForm'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst CoaWidget = ({ open, setOpen, isWidget, setIswidget }) => {\r\n    return (\r\n        <div className='app__Widget'>\r\n            <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Create Account' \r\n            />\r\n            <section className='app__WidgetContainer'>\r\n                <AccountCreationForm\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                />\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoaWidget\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setAssetAccount, setEquityAccount, setLiabilityAccount, setUser } from '../appState/appSlice'\r\nimport CoaFeed from '../components/CoaFeed'\r\nimport CoaWidget from '../components/CoaWidget'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\n\r\nconst CoaScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n\r\n\r\n    // func\r\n    const getAsset = () =>{\r\n        axios.get('/account/asset', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(asset =>{\r\n            dispatch(setAssetAccount(asset.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    const getLiability = () =>{\r\n        axios.get('/account/liability', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(liability =>{\r\n            dispatch(setLiabilityAccount(liability.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    const getEquity = () =>{\r\n        axios.get('/account/equity', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(equity =>{\r\n            dispatch(setEquityAccount(equity.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n\r\n\r\n    useEffect(() =>{\r\n        getAsset()\r\n        getEquity()\r\n        getLiability()\r\n        get_Session()\r\n    },[open])\r\n\r\n    useEffect(() =>{\r\n        if(!token) {\r\n            return history.push('/')\r\n        }\r\n    }, [])\r\n    \r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <CoaFeed\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <CoaWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoaScreen\r\n","import { Container, IconButton, Paper } from '@material-ui/core'\r\nimport { PlusOne } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectCustomers } from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\nimport CustomerList from './global/CustomerList'\r\n\r\nconst CustomerFeed = ({ open, setOpen, \r\n    isWidget, setIswidget, mandate, setMandate\r\n}) => {\r\n    const customers = useSelector(selectCustomers)\r\n    return (\r\n        <div className={`${isWidget? 'isapp__Feed': 'app__Feed'}`}>\r\n           <AppHeader title='Customers' />\r\n           <div className=\"row align-items-center justify-content-center d-flex m-1\" >\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                    {/* table */}\r\n                    <h3>Customer List <span> \r\n                        <IconButton color='secondary'\r\n                            onClick={() =>setIswidget(!isWidget)}\r\n                        >\r\n                        <PlusOne style={{ color: '#1ABB9C'}} />\r\n                        </IconButton></span></h3> \r\n                    <Paper>\r\n                        <Container className='p-3'>\r\n                        <table className=\"table-small table-hover table-bordered\" style={{width: '100%'}}>\r\n                            <thead>\r\n                                <th>#</th>\r\n                                <th>Name</th>\r\n                                <th>Contact</th>\r\n                                <th>Email</th>\r\n                                <th>Code</th>\r\n                                <th>Photo</th>\r\n                                <th>Active</th>\r\n                                <th>Lock</th>\r\n                                {!isWidget&&<th>Actions</th>}\r\n                            </thead>\r\n                            <tbody>\r\n                                \r\n                                {\r\n                                   customers&&\r\n                                   customers.map((customer, index) =>{\r\n                                        return <CustomerList\r\n                                            index={index}\r\n                                            {...customer}\r\n                                            isWidget={isWidget}\r\n                                            open={open}\r\n                                            setOpen={setOpen}\r\n                                            mandate={mandate}\r\n                                            setMandate={setMandate}\r\n                                        />\r\n                                    })\r\n\r\n                                }\r\n                                    \r\n                            </tbody>\r\n                        </table>\r\n                        {customers&& !customers.length>0&&\r\n                            <div className=\"alert alert-warning\">\r\n                            <h6>No Customer Availabe</h6>\r\n                            </div>\r\n                        }\r\n                        </Container>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerFeed\r\n","import { Button, FormGroup, FormLabel, Grid, Select, TextField, Typography } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectAllStaffs, selectToken } from '../../appState/appSlice'\r\n\r\nconst CustomerCreationForm = ({ open, setOpen}) => {\r\n    const token = useSelector(selectToken)\r\n    const [Error, setError] = useState()\r\n    const RMS = useSelector(selectAllStaffs)\r\n    const [cusData, setCusdata] = useState({\r\n        rm:'',\r\n        country: '',\r\n        phone_no: '',\r\n        address_1: '',\r\n        occupation: '',\r\n        place_work: '',\r\n        next_kin_name: '',\r\n        customer_sex: '',\r\n        customer_name: '',\r\n        customer_email: '',\r\n        customer_state: '',\r\n        postal_address: '',\r\n        customer_marital: '',\r\n        customer_address: '',\r\n        next_kin_addrss: '',\r\n        next_kin_relate: '',\r\n        business_employer_name: '',\r\n    })\r\n    // func\r\n    const handleChange = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n\r\n        setCusdata({\r\n            ...cusData,\r\n            [name]: value\r\n        })\r\n    }\r\n    const handle_Create_Customer =e =>{\r\n        e. preventDefault()\r\n        if(Error){\r\n            return Error\r\n        }\r\n        setOpen(true)\r\n        axios.post('/customer', cusData, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setOpen(false)\r\n            setCusdata({\r\n                rm: '',\r\n                country: '',\r\n                phone_no: '',\r\n                address_1: '',\r\n                occupation: '',\r\n                place_work: '',\r\n                next_kin_name: '',\r\n                customer_sex: '',\r\n                customer_name: '',\r\n                customer_email: '',\r\n                customer_state: '',\r\n                postal_address: '',\r\n                customer_marital: '',\r\n                customer_address: '',\r\n                next_kin_addrss: '',\r\n                next_kin_relate: '',\r\n                business_employer_name: '',\r\n            \r\n            })\r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            if(error){\r\n                return setError(error.response.statusText)\r\n            }\r\n        })\r\n    }\r\n    useEffect(() =>{\r\n        Object.keys(cusData).map(key =>{\r\n            if(cusData[key].length <=0){\r\n                return setError('Form not valid')\r\n              \r\n            }\r\n            setError('')\r\n        })\r\n        \r\n    },[cusData])\r\n    return (\r\n        <Fragment>\r\n            <form className='mt-3 pl-2 pr-2'>\r\n                <Grid container spacing={1}>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Name'\r\n                                size='small'\r\n                                required\r\n                                variant='outlined'\r\n                                name='customer_name'\r\n                                placeholder='Full Name'\r\n                                value={cusData.customer_name}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Contact'\r\n                                size='small'\r\n                                required\r\n                                variant='outlined'\r\n                                name='phone_no'\r\n                                placeholder='Phone Number'\r\n                                value={cusData.phone_no}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Eamil'\r\n                                size='small'\r\n                                required\r\n                                variant='outlined'\r\n                                name='customer_email'\r\n                                placeholder='Email Address'\r\n                                value={cusData.customer_email}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                required\r\n                                label='Address'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='address_1'\r\n                                placeholder='Residential Address'\r\n                                value={cusData.address_1}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormLabel>Gender</FormLabel>\r\n                        <FormGroup>\r\n                            <Select style={{height: '40px'}}\r\n                                label='Sex'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='customer_sex'\r\n                                value={cusData.customer_sex}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value>Select</option>\r\n                                <option value='Male'>Male</option>\r\n                                <option value='Female'>Female</option>\r\n                            </Select>\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6}>\r\n                    <FormLabel>Marital Status</FormLabel>\r\n                        <FormGroup>\r\n                            <Select style={{height: '40px'}}\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='customer_marital'\r\n                                value={cusData.customer_marital}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value>Select</option>\r\n                                <option value='Single'>Single</option>\r\n                                <option value='Married'>Married</option>\r\n                                <option value='Widow'>Widow</option>\r\n                                <option value='Divorce'>Divorce</option>\r\n                            </Select>\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormLabel>Nationality</FormLabel>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='country'\r\n                                placeholder='Country'\r\n                                value={cusData.country}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormLabel>State of origin?</FormLabel>\r\n                        <FormGroup>\r\n                            <Select style={{height: '40px'}}\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='customer_state'\r\n                                value={cusData.customer_state}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value=\"Abia\">Abia</option>\r\n                                <option value=\"Adamawa\">Adamawa</option>\r\n                                <option value=\"Akwa Ibom\">Akwa Ibom</option>\r\n                                <option value=\"Anambra\">Anambra</option>\r\n                                <option value=\"Bauchi\">Bauchi</option>\r\n                                <option value=\"Bayelsa\">Bayelsa</option>\r\n                                <option value=\"Benue\">Benue</option>\r\n                                <option value=\"Borno\">Borno</option>\r\n                                <option value=\"Cross Rive\">Cross River</option>\r\n                                <option value=\"Delta\">Delta</option>\r\n                                <option value=\"Ebonyi\">Ebonyi</option>\r\n                                <option value=\"Edo\">Edo</option>\r\n                                <option value=\"Ekiti\">Ekiti</option>\r\n                                <option value=\"Enugu\">Enugu</option>\r\n                                <option value=\"FCT\">Federal Capital Territory</option>\r\n                                <option value=\"Gombe\">Gombe</option>\r\n                                <option value=\"Imo\">Imo</option>\r\n                                <option value=\"Jigawa\">Jigawa</option>\r\n                                <option value=\"Kaduna\">Kaduna</option>\r\n                                <option value=\"Kano\">Kano</option>\r\n                                <option value=\"Katsina\">Katsina</option>\r\n                                <option value=\"Kebbi\">Kebbi</option>\r\n                                <option value=\"Kogi\">Kogi</option>\r\n                                <option value=\"Kwara\">Kwara</option>\r\n                                <option value=\"Lagos\">Lagos</option>\r\n                                <option value=\"Nasarawa\">Nasarawa</option>\r\n                                <option value=\"Niger\">Niger</option>\r\n                                <option value=\"Ogun\">Ogun</option>\r\n                                <option value=\"Ondo\">Ondo</option>\r\n                                <option value=\"Osun\">Osun</option>\r\n                                <option value=\"Oyo\">Oyo</option>\r\n                                <option value=\"Plateau\">Plateau</option>\r\n                                <option value=\"Rivers\">Rivers</option>\r\n                                <option value=\"Sokoto\">Sokoto</option>\r\n                                <option value=\"Taraba\">Taraba</option>\r\n                                <option value=\"Yobe\">Yobe</option>\r\n                                <option value=\"Zamfara\">Zamfara</option>\r\n                            </Select>\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={12} md={12}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Home Address'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='customer_address'\r\n                                value={cusData.customer_address}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={12} md={12}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Postal Address'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='postal_address'\r\n                                value={cusData.postal_address}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Occupation'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='occupation'\r\n                                value={cusData.occupation}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Place of work'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='place_work'\r\n                                value={cusData.place_work}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={12} md={12}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label={`Business/Employer's Name`}\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='business_employer_name'\r\n                                value={cusData.business_employer_name}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={ 12} md={  12}>\r\n                        <FormLabel>Relationship Mannger (RM)</FormLabel>\r\n                        <FormGroup>\r\n                            <Select style={{height: '40px'}}\r\n                                label='RM'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='rm'\r\n                                value={cusData.rm}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value>Select</option>\r\n                                {\r\n                                    RMS &&\r\n                                    RMS.map((rm, index) =>{\r\n                                        const {id, first_name, last_name} = rm\r\n                                        return (\r\n                                            <option key={index} value={id}> {`${first_name} ${last_name}`} </option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={12} md={12}>\r\n                        <Typography variant='h6'>\r\n                            Next of Kin Details\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Name'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='next_kin_name'\r\n                                value={cusData.next_kin_name}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Address'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='next_kin_addrss'\r\n                                value={cusData.next_kin_addrss}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={12} md={12}>\r\n                        <FormLabel>Relationship</FormLabel>\r\n                        <FormGroup>\r\n                            <Select style={{height: '40px'}}\r\n                                label='Relationship'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='next_kin_relate'\r\n                                value={cusData.next_kin_relate}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value>Related ?</option>\r\n                                <option value='Son'>Son</option>\r\n                                <option value='Sister'>Sister</option>\r\n                                <option value='Brother'>Brother</option>\r\n                                <option value='Aunt'>Aunt</option>\r\n                                <option value='Uncle'>Uncle</option>\r\n                                <option value='Wife'>Wife</option>\r\n                                <option value='Husband'>Husband</option>\r\n                                <option value='Daughter'>Daughter</option>\r\n                                <option value='Father'>Father</option>\r\n                                <option value='Mother'>Mother</option>\r\n                                \r\n                            </Select>\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={12} md={12}>\r\n                        {/* {\r\n                            Error&&\r\n                            <Typography variant='caption' color='error'>\r\n                                {Error}\r\n                            </Typography>\r\n                        } */}\r\n                        <Button\r\n                            disabled={Error}\r\n                            className='mb-4'\r\n                            onClick={e =>handle_Create_Customer(e)}\r\n                            color='default' variant='contained'\r\n                            style={{ color: 'white', background: '#2A3F54', width: '100%'}}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CustomerCreationForm\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport CustomerCreationForm from './form/CustomerCreationForm'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst CustomerWidget = ({ open, setOpen, isWidget, setIswidget }) => {\r\n    return (\r\n        <div className='app__Widget'>\r\n            <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Create Customer' \r\n            />\r\n           \r\n                <CustomerCreationForm\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                />\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerWidget\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setAllStaffs, setCustomers, setUser } from '../appState/appSlice'\r\nimport CustomerFeed from '../components/CustomerFeed'\r\nimport CustomerWidget from '../components/CustomerWidget'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport Mandate from '../components/Mandate'\r\n\r\nconst CustomerScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n    const [mandate, setMandate] = useState(false)\r\n    // func\r\n    const getCustomers = () =>{\r\n        axios.get('/customer', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(asset =>{\r\n            dispatch(setCustomers(asset.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    const get_Staffs = () =>{\r\n        axios.get(`/auth`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(staffs =>{\r\n            dispatch(setAllStaffs(staffs.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        getCustomers()\r\n        get_Session()\r\n        get_Staffs()\r\n    },[open])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <Mandate \r\n                open={open} \r\n                setOpen={setOpen}\r\n                mandate={mandate}\r\n                setMandate={setMandate}\r\n                url={mandate && `/customer/avatar/${mandate.split(' ')[0]}`}\r\n            />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <CustomerFeed\r\n                open={open}\r\n                setOpen={setOpen}\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                mandate={mandate}\r\n                setMandate={setMandate}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <CustomerWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerScreen\r\n","import { Button, Container, FormLabel, Grid, IconButton, Paper, Select, TextField, Typography } from '@material-ui/core'\r\nimport { Delete, FileCopy, PlusOne, PlusOneOutlined, PlusOneRounded } from '@material-ui/icons'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectPropServices, selectCustomers, selectToken } from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\nimport AppSnackbar from './global/AppSnackbar'\r\n\r\nconst EstimateFeed = ({ setOpen, isWidget, setIswidget }) => {\r\n    const token = useSelector(selectToken)\r\n    const [success, setSuccess] = useState(false)\r\n    const [message, setMessage] = useState()\r\n    const pss = useSelector(selectPropServices)\r\n    const customers = useSelector(selectCustomers)\r\n    const estimateFormTemplate = {pro_service:'', description: '', qty: ''};\r\n    const [estimateForm, setEstimateform] = useState([estimateFormTemplate])\r\n    const [data, setData ] = useState({\r\n        customer_FK: '', \r\n        estimate_date: '',\r\n        exp_date: '', \r\n        total: '',\r\n        status: '',\r\n        VALUES: '',\r\n        uuid:''\r\n    })\r\n   \r\n    // func\r\n    const handleSetPostData = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n    } \r\n    // func\r\n    const addEstimateFrom = () =>{\r\n        setEstimateform([\r\n            ...estimateForm,\r\n            estimateFormTemplate\r\n        ])\r\n    }\r\n    const handleChange = (e, index) =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n\r\n        const updatedestimateform = estimateForm.map((jef, i) => index == i ?\r\n        Object.assign(jef, {[name]: value, 'estimate_ID': data.uuid, 'createdAt': data.estimate_date }): jef);\r\n        setEstimateform(updatedestimateform)\r\n\r\n        if(name =='qty') {\r\n            const updatedestimateform = estimateForm.map((jef, i) => index == i ?\r\n            Object.assign(jef, {'amount': value * jef.rate }): jef);\r\n        }\r\n      \r\n        if(name =='pro_service') {\r\n            const selectedPS = pss.filter(ps => ps.id ==parseInt(value))\r\n            // console.log(selectedPS[0].description)\r\n            const updatedestimateform = estimateForm.map((jef, i) => index == i ?\r\n            Object.assign(jef, {'description': selectedPS[0].description, 'rate': +selectedPS[0].sale_price }): jef);\r\n        }\r\n    }\r\n    const handleRemoveestimateform = (index) =>{\r\n        const filterestimateform = [...estimateForm];\r\n        filterestimateform.splice(index, 1);\r\n        \r\n        setEstimateform(filterestimateform)\r\n    }\r\n    // func\r\n    const calcuAmt = (data) =>{\r\n       \r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n// handle submit\r\n    const handleSubmit = e =>{\r\n        \r\n        e.preventDefault()\r\n        setOpen(true)\r\n        axios.post('/estimate',data, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setOpen(false)\r\n            setSuccess(true)\r\n            setMessage(result.data.message)\r\n            setData({\r\n                customer_FK: '', \r\n                estimate_date: '',\r\n                exp_date: '', \r\n                total: '',\r\n                status: '',\r\n                VALUES: '',\r\n                uuid:''\r\n            })\r\n          \r\n            setEstimateform([\r\n                estimateFormTemplate\r\n            ])\r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            if(error) {\r\n                return error.response.data\r\n            }\r\n        })\r\n        // console.log(data)\r\n    }\r\n   \r\n    useEffect(() =>{\r\n        \r\n        const fdata = estimateForm.map(x =>Object.values(x))\r\n        const findal =[]\r\n        // const data = fdata\r\n        for(let i =0; i< fdata.length; i++){\r\n            const element = fdata[i]\r\n            findal.push(element)\r\n        }\r\n        \r\n         setData({\r\n            ...data,\r\n            VALUES: findal\r\n        })\r\n    }, [estimateForm])\r\n   \r\n    useEffect(() =>{\r\n        setData({\r\n            ...data,\r\n            total: calcuAmt(estimateForm)\r\n        })\r\n    }, [data.VALUES])\r\n    useEffect(() =>{\r\n        setData({\r\n            ...data,\r\n            uuid:  new Date().getSeconds().toLocaleString() + new Date().getMinutes().toLocaleString()+new Date().getMilliseconds()\r\n        })\r\n    }, [success])\r\n    return (\r\n        <div className={`${isWidget? 'isapp__Feed': 'app__Feed'}`}> \r\n            <AppSnackbar open={success} setOpen={setSuccess} message={message} />\r\n           <AppHeader title='Estimate' />\r\n           <div className=\"row align-items-center justify-content-center d-flex m-1\" >\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                    {/* table */}\r\n                    <h3>Estimate Entry<span> \r\n                        <IconButton color='secondary'\r\n                            onClick={() =>setIswidget(!isWidget)}\r\n                        >\r\n                        <FileCopy style={{ color: '#1ABB9C'}} />\r\n                        </IconButton></span></h3> \r\n                        {/* to do make it a component */}\r\n                        <Grid container spacing={2} className='p-3'>\r\n                            <Grid item lg={3} md={3}>\r\n                                <FormLabel>Customer</FormLabel>\r\n                                <select\r\n                                    name='customer_FK'\r\n                                    value={data.customer_FK}\r\n                                    placeholder='Customer'\r\n                                    style={{border: 'none'}}\r\n                                    onChange={e =>handleSetPostData(e)}\r\n                                >\r\n                                    <option value=''></option>\r\n                                    {\r\n                                        customers&&\r\n                                        customers.map((cus, index) =>{\r\n                                            const{id, customer_name} = cus\r\n                                            return <option value={id} key={index} >{customer_name} {id}</option>\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </Grid>\r\n                            \r\n                            <Grid item lg={2} md={2}>\r\n                                <FormLabel style={{float: 'center'}}>Status</FormLabel><br />\r\n                                <select\r\n                                    name='status'\r\n                                    value={data.status}\r\n                                    style={{ background: 'inherit',\r\n                                         border: 'none'\r\n                                    }}\r\n                                    onChange={e =>handleSetPostData(e)}\r\n                                >\r\n                                    <option value=''></option>\r\n                                    <option value='1'>Received</option>\r\n                                    <option value='0'>Pending</option>\r\n                                </select>\r\n                            </Grid>\r\n\r\n                            <Grid item lg={7} md={7}\r\n                                style={{display: 'flex', \r\n                                justifyContent: 'flex-end', alignItems: 'flex-end', flexDirection: 'column'}}\r\n                            >\r\n                                <FormLabel>Amount</FormLabel>\r\n                                <Typography variant='h5'>\r\n                                    <s>N</s>: {calcuAmt(estimateForm)}\r\n                                </Typography>\r\n                            </Grid>\r\n                                \r\n                            <Grid item lg={3} md={3}>\r\n                                <FormLabel>Estimate Date</FormLabel>\r\n                                <input\r\n                                    name='estimate_date'\r\n                                    type='date'\r\n                                    value={data.estimate_date}\r\n                                    onChange={e =>handleSetPostData(e)}\r\n                                    style={{width: '100%', outline: 'none', border: 'none',\r\n                                    height: '30px'}}\r\n                                />\r\n                            </Grid>\r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Expiration Date</FormLabel>\r\n                                    <input\r\n                                        name='exp_date'\r\n                                        type='date'\r\n                                        value={data.exp_date}\r\n                                        onChange={e =>handleSetPostData(e)}\r\n                                        style={{width: '100%', outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                    />\r\n                                </Grid>\r\n                            \r\n                        </Grid>\r\n                        <h5>\r\n                            Details\r\n                        </h5>\r\n                    <Paper>\r\n                        <Container className='p-3'>\r\n                        <table className=\"table-small table-hover table-bordered\" style={{width: '100%'}}>\r\n                            <thead>\r\n                                \r\n                                <th>#</th>\r\n                                <th> {' '} </th>\r\n                                <th>Property/Service</th>\r\n                                <th>Description</th>\r\n                                <th>QTY</th>\r\n                                <th>Rate</th>\r\n                                <th>Amount</th>\r\n                                <th></th>\r\n                            </thead>\r\n                            <tbody id='je__Table'>\r\n                                {\r\n                                    estimateForm.map((jef, index) =>(\r\n                                        <tr>\r\n                                            <td>{index+1} </td>\r\n                                            <td\r\n                                                    onClick={() =>addEstimateFrom()}\r\n                                                >\r\n                                                     <span className='fa fa-plus-circle fa-1x'\r\n                                                        style={{color: '#20c997'}}\r\n                                                    />\r\n                                            </td>\r\n                                            <td>\r\n                                                <select\r\n                                                    name='pro_service'\r\n                                                    value={jef.pro_service}\r\n                                                    placeholder='Account'\r\n                                                    style={{border: 'none'}}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                >\r\n                                                    <option value=''></option>\r\n                                                    {\r\n                                                        pss&&\r\n                                                        pss.map((ps, index) =>{\r\n                                                            const { id, name, ps_type } = ps\r\n                                                            return <option value={id} key={index} >{`${name}: ${ps_type}`}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </select>\r\n                                            </td>\r\n                                            \r\n                                            <td>\r\n                                                <input\r\n                                                    name='description'\r\n                                                    placeholder='Description'\r\n                                                    value={jef.description}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                            <td>\r\n                                                <input\r\n                                                    name='qty'\r\n                                                    type='number'\r\n                                                    placeholder='Quantity'\r\n                                                    value={jef.qty}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                            <td>\r\n                                                <input\r\n                                                    name='rate'\r\n                                                    type='number'\r\n                                                    placeholder='Rate'\r\n                                                    value={jef.rate}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                            <td>\r\n                                                {/* <input\r\n                                                    name='amount'\r\n                                                    type='number'\r\n                                                    readOnly\r\n                                                    placeholder='Amount'\r\n                                                    value={}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                /> */}\r\n                                               { jef.rate&&jef.qty&&jef.rate*jef.qty }\r\n                                            </td>\r\n                     \r\n                                            <td\r\n                                                onClick={() =>handleRemoveestimateform(index)}\r\n                                            >\r\n                                                    <span className='fa fa-trash'\r\n                                                        style={{color: 'red'}}\r\n                                                    ></span>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            {/*                                 \r\n                                {\r\n                                   customers&&\r\n                                   customers.map((customer, index) =>{\r\n                                        return <CustomerList\r\n                                            index={index}\r\n                                            {...customer}\r\n                                            isWidget={isWidget}\r\n                                        />\r\n                                    })\r\n\r\n                                } */}\r\n                                    \r\n                            </tbody>\r\n                        </table>\r\n                        {/* {customers&& !customers.length>0&&\r\n                            <div className=\"alert alert-warning\">\r\n                            <h6>No Asset Accounts Availabe</h6>\r\n                            </div>\r\n                        } */}\r\n                        <Button\r\n                            className='m-3'\r\n                            variant='contained'\r\n                            onClick={e =>handleSubmit(e)}\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >submit</Button>\r\n                        </Container>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EstimateFeed\r\n","import { Paper } from '@material-ui/core'\r\nimport React from 'react'\r\nimport AccountCreationForm from './form/AccountCreationForm'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst EstimateWidget = ({ open, setOpen, isWidget, setIswidget }) => {\r\n    return (\r\n        <div className='app__Widget'>\r\n            <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Estimate List' \r\n            />\r\n            <section className='app__WidgetContainer'>\r\n                {/* <AccountCreationForm\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                /> */}\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EstimateWidget\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setCustomers, setPropServices, setUser } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport EstimateFeed from '../components/EstimateFeed'\r\nimport EstimateWidget from '../components/EstimateWidget'\r\n\r\nconst EstimateScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n\r\n    // func\r\n    const get_AllCustomers =() =>{\r\n        axios.get('/customer', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(customers =>{\r\n            dispatch(setCustomers(customers.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const getProp_Services = () =>{\r\n        axios.get('/prop_service', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(ps =>{\r\n            dispatch(setPropServices(ps.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        get_AllCustomers()\r\n        getProp_Services()\r\n        get_Session()\r\n    }, [])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <EstimateFeed\r\n                open={open}\r\n                setOpen={setOpen}\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <EstimateWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EstimateScreen\r\n","import { Button, Container, FormLabel, Grid, IconButton, Paper, Select, TextField, Typography } from '@material-ui/core'\r\nimport { Delete, FileCopy, PlusOne, PlusOneOutlined, PlusOneRounded } from '@material-ui/icons'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectAccounts, selectExpenseCategories, selectToken } from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\nimport AppSnackbar from './global/AppSnackbar'\r\n\r\nconst ExpenseFeed = ({ setOpen, isWidget, setIswidget }) => {\r\n    const token = useSelector(selectToken)\r\n    const accounts = useSelector(selectAccounts)\r\n    const [success, setSuccess] = useState(false)\r\n    const [message, setMessage] = useState()\r\n    const [add, setAdd] = useState(false)\r\n    const [body, setbody] = useState({\r\n        name: ''\r\n    })\r\n    const expenseCategories = useSelector(selectExpenseCategories)\r\n    const expenseFormTemplate = {account:'', amount: '',  description: ''};\r\n    const [expenseForm, setExpenseform] = useState([expenseFormTemplate])\r\n    const [data, setData ] = useState({\r\n        expense_date: '',\r\n        payee_account: '',\r\n        payment_account: '',\r\n        pay_method: '',\r\n        description: '',\r\n        tx_date: '',\r\n        VALUES: [],\r\n        uuid: '',\r\n        total: ''\r\n    })\r\n    // func\r\n    const addExpenseFrom = () =>{\r\n        setExpenseform([\r\n            ...expenseForm,\r\n            expenseFormTemplate\r\n        ])\r\n    }\r\n    const handleChange = (e, index) =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n        const updatedexpenseform = expenseForm.map((jef, i) => index == i ? Object.assign(jef, {[name]: value}): jef);\r\n        setExpenseform(updatedexpenseform)\r\n        if(name =='amount') {\r\n            const updatedexpenseform =  expenseForm.map((jef, i) => index == i ?\r\n            Object.assign(jef, {'expense_ID': data.uuid, 'createdAt': data.expense_date  }): jef);\r\n        }\r\n    }\r\n    const handleRemoveexpenseform = (index) =>{\r\n        const filterexpenseform = [...expenseForm];\r\n        filterexpenseform.splice(index, 1);\r\n        \r\n        setExpenseform(filterexpenseform)\r\n    }\r\n\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n        \r\n        const fdata = expenseForm.map(x =>Object.values(x))\r\n        const findal =[]\r\n        // const data = fdata\r\n        for(let i =0; i< fdata.length; i++){\r\n            const element = fdata[i]\r\n            findal.push(element)\r\n        }\r\n        \r\n         setData({\r\n            ...data,\r\n            VALUES: findal\r\n        })\r\n    }, [expenseForm])\r\n\r\n    useEffect(() =>{\r\n        setData({\r\n            ...data,\r\n            total: calcuAmt(expenseForm)\r\n        })\r\n    }, [data.VALUES])\r\n\r\n    // add expense category\r\n    const handle_Add_ExpCategory = e =>{\r\n        setOpen(true)\r\n        axios.post('/expense/category', body, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setOpen(false)\r\n            setMessage(result.data.message)\r\n            setSuccess(true)\r\n            setAdd(!add)\r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            if(error) {\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n    const handleSubmit =e =>{\r\n        e.preventDefault()\r\n        setOpen(true)\r\n        axios.post('/expense', data, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setOpen(false)\r\n            setMessage(result.data.message)\r\n            setSuccess(true)\r\n            setData({\r\n                expense_date: '',\r\n                payee_account: '',\r\n                payment_account: '',\r\n                pay_method: '',\r\n                description: '',\r\n                tx_date: '',\r\n                VALUES: [],\r\n                uuid: '',\r\n                total: ''\r\n            })\r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            if(error) {\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        setData({\r\n            ...data,\r\n            uuid:  new Date().getSeconds().toLocaleString() + new Date().getMinutes().toLocaleString()+new Date().getMilliseconds()\r\n        })\r\n    }, [success])\r\n    return (\r\n        <div className={`${isWidget? 'isapp__Feed': 'app__Feed'}`}>\r\n            <AppSnackbar setOpen={setSuccess} open={success} message={message} />\r\n           <AppHeader title='Expense' />\r\n           <div className=\"row align-items-center justify-content-center d-flex m-1\" >\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                    {/* table */}\r\n                    <h3>Expense Entry<span> \r\n                        <IconButton color='secondary'\r\n                            onClick={() =>setIswidget(!isWidget)}\r\n                        >\r\n                        <FileCopy style={{ color: '#1ABB9C'}} />\r\n                        </IconButton></span></h3> \r\n                        {/* to do make it a component */}\r\n                        <Grid container spacing={2} className='p-3'>\r\n                            <Grid item lg={3} md={3}>\r\n                                <FormLabel>Account Receivable</FormLabel>\r\n                                <select\r\n                                    name='payee_account'\r\n                                    placeholder='Account'\r\n                                    style={{border: 'none'}}\r\n                                    value={data.payee_account}\r\n                                    onChange={e =>setData({\r\n                                        ...data,\r\n                                        payee_account: e.target.value\r\n                                    })}\r\n                                >\r\n                                    <option value=''></option>\r\n                                    {\r\n                                        accounts&&\r\n                                        accounts.map((acc, index) =>{\r\n                                            const { name, code, balance_type } = acc\r\n                                            return <option value={code} key={index} >{`${name} (${balance_type})`}</option>\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </Grid>\r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Account Payable</FormLabel>\r\n                                    <select\r\n                                        name='payment_account'\r\n                                        placeholder='Account'\r\n                                        style={{border: 'none'}}\r\n                                        value={data.payment_account}\r\n                                        onChange={e =>setData({\r\n                                            ...data,\r\n                                            payment_account: e.target.value\r\n                                        })}\r\n                                    >\r\n                                        <option value=''></option>\r\n                                        {\r\n                                            accounts&&\r\n                                            accounts.map((acc, index) =>{\r\n                                                const { code, name, balance_type } = acc\r\n                                                return <option value={code} key={index} >{`${name} (${balance_type})`}</option>\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6}\r\n                                    style={{display: 'flex', \r\n                                    justifyContent: 'flex-end', alignItems: 'flex-end', flexDirection: 'column'}}\r\n                                >\r\n                                    <FormLabel>Amount</FormLabel>\r\n                                    <Typography variant='h5'>\r\n                                        <s>N</s>: { expenseForm&& calcuAmt(expenseForm) }\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Payment Date</FormLabel>\r\n                                    <input\r\n                                        name='expense_date'\r\n                                        type='date'\r\n                                        value={data.expense_date}\r\n                                        onChange={e =>setData({\r\n                                            ...data,\r\n                                            expense_date: e.target.value\r\n                                        })}\r\n                                        style={{width: '100%', outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Payment Method</FormLabel>\r\n                                    <select\r\n                                        name='pay_method'\r\n                                        value={data.pay_method}\r\n                                        onChange={e =>setData({\r\n                                            ...data,\r\n                                            pay_method: e.target.value\r\n                                        })}\r\n                                        style={{width: '100%', outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                    >\r\n                                        <option></option>\r\n                                        <option value='cash'>Cash</option>\r\n                                        <option value='cheque'>Cheque</option>\r\n                                        <option value='transfer'>Transfer</option>\r\n                                    </select>\r\n                                </Grid>\r\n                            \r\n                        </Grid>\r\n                        <h5>\r\n                            Details\r\n                        </h5>\r\n                    <Paper>\r\n                        <Container className='p-3'>\r\n                        <table className=\"table-small table-hover table-bordered\" style={{width: '100%'}}>\r\n                            <thead>\r\n                                \r\n                                <th>#</th>\r\n                                <th> {' '} </th>\r\n                                <th>Category\r\n                                    <span>\r\n                                        <IconButton size='small'\r\n                                            onClick={() =>setAdd(!add)}\r\n                                        >\r\n                                            <span className='fa fa-plus-circle'\r\n                                                style={{color: '#20c997'}} \r\n                                            />\r\n                                        </IconButton>\r\n                                    </span>\r\n                                    {\r\n                                        add&&\r\n                                        <div\r\n                                            style={{display: 'flex'}}\r\n                                        >\r\n                                            <TextField\r\n                                                size='small'\r\n                                                label='Name'\r\n                                                value={body.name}\r\n                                                variant='outlined'\r\n                                                placeholder='Category Name'\r\n                                                onChange={e =>setbody({\r\n                                                    ...body, name: e.target.value\r\n                                                })}\r\n                                            />\r\n                                            <Button\r\n                                                onClick={e =>handle_Add_ExpCategory(e)}\r\n                                                variant='contained' size='small'\r\n                                                style={{background: '#2A3F54', color: 'white'}}\r\n                                            >\r\n                                                Save\r\n                                            </Button>\r\n                                        </div>\r\n                                    }\r\n                                </th>\r\n                                <th>Amount</th>\r\n                                <th>Description</th>\r\n                               \r\n                                <th></th>\r\n                            </thead>\r\n                            <tbody id='je__Table'>\r\n                                {\r\n                                    expenseForm.map((jef, index) =>(\r\n                                        <tr>\r\n                                            <td>{index+1} </td>\r\n                                            <td\r\n                                                    onClick={() =>addExpenseFrom()}\r\n                                                >\r\n                                                     <span className='fa fa-plus-circle fa-1x'\r\n                                                        style={{color: '#20c997'}} \r\n                                                    />\r\n                                            </td>\r\n                                            <td>\r\n                                                <select\r\n                                                    name='account'\r\n                                                    value={jef.account}\r\n                                                    placeholder='Account'\r\n                                                    style={{border: 'none'}}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                >\r\n                                                    <option value=''></option>\r\n                                                    {\r\n                                                        expenseCategories&&\r\n                                                        expenseCategories.map((exps, index) =>{\r\n                                                            const { id, name } = exps\r\n                                                            return <option value={id} key={index} >{`${name}`}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </select>\r\n                                            </td>\r\n                                            <td>\r\n                                                <input\r\n                                                    name='amount'\r\n                                                    type='number'\r\n                                                    placeholder='Amount'\r\n                                                    value={jef.amount}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n                                            \r\n                                            <td>\r\n                                                <input\r\n                                                    name='description'\r\n                                                    placeholder='Description'\r\n                                                    value={jef.description}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n                                            \r\n                                            <td\r\n                                                onClick={() =>handleRemoveexpenseform(index)}\r\n                                            >\r\n                                                    <span className='fa fa-trash'\r\n                                                        style={{color: 'red'}}\r\n                                                    ></span>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            \r\n                            </tbody>\r\n                        </table>\r\n                        \r\n                        <Button\r\n                            className='m-3'\r\n                            variant='contained'\r\n                            onClick={e =>handleSubmit(e)}\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >submit</Button>\r\n                        </Container>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseFeed\r\n","import { IconButton, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectUserExpenseRaised } from '../appState/appSlice'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst ExpenselWidget = ({ isWidget, setIswidget }) => {\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n    const userExpneses = useSelector(selectUserExpenseRaised)\r\n    return (\r\n        <div className='app__Widget'>\r\n            <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Expense List' \r\n            />\r\n            <section className='app__WidgetContainer mt-3'>\r\n               <table className='table table-sm table-striped table-hover'>\r\n                   <thead>\r\n                       <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                       <th style={{ border: '1px solid #F7F7F7F7' }}>Expense</th>\r\n                       <th style={{ border: '1px solid #F7F7F7F7' }}>Amount (<s>N</s>)</th>\r\n                       <th style={{ border: '1px solid #F7F7F7F7' }}>Date</th>\r\n                   </thead>\r\n                   <tbody>\r\n                       {\r\n                           userExpneses&&\r\n                           userExpneses.map((exps, index) =>{\r\n                               const { uuid, amount, expense_date } = exps\r\n                               return (\r\n                                   <tr>\r\n                                       <td> {index+1} </td>\r\n                                       <td> \r\n                                           <Typography variant='p'\r\n                                            style={{color: '#20C997', cursor: 'pointer'}}\r\n                                           >\r\n                                           {`Expense #${uuid}`}\r\n                                           </Typography>\r\n                                       </td>\r\n                                       <td> {amount} </td>\r\n                                       <td> {new Date(expense_date).toLocaleDateString()} </td>\r\n                                   </tr>\r\n                                   \r\n                               )\r\n                           })\r\n                           \r\n                       }\r\n                       {\r\n                           userExpneses&&\r\n                           <tr\r\n                            style={{background: '#2A3F54', color: 'white'}} \r\n                           >\r\n                               <td colSpan={2}>\r\n                                   <Typography variant='subtitle1'\r\n                                    style={{color: 'white'}}\r\n                                   >\r\n                                        <b>Total:</b>\r\n                                    </Typography>\r\n                               </td>\r\n                               <td>\r\n                                   <Typography variant='subtitle1'\r\n                                    style={{color: 'white'}}\r\n                                   >\r\n                                    <b>{\r\n                                       calcuAmt(userExpneses)\r\n                                    }</b>\r\n                                   </Typography>\r\n                               </td>\r\n                               <td colSpan={1}></td>\r\n                           </tr>\r\n                       }\r\n                   </tbody>\r\n               </table>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenselWidget\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setAccounts, setExpenseCategories, setUser, setUserExpenseRaised } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport ExpenseFeed from '../components/ExpenseFeed'\r\nimport ExpenseWidget from '../components/ExpenseWidget'\r\n\r\nconst ExpenseScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n\r\n    // func\r\n    const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n    const get_ExpenseCategories =() =>{\r\n        axios.get('/expense/categories', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(exps =>{\r\n            dispatch(setExpenseCategories(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n    const get_User_Raised_Expense =() =>{\r\n        axios.get('/expense/user', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(exps =>{\r\n            dispatch(setUserExpenseRaised(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        get_AllAccounts()\r\n        get_Session()\r\n    }, [])\r\n\r\n    useEffect(() =>{\r\n        get_ExpenseCategories()\r\n        get_User_Raised_Expense()\r\n    }, [open])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <ExpenseFeed\r\n                setOpen={setOpen}\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <ExpenseWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseScreen\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Doughnut, } from \"react-chartjs-2\";\r\nimport { MDBContainer } from \"mdbreact\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAccounts, selectAllStaffs, selectCustomers, selectUserExpenseRaised } from \"../../appState/appSlice\";\r\n\r\nconst MultipleChart = () => {\r\n  const userExpneses = useSelector(selectUserExpenseRaised)\r\n  const customers = useSelector(selectCustomers)\r\n  const accounts = useSelector(selectAccounts)\r\n  const [dataPolar, setDataPolar] = useState({\r\n      datasets: '',\r\n      labels: [\"Expenses\", \"Staffs\", \"Customers\", \"Accounts\"]\r\n  })\r\n\r\n  useEffect(() =>{\r\n    const custotal = customers&&customers.length\r\n    const acctotal = accounts && accounts.length\r\n    const staffs = localStorage.getItem('staffs')\r\n    const calcuAmt = (data) =>{\r\n      const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n      return total\r\n  }\r\n    setDataPolar({\r\n      ...dataPolar,\r\n      datasets: [\r\n        {\r\n          data: [calcuAmt(userExpneses), +staffs, +custotal, +acctotal],\r\n          backgroundColor: [\r\n            \"rgba(247, 70, 74, 0.5)\",\r\n            \"#20c997\",\r\n            \"#111d29\",\r\n            \"rgba(148, 159, 177, 0.5)\",\r\n            \"#2A3F54\"\r\n          ],\r\n          label: \"Dataset\" // for legend\r\n        }\r\n      ],\r\n    })\r\n  },[])\r\n\r\n    return (\r\n      <div>\r\n        <h3 className=\"mt-5\">Data </h3>\r\n        <Doughnut data={dataPolar} options={{ responsive: true }} />\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default MultipleChart;","import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { MDBContainer } from \"mdbreact\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectPaidOnpaySales } from \"../../appState/appSlice\";\r\n\r\nconst SalesChart =() =>{\r\n  const data = localStorage.getItem('paid')\r\n  const onpaid = localStorage.getItem('onPaid')\r\n  const paidOnpaySales = useSelector(selectPaidOnpaySales)\r\n  const [dataLine, setDataLine] = useState({\r\n    labels: '',\r\n      datasets: [\r\n        {\r\n          label: \"Sales on progress\",\r\n          fill: true,\r\n          lineTension: 0.3,\r\n          backgroundColor: \"rgba(225, 204,230, .3)\",\r\n          borderColor: \"rgb(205, 130, 158)\",\r\n          borderCapStyle: \"butt\",\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: \"miter\",\r\n          pointBorderColor: \"rgb(205, 130,1 58)\",\r\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n          pointBorderWidth: 10,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n          pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data: [onpaid]\r\n        },\r\n        {\r\n          label: \"Completed Sales\",\r\n          fill: true,\r\n          lineTension: 0.3,\r\n          backgroundColor: \"rgba(184, 185, 210, .3)\",\r\n          borderColor: \"rgb(35, 26, 136)\",\r\n          borderCapStyle: \"butt\",\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: \"miter\",\r\n          pointBorderColor: \"rgb(35, 26, 136)\",\r\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n          pointBorderWidth: 10,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data: [data]\r\n        }\r\n      ]\r\n  })\r\n\r\n  useEffect(() =>{\r\n        \r\n    const labels = paidOnpaySales&&paidOnpaySales.map(x =>Object.values(x))\r\n    // const paiddata = paidOnpaySales && paidOnpaySales.filter((paid, i) =>paid && paid.amount == paidOnpaySales[i].amount_paid)\r\n\r\n    // const paiddataValues = paiddata && paiddata.map(x =>Object.values(x))\r\n    // console.log(paiddataValues)\r\n    const flabels =[]\r\n    // const completedPaid = []\r\n    // set labels\r\n    for(let i =0; i< labels.length; i++){\r\n        const element = labels[i][10]\r\n        flabels.push(new Date(element).toUTCString().split(' ')[2])\r\n    }\r\n    setDataLine({\r\n      ...dataLine,\r\n      labels: flabels,\r\n    })\r\n\r\n    // setDataLine(prevState =>({\r\n    //   datasets: prevState.datasets.map((obj, i) =>obj[i]==0?\r\n    //   Object.assign(obj, {'data': onpaid}): obj)\r\n     \r\n    // }))\r\n    // setDataLine(prevState =>({\r\n    //   datasets: prevState.datasets.map((obj, i) =>obj[i]==1?\r\n    //   Object.assign(obj, {'data': data}): obj)\r\n     \r\n    // }))\r\n\r\n    // const paiddata = paidOnpaySales && paidOnpaySales.filter((paid, i) =>paid && paid.amount == paidOnpaySales[i].amount_paid)\r\n    \r\n    //     const paiddataValues = paiddata && paiddata.map(x =>Object.values(x))\r\n    //     console.log(paiddataValues)\r\n    //     const completedPaid = []\r\n    //     // set completed data\r\n        \r\n    \r\n    //     for(let i =0; i< paiddataValues.length; i++){\r\n    //       const pelement = paiddataValues[i][5]\r\n    //       completedPaid.push(pelement)\r\n    //     }\r\n\r\n    // const updatepaid = dataLine.datasets.map((obj, i) =>obj[1]?\r\n    // Object.assign(obj, {'data': completedPaid}): obj)\r\n    // console.log(updatepaid)\r\n    \r\n\r\n    // const onpaiddata = paidOnpaySales && paidOnpaySales.filter((paid, i) =>paid && paid.amount > paidOnpaySales[i].amount_paid)\r\n    \r\n    // const onpaiddataValues = onpaiddata && onpaiddata.map(x =>Object.values(x))\r\n    // console.log(onpaiddataValues)\r\n    // const onPaid = []\r\n    // // set completed data\r\n    \r\n\r\n    // for(let i =0; i< onpaiddataValues.length; i++){\r\n    //   const onpelement = onpaiddataValues[i][5]\r\n    //   onPaid.push(onpelement)\r\n    // }\r\n    \r\n    // const updateOnpaid = dataLine.datasets.map((obj, i) =>obj[i] ==1?\r\n    // Object.assign(obj, {'data': onpaid}): obj)\r\n    \r\n\r\n    // setDataLine({\r\n    //   ...dataLine,\r\n    //   datasets: updatepaid\r\n    // })\r\n    // setDataLine({\r\n    //   ...dataLine,\r\n    //   datasets: updateOnpaid\r\n    // })\r\n    // console.log(dataLine.datasets)\r\n  }, [])\r\n\r\n    return (\r\n      <MDBContainer>\r\n        <h3 className=\"mt-5\">Sales</h3>\r\n        <Line data={dataLine} options={{ responsive: true }} />\r\n      </MDBContainer>\r\n    );\r\n}\r\n\r\nexport default SalesChart;","import { Grid } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectPaidOnpaySales } from '../appState/appSlice'\r\nimport MultipleChart from './charts/MultipleChart'\r\nimport SalesChart from './charts/SalesChart'\r\nimport AppHeader from './global/AppHeader'\r\n\r\nconst HomeFeed = () => {\r\n    const paidOnpaySales = useSelector(selectPaidOnpaySales)\r\n    const [paid, setPaid] = useState()\r\n    const [onpaid, setOnPaid] = useState()\r\n    // const data = [65, 59, 80, 81, 56, 55, 40]\r\n    useEffect(() =>{\r\n        \r\n       \r\n        const paiddata = paidOnpaySales && paidOnpaySales.filter((paid, i) =>paid && paid.amount == paidOnpaySales[i].amount_paid)\r\n    \r\n        const paiddataValues = paiddata && paiddata.map(x =>Object.values(x))\r\n        const completedPaid = []\r\n        // set completed data\r\n        \r\n    \r\n        for(let i =0; i< paiddataValues.length; i++){\r\n          const pelement = paiddataValues[i][5]\r\n          completedPaid.push(pelement)\r\n        }\r\n        \r\n        // set on pay data\r\n        // console.log(completedPaid)\r\n        const onpaiddata = paidOnpaySales && paidOnpaySales.filter((paid, i) =>paid && paid.amount > paidOnpaySales[i].amount_paid)\r\n    \r\n        const onpaiddataValues = onpaiddata && onpaiddata.map(x =>Object.values(x))\r\n        const onPaid = []\r\n        // set completed data\r\n        \r\n    \r\n        for(let i =0; i< onpaiddataValues.length; i++){\r\n          const onpelement = onpaiddataValues[i][5]\r\n          onPaid.push(onpelement)\r\n        }\r\n        \r\n       \r\n            setPaid(completedPaid)\r\n            setOnPaid(onPaid)\r\n\r\n            localStorage.setItem('paid', completedPaid)\r\n            localStorage.setItem('onPaid', onPaid)\r\n    \r\n      }, [paidOnpaySales])\r\n    \r\n    return (\r\n        <Fragment>\r\n            <div className='app__Feed'>\r\n                \r\n                <AppHeader title='Dashboard' />\r\n\r\n                <div className='m-3'>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item lg={11} md={11} >\r\n                        <Grid container spacing={2} alignItems='center' justify='center'>\r\n                            <Grid item lg={9} md={9}>\r\n                                <SalesChart data={paid} onpaid={onpaid} />\r\n                            </Grid>\r\n                            <Grid item lg={3} md={3}>\r\n                                <MultipleChart />\r\n                            </Grid>\r\n                        </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div> \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default HomeFeed\r\n","import axios from 'axios'\r\nimport React, { Fragment, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setAccounts, setAllStaffs, setCustomers, setPaidOnpaySales, setUser, setUserExpenseRaised } from '../appState/appSlice'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport HomeFeed from '../components/HomeFeed'\r\nimport './homeScreen.css'\r\n\r\nconst HomeScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    \r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Paid_Onpay_Sales = async () =>{\r\n        await localStorage.clear()\r\n        axios.get(`/sale/paid_onpay`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(paidOnpay =>{\r\n            dispatch(setPaidOnpaySales(paidOnpay.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_User_Raised_Expense =() =>{\r\n        axios.get('/expense/user', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(exps =>{\r\n            dispatch(setUserExpenseRaised(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const getCustomers = () =>{\r\n        axios.get('/customer', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(asset =>{\r\n            dispatch(setCustomers(asset.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    const get_Staffs =() =>{\r\n        axios.get('/auth', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(staffs =>{\r\n            localStorage.setItem('staffs', staffs.data.length)\r\n            dispatch(setAllStaffs(staffs.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        get_Session()\r\n        get_Paid_Onpay_Sales()\r\n        get_AllAccounts()\r\n        get_User_Raised_Expense()\r\n        getCustomers()\r\n        get_Staffs()\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n           <div className='app'>\r\n                {/* side__Bar */}\r\n                <SideBarMenu />\r\n                {/* feed */}\r\n                <HomeFeed />\r\n                {/* widget */}\r\n           </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import { Button, Container, FormLabel, Grid, IconButton, Paper, Select, TextField, Typography } from '@material-ui/core'\r\nimport { Delete, FileCopy, PlusOne, PlusOneOutlined, PlusOneRounded } from '@material-ui/icons'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectPropServices, selectCustomers, selectToken, selectOpenEstimate, setOpenEstimate } from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\nimport AppSnackbar from './global/AppSnackbar'\r\n\r\nconst InvoiceFeed = ({  open, setOpen, isWidget, setIswidget }) => {\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const props = useSelector(selectPropServices)\r\n    const customers = useSelector(selectCustomers)\r\n    const openEstimate = useSelector(selectOpenEstimate)\r\n    const pss = useSelector(selectPropServices)\r\n    const [noestimate, setNoestimate] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n    const [message, setMessage] = useState()\r\n    const invoiceFormTemplate = {pro_service:'', description: '', qty: '', rate: '',  amount: '',  };\r\n    const [invoiceForm, setInvoiceform] = useState([])\r\n\r\n    const [data, setData ] = useState({\r\n        asset_account_FK: openEstimate.asset_account_FK,\r\n        customer_FK: '', \r\n        invoice_date: '',\r\n        invoice_term: '',\r\n        due_date: '',\r\n        VALUES: [],\r\n        uuid: '',\r\n        total: ''\r\n    })\r\n\r\n    // func\r\n    const get_OpenEstimate =(cus_FK) =>{\r\n       \r\n        axios.get(`estimate/${cus_FK}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setNoestimate(false)\r\n            dispatch(setOpenEstimate(result.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error) {\r\n                setNoestimate(false)\r\n                dispatch(setOpenEstimate(''))\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSetPostData = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n\r\n    } \r\n\r\n    const handleSetTerm = (e) =>{\r\n        const d = new Date()\r\n        const sd = new Date()\r\n        const value = e.target.value;\r\n         const duedate = d.setDate(sd.getDate()+parseInt(value))\r\n            return setData({\r\n                ...data,\r\n                invoice_term: value,\r\n                due_date: new Date(duedate)\r\n            })\r\n    }\r\n\r\n    // func\r\n    const addInvoiceFrom = () =>{\r\n        setInvoiceform([\r\n            ...invoiceForm,\r\n            invoiceFormTemplate\r\n        ])\r\n    }\r\n  \r\n\r\n    useEffect(() =>{\r\n        const form = []\r\n        for(let i= 0; i <openEstimate.length;  i++){\r\n           \r\n\r\n            form.push(\r\n                {\r\n                    pro_service:  openEstimate&& openEstimate[i].id, \r\n                    description:  openEstimate&& openEstimate[i].description, \r\n                    qty:  openEstimate&& openEstimate[i].qty,\r\n                    invoice_ID: data.uuid,\r\n                    rate:  openEstimate&& openEstimate[i].rate,  \r\n                    amount:  openEstimate&& openEstimate[i].amount,\r\n                    createdAt: data.invoice_date \r\n                }\r\n            )\r\n        }\r\n        return setInvoiceform(form)\r\n    },[openEstimate])\r\n\r\n    useEffect(() =>{\r\n        setInvoiceform([\r\n            invoiceFormTemplate\r\n        ])\r\n       \r\n    },[!openEstimate])\r\n    const handleChange = (e, index) =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n   \r\n        const updatedinvoiceform =  invoiceForm.map((jef, i) => index == i ?\r\n        Object.assign(jef, {[name]: value, 'invoice_ID': data.uuid, 'createdAt': data.invoice_date }): jef);\r\n        setInvoiceform(updatedinvoiceform)\r\n\r\n        if(name =='qty') {\r\n            const updatedinvoiceform =  invoiceForm.map((jef, i) => index == i ?\r\n            Object.assign(jef, {'amount': value * jef.rate, 'invoice_ID': data.uuid, 'createdAt': data.invoice_date  }): jef);\r\n        }\r\n      \r\n        if(name =='pro_service') {\r\n            const selectedPS = pss.filter(ps => ps.id ==parseInt(value))\r\n            // console.log(selectedPS[0].description)\r\n            const updatedinvoiceform =  invoiceForm.map((jef, i) => index == i ?\r\n            Object.assign(jef, {'description': selectedPS[0].description, 'rate': +selectedPS[0].sale_price }): jef);\r\n        }\r\n    }\r\n    const handleRemoveinvoiceform = (index) =>{\r\n        const filterinvoiceform = [...invoiceForm];\r\n        filterinvoiceform.splice(index, 1);\r\n        \r\n        setInvoiceform(filterinvoiceform)\r\n    }\r\n// func\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n\r\n       // handle submit\r\n    const handleSubmit = e =>{\r\n        \r\n        e.preventDefault()\r\n        setOpen(true)\r\n        axios.post('/invoice',data, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setOpen(false)\r\n            setSuccess(true)\r\n            setMessage(result.data.message)\r\n            setData({\r\n                customer_FK: '', \r\n                invoice_date: '',\r\n                invoice_term: '',\r\n                due_date: '',\r\n                VALUES: [],\r\n                uuid: '',\r\n                total: ''\r\n            })\r\n          \r\n            setInvoiceform([\r\n                invoiceFormTemplate\r\n            ])\r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            if(error) {\r\n                return error.response.data\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        get_OpenEstimate(data.customer_FK)\r\n    }, [data.customer_FK])\r\n\r\n    useEffect(() =>{\r\n        \r\n        const fdata = invoiceForm.map(x =>Object.values(x))\r\n        const findal =[]\r\n        // const data = fdata\r\n        for(let i =0; i< fdata.length; i++){\r\n            const element = fdata[i]\r\n            findal.push(element)\r\n        }\r\n        \r\n         setData({\r\n            ...data,\r\n            VALUES: findal\r\n        })\r\n    }, [invoiceForm])\r\n   \r\n    useEffect(() =>{\r\n        setData({\r\n            ...data,\r\n            total: calcuAmt(invoiceForm)\r\n        })\r\n    }, [data.VALUES])\r\n    useEffect(() =>{\r\n        setData({\r\n            ...data,\r\n            uuid:  new Date().getSeconds().toLocaleString() + new Date().getMinutes().toLocaleString()+new Date().getMilliseconds()\r\n        })\r\n    }, [success])\r\n   \r\n    return (\r\n        <div className={`${isWidget? 'isapp__Feed': 'app__Feed'}`}>\r\n            <AppSnackbar open={success} setOpen={setSuccess} message={message} />\r\n           <AppHeader title='Invoice' />\r\n           <div className=\"row align-items-center justify-content-center d-flex m-1\" >\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                    {/* table */}\r\n                    <h3>Invoice Entry<span> \r\n                        <IconButton color='secondary'\r\n                            onClick={() =>setIswidget(!isWidget)}\r\n                        >\r\n                        <FileCopy style={{ color: '#1ABB9C'}} />\r\n                        </IconButton></span></h3> \r\n                        {/* to do make it a component */}\r\n                        <Grid container spacing={2} className='p-3'>\r\n                            <Grid item lg={4} md={4}>\r\n                                <FormLabel>Customer</FormLabel>\r\n                                <select\r\n                                    name='customer_FK'\r\n                                    value={data.customer_FK}\r\n                                    placeholder='Customer'\r\n                                    style={{border: 'none'}}\r\n                                    onChange={e =>handleSetPostData(e)}\r\n                                >\r\n                                    <option value=''>Select</option>\r\n                                    {\r\n                                        customers&&\r\n                                        customers.map((cus, index) =>{\r\n                                            const{id, customer_name} = cus\r\n                                            return <option key={index} value={id} > {customer_name} </option>\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </Grid>\r\n                                \r\n                                <Grid item lg={8} md={8}\r\n                                    style={{display: 'flex', \r\n                                    justifyContent: 'flex-end', alignItems: 'flex-end', flexDirection: 'column'}}\r\n                                >\r\n                                    <FormLabel>Due Balance</FormLabel>\r\n                                    <Typography variant='h5'>\r\n                                        <s>N</s>: {invoiceForm.length>0 && calcuAmt(invoiceForm)}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                \r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Period Term</FormLabel>\r\n                                    <select\r\n                                        name='invoice_term'\r\n                                        style={{width: '100%', \r\n                                        outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                        value={data.invoice_term}\r\n                                        onChange={ e => handleSetTerm(e)}\r\n                                    >\r\n                                        <option value=''></option>\r\n                                        <option value={7}>7 Days</option>\r\n                                        <option value={14}>14 Days</option>\r\n                                        <option value={21}>21 Days</option>\r\n                                        <option value={28}>28 Days</option>\r\n                                        <option value={30}>30 Days</option>\r\n                                        <option value={60}>60 Days</option>\r\n                                        <option value={90}>90 Days</option>\r\n                                        <option value={120}>120 Days</option>\r\n                                        <option value={150}>150 Days</option>\r\n                                        <option value={180}>180 Days</option>\r\n                                        <option value={210}>210 Days</option>\r\n                                        <option value={240}>240 Days</option>\r\n                                        <option value={270}>270 Days</option>\r\n                                        <option value={300}>300 Days</option>\r\n                                        <option value={330}>330 Days</option>\r\n                                        <option value={360}>360 Days</option>\r\n                                    </select>\r\n                                </Grid>\r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Invoice Date</FormLabel>\r\n                                    <input\r\n                                        name='invoice_date'\r\n                                        type='date'\r\n                                        value ={data.invoice_date}\r\n                                        onChange={e =>handleSetPostData(e)}\r\n                                        style={{width: '100%', outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Due Date</FormLabel>\r\n                                    <input\r\n                                        name='due_date'\r\n                                        readOnly\r\n                                        value={ data.due_date ? new Date(data.due_date).toLocaleDateString(): new Date().toLocaleDateString()}\r\n                                        onChange={e =>handleSetPostData(e)}\r\n                                        style={{width: '100%', outline: 'none', \r\n                                        border: 'none',\r\n                                        height: '30px'}}\r\n                                    />\r\n                                </Grid>\r\n                            \r\n                        </Grid>\r\n                        <h5>\r\n                            Details\r\n                        </h5>\r\n                   { !noestimate&&<Paper>\r\n                        <Container className='p-3'>\r\n                        <table className=\"table-small table-hover table-bordered\" style={{width: '100%'}}>\r\n                            <thead>\r\n                                \r\n                                <th>#</th>\r\n                                <th> {' '} </th>\r\n                                <th>Property/Service</th>\r\n                                <th>Description</th>\r\n                                <th>QTY</th>\r\n                                <th>Rate</th>\r\n                                <th>Amount</th>\r\n                                <th></th>\r\n                            </thead>\r\n                            <tbody id='je__Table'>\r\n                                {\r\n                                    invoiceForm && invoiceForm.map((jef, index) =>(\r\n                                        <tr key={index}>\r\n                                            <td>{index+1} </td>\r\n                                            <td\r\n                                                    onClick={() =>addInvoiceFrom()}\r\n                                                >\r\n                                                     <span className='fa fa-plus-circle fa-1x'\r\n                                                        style={{color: '#20c997'}}\r\n                                                    />\r\n                                            </td>\r\n                                            <td>\r\n                                                <select\r\n                                                    name='pro_service'\r\n                                                    value={jef.account}\r\n                                                    placeholder='Account'\r\n                                                    style={{border: 'none'}}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                >\r\n                                                    <option value=''></option>\r\n                                                    {\r\n                                                        props&&\r\n                                                        props.map((ps, index) =>{\r\n                                                            const { id, name, ps_type } = ps\r\n                                                            return <option value={id} key={index} >{`${name} (${ps_type})`}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </select>\r\n                                            </td>\r\n                                            \r\n                                            <td>\r\n                                                <input\r\n                                                    name='description'\r\n                                                    placeholder='Description'\r\n                                                    value={jef.description}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                            <td>\r\n                                                <input\r\n                                                    name='qty'\r\n                                                    type='number'\r\n                                                    placeholder='Quantity'\r\n                                                    value={jef.qty}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                            <td>\r\n                                                <input\r\n                                                    name='rate'\r\n                                                    type='number'\r\n                                                    placeholder='Rate'\r\n                                                    value={jef.rate}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                            <td>\r\n                                                <input\r\n                                                    name='amount'\r\n                                                    type='number'\r\n                                                    placeholder='Amount'\r\n                                                    value={jef.amount}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n                     \r\n                                            <td\r\n                                                onClick={() =>handleRemoveinvoiceform(index)}\r\n                                            >\r\n                                                    <span className='fa fa-trash'\r\n                                                        style={{color: 'red'}}\r\n                                                    ></span>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            {/*                                 \r\n                                {\r\n                                   customers&&\r\n                                   customers.map((customer, index) =>{\r\n                                        return <CustomerList\r\n                                            index={index}\r\n                                            {...customer}\r\n                                            isWidget={isWidget}\r\n                                        />\r\n                                    })\r\n\r\n                                } */}\r\n                                    \r\n                            </tbody>\r\n                        </table>\r\n                        {/* {customers&& !customers.length>0&&\r\n                            <div className=\"alert alert-warning\">\r\n                            <h6>No Asset Accounts Availabe</h6>\r\n                            </div>\r\n                        } */}\r\n                        <Button\r\n                            className='m-3'\r\n                            variant='contained'\r\n                            onClick={e =>handleSubmit(e)}\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >submit</Button>\r\n                        </Container>\r\n                    </Paper>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InvoiceFeed\r\n","import { Paper, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { selectUserInvoices } from '../appState/appSlice'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst InvoiceWidget = ({ isWidget, setIswidget }) => {\r\n    const invoices = useSelector(selectUserInvoices)\r\n// func\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n    return (\r\n        <div className='app__Widget'>\r\n            <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Invoice List' \r\n            />\r\n            <section className='app__WidgetContainer mt-3'>\r\n                <table className='table table-sm table-striped table-hover'>\r\n                    <thead>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>Description</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>Due Date</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>Amount (<s>N</s>)</th>\r\n                        {/* <th style={{ border: '1px solid #F7F7F7F7' }}>Action</th> */}\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            invoices &&\r\n                            invoices.map((invoice, index) =>{\r\n                                const { uuid, invoice_date, due_date, amount } = invoice\r\n                                return(\r\n                                <tr key={index}>\r\n                                <td> { index+1 } </td>\r\n                                <td>\r\n                                    {`Invoice #${uuid} `}\r\n                                </td>\r\n                                <td> {new Date(due_date).toLocaleDateString()} </td>\r\n                                <td> {amount} </td>\r\n                                <td></td>\r\n                                </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                        {\r\n                           invoices&&\r\n                           <tr\r\n                            style={{background: '#2A3F54', color: 'white'}} \r\n                           >\r\n                               <td colSpan={3}>\r\n                                   <Typography variant='subtitle1'\r\n                                    style={{color: 'white'}}\r\n                                   >\r\n                                        <b>Total:</b>\r\n                                    </Typography>\r\n                               </td>\r\n                               <td>\r\n                                   <Typography variant='subtitle1'\r\n                                    style={{color: 'white'}}\r\n                                   >\r\n                                    <b>{\r\n                                       calcuAmt(invoices)\r\n                                    }</b>\r\n                                   </Typography>\r\n                               </td>\r\n                               <td colSpan={1}></td>\r\n                           </tr>\r\n                       }\r\n                    </tbody>\r\n                </table>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InvoiceWidget\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setAccounts, setCustomers, setPropServices, setUser, setUserInvoices } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport InvoiceFeed from '../components/InvoiceFeed'\r\nimport InvoiceWidget from '../components/InvoiceWidget'\r\n\r\nconst InvoiceScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n\r\n    // func\r\n    const getProp_Services = () =>{\r\n        axios.get('/prop_service', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(ps =>{\r\n            dispatch(setPropServices(ps.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n     // func\r\n    const getCustomers = () =>{\r\n        axios.get('/customer', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(asset =>{\r\n            dispatch(setCustomers(asset.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n     // func\r\n     const get_My_Invoices = () =>{\r\n        axios.get(`/invoice`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(invoices =>{\r\n            dispatch(setUserInvoices(invoices.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        getProp_Services()\r\n        getCustomers()\r\n        get_Session()\r\n        \r\n    }, [])\r\n    useEffect(() =>{\r\n        return get_My_Invoices()\r\n    }, [open])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <InvoiceFeed\r\n                setOpen={setOpen}\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <InvoiceWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InvoiceScreen\r\n","import { Button, Container, Grid, IconButton, Paper, Select, TextField, Typography } from '@material-ui/core'\r\nimport { Delete, FileCopy, PlusOne, PlusOneOutlined, PlusOneRounded } from '@material-ui/icons'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectAccounts, selectToken, selectUser } from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\nimport AppSnackbar from './global/AppSnackbar'\r\n\r\nconst JournalFeed = ({ setOpen, isWidget, setIswidget }) => {\r\n    const token = useSelector(selectToken)\r\n    const user = useSelector(selectUser)\r\n    const accounts = useSelector(selectAccounts)\r\n    const [success, setSuccess] = useState(false)\r\n    const [Error, setError] = useState()\r\n    const [message, setMessage] = useState()\r\n    const jeFormTemplate = {account_FK:'', tx_type: '', paid: 1, pay_method: '', amount: '', description: ''};\r\n    const [jeForm, setJeform] = useState([jeFormTemplate])\r\n    const [data, setData] = useState({\r\n        je_ID: '',\r\n        name: '',\r\n        total: '',\r\n        je_date: '',\r\n        VALUES: []\r\n    })\r\n    // func\r\n    const addJeFrom = () =>{\r\n        setJeform([\r\n            ...jeForm,\r\n            jeFormTemplate\r\n        ])\r\n    }\r\n   \r\n    const handleRemoveJeform = index =>{\r\n        const filterJeform = [...jeForm];\r\n        filterJeform.splice(index, 1);\r\n        \r\n        setJeform(filterJeform)\r\n    }\r\n    \r\n    const calcuAmt = (data) =>{\r\n        const total = data && data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n    const calcuTotalDR = (data) =>{\r\n        const tDR = data && data.filter(dta => dta.tx_type =='DR')\r\n        const total = tDR&& tDR.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n    const calcuTotalCR = (data) =>{\r\n        const tCR = data && data.filter(dta => dta.tx_type =='CR')\r\n        const total = tCR&& tCR.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n\r\n    const handleChange = (e, index) =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n        const updatedJeform = jeForm.map((jef, i) => index == i ? Object.assign(jef, {[name]: value}): jef);\r\n        setJeform(updatedJeform)\r\n\r\n        if(name =='amount') {\r\n            const updatedJeform =  jeForm.map((jef, i) => index == i ?\r\n            Object.assign(jef, {'rcpt_no': data.je_ID, 'tx_date': data.je_date, 'postedBy_FK': user.username, 'createdAt': new Date(), 'uuid': data.je_ID  }): jef);\r\n        }\r\n\r\n        if(name =='pay_method' && calcuTotalDR(jeForm) != calcuTotalCR(jeForm) && calcuTotalCR(jeForm) != calcuTotalDR(jeForm)){\r\n            return setJeform([\r\n                ...jeForm,\r\n                jeFormTemplate\r\n            ])\r\n        }\r\n    }\r\n\r\n    useEffect(() =>{\r\n        \r\n        const fdata = jeForm.map(x =>Object.values(x))\r\n        const findal =[]\r\n        // const data = fdata\r\n        for(let i =0; i< fdata.length; i++){\r\n            const element = fdata[i]\r\n            findal.push(element)\r\n        }\r\n        \r\n         setData({\r\n            ...data,\r\n            VALUES: findal\r\n        })\r\n    }, [jeForm])\r\n\r\n    useEffect(() =>{\r\n        setData({\r\n            ...data,\r\n            total: calcuAmt(jeForm)\r\n        })\r\n    }, [data.VALUES])\r\n\r\n    // handle post\r\n    const handleSubmit =e =>{\r\n        if(calcuTotalDR(jeForm) > calcuTotalCR(jeForm) || calcuTotalCR(jeForm) > calcuTotalDR(jeForm)) {\r\n            return setError('Debit amount and Credit must be equal, highest tolerance is 0.1')\r\n        }\r\n        console.log(data)\r\n        setError('')\r\n        setOpen(true)\r\n        axios.post('/journal', data, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setOpen(false)\r\n            setMessage(result.data.message)\r\n            setSuccess(true)\r\n            \r\n            setData({\r\n                je_ID: '',\r\n                name: '',\r\n                total: '',\r\n                je_date: '',\r\n                VALUES: []\r\n            })\r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            if(error) {\r\n                return error.response\r\n            }\r\n        })\r\n    \r\n\r\n    }\r\n    useEffect(() =>{\r\n        setData({\r\n            ...data,\r\n            je_ID: 'je-'+ new Date().getSeconds().toLocaleString() + new Date().getMinutes().toLocaleString()+new Date().getMilliseconds()\r\n        })\r\n        setJeform([jeFormTemplate])\r\n    }, [success])\r\n    \r\n\r\n    return (\r\n        <div className={`${isWidget? 'isapp__Feed': 'app__Feed'}`}>\r\n           <AppHeader title='Journal' />\r\n           <AppSnackbar setOpen={setSuccess} open={success} message={message} />\r\n           <div className=\"row align-items-center justify-content-center d-flex m-1\" >\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                    {/* table */}\r\n                    <h3>Journal Entry<span> \r\n                        <IconButton color='secondary'\r\n                            onClick={() =>setIswidget(!isWidget)}\r\n                        >\r\n                        <FileCopy style={{ color: '#1ABB9C'}} />\r\n                        </IconButton></span></h3> \r\n                    <Grid container  spacing={2}\r\n                        alignItems='center'  className='mt-3'>\r\n                        <Grid item lg={4} md={4}>\r\n                            <TextField\r\n                                required\r\n                                name='name'\r\n                                size='small'\r\n                                label='Journal Name'\r\n                                fullWidth\r\n                                value={data.name}\r\n                                variant='outlined'\r\n                                placeholder='Journal Name Or Description'\r\n                                onChange={e =>setData({\r\n                                    ...data, name: e.target.value\r\n                                })}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item lg={8} md={8} justify='flex-end' className='d-flex'>\r\n                            <div className='d-flex align-items-center'\r\n                                style={{flexDirection: 'column', justifyContent: 'center'}}\r\n                            >\r\n                                <Typography variant='p'>\r\n                                    Amount\r\n                                </Typography>\r\n                                <Typography variant='h5'>\r\n                                    <b>\r\n                                        <s>N</s>:\r\n                                        {calcuAmt(jeForm)}\r\n                                    </b>\r\n                                </Typography>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item lg={3} md={3}>\r\n                            <TextField\r\n                                required\r\n                                name='je_date'\r\n                                size='small'\r\n                                type='date'\r\n                                fullWidth\r\n                                value={data.je_date}\r\n                                label='Transaction Date'\r\n                                variant='outlined'\r\n                                placeholder='Journal Name'\r\n                                onChange={e =>setData({\r\n                                    ...data,je_date: e.target.value\r\n                                })}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item lg={3} md={3} >\r\n                            <TextField\r\n                                required\r\n                                disabled\r\n                                name='je_ID'\r\n                                size='small'\r\n                                value={data.je_ID}\r\n                                label='Journal Id'\r\n                                variant='outlined'\r\n                                placeholder='Journal Id'\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Typography variant='h5' className='mt-3 mb-3'>\r\n                        Transaction Details\r\n                    </Typography>\r\n                    {\r\n                        Error && \r\n                        <Typography color='error'>\r\n                        {Error}\r\n                        </Typography>\r\n                    }\r\n                    <Paper>\r\n                        <Container className='p-3'>\r\n                        <table className=\"table-small table-hover table-bordered\" style={{width: '100%'}}>\r\n                            <thead>\r\n                                \r\n                                <th>#</th>\r\n                                <th> {' '} </th>\r\n                                <th>Account</th>\r\n                                <th>Tx. Type</th>\r\n                                <th>Amount (<s>N</s>)</th>\r\n                                <th>Description</th>\r\n                                <th>Pay Method</th>\r\n                                <th></th>\r\n                            </thead>\r\n                            <tbody id='je__Table'>\r\n                                {   jeForm&&\r\n                                    jeForm.map((jef, index) =>(\r\n                                        <tr>\r\n                                            <td>{index+1} </td>\r\n                                            <td\r\n                                                    onClick={() =>addJeFrom()}\r\n                                                >\r\n                                                    <span className='fa fa-plus-circle fa-1x'\r\n                                                        style={{color: '#20c997'}} \r\n                                                    /> \r\n                                            </td>\r\n                                            <td>\r\n                                                <select\r\n                                                    name='account_FK'\r\n                                                    value={jef.account_FK}\r\n                                                    placeholder='Account'\r\n                                                    style={{border: 'none'}}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                >\r\n                                                    <option value=''></option>\r\n                                                    {\r\n                                                        accounts&&\r\n                                                        accounts.map((acc, index) =>{\r\n                                                            const { code, name, balance_type } = acc\r\n                                                            return <option value={code} key={index} >{`${name} (${balance_type})`}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </select>\r\n                                            </td>\r\n                                            <td>\r\n                                                <select\r\n                                                    name='tx_type'\r\n                                                    value={jef.tx_type}\r\n                                                    style={{border: 'none'}}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                >\r\n                                                    <option value=''></option>\r\n                                                        <option value='DR'>Debit</option>\r\n                                                        <option value='CR'>Credit</option>\r\n                                                </select>\r\n                                            </td>\r\n                                            <td>\r\n                                                <input\r\n                                                    name='amount'\r\n                                                    type='number'\r\n                                                    placeholder='Amount'\r\n                                                    value={jef.amount}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n                                            <td>\r\n                                                <input\r\n                                                    name='description'\r\n                                                    placeholder='Description'\r\n                                                    value={jef.description}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n                                           <td>\r\n                                                <select\r\n                                                    name='pay_method'\r\n                                                    value={jef.pay_method}\r\n                                                    style={{border: 'none'}}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                >\r\n                                                    <option value=''></option>\r\n                                                    <option value='cash'>Cash</option>\r\n                                                    <option value='cheque'>Cheque</option>\r\n                                                </select>\r\n                                            </td>\r\n                                            \r\n                                            <td\r\n                                                onClick={() =>handleRemoveJeform(index)}\r\n                                            >\r\n                                                    <span className='fa fa-trash'\r\n                                                        style={{color: 'red'}}\r\n                                                    ></span>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                                <tr>\r\n                                    <td colSpan={5}\r\n                                       \r\n                                    >\r\n                                        <section\r\n                                            style={{display: 'flex', alignItems: 'center', justifyContent: 'flex-end'}}\r\n                                        >\r\n                                        <table className='table-sm'>\r\n                                            <thead>\r\n                                                <th>Total DR (<s>N</s>)</th>\r\n                                                <th>Total CR (<s>N</s>)</th>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <Typography variant='h6' color='error'>\r\n                                                            <b>\r\n                                                            {calcuTotalDR(jeForm)}\r\n                                                            </b>\r\n                                                        </Typography>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <Typography variant='h6'>\r\n                                                            <b>\r\n                                                            {calcuTotalCR(jeForm)}\r\n                                                            </b>\r\n                                                        </Typography>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                        </section>\r\n                                    </td>\r\n                                    <td colSpan={4}>\r\n                                    <Button\r\n                                        size='medium'\r\n                                        className='m-3'\r\n                                        variant='contained'\r\n                                        onClick={e =>handleSubmit(e)}\r\n                                        style={{background: '#2A3F54', color: 'white',\r\n                                            width: '80%', margin: 'auto'\r\n                                        }}\r\n                                    >post</Button>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        \r\n                        \r\n                        </Container>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JournalFeed\r\n","import { IconButton, Typography } from '@material-ui/core'\r\nimport { MoreVertOutlined } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectStaffPosted_Journals } from '../appState/appSlice'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst JournalWidget = ({ isWidget, setIswidget }) => {\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n    const staffJournals = useSelector(selectStaffPosted_Journals)\r\n    return (\r\n        <div className='app__Widget'>\r\n            <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Journal List' \r\n            />\r\n            <section className='app__WidgetContainer mt-3'>\r\n               <table className='table table-sm table-striped table-hover'>\r\n                   <thead>\r\n                       <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                       <th style={{ border: '1px solid #F7F7F7F7' }}>Name or Description</th>\r\n                       <th style={{ border: '1px solid #F7F7F7F7' }}>Amount (<s>N</s>)</th>\r\n                       <th style={{ border: '1px solid #F7F7F7F7' }}>Date</th>\r\n                       <th style={{ border: '1px solid #F7F7F7F7' }}>Action</th>\r\n                   </thead>\r\n                   <tbody>\r\n                       {\r\n                           staffJournals&&\r\n                           staffJournals.map((sje, index) =>{\r\n                               const { name, amount, je_date } = sje\r\n                               return (\r\n                                   <tr key={index}>\r\n                                       <td> {index+1} </td>\r\n                                       <td> \r\n                                           <Typography variant='p'\r\n                                            style={{color: '#20C997', cursor: 'pointer'}}\r\n                                           >\r\n                                           {`${name}`}\r\n                                           </Typography>\r\n                                       </td>\r\n                                       <td> {amount} </td>\r\n                                       <td> {new Date(je_date).toLocaleDateString()} </td>\r\n                                       <td\r\n                                        style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}\r\n                                       >\r\n                                           <div>\r\n                                           <IconButton size='small'>\r\n                                               <MoreVertOutlined style={{color: '#20c997'}} />\r\n                                           </IconButton>\r\n                                           </div>\r\n                                       </td>\r\n                                   </tr>\r\n                                   \r\n                               )\r\n                           })\r\n                           \r\n                       }\r\n                       {\r\n                           staffJournals&&\r\n                           <tr\r\n                            style={{background: '#2A3F54', color: 'white'}} \r\n                           >\r\n                               <td colSpan={2}>\r\n                                   <Typography variant='subtitle1'\r\n                                    style={{color: 'white'}}\r\n                                   >\r\n                                        <b>Total:</b>\r\n                                    </Typography>\r\n                               </td>\r\n                               <td>\r\n                                   <Typography variant='subtitle1'\r\n                                    style={{color: 'white'}}\r\n                                   >\r\n                                    <b>\r\n                                        <s>N</s>: {' '}\r\n                                        {\r\n                                       calcuAmt(staffJournals)\r\n                                        }\r\n                                    </b>\r\n                                   </Typography>\r\n                               </td>\r\n                               <td colSpan={2}></td>\r\n                           </tr>\r\n                       }\r\n                   </tbody>\r\n               </table>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JournalWidget\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setAccounts, setJournals, setStaffPosted_Journals, setUser } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport JournalFeed from '../components/JournalFeed'\r\nimport JournalWidget from '../components/JournalWidget'\r\n\r\nconst JournalEntryScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n\r\n    // func\r\n    const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_All_Posted_Journals =() =>{\r\n        axios.get('/journal', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(journals =>{\r\n            dispatch(setJournals(journals.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_All_Staff_Posted_Journals =() =>{\r\n        axios.get('/journal/user', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(journals =>{\r\n            dispatch(setStaffPosted_Journals(journals.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        get_AllAccounts()\r\n        get_Session()\r\n       \r\n    }, [])\r\n    \r\n    useEffect(() =>{\r\n        get_All_Posted_Journals()\r\n        get_All_Staff_Posted_Journals()\r\n    }, [open])\r\n\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <JournalFeed\r\n                setOpen={setOpen}\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <JournalWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JournalEntryScreen\r\n","import { Button, Paper } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectCustomers, selectPendingSales,} from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\n\r\nconst MdFeed = ({ setApplicant, setApplication, isWidget, setIswidget }) => {\r\n    const sales = useSelector(selectPendingSales)\r\n    const customers = useSelector(selectCustomers)\r\n\r\n    const handleSelect = (selected, application) =>{\r\n       \r\n        const selectedApplicant = customers&& customers.filter(customer => parseInt(customer.id) == parseInt(selected))\r\n        setApplicant(selectedApplicant[0])\r\n        setApplication(application)\r\n        setIswidget(true)\r\n    }\r\n\r\n    return (\r\n        <div className={`${isWidget? 'isapp__Feed': 'app__Feed'}`}>\r\n           \r\n            <AppHeader title='Applications' />\r\n            <section className='app__WidgetContainer'>\r\n               <Paper elevation={0} className='m-2 mt-3'>\r\n                   <table className='table table-sm table-bordered table-hover'>\r\n                       <thead>\r\n                           <th>Customer</th>\r\n                          {\r\n                            !isWidget&&\r\n                            <th>Property</th>\r\n                          }\r\n                           {\r\n                               !isWidget&&\r\n                               <th>Due Date</th>\r\n                           }\r\n                           <th>Amount</th>\r\n                           <th>Paid</th>\r\n                           <th>Action</th>\r\n                       </thead>\r\n                       <tbody>\r\n                           {\r\n                               sales &&\r\n                               sales.map((sale, index) =>{\r\n                                   const {\r\n                                        applicant_name, property_name, \r\n                                        due_date, amount, amount_paid, applicant\r\n                                    } = sale\r\n                                   return(\r\n                                    <tr key={index}>\r\n                                    <td style={{color: '#2A3F54'}}>\r\n                                        {applicant_name}\r\n                                    </td>\r\n                                    {\r\n                                        !isWidget&&\r\n                                        <td style={{color: '#2A3F54'}}>\r\n                                            {property_name}\r\n                                        </td>\r\n                                    }\r\n                                   { \r\n                                        !isWidget&&\r\n                                        <td> \r\n                                            {new Date(due_date).toLocaleDateString()} \r\n                                        </td>\r\n                                    }\r\n                                    <td> {amount} </td>\r\n                                    <td> {amount_paid} </td>\r\n                                    <td> \r\n                                        <Button\r\n                                            onClick={() =>handleSelect(applicant, sale)}\r\n                                            size='small' variant='contained' style={{color: 'white', \r\n                                            background: '#2A3F54', borderRadius: '50px'\r\n                                        }}> <span className='fa fa-eye mr-2' /> View</Button>\r\n                                    </td>\r\n                                    </tr>\r\n                                   )\r\n                               })\r\n                           }\r\n                       </tbody>\r\n                   </table>\r\n               </Paper>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MdFeed\r\n","import { Button, Checkbox, FormLabel, Grid, Paper, TextField, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Fragment } from 'react'\r\n\r\nconst Receipt = ({ sale_uuid, amount, date, applicant_name, property_name }) => {\r\n    return (\r\n        <Fragment>\r\n            <Grid item lg={12} md={12} sm={12}>\r\n                <Paper className='p-2 mb-5'>\r\n                    <div style={{ display: 'flex', alignItems: 'center',\r\n                        flexDirection: 'column'\r\n                    }}>\r\n                        <Typography variant='h3'>\r\n                            SANTOS ESTATE LTD.\r\n                        </Typography>\r\n                        <Typography variant='p'>\r\n                            Suite B22 AJB Mall, Gudu District, Abuja\r\n                        </Typography>\r\n                        <Typography variant='caption'>\r\n                            Tel: 08036488807, 08023058629\r\n                        </Typography>\r\n                        <div style={{display: 'flex', alignItems: 'center'}}>\r\n                            <Button variant='contained' style={{background: '#2A3F54', \r\n                                color: 'white'}}>\r\n                                CASH RECEIPT\r\n                            </Button>\r\n                            <Typography style={{marginLeft: '10px'}}>\r\n                                <b>NO: {sale_uuid} </b>\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{display: 'flex'}}>\r\n                        <p>\r\n                            Date: </p>\r\n                            <TextField \r\n                                fullWidth\r\n                                disabled\r\n                                className='ml-3'\r\n                                value={new Date(date).toLocaleDateString()}\r\n                                size='small'\r\n                            />\r\n                        \r\n                    </div>\r\n                    <div style={{display: 'flex'}}>\r\n                        <p>\r\n                            From: </p>\r\n                            <TextField\r\n                                disabled\r\n                                fullWidth\r\n                                size='small'\r\n                                value={applicant_name}\r\n                                className='ml-3'\r\n                            />\r\n                        \r\n                    </div>\r\n                    <div style={{display: 'flex'}}>\r\n                        <p>\r\n                            Sum:  </p>\r\n                            <TextField \r\n                                fullWidth\r\n                                disabled\r\n                                size='small'\r\n                                className='ml-3'\r\n                                value={Math.round(parseInt(amount))}\r\n                            />\r\n                        \r\n                    </div>\r\n                    <div style={{display: 'flex'}}>\r\n                        \r\n                            <TextField \r\n                                fullWidth\r\n                                size='small'\r\n                                disabled\r\n                            />\r\n                            <span>Naira</span>\r\n                            <TextField \r\n                            disabled \r\n                            value={`00.00`}\r\n                            className='ml-5'\r\n                            /> Kobo\r\n                        \r\n                    </div>\r\n                    <div style={{display: 'flex'}}>\r\n                            <FormLabel> Being payment for </FormLabel>\r\n                            <TextField \r\n                                fullWidth\r\n                                disabled\r\n                                size='small'\r\n                                value={property_name}\r\n                            />\r\n                        \r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center',\r\n                    justifyContent: 'space-between'}}>\r\n                        Cheque: <Checkbox style={{border: '1px solid color: black', \r\n                                                    background: '#2A3F54'}} /> \r\n                        Cash: <Checkbox style={{border: '1px solid color: black', \r\n                                                    background: '#2A3F54'}} />\r\n                        <div\r\n                        style={{border: '2px solid black'}}\r\n                        >\r\n                            <s>N</s><input\r\n                                readOnly\r\n                                value={Math.round(parseInt(amount))}\r\n                                style={{ border: 'none', outline: 'none', margin: '5px' }}\r\n                            /> :K\r\n                        </div>\r\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                            <TextField />\r\n                            <FormLabel>\r\n                                Receiver's Signature\r\n                            </FormLabel>\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n            </Grid>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Receipt\r\n","import { Button, Grid, IconButton, } from '@material-ui/core'\r\nimport { Close, } from '@material-ui/icons'\r\nimport { MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader } from 'mdbreact'\r\nimport React from 'react'\r\nimport Receipt from './Receipt'\r\n\r\nconst CashReceipt = ({ rows, isOpen, setIsOpen}) => {\r\n    return (\r\n        <div>\r\n            <MDBModal isOpen={isOpen} size='lg'  centered\r\n            >\r\n                <MDBModalHeader\r\n                    style={{ top: '0', position: 'sticky', zIndex: 222,\r\n                    background: '#2A3F54', color: 'white'\r\n                 }}\r\n                >Receipts <sup style={{color: '#20c997'}}> {rows && rows.length} </sup> </MDBModalHeader>\r\n                <MDBModalBody>\r\n                    <Grid container>\r\n                        \r\n                        {\r\n                            rows&&\r\n                            rows.map((row, index) =>{\r\n                                return (\r\n                                    <Receipt key={index} {...row} />\r\n                                )\r\n                            })\r\n                        }\r\n                       \r\n                    </Grid>\r\n                </MDBModalBody>\r\n                <MDBModalFooter>\r\n                    \r\n                    <Button\r\n                        variant='contained'\r\n                        \r\n                        style={{background: '#2A3F54', \r\n                        color: 'white', marginRight: '25px'}}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <IconButton color='secondary'\r\n                        onClick={() =>setIsOpen(!isOpen)}\r\n                    >\r\n                        <Close color='action' />\r\n                    </IconButton>\r\n                </MDBModalFooter>\r\n            </MDBModal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CashReceipt\r\n","import { Avatar, Button, Checkbox, FormControlLabel, FormLabel, Grid, IconButton, Paper, Select, TextField, Typography } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectBuildCategories, selectPropServices, selectToken, selectUser } from '../appState/appSlice'\r\nimport AppSnackbar from './global/AppSnackbar'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\nimport CashReceipt from './global/CashReceipt'\r\n\r\nconst MdWidget = ({ applicant, application,  open, setOpen, isWidget, setIswidget }) => {\r\n    const user = useSelector(selectUser)\r\n    const token = useSelector(selectToken)\r\n    const propServices = useSelector(selectPropServices)\r\n    const buildCategories = useSelector(selectBuildCategories)\r\n    const [success, setSuccess] = useState(false)\r\n    const [message, setMessage] = useState()\r\n    const [isOpen, setIsopen] = useState(false)\r\n    const [step, setStep] = useState(1)\r\n    const [plans, setPlans] = useState()\r\n    \r\n\r\n    // handle post\r\n    const handleApproval = e =>{\r\n        \r\n        e.preventDefault()\r\n        setOpen(true)\r\n        const body ={\r\n            id: application.id\r\n        }\r\n        axios.post(`/sale/update`, body, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setMessage(result.data.message)\r\n            setSuccess(true)\r\n            setOpen(false)\r\n            setIswidget(!isWidget)\r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n     // func\r\n     const get_Sales_Scheldules = (uuid) =>{\r\n        axios.get(`/sale/scheldule/${uuid}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(scheluls =>{\r\n           setPlans(scheluls.data)\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        return get_Sales_Scheldules(application.uuid)\r\n    }, [applicant, application])\r\n\r\n \r\n    return (\r\n        <div  className='app__Widget'>\r\n             <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Application Form' \r\n            />\r\n            \r\n            <CashReceipt rows={plans} isOpen={isOpen} setIsOpen={setIsopen} />\r\n            <AppSnackbar open={success} setOpen={setSuccess} message={message} />\r\n            \r\n           <div className=\"row align-items-center justify-content-center d-flex m-1\" >\r\n            </div>\r\n            <Grid container alignItems='center' justify='center'>\r\n                <Grid item lg={11} md={11} sm={12}>\r\n                    <Paper className='p-2'>\r\n                        <Grid item lg={12} md={12} sm={12}>\r\n                            <Grid container alignItems='center' justify='center'>\r\n                                {step==1&&<Grid item lg={9} md={9} sm={12}\r\n                                    style={{ display: 'flex', alignItems: 'center', \r\n                                        justifyContent: 'center', flexDirection: 'column',\r\n                                        \r\n                                    }}\r\n                                >\r\n                                   <Avatar \r\n                                        style={{width: '80px', height: '80px',\r\n                                            boxSizing: 'border-box', boxShadow: '0px 0px 1px 0px #000'\r\n                                        }}\r\n                                    />\r\n                                   \r\n                                    <div className='mt-1 p-1'\r\n                                        style={{ color: 'white', background: '#2A3F54',\r\n                                            display: 'flex', alignItems: 'center', height: '40px',\r\n                                            justifyContent: 'center', width: '80%', margin: 'auto',\r\n                                            boxSizing: 'border-box', boxShadow: '0px 0px 1px 0px #000'\r\n                                        }}\r\n                                    >\r\n                                        <h6>APPLICATION FORM \r\n                                           \r\n                                        </h6>\r\n                                    </div>\r\n                                    \r\n                                    <div className='mt-5 p-1'\r\n                                        style={{ color: 'white', background: '#2A3F54',\r\n                                            display: 'flex', alignItems: 'center', height: '40px',\r\n                                            justifyContent: 'center', width: '80%', margin: 'auto',\r\n                                            boxSizing: 'border-box', boxShadow: '0px 0px 5px 0px #000'\r\n                                        }}\r\n                                    >\r\n                                        <h6>A. PERSONAL DATA</h6>\r\n                                            \r\n                                    </div>\r\n                                </Grid>}\r\n                                \r\n                                {step==1&&<Grid item lg={3} md={3} sm={12} \r\n                                     style={{ display: 'flex', justifyContent: 'center' }}\r\n                                >\r\n                                    <Avatar\r\n                                        variant='square'\r\n                                        alt={applicant && applicant.customer_name[0]}\r\n                                        src={applicant && applicant.avatar}\r\n                                        style={{ width: '100px', height: '100px' ,\r\n                                            boxSizing: 'border-box', boxShadow: '0px 0px 1px 0px #000'\r\n                                        }} \r\n                                    />\r\n                                </Grid>}\r\n                            </Grid>\r\n                           \r\n                            {step==1&&<Grid container spacing={1} className='mt-3'>\r\n                                <Grid item lg={6} md={6} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        value={applicant&&applicant.customer_name}\r\n                                        variant='outlined'\r\n                                        label='Name of Applicant'\r\n                                        \r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.business_employer_name}\r\n                                        label='Business Name/ RC. No'\r\n                                        \r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={12} md={12} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.address_1}\r\n                                        label='Residential Address:'\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.phone_no}\r\n                                        label='Phone No.'\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.customer_email}\r\n                                        label='Email Address:'\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.customer_sex}\r\n                                        label='Gender'\r\n                                        \r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.customer_marital}\r\n                                        label='Marital Status'\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.country}\r\n                                        label='Nationality:'\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.customer_state}\r\n                                        label='State of Origin:'\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={12} md={12} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.customer_address}\r\n                                        label='Permanent Home Address'\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={12} md={12} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.postal_address}\r\n                                        label='Postal Address:'\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.occupation}\r\n                                        label='Occupation:'\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.place_work}\r\n                                        label='Place of Work:'\r\n                                    />\r\n                                </Grid>\r\n                                {/* <Grid item lg={12} md={12} sm={12}>\r\n                                    <FormLabel>Business/Employer's Name & Address:</FormLabel>\r\n                                    <TextField\r\n                                        name=''\r\n                                        fullWidth\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        \r\n                                    />\r\n                                </Grid> */}\r\n                                <Grid item lg={6} md={6} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.next_kin_name}\r\n                                        label='Name of Next Kin:'\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.next_kin_relate}\r\n                                        label='Related:'\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={12} md={12} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.next_kin_addrss}\r\n                                        label='Next of Kin Address'\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>}\r\n                           <Grid item lg={12} md={12} sm={12}>\r\n                               <Grid container>\r\n                               {\r\n                                step ==2&&\r\n                                <Grid item lg={12} md={12} sm={12}\r\n                                style={{ display: 'flex', \r\n                                    justifyContent: 'center', flexDirection: 'column',\r\n                                       \r\n                                    }}\r\n                                >\r\n                                    <div className='mt-2 p-1'\r\n                                        style={{ color: 'white', background: '#2A3F54',\r\n                                            display: 'flex',  height: '40px',\r\n                                            justifyContent: 'center', width: '100%',\r\n                                            boxSizing: 'border-box', boxShadow: '0px 0px 5px 0px #000'\r\n                                        }}\r\n                                    >\r\n                                        <h6>B.SELECT PROPERTY</h6>\r\n                                    </div>\r\n                                    <div className='mt-3' />\r\n                                    <FormLabel>Select Property</FormLabel>\r\n                                    <Select\r\n                                        fullWidth\r\n                                        name='property'\r\n                                        variant='outlined'\r\n                                        value={application.property}\r\n                                        onChange={e =>{}}\r\n                                        style={{ height: '40px', width: '100%', }}\r\n                                    >\r\n                                        {\r\n                                            propServices&&\r\n                                            propServices.map((ps, index) =>{\r\n                                                const {id, name} = ps\r\n                                                return (\r\n                                                    <option key={index} value={id}> {name} </option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                    <FormLabel className='mt-3'>Amount</FormLabel>\r\n                                    <TextField\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={application.amount}\r\n                                        placeholder='Amount'\r\n                                        \r\n                                    />\r\n                                    <FormLabel className='mt-3'>Date</FormLabel>\r\n                                    <TextField                                       \r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        name='sale_date'\r\n                                        value={new Date(application.sale_date).toLocaleDateString()}\r\n                                        placeholder='Date'\r\n                                        disabled\r\n                                        \r\n                                    />\r\n\r\n                                    <FormLabel className='mt-3'>Select Term</FormLabel>\r\n                                    <Select\r\n                                        fullWidth\r\n                                        name='period'\r\n                                        variant='outlined'\r\n                                        value={application.period}\r\n                                        style={{ height: '40px', width: '100%', margin: 'auto' }}\r\n                                    >\r\n                                        <option value={7}>7 Days</option>\r\n                                        <option value={14}>14 Days</option>\r\n                                        <option value={21}>21 Days</option>\r\n                                        <option value={28}>28 Days</option>\r\n                                        <option value={30}>30 Days</option>\r\n                                        <option value={60}>60 Days</option>\r\n                                        <option value={90}>90 Days</option>\r\n                                        <option value={120}>120 Days</option>\r\n                                        <option value={150}>150 Days</option>\r\n                                        <option value={180}>180 Days</option>\r\n                                        <option value={210}>210 Days</option>\r\n                                        <option value={240}>240 Days</option>\r\n                                        <option value={270}>270 Days</option>\r\n                                        <option value={300}>300 Days</option>\r\n                                        <option value={330}>330 Days</option>\r\n                                        <option value={360}>360 Days</option>\r\n                                    </Select>\r\n                                    <FormLabel className='mt-3'>Due Date</FormLabel>\r\n                                    <TextField\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={new Date(application.due_date).toLocaleDateString()}\r\n                                        placeholder='Due Date'\r\n                                        \r\n                                    />\r\n                                    <div>\r\n                                    <IconButton\r\n                                        onClick={() =>setIsopen(true)}\r\n                                    >\r\n                                        <span className='fa fa-eye' />\r\n                                    </IconButton>\r\n                                    </div>\r\n                                </Grid>\r\n\r\n                                \r\n                            }\r\n                           \r\n                            {\r\n                                step ==2&&\r\n                                <Grid item lg={12} md={12} sm={12}\r\n                                style={{ display: 'flex',\r\n                                    justifyContent: 'center', flexDirection: 'column',\r\n                                       \r\n                                    }}\r\n                                >\r\n                                    <div className='mt-2 mb-2 p-1'\r\n                                        style={{ color: 'white', background: '#2A3F54',\r\n                                            display: 'flex', alignItems: 'center', height: '40px',\r\n                                            justifyContent: 'center', width: '100%', margin: 'auto',\r\n                                            boxSizing: 'border-box', boxShadow: '0px 0px 5px 0px #000'\r\n                                        }}\r\n                                    >\r\n                                        <h6>C. CATEGORIES OF BUILDING</h6>\r\n                                    </div>\r\n                                    \r\n                                    {\r\n                                        buildCategories&&\r\n                                        buildCategories.map((bcategory, index) =>{\r\n                                            const {id, name} = bcategory\r\n                                            return (\r\n                                                <div className='d-flex ml-5'  key={index}>\r\n                                                    <FormControlLabel\r\n                                                    control={\r\n                                                            <Checkbox\r\n                                                                name='build_category'\r\n                                                                checked={application.build_category ==bcategory.id}\r\n                                                                style={{border: '1px solid color: black', \r\n                                                                background: '#2A3F54'}} \r\n                                                            />\r\n                                                        }\r\n                                                    label={name}\r\n                                                    />\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                     \r\n                                </Grid>\r\n                            }\r\n                               </Grid>\r\n                           </Grid>\r\n                           \r\n                            {\r\n                                step ==2&&\r\n                                <Grid item lg={12} md={12} sm={12}\r\n                                style={{ display: 'flex', alignItems: 'center', \r\n                                    justifyContent: 'center', flexDirection: 'column',\r\n                                       \r\n                                    }}\r\n                                >\r\n                                    <div className='mt-5 p-1'\r\n                                        style={{ color: 'white', background: '#2A3F54',\r\n                                            display: 'flex', alignItems: 'center', height: '40px',\r\n                                            justifyContent: 'center', width: '50%', margin: 'auto',\r\n                                            boxSizing: 'border-box', boxShadow: '0px 0px 5px 0px #000'\r\n                                        }}\r\n                                    >\r\n                                        <h6>D. MODE OF PAYMENT</h6>\r\n                                    </div>\r\n\r\n                                </Grid>\r\n                            }\r\n                            {\r\n                                step ==2&&\r\n                                <Grid item lg={12} md={12} sm={12}>\r\n                                    <ul className='mt-3'>\r\n                                        <li>\r\n                                            Note That Pament should be made after the developer's approval\r\n                                            before allocation. Each applicant is expected to pay for the follwing charges:\r\n                                        </li>\r\n                                        <li>\r\n                                            All Payments should be made to Santos Estate Ltd. and evidence of payment forwarded to our corporate office for issuance of receipt.\r\n                                        </li>\r\n                                        <li>\r\n                                            i have agreed that all refunds shall be limited to the deposit i made, less 10%  administrative charges.\r\n                                        </li>\r\n                                        <li>\r\n                                            \"Disclaimer\" SANTOS ESTATE LIMITED shall not be liable for any plot re-allocated if terms and conditions are not obligated timeously.\r\n                                        </li>\r\n                                    </ul>\r\n                                </Grid>\r\n                            }\r\n                            {\r\n                                step ==2&&\r\n                                <Grid item lg={12} md={12} sm={12}\r\n                                style={{ display: 'flex', alignItems: 'center', \r\n                                    justifyContent: 'center', flexDirection: 'column',\r\n                                       \r\n                                    }}\r\n                                >\r\n                                    <div className='mt-5 p-1'\r\n                                        style={{ color: 'white', background: '#2A3F54',\r\n                                            display: 'flex', alignItems: 'center', height: '40px',\r\n                                            justifyContent: 'center', width: '50%', margin: 'auto',\r\n                                            boxSizing: 'border-box', boxShadow: '0px 0px 5px 0px #000'\r\n                                        }}\r\n                                    >\r\n                                        <h6>D. DECLARATION</h6>\r\n                                    </div>\r\n\r\n                                </Grid>\r\n                            }\r\n                            {\r\n                                step ==2&&\r\n                                <Grid item lg={12} md={12} sm={12} className='mt-3'>\r\n                                    <ul style={{listStyle: 'none'}}>\r\n                                        <li>\r\n                                            I/We <input readOnly value={applicant.customer_name} style={{ border: 'none', borderBottom: '1px solid black', outline: 'none' }} />\r\n                                            whose name and address appeared above have declared that the above statements are true and correct to the best of any \r\n                                            knowledge, and i promise to abide by all rules and regulations given by the Developer\r\n                                        </li>\r\n                                    </ul>\r\n                                    <div\r\n                                        className='m-4'\r\n                                        style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-between',\r\n                                        }}\r\n                                    >\r\n                                        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                                            <input readOnly style={{ border: 'none', borderBottom: '1px solid black',\r\n                                                outline: 'none' }}\r\n                                                value={user.username}\r\n                                            />\r\n                                            <FormLabel>Application Checked By \r\n                                                <IconButton size='small'>\r\n                                                <span className='fa fa-pen' style={{ color: '#1ABB9C'}}/>\r\n                                                </IconButton>\r\n                                            </FormLabel>\r\n                                        </div>\r\n                                        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                                            <input style={{ border: 'none', borderBottom: '1px solid black',\r\n                                                outline: 'none' }} \r\n                                                value={new Date(application.sale_date).toLocaleDateString()}\r\n                                                readOnly\r\n                                            />\r\n                                            <FormLabel>Date</FormLabel>\r\n                                        </div>\r\n                                    </div>\r\n                                </Grid>\r\n                            }\r\n                            <Grid item lg={12} md={12} sm={12}\r\n                                style={{ display:'flex', justifyContent: 'center' }}\r\n                            >\r\n                                {step ==1&&<Button variant='contained'\r\n                                    className='m-3'\r\n                                    onClick={() =>setStep(2)}\r\n                                    style={{color: 'white', background: '#2A3F54' }}\r\n                                >\r\n                                    Next\r\n                                </Button>}\r\n                                {step==2&&<Button variant='contained'\r\n                                    className='m-3'\r\n                                    onClick={() =>setStep(1)}\r\n                                   color='default'\r\n                                >\r\n                                    Previous\r\n                                </Button>}\r\n                                {step ==2&&<Button variant='contained'\r\n                                    className='m-3'\r\n                                    onClick={e =>handleApproval(e)}\r\n                                    style={{color: 'white', background: '#2A3F54' }}\r\n                                >\r\n                                    Approve\r\n                                </Button>}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                    <div className='p-2' />\r\n                </Grid>\r\n            </Grid>\r\n        </div>           \r\n    )\r\n}\r\n\r\nexport default MdWidget\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setBuildCategories, setCustomers, setpendingSales, setPropServices, setUser,} from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport MdFeed from '../components/MdFeed'\r\nimport MdWidget from '../components/MdWidget'\r\n\r\nconst MdApproveScreen = () => {\r\n    const history = useHistory()\r\n    const dispacth = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n    const [applicant, setApplicant] = useState()\r\n    const [application, setApplication] = useState()\r\n\r\n\r\n    // func\r\n    const getProp_Services = () =>{\r\n        axios.get('/prop_service', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(ps =>{\r\n            dispacth(setPropServices(ps.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n     // func\r\n    const getCustomers = () =>{\r\n        axios.get('/customer', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(asset =>{\r\n            dispacth(setCustomers(asset.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const getBuildCategories = () =>{\r\n        axios.get('/build_category', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(categories =>{\r\n            dispacth(setBuildCategories(categories.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n     // func\r\n     const get_PendingSales = () =>{\r\n        axios.get(`/sale`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(sales =>{\r\n            dispacth(setpendingSales(sales.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    \r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispacth(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    \r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        getProp_Services()\r\n        getCustomers()\r\n        getBuildCategories()\r\n        get_Session()\r\n        \r\n    }, [])\r\n    useEffect(() =>{\r\n        return get_PendingSales()\r\n    }, [open])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <MdFeed\r\n                setOpen={setOpen}\r\n                isWidget={isWidget}\r\n                applicant={applicant}\r\n                setIswidget={setIswidget}\r\n                setApplicant={setApplicant}\r\n                setApplication={setApplication}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <MdWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    applicant={applicant}\r\n                    application={application}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MdApproveScreen\r\n","import React from 'react'\r\nimport { Avatar, IconButton, ListItem, ListItemAvatar, ListItemText, Paper } from '@material-ui/core'\r\nimport { ChevronRight, HistoryTwoTone } from '@material-ui/icons'\r\nimport { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectCustomers } from '../appState/appSlice'\r\nconst CustomerCard = ({post, uuid, name, cusID, code, amount_paid, avatar, handle_Set_Ticket}) => {\r\n    const customers = useSelector(selectCustomers)\r\n    const get_Avatar = (ID) =>{\r\n        const avatar = customers && customers.filter(cus =>cus.id ==ID)[0].avatar\r\n        return avatar\r\n    }\r\n    return (\r\n       <Fragment>\r\n            <Paper className='mb-2' style={{background: '#F7F7F7F7'}}>\r\n                <ListItem button\r\n                    onClick={() => handle_Set_Ticket? handle_Set_Ticket(cusID, code, amount_paid): {}}\r\n                >\r\n                    <ListItemAvatar>\r\n                        <Avatar \r\n                            alt={name}\r\n                            src={get_Avatar(cusID)}\r\n                        />\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                        primary={name}\r\n                    />\r\n                    <Link to={`/sales/tx/${uuid}/${name}`}>\r\n                        <IconButton size='small'>\r\n                            <HistoryTwoTone \r\n                                style={{color: '#20c997'}}\r\n                            />\r\n                        </IconButton>\r\n                    </Link>\r\n                    {\r\n                        post&&\r\n                        <IconButton size='small'>\r\n                            <ChevronRight />\r\n                        </IconButton>\r\n                    }\r\n                </ListItem>\r\n            </Paper>\r\n        </Fragment>\r\n)\r\n}\r\n\r\nexport default CustomerCard\r\n","import { Avatar, Button, Checkbox, Divider, FormLabel, Grid, IconButton, Paper, TextField, Typography } from '@material-ui/core'\r\nimport { CheckCircle, Close, Print } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectUser } from '../appState/appSlice'\r\n\r\nconst PostingTicket = ({ data, message, \r\n        handleChange, handlePost, setData, setMessage\r\n    }) => {\r\n    const user = useSelector(selectUser)\r\n    const printReceipt =()=>{\r\n        window.print()\r\n    }\r\n    return (\r\n        <Grid item lg={12} md={12} sm={12}>\r\n            <Paper className='p-2 mb-5 printerarea'>\r\n                <div style={{ display: 'flex', alignItems: 'center',\r\n                    flexDirection: 'column'\r\n                }}>\r\n                    <Typography variant='h3'>\r\n                        SANTOS ESTATE LTD.\r\n                    </Typography>\r\n                    <Typography variant='p'>\r\n                        Suite B22 AJB Mall, Gudu District, Abuja\r\n                    </Typography>\r\n                    <Typography variant='caption'>\r\n                        Tel: 08036488807, 08023058629\r\n                    </Typography>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        {\r\n                            message && \r\n                            <IconButton size='small'>\r\n                                <CheckCircle style={{color: '#20c997'}} />\r\n                            </IconButton>\r\n                        }\r\n                        <Button variant='contained' style={{background: '#2A3F54', \r\n                            color: 'white'}}>\r\n                            CASH RECEIPT\r\n                        </Button>\r\n                        <Typography style={{marginLeft: '10px'}}>\r\n                            <b>NO: {data.rcpt_no} </b>\r\n                        </Typography>\r\n                    </div>\r\n                </div>\r\n                <div style={{display: 'flex'}}>\r\n                    <p>\r\n                        Date: </p>\r\n                        <TextField \r\n                            fullWidth\r\n                            type='date'\r\n                            placeholder='Due Date'\r\n                            className='ml-3'\r\n                            name='due_date'\r\n                            value={data.due_date}\r\n                            size='small'\r\n                            onChange={e =>handleChange(e)}\r\n                        />\r\n                    \r\n                </div>\r\n                <div style={{display: 'flex'}}>\r\n                    <p>\r\n                        From: </p>\r\n                        <TextField\r\n                            fullWidth\r\n                            size='small'\r\n                            placeholder='Customer(client)'\r\n                            value={data.applicant_name}\r\n                            className='ml-3'\r\n                        />\r\n                    \r\n                </div>\r\n                <div style={{display: 'flex'}}>\r\n                    <p>\r\n                        Sum:  </p>\r\n                        <TextField \r\n                            fullWidth\r\n                            size='small'\r\n                            type='number'\r\n                            name='amount'\r\n                            className='ml-3'\r\n                            value={data.amount}\r\n                            placeholder='Amount (10000)'\r\n                            value={data.amount}\r\n                            onChange={e =>handleChange(e)}\r\n\r\n                        />\r\n                    \r\n                </div>\r\n                <div style={{display: 'flex'}}>\r\n                        <div style={{flex: 1, display: 'flex'}}>\r\n                            <p>Amt:</p>\r\n                            <TextField \r\n                            fullWidth\r\n                            size='small'\r\n                            className='ml-3'\r\n                            placeholder='Amount in words'\r\n                            name='amount_in_words'\r\n                            value={data.amount_in_words}\r\n                            onChange={e =>handleChange(e)}\r\n                        />\r\n                        </div>\r\n                        <span>Naira</span>\r\n                        <TextField \r\n                        disabled \r\n                        value={`00.00`}\r\n                        className='ml-5'\r\n                        /> Kobo\r\n                    \r\n                </div>\r\n                <div style={{display: 'flex'}}>\r\n                        <FormLabel> Being payment for:  </FormLabel>\r\n                        <TextField\r\n                            fullWidth\r\n                            size='small'\r\n                            name='description'\r\n                            placeholder='Property'\r\n                            value={data.description}\r\n                            onChange={e =>handleChange(e)}\r\n                        />\r\n                    \r\n                </div>\r\n                <div style={{display: 'flex', alignItems: 'center',\r\n                justifyContent: 'space-between'}}>\r\n                    Cheque: <Checkbox\r\n                                size='small'\r\n                                checked={data.pay_method=='cheque'}\r\n                                onChange={() =>{setData({\r\n                                    ...data,\r\n                                    pay_method: 'cheque'\r\n                                })}}\r\n                                style={{border: '1px solid color: black', \r\n                                background: '#2A3F54'}} \r\n                            /> \r\n                    Cash: <Checkbox\r\n                                size='small' \r\n                                checked={data.pay_method=='cash'}\r\n                                onChange={() =>{setData({\r\n                                    ...data,\r\n                                    pay_method: 'cash'\r\n                                })}}                           \r\n                                style={{border: '1px solid color: black', \r\n                                background: '#2A3F54'}} \r\n                            />\r\n                    Trans: <Checkbox\r\n                                size='small' \r\n                                checked={data.pay_method=='transfer'}\r\n                                onChange={() =>{setData({\r\n                                    ...data,\r\n                                    pay_method: 'transfer'\r\n                                })}}                           \r\n                                style={{border: '1px solid color: black', \r\n                                background: '#2A3F54'}} \r\n                            />\r\n                    <div\r\n                    style={{border: '2px solid black'}}\r\n                    >\r\n                        <s>N</s><input\r\n                            readOnly\r\n                            value={data.amount}\r\n                            style={{ border: 'none', outline: 'none', margin: '5px' }}\r\n                        /> :K\r\n                    </div>\r\n                    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                        <Avatar src={user.signature} />\r\n                        <FormLabel>\r\n                            Receiver's Signature\r\n                        </FormLabel>\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div\r\n                    className='hide-on-print'\r\n                    style={{display: 'flex', alignItems: 'center', \r\n                        justifyContent: 'center', gap: '30px'}}\r\n                    >\r\n                   { !message &&\r\n                    <Button variant='contained'\r\n                            className='mt-3'\r\n                                onClick={e =>handlePost(e)}\r\n                            style={{ color: 'white', background: '#2A3F54', borderRadius: '5px'}}\r\n                        >\r\n                            Post\r\n                        </Button>\r\n                    }\r\n\r\n                    {\r\n                        message &&\r\n                        <Fragment>\r\n                             <Button\r\n                                variant='contained'\r\n                               className='mt-3'\r\n                               endIcon={<Print />}\r\n                                onClick={() =>printReceipt()}\r\n                                style={{ color: 'white', background: '#20c997', borderRadius: '5px'}}\r\n                            >\r\n                                print\r\n                            </Button>\r\n                            <Button\r\n                                className='mt-3'\r\n                                onClick={() =>setMessage(false)}\r\n                                endIcon={<Close color='error' />}\r\n                                variant='outlined' color='secondary'>\r\n                                Clear\r\n                            </Button>\r\n                        </Fragment>\r\n                       \r\n                    }\r\n                </div>\r\n            </Paper>\r\n        </Grid>\r\n  \r\n    )\r\n}\r\n\r\nexport default PostingTicket\r\n","import { Grid,  IconButton,  Paper } from '@material-ui/core'\r\nimport { Search } from '@material-ui/icons'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectDuePayments, selectToken, selectTxAccounts, selectUser, setDuePayments,} from '../appState/appSlice'\r\nimport CustomerCard from './CustomerCard'\r\nimport AppHeader from './global/AppHeader'\r\nimport AppSnackbar from './global/AppSnackbar'\r\nimport PostingTicket from './PostingTicket'\r\n\r\nconst PostingFeed = ({ setOpen, }) => {\r\n    const user = useSelector(selectUser)\r\n    const token = useSelector(selectToken)\r\n    const [success, setSuccess] = useState(false)\r\n    const [message, setMessage] = useState()\r\n    const [searchKey, setSearchKey] = useState()\r\n    const [txSearch, setTxSearch] = useState() \r\n    const txAccounts = useSelector(selectTxAccounts)\r\n\r\n    const [data, setData] = useState({\r\n        rcpt_no: '', \r\n        tx_type: 'CR',\r\n        pay_method: '', \r\n        amount: '', \r\n        description: '',\r\n        account_FK: '', \r\n        postBy_FK: '', \r\n        applicant_name:'',\r\n        property_name: '',\r\n        due_date: '',\r\n        amount_in_words: '',\r\n        amount_paid: '',\r\n        amount_in_words: '',\r\n        signature: ''\r\n    })\r\n\r\n    //  func\r\n    const handleChange =e=>{\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n    }\r\n    const handle_Set_Ticket = (applicant, code, paid) =>{\r\n        const filterduepay = txAccounts &&\r\n        txAccounts.filter(due =>due.cusID == applicant )\r\n       \r\n        if(filterduepay.length >0){\r\n            return setData({\r\n                ...data,\r\n                account_FK: code,\r\n                signature: user && user.signature,\r\n                rcpt_no: filterduepay[0].uuid,\r\n                applicant_name: filterduepay[0].name,\r\n                property_name: filterduepay[0].property_name,\r\n                amount_paid: parseInt(paid),\r\n                description: 'Bein payment for '\r\n            })\r\n            \r\n        }\r\n       \r\n    }\r\n\r\n  \r\n    // handle post\r\n    const handlePost = e =>{\r\n        e.preventDefault()\r\n        setOpen(true)\r\n        const body = {\r\n            data\r\n        }\r\n        axios.post('/transaction', body, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setOpen(false)\r\n            setSuccess(true)\r\n            setMessage(result.data.message)\r\n            \r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            if(error){\r\n                console.log(error.response)\r\n            }\r\n        })\r\n        \r\n    } \r\n\r\n    const handleClear = () =>{\r\n        setMessage('')\r\n        setData({\r\n                rcpt_no: '', \r\n                tx_type: '',\r\n                pay_method: '', \r\n                amount: '', \r\n                description: '',\r\n                account_FK: '', \r\n                tx_date: '', \r\n                postBy_FK: '',\r\n                amount_in_words: ''\r\n            })\r\n    }\r\n\r\n    // handle search\r\n    useEffect(() =>{\r\n        const filterTxAccounts = txAccounts && \r\n        txAccounts.filter(txacc => txacc.name.includes(searchKey))\r\n        return setTxSearch(filterTxAccounts)\r\n    }, [searchKey])\r\n\r\n    return (\r\n        <div className='app__Feed'>\r\n            <AppSnackbar open={success} setOpen={setSuccess} message={message} />\r\n            <AppHeader title='Posting' />\r\n            <div className='m-3'>\r\n                {/* search component */}\r\n                <section className='search__Container'>\r\n                    <div>\r\n                        <input\r\n                            name='search'\r\n                            value={searchKey}\r\n                            placeholder='Search...'\r\n                            onChange={e =>setSearchKey(e.target.value)}\r\n                        />\r\n                        <IconButton size='small'>\r\n                            <Search style={{color: 'GrayText'}} />\r\n                        </IconButton>\r\n                    </div>\r\n                </section>\r\n                <Grid container spacing={2}>\r\n                <Grid item lg={3} md={3} className='hide-on-print'>\r\n                   {\r\n                        txSearch?\r\n                        txSearch.map((txacc, index) => {\r\n                            return (\r\n                             <CustomerCard\r\n                                 post\r\n                                 key={index} {...txacc} \r\n                                 handle_Set_Ticket={handle_Set_Ticket}\r\n                             />\r\n                            )\r\n                        })\r\n                        :\r\n                       txAccounts&& \r\n                       txAccounts.map((txacc, index) => {\r\n                           return (\r\n                            <CustomerCard\r\n                                post\r\n                                key={index} {...txacc} \r\n                                handle_Set_Ticket={handle_Set_Ticket}\r\n                            />\r\n                           )\r\n                       })\r\n                   }\r\n                    \r\n                </Grid>\r\n                    <Grid item lg={9} md={9} style={{marginTop: -40}} >\r\n                        <PostingTicket\r\n                            message={message}\r\n                            setMessage={handleClear}\r\n                            handlePost={handlePost}\r\n                            handleChange={handleChange}\r\n                            data={data} setData={setData}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>     \r\n    )\r\n}\r\n\r\nexport default PostingFeed\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken,  setCustomers, setDuePayments, setTxAccounts, setUser, } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport PostingFeed from '../components/PostingFeed'\r\n\r\nconst PostingScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n\r\n     // func\r\n    const getCustomers = () =>{\r\n        axios.get('/customer', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(asset =>{\r\n            dispatch(setCustomers(asset.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Tx_Accounts = () =>{\r\n        axios.get('/transaction/accounts', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setTxAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n     // func\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    const handle_Get_Due_Repayment = () =>{\r\n        axios.get(`/transaction/scheldules`,{\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(dues =>{\r\n            dispatch(setDuePayments(dues.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error) return error.response.statusText\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        getCustomers()\r\n        get_Session()\r\n        \r\n    }, [])\r\n    useEffect(() =>{\r\n       get_Tx_Accounts()\r\n       handle_Get_Due_Repayment()\r\n    }, [open])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} setOpen={setOpen} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <PostingFeed\r\n                setOpen={setOpen}\r\n            />            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostingScreen\r\n","import { Button, FormGroup, FormLabel, Grid, IconButton, Select, TextField, Typography } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectToken, } from '../../appState/appSlice'\r\nimport AppSnackbar from '../global/AppSnackbar'\r\n\r\nconst PropServiceForm = ({ open, setOpen}) => {\r\n    const token = useSelector(selectToken)\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [success, setSuccess] = useState()\r\n    const [error, setError] = useState()\r\n    const [locations, setLocations] = useState()\r\n    const [body, setBody] = useState({\r\n        name: ''\r\n    })\r\n    const [add, setAdd] = useState(false)\r\n    const [psData, setPsData] = useState({\r\n        ps_type: '',\r\n        name: '',\r\n        sku: '',\r\n        category: '',\r\n        location: '',\r\n        product_class: '',\r\n        quantity: '',\r\n        qty_athDate: '',\r\n        reorder_point: '',\r\n        purchase_info: '',\r\n        cost: '',\r\n        description: '',\r\n        sale_options: '',\r\n        sale_price: '',\r\n        purchase_option: '',\r\n        asset_account_FK: '',\r\n        createdBy_FK: '',\r\n        expense_acc_FK: '',\r\n        income_acc_FK: '',\r\n        vendor_FK: '',\r\n    })\r\n    // func\r\n    const handleGet_Locations = () =>{\r\n        axios.get('/location', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(locations =>{\r\n            setLocations(locations.data)\r\n        })\r\n        .catch(error =>{\r\n            if(error) {\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const handle_Add_Location = () =>{\r\n        axios.post('/location', body, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(locations =>{\r\n            setBody('')\r\n            setAdd(false)\r\n        })\r\n        .catch(error =>{\r\n            if(error) {\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleChange = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n\r\n        setPsData({\r\n            ...psData,\r\n            [name]: value\r\n        })\r\n    }\r\n    const handle_Add_Prop_Service =e =>{\r\n        e. preventDefault()\r\n        // if(Error){\r\n        //     return Error\r\n        // }\r\n        setOpen(true)\r\n        axios.post('/prop_service', psData, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setOpen(false)\r\n            setIsOpen(true)\r\n            setSuccess(result.data.message)\r\n            setPsData({\r\n                ps_type: '',\r\n                name: '',\r\n                sku: '',\r\n                category: '',\r\n                product_class: '',\r\n                quantity: '',\r\n                qty_athDate: '',\r\n                reorder_point: '',\r\n                purchase_info: '',\r\n                cost: '',\r\n                description: '',\r\n                sale_options: '',\r\n                sale_price: '',\r\n                purchase_option: '',\r\n                asset_account_FK: '',\r\n                createdBy_FK: '',\r\n                expense_acc_FK: '',\r\n                income_acc_FK: '',\r\n                vendor_FK: '',\r\n            })\r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            if(error){\r\n                return setError(error.response.statusText)\r\n            }\r\n        })\r\n    }\r\n    useEffect(() =>{\r\n        Object.keys(psData).map(key =>{\r\n            if(psData[key].length <=0){\r\n                return setError('Form not valid')\r\n              \r\n            }\r\n            setError('')\r\n        })\r\n        \r\n    },[psData])\r\n\r\n    useEffect(() =>{\r\n        handleGet_Locations()\r\n    }, [add])\r\n    return (\r\n        <Fragment>\r\n            <AppSnackbar \r\n                open={isOpen} \r\n                setOpen={setIsOpen} \r\n                message={success} \r\n            />\r\n            <form className='mt-3 pl-2 pr-2'>\r\n                <Grid container spacing={2}>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormLabel>Property/Service Type</FormLabel>\r\n                        <FormGroup>\r\n                            <Select style={{height: '40px'}}\r\n                                label='Type'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='ps_type'\r\n                                value={psData.ps_type}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value></option>\r\n                                <option value='service'>Service</option>\r\n                                <option value='property'>Property</option>\r\n                            </Select>\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormLabel>Location\r\n                            <IconButton\r\n                                onClick={() =>setAdd(!add)}\r\n                                size='small' className=' ml-2'\r\n                            >\r\n                                <span className='fa fa-plus-circle'\r\n                                    style={{ color: '#20c997' }}\r\n                                />\r\n                            </IconButton>\r\n                            {\r\n                                add &&\r\n                                <Button\r\n                                    className='ml-4'\r\n                                    onClick={() =>handle_Add_Location()}\r\n                                    size='small' variant='contained'\r\n                                    style={{background: '#2A3F54', color: 'white'}}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            }\r\n                            {\r\n                                add&&\r\n                                <span>\r\n                                    <TextField\r\n                                        value={body.name}\r\n                                        placeholder='Location Name'\r\n                                        onChange={e =>setBody({\r\n                                            ...body,\r\n                                            name: e.target.value\r\n                                        })}\r\n                                    />\r\n                                </span>\r\n                            }\r\n                        </FormLabel>\r\n                        {!add && <FormGroup>\r\n                            <Select style={{height: '40px'}}\r\n                                label='Location'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='location'\r\n                                value={psData.location}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value>Select</option>\r\n                               {\r\n                                   locations&&\r\n                                   locations.map((location, index) =>{\r\n                                       const {id, name} = location;\r\n                                       return (\r\n                                        <option key={index} value={id}>{name}</option>\r\n                                       )\r\n                                   })\r\n                               }\r\n                               \r\n                            </Select>\r\n                        </FormGroup>}\r\n                    </Grid>\r\n                    {/* <Grid item lg={6} md={6}>\r\n                        <FormLabel>Property/Service Class</FormLabel>\r\n                        <FormGroup>\r\n                            <Select style={{height: '40px'}}\r\n                                label='Class'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='product_class'\r\n                                value={psData.product_class}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value></option>\r\n                                <option value=\"class1\">Class1</option>\r\n                                <option value=\"class2\">Class</option>\r\n                                <option value=\"class3\">Class3</option>\r\n                            </Select>\r\n                        </FormGroup>\r\n                    </Grid> */}\r\n                    {/* <Grid item lg={6} md={6}>\r\n                        <FormLabel>Income Account</FormLabel>\r\n                        <Select\r\n                            label='Class'\r\n                            size='small'\r\n                            variant='outlined'\r\n                            name='income_acc_FK'\r\n                            fullWidth\r\n                            value={psData.income_acc_FK}\r\n                            onChange={e =>handleChange(e)}\r\n                            style={{height: '40px'}}\r\n                        >\r\n                            <option value=''></option>\r\n                            {\r\n                                accounts&&\r\n                                accounts.map((acc, index) =>{\r\n                                    const { id, name, balance_type } = acc\r\n                                    return <option value={id} key={index} >{`${name} (${balance_type})`}</option>\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </Grid> */}\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Name'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='name'\r\n                                value={psData.name}\r\n                                placeholder='Property/Service Name'\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    {/* <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='SKU'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='sku'\r\n                                value={psData.sku}\r\n                                placeholder='Stock unit'\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid> */}\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Price/Rate'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='sale_price'\r\n                                placeholder='Salling Price'\r\n                                value={psData.sale_price}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    \r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Quantity'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='quantity'\r\n                                placeholder='Product Quantity'\r\n                                value={psData.quantity}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    {/* <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Qty as of Date ?'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='qty_athDate'\r\n                                type='date'\r\n                                placeholder='Qty as of date ?'\r\n                                value={psData.qty_athDate}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid> */}\r\n                    {/* <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Reorder Point'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='reorder_point'\r\n                                placeholder='Qty Reorder Point '\r\n                                value={psData.reorder_point}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid> */}\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Property Cost'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='cost'\r\n                                placeholder='Purchase Cost price'\r\n                                value={psData.cost}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={12} md={12}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Description'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='description'\r\n                                placeholder='Description'\r\n                                value={psData.description}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    {/* <Grid item lg={12} md={12}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Purchase Info'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='purchase_info'\r\n                                placeholder='Purchase Information'\r\n                                value={psData.purchase_info}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid> */}\r\n\r\n                    {/* <Grid item lg={6} md={6}>\r\n                        <FormLabel>Expense Account</FormLabel>\r\n                        <FormGroup>\r\n                            <Select style={{height: '40px'}}\r\n                                label='Sex'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='expense_acc_FK'\r\n                                value={psData.expense_acc_FK}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value>Select</option>\r\n                                {\r\n                                    accounts&&\r\n                                    accounts.map((acc, index) =>{\r\n                                        const { id, name, balance_type } = acc\r\n                                        return <option value={id} key={index} >{`${name} (${balance_type})`}</option>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </FormGroup>\r\n                    </Grid> */}\r\n                    {/* <Grid item lg={6} md={6}>\r\n                        <FormLabel>Inventory Asset Account</FormLabel>\r\n                        <FormGroup>\r\n                            <Select style={{height: '40px'}}\r\n                                label='Inventory asset account'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='asset_account_FK'\r\n                                value={psData.asset_account_FK}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value>Select</option>\r\n                                {\r\n                                    accounts&&\r\n                                    accounts.map((acc, index) =>{\r\n                                        const { id, name, balance_type } = acc\r\n                                        return <option value={id} key={index} >{`${name} (${balance_type})`}</option>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </FormGroup>\r\n                    </Grid> */}\r\n                    {/* <Grid item lg={12} md={12}>\r\n                        <FormLabel>Vendor Buying From</FormLabel>\r\n                        <FormGroup>\r\n                            <Select style={{height: '40px'}}\r\n                                label='Vendor Buying From'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='vendor_FK'\r\n                                value={psData.vendor_FK}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value>Select</option>\r\n                                {\r\n                                    vendors&&\r\n                                    vendors.map((vendor, index) =>{\r\n                                        const { id, vendor_name} = vendor\r\n                                        return <option value={id} key={index} >{`${vendor_name}`}</option>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </FormGroup>\r\n                    </Grid>                             */}\r\n                   \r\n                    <Grid item lg={12} md={12}>\r\n                        {/* {\r\n                            Error&&\r\n                            <Typography variant='caption' color='error'>\r\n                                {Error}\r\n                            </Typography>\r\n                        } */}\r\n                        <Button\r\n                            // disabled={Error}\r\n                            onClick={e =>handle_Add_Prop_Service(e)}\r\n                            color='default' variant='contained'\r\n                            style={{ color: 'white', background: '#2A3F54', width: '100%'}}\r\n                        >\r\n                            Add\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default PropServiceForm\r\n","import React from 'react'\r\nimport PropServiceForm from './form/PropServiceForm'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst PropServiceWidget = ({ open, setOpen, isWidget, setIswidget }) => {\r\n    return (\r\n        <div className='app__Widget'>\r\n            <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Add Property/ Service' \r\n            />\r\n            <section className='app__WidgetContainer'>\r\n                <PropServiceForm\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                />\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PropServiceWidget\r\n","import React from 'react'\r\nimport { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PropServiceList = ({ index, sale_price, \r\n        description, name, ps_type,cost, \r\n        active, isWidget\r\n    }) => {\r\n    return (\r\n        <Fragment>\r\n            <tr>\r\n                <td>{index+1} </td>\r\n                <td> {name} </td>\r\n                <td> {ps_type} </td>\r\n                <td> {description} </td>\r\n                <td> {sale_price} </td>\r\n                <td> {cost} </td>\r\n                \r\n                {!isWidget&& <td id=\"btn\"  className='p-2'>\r\n                    <button>Actions</button>\r\n                    <div className=\"btn__poper\">\r\n                        <Link to='#' rel=\"noopener noreferrer\">Details</Link>\r\n                        <Link to='#' rel=\"noopener noreferrer\">Edit</Link>\r\n                    </div>\r\n                </td> }                      \r\n            </tr>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default PropServiceList\r\n","import { Container, IconButton, Paper } from '@material-ui/core'\r\nimport { PlusOne } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectPropServices } from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\nimport PropServiceList from './global/PropServiceList'\r\n\r\nconst PropertyServiceFeed = ({ isWidget, setIswidget }) => {\r\n    const propServices = useSelector(selectPropServices)\r\n    return (\r\n        <div className={`${isWidget? 'isapp__Feed': 'app__Feed'}`}>\r\n           <AppHeader title='Property/Service' />\r\n           <div className=\"row align-items-center justify-content-center d-flex m-1\" >\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                    {/* table */}\r\n                    <h3>Property/ Servicer List <span> \r\n                        <IconButton color='secondary'\r\n                            onClick={() =>setIswidget(!isWidget)}\r\n                        >\r\n                        <PlusOne style={{ color: '#1ABB9C'}} />\r\n                        </IconButton></span></h3> \r\n                    <Paper>\r\n                        <Container className='p-3'>\r\n                        <table className=\"table-small table-hover table-bordered\" style={{width: '100%'}}>\r\n                            <thead>\r\n                                <th>#</th>\r\n                                <th>Name</th>\r\n                                <th>Type</th>\r\n                                <th> Description</th>\r\n                                <th>Sale Price</th>\r\n                                <th>Purchase Price</th>\r\n                                {!isWidget&&<th>Actions</th>}\r\n                            </thead>\r\n                            <tbody>\r\n                                \r\n                                {\r\n                                   propServices&&\r\n                                   propServices.map((ps, index) =>{\r\n                                        return <PropServiceList\r\n                                            index={index}\r\n                                            {...ps}\r\n                                            isWidget={isWidget}\r\n                                        />\r\n                                    })\r\n\r\n                                }\r\n                                    \r\n                            </tbody>\r\n                        </table>\r\n                        {propServices&& !propServices.length>0&&\r\n                            <div className=\"alert alert-warning\">\r\n                            <h6>No Property or Service Availabe</h6>\r\n                            </div>\r\n                        }\r\n                        </Container>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PropertyServiceFeed\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setAccounts, setPropServices, setUser, setVendors } from '../appState/appSlice'\r\nimport PropServiceWidget from '../components/PropServiceWidget'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport PropertyServiceFeed from '../components/PropertyServiceFeed'\r\n\r\nconst PropertyServiceScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n    // func\r\n    const getProp_Services = () =>{\r\n        axios.get('/prop_service', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(ps =>{\r\n            dispatch(setPropServices(ps.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n       // func\r\n       const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const getVendors = () =>{\r\n        axios.get('/vendor', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(vendor =>{\r\n            dispatch(setVendors(vendor.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        getProp_Services()\r\n        get_AllAccounts()\r\n        getVendors()\r\n        get_Session()\r\n    },[open])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <PropertyServiceFeed\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <PropServiceWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PropertyServiceScreen\r\n","import { Button, Container, FormLabel, Grid, IconButton, Paper, Select, TextField, Typography } from '@material-ui/core'\r\nimport { Delete, FileCopy, PlusOne, PlusOneOutlined, PlusOneRounded } from '@material-ui/icons'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectAccounts, selectCustomers, selectToken } from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\n\r\nconst ReceivePaymentFeed = ({ isWidget, setIswidget }) => {\r\n    const token = useSelector(selectToken)\r\n    const accounts = useSelector(selectAccounts)\r\n    const customers = useSelector(selectCustomers)\r\n    const [invoice, setInvoice] = useState()\r\n    const recievePayFormTemplate = {description: '', due_date:'', orig_amount: '', amount_pay: '',  };\r\n    const [receivePayForm, setReceivePayform] = useState([recievePayFormTemplate])\r\n    const [data, setData ] = useState({\r\n        customer_FK: '',\r\n        pay_date: '',\r\n        pay_method: '',\r\n        total: '',\r\n        deposit_account: ''\r\n    })\r\n    const handleSetPostData = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n\r\n    } \r\n\r\n    // func\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n\r\n    // func\r\n    const addReceivePayFrom = () =>{\r\n        setReceivePayform([\r\n            ...receivePayForm,\r\n            recievePayFormTemplate\r\n        ])\r\n    }\r\n    const handleChange = (e, index) =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n        const updatedreceivePayform = receivePayForm.map((jef, i) => index == i ? Object.assign(jef, {[name]: value}): jef);\r\n        setReceivePayform(updatedreceivePayform)\r\n    }\r\n    const handleRemovereceivePayform = (index) =>{\r\n        const filterreceivePayform = [...receivePayForm];\r\n        filterreceivePayform.splice(index, 1);\r\n        \r\n        setReceivePayform(filterreceivePayform)\r\n    }\r\n    const handleSubmit =e =>{\r\n        console.log(receivePayForm)\r\n    }\r\n\r\n    const get_Customer_Invoice = () =>{\r\n        axios.get(`/invoice/open_invoice/${data.customer_FK}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setInvoice(result.data)\r\n            console.log(result.data)\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        get_Customer_Invoice()\r\n    }, [data.customer_FK])\r\n    return (\r\n        <div className={`${isWidget? 'isapp__Feed': 'app__Feed'}`}>\r\n           <AppHeader title='Receive Payment' />\r\n           <div className=\"row align-items-center justify-content-center d-flex m-1\" >\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                    {/* table */}\r\n                    {/* <h3>Received Payment\r\n                        <span> \r\n                        <IconButton color='secondary'\r\n                            onClick={() =>setIswidget(!isWidget)}\r\n                        >\r\n                        <FileCopy style={{ color: '#1ABB9C'}} />\r\n                        </IconButton></span>\r\n                    </h3>  */}\r\n                        {/* to do make it a component */}\r\n                        <Grid container spacing={2} className='p-3'>\r\n                            <Grid item lg={4} md={4}>\r\n                                <FormLabel>Customer</FormLabel>\r\n                                <select\r\n                                    name='customer_FK'\r\n                                   \r\n                                    placeholder='Customer'\r\n                                    style={{border: 'none'}}\r\n                                    onChange={e =>handleSetPostData(e)}\r\n                                >\r\n                                    <option value=''>Select</option>\r\n                                    {\r\n                                        customers&&\r\n                                        customers.map((cus, index) =>{\r\n                                            const{id, customer_name} = cus\r\n                                            return <option key={index} value={id} > {customer_name} </option>\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </Grid>\r\n                                \r\n                                <Grid item lg={8} md={8}\r\n                                    style={{display: 'flex', \r\n                                    justifyContent: 'flex-end', alignItems: 'flex-end', flexDirection: 'column'}}\r\n                                >\r\n                                    <FormLabel>Received Amount</FormLabel>\r\n                                    <Typography variant='h5'>\r\n                                        <s>N</s>: {\r\n                                            invoice&&\r\n                                            calcuAmt(invoice)\r\n                                        }\r\n                                    </Typography>\r\n                                </Grid>\r\n                                \r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Pay Method</FormLabel>\r\n                                    <select\r\n                                        name='pay_method'\r\n                                        onChange={e =>handleSetPostData(e)}\r\n                                        style={{width: '100%', outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                    >\r\n                                        <option></option>\r\n                                        <option value='cash'>Cash</option>\r\n                                        <option value='cheque'>Cheque</option>\r\n                                    </select>\r\n                                </Grid>\r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Payment Date</FormLabel>\r\n                                    <input\r\n                                        name='pay_date'\r\n                                        type='date'\r\n                                        value={data.pay_date}\r\n                                        onChange={e =>handleSetPostData(e)}\r\n                                        style={{width: '100%', outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Deposit To</FormLabel>\r\n                                    <select\r\n                                        name='deposit_account'\r\n                                        value={data.deposit_account}\r\n                                        style={{width: '100%', outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                    >\r\n                                        <option></option>\r\n                                        <option value='cash'>Cash</option>\r\n                                        {\r\n                                            accounts&&\r\n                                            accounts.map((acc, index) =>{\r\n                                                const{id, name} = acc;\r\n                                                return <option key={index} value={id}> {name} </option>\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                </Grid>\r\n                            \r\n                        </Grid>\r\n                        <h5>\r\n                            Details\r\n                        </h5>\r\n                    <Paper>\r\n                        <Container className='p-3'>\r\n                        <table className=\"table-small table-hover table-bordered\" style={{width: '100%'}}>\r\n                            <thead>\r\n                                \r\n                                <th>#</th>\r\n                                {/* <th> {' '} </th> */}\r\n                                <th>Description</th>\r\n                                <th>Due Date</th>\r\n                                <th>Amount (<s>N</s>) </th>\r\n                               \r\n                            </thead>\r\n                            <tbody id='je__Table'>\r\n                                {\r\n                                    invoice && \r\n                                    invoice.map((invoi, index) =>{\r\n                                        const { amount, uuid, due_date } = invoi\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td> { index+1} </td>\r\n                                                <td>\r\n                                                    <Typography variant='p'\r\n                                                        style={{cursor: 'pointer', color: '#20C997'}}\r\n                                                    >\r\n                                                        { `Invoice (${uuid})` }\r\n                                                    </Typography>\r\n                                                </td>\r\n                                                <td> { new Date(due_date).toLocaleDateString() } </td>\r\n                                                <td> { amount } </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                {/* {\r\n                                    receivePayForm.map((jef, index) =>(\r\n                                        <tr>\r\n                                            <td>{index+1} </td>\r\n                                            <td\r\n                                                    onClick={() =>addReceivePayFrom()}\r\n                                                >\r\n                                                    <span className='fa fa-plus-circle fa-1x'></span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <select\r\n                                                    name='pro_service'\r\n                                                    value={jef.account}\r\n                                                    placeholder='Account'\r\n                                                    style={{border: 'none'}}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                >\r\n                                                    <option value=''></option>\r\n                                                    {\r\n                                                        accounts&&\r\n                                                        accounts.map((acc, index) =>{\r\n                                                            const { id, name, balance_type } = acc\r\n                                                            return <option value={id} key={index} >{`${name} (${balance_type})`}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </select>\r\n                                            </td>\r\n                                            \r\n                                            <td>\r\n                                                <input\r\n                                                    name='due_date'\r\n                                                    value={jef.due_date}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                            <td>\r\n                                                <input\r\n                                                    name='qty'\r\n                                                    type='number'\r\n                                                    placeholder='Old Amount'\r\n                                                    value={jef.orig_amount}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                            <td>\r\n                                                <input\r\n                                                    name='rate'\r\n                                                    type='number'\r\n                                                    placeholder='Payment Amount'\r\n                                                    value={jef.amount_pay}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                         \r\n                                        </tr>\r\n                                    ))\r\n                                } */}\r\n                            \r\n                            </tbody>\r\n                        </table>\r\n                        {invoice&& !invoice.length>0&&\r\n                            <div className=\"alert alert-warning\">\r\n                            <h6>No Invoice Availabe For Selected Customer</h6>\r\n                            </div>\r\n                        }\r\n                        <Button\r\n                           className='m-3'\r\n                           variant='contained'\r\n                           onClick={e =>handleSubmit(e)}\r\n                           style={{background: '#2A3F54', color: 'white'}}\r\n                        >Save</Button>\r\n                        </Container>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReceivePaymentFeed\r\n","import { Paper } from '@material-ui/core'\r\nimport React from 'react'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst ReceivePaymentWidget = ({ open, setOpen, isWidget, setIswidget }) => {\r\n    return (\r\n        <div className='app__Widget'>\r\n            <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Received Payment' \r\n            />\r\n            <section className='app__WidgetContainer'>\r\n                {/* <AccountCreationForm\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                /> */}\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReceivePaymentWidget\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setAccounts, setCustomers, setUser } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport ReceivePaymentFeed from '../components/ReceivePaymentFeed'\r\nimport ReceivePaymentWidget from '../components/ReceivePaymentWidget'\r\n\r\nconst ReceivePaymentScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n\r\n    // func\r\n    const getCustomers = () =>{\r\n        axios.get('/customer', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(asset =>{\r\n            dispatch(setCustomers(asset.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        get_AllAccounts()\r\n        getCustomers()\r\n        get_Session()\r\n    }, [])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <ReceivePaymentFeed\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <ReceivePaymentWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReceivePaymentScreen\r\n","import { Button, Grid, Typography } from '@material-ui/core'\r\nimport { UndoRounded } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectPaymentHistory, selectTxAccounts } from '../appState/appSlice'\r\nimport CustomerCard from './CustomerCard'\r\nimport AppHeader from './global/AppHeader'\r\n\r\nconst SalePaidHistoryFeed = () => {\r\n    const params = useParams()\r\n    const {name} = params\r\n    const history = useHistory()\r\n    const txAccounts = useSelector(selectTxAccounts)\r\n    const paymentHistorys = useSelector(selectPaymentHistory)\r\n    return (\r\n        <div className='app__Feed'>\r\n            <AppHeader title='Posting' />\r\n            <div className='m-3'>\r\n                <Grid container spacing={2}>\r\n                    <Grid item lg={3} md={3}>\r\n                    {\r\n                        txAccounts&&\r\n                        txAccounts.map((txacc, index) => {\r\n                            return (\r\n                                <CustomerCard key={index} {...txacc} \r\n                                    \r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                        \r\n                    </Grid>\r\n                    <Grid item lg={9} md={9} >\r\n                        <table className='table table-sm table-striped table-hover'>\r\n                            <thead>\r\n                                <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                                <th style={{ border: '1px solid #F7F7F7F7' }}>Description</th>\r\n                                <th style={{ border: '1px solid #F7F7F7F7' }}>Date</th>\r\n                                <th style={{ border: '1px solid #F7F7F7F7' }}>RCPT. NO.</th>\r\n                                <th style={{ border: '1px solid #F7F7F7F7' }}>Amount (<s>N</s>)</th>\r\n                                <th style={{ border: '1px solid #F7F7F7F7' }}> Pay Method </th>\r\n                                <th style={{ border: '1px solid #F7F7F7F7' }}> Status </th>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    paymentHistorys &&\r\n                                    paymentHistorys.map((pay, index) =>{\r\n                                        const { tx_date, description, tx_amount, rcpt_no, pay_method } = pay\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td> {index+1} </td>\r\n                                                <td>\r\n                                                \r\n                                                    {description}\r\n                                                \r\n                                                </td>\r\n                                                <td> {new Date(tx_date).toLocaleDateString()} </td>\r\n                                                <td> {rcpt_no} </td>\r\n                                                <td> { tx_amount } </td>\r\n                                                <td> {pay_method} </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                {paymentHistorys && paymentHistorys.length > 0 &&\r\n                                    <tr\r\n                                    style={{background: '#2A3F54', color: 'white'}}\r\n                                    >\r\n                                        <td>  </td>\r\n                                        <td colSpan={2}>\r\n                                            <Typography variant={'h6'}>\r\n                                                Outstanding Balance\r\n                                            </Typography>\r\n                                        </td>\r\n                                    {\r\n                                        paymentHistorys && paymentHistorys.length>0&&\r\n                                        <td colSpan={3}>\r\n                                            <Typography variant={'h6'}\r\n                                                style={{color: 'white'}}\r\n                                            >\r\n                                                <s>N</s>: \r\n                                            {\r\n                                                parseInt(paymentHistorys[0].amount) -\r\n                                                parseInt(paymentHistorys[0].amount_paid)\r\n                                            }\r\n                                            </Typography>\r\n                                            \r\n                                        </td>\r\n                                    }\r\n                                    </tr>\r\n                                }\r\n                            </tbody>\r\n                           \r\n                        </table>\r\n                        {\r\n                            !paymentHistorys.length >0&&\r\n                            \r\n                            <div className='alert alert-warning'>\r\n                                {`Ops!!! ${name} have no repayment history`}\r\n                            </div>\r\n                        \r\n                        }\r\n                        <section\r\n                            className='mt-5'\r\n                            style={{display: 'flex', alignItems: 'center', \r\n                            justifyContent: 'center'}}\r\n                        >\r\n                        <Button\r\n                            size='medium'\r\n                            variant='contained'\r\n                            onClick={() =>history.goBack()}\r\n                            style={{background: '#2A3F54',color: 'white'}}\r\n                            endIcon={<UndoRounded style={{color: '#20c997'}} />}\r\n                        >\r\n                            Back\r\n                        </Button>\r\n                        </section>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SalePaidHistoryFeed\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken,  setCustomers, setDuePayments, setPaymentHistory, setTxAccounts, setUser, } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport SalePaidHistoryFeed from '../components/SalePaidHistoryFeed'\r\n\r\nconst SalePaymentHistScreen = () => {\r\n    const params = useParams()\r\n    const {uuid} = params\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n\r\n     // func\r\n    const getCustomers = () =>{\r\n        axios.get('/customer', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(asset =>{\r\n            dispatch(setCustomers(asset.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Payment_History = () =>{\r\n        axios.get(`/sale/payment_history/${uuid}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(phistory =>{\r\n            dispatch(setPaymentHistory(phistory.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n  \r\n\r\n    const get_Tx_Accounts = () =>{\r\n        axios.get('/transaction/accounts', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setTxAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n     // func\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    const handle_Get_Due_Repayment = () =>{\r\n        axios.get(`/transaction/scheldules`,{\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(dues =>{\r\n            dispatch(setDuePayments(dues.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error) return error.response.statusText\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        getCustomers()\r\n        get_Session()\r\n        \r\n    }, [])\r\n    useEffect(() =>{\r\n        get_Tx_Accounts()\r\n        handle_Get_Due_Repayment()\r\n      \r\n    }, [open])\r\n\r\n    useEffect(() => {\r\n        get_Payment_History()\r\n        \r\n    }, [uuid])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} setOpen={setOpen} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <SalePaidHistoryFeed\r\n                setOpen={setOpen}\r\n            />            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SalePaymentHistScreen\r\n","import { IconButton, Select } from '@material-ui/core'\r\nimport { Close } from '@material-ui/icons'\r\nimport { MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader } from 'mdbreact'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectCustomers } from '../../appState/appSlice'\r\n\r\nconst SelectApplicant = ({ open, setOpen, applicant, setApplicant }) => {\r\n    const [selected, setSelected] = useState()\r\n    const customers = useSelector(selectCustomers)\r\n    useEffect(() =>{\r\n        const selectedApplicant = customers&& customers.filter(customer => parseInt(customer.id) == parseInt(selected))\r\n        setApplicant(selectedApplicant[0])\r\n        setOpen(!open)\r\n        \r\n    }, [selected])\r\n    return (\r\n        <div>\r\n            <MDBModal isOpen={open} centered backdrop={false}>\r\n                <MDBModalHeader>Select Applicant</MDBModalHeader>\r\n                <MDBModalBody>\r\n                   \r\n                    <Select\r\n                        variant='outlined'\r\n                        name='custom_FK'\r\n                        value={selected}\r\n                        style={{height: '40px', width: '100%'}}\r\n                        onChange={e =>setSelected(e.target.value)}\r\n                    >\r\n                        <option>Select</option>\r\n                        {\r\n                            customers&&\r\n                            customers.map((customer, i) =>{\r\n                                const {id, customer_name} = customer\r\n                                return <option key={i} value={id}> {customer_name} </option>\r\n                            })\r\n                        }\r\n                    </Select>\r\n                                        \r\n                </MDBModalBody>\r\n                <MDBModalFooter>\r\n                   \r\n                    <IconButton color='secondary'\r\n                        onClick={() =>setOpen(!open)}\r\n                    >\r\n                        <Close color='action' />\r\n                    </IconButton>\r\n                </MDBModalFooter>\r\n            </MDBModal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectApplicant\r\n","import { Avatar, Button, Checkbox, FormControlLabel, FormLabel, Grid, IconButton, Paper, Select, TextField, Typography } from '@material-ui/core'\r\nimport { FileCopy,  } from '@material-ui/icons'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectBuildCategories, selectPropServices, selectToken, selectUser } from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\nimport AppSnackbar from './global/AppSnackbar'\r\nimport CashReceipt from './global/CashReceipt'\r\nimport SelectApplicant from './global/SelectApplicant'\r\n\r\nconst SaleFeed = ({ setOpen, isWidget, setIswidget, add_BuildCategories }) => {\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(selectUser)\r\n    const token = useSelector(selectToken)\r\n    const propServices = useSelector(selectPropServices)\r\n    const buildCategories = useSelector(selectBuildCategories)\r\n    const [success, setSuccess] = useState(false)\r\n    const [message, setMessage] = useState()\r\n    const [isOpen, setIsopen] = useState(false)\r\n    const [select, setSelect] = useState(false)\r\n    const [applicant, setApplicant] = useState()\r\n    const [step, setStep] = useState(1)\r\n    const [plans, setPlans] = useState()\r\n    const [body, setBody] = useState({\r\n        name: ''\r\n    })\r\n    const [add, setAdd] = useState(false)\r\n    const [data, setData] = useState({\r\n        uuid: '',\r\n        applicant_name: '',\r\n        build_category: '',\r\n        property: '',\r\n        due_date: '',\r\n        period: '',\r\n        amount: '',\r\n        sale_date: '',\r\n        applicant: '',\r\n        property_name: '',\r\n        VALUES: []\r\n    })\r\n\r\n    const handleSetPostData = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n\r\n    }\r\n    \r\n    const handleChange = (index) => {\r\n       setData({ ...data, build_category: index});\r\n    };\r\n\r\n    const handleSetTerm = (e) =>{\r\n        const d = new Date()\r\n        const sd = new Date()\r\n        const value = e.target.value;\r\n         const duedate = d.setDate(sd.getDate()+parseInt(value))\r\n            return setData({\r\n                ...data,\r\n                period: value,\r\n                due_date: new Date(duedate)\r\n            })\r\n    }\r\n\r\n    const start = data.sale_date? new Date(data.sale_date): new Date()\r\n    const end = new Date(data.due_date)\r\n    const rows = []\r\n    const handleDate = () =>{\r\n        let loop = new Date(start)\r\n        const division =  data.period/30;\r\n        while(loop <= end) {\r\n            \r\n            const newDate = loop.setDate(data.period<=28?loop.getDate() +data.period: loop.getDate() +31);\r\n            loop = new Date(newDate)\r\n            rows.push({\r\n                sale_uuid: data.uuid,\r\n                applicant_name: applicant&&applicant.customer_name,\r\n                amount: data.period <=28? parseInt(data.amount)/1 : parseInt(data.amount) / Math.round(division),\r\n                period: data.period,\r\n                date: new Date(newDate),\r\n                property_name: data.property_name\r\n            })\r\n        }\r\n    }\r\n    const handleSetValues = (d) =>{\r\n        const fdata = d.map(x =>Object.values(x));\r\n        const findal = []\r\n        for(let i =0; i< fdata.length; i++){\r\n            const element = fdata[i];\r\n            findal.push(element)\r\n        }\r\n        // console.log(findal)\r\n        return setData({\r\n            ...data,\r\n            VALUES: findal\r\n        })\r\n    }\r\n\r\n    // handle post\r\n    const handlePost = e =>{\r\n        e.preventDefault()\r\n        setOpen(true)\r\n        axios.post('/sale', data, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setOpen(false)\r\n            setSuccess(true)\r\n            setMessage(result.data.message)\r\n            setData({\r\n                uuid: '',\r\n                applicant_name: '',\r\n                build_category: '',\r\n                property: '',\r\n                due_date: '',\r\n                period: '',\r\n                amount: '',\r\n                sale_date: '',\r\n                applicant: '',\r\n                property_name: '',\r\n                VALUES: []\r\n            })\r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            if(error){\r\n                console.log(error.response)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        handleDate()\r\n        setPlans(rows)\r\n        handleSetValues(rows)\r\n    }, [data.property, data.due_date])\r\n\r\n    \r\n    \r\n    useEffect(() =>{\r\n        \r\n       if(data.property){\r\n        const prop = parseInt(data.property);\r\n        const filterProperty = propServices? propServices.filter(ps =>parseInt(ps.id) == prop ): null;\r\n      \r\n        setData({\r\n            ...data,\r\n            property_name: filterProperty? filterProperty[0].name: null,\r\n            property: filterProperty? filterProperty[0].id: null,\r\n            amount: filterProperty? filterProperty[0].sale_price: 0\r\n        })\r\n        \r\n       }\r\n        \r\n    }, [data.property])\r\n    \r\n    useEffect(() =>{\r\n        setData({\r\n            ...data,\r\n            applicant: applicant && applicant.id,\r\n            applicant_name:  applicant && applicant.customer_name\r\n        })\r\n    }, [applicant])\r\n\r\n    useEffect(() =>{\r\n        setData({\r\n            ...data,\r\n            uuid:  new Date().getSeconds().toLocaleString() + new Date().getMinutes().toLocaleString()+new Date().getMilliseconds()\r\n        })\r\n    }, [success])\r\n    return (\r\n        <div className={`${isWidget? 'isapp__Feed': 'app__Feed'}`}>\r\n            <SelectApplicant \r\n                open={select}\r\n                setOpen={setSelect}\r\n                applicant={applicant}\r\n                setApplicant={setApplicant}\r\n            />\r\n            <CashReceipt rows={plans} isOpen={isOpen} setIsOpen={setIsopen} />\r\n            <AppSnackbar open={success} setOpen={setSuccess} message={message} />\r\n            <AppHeader title='Application Form' />\r\n           <div className=\"row align-items-center justify-content-center d-flex m-1\" >\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                    {/* table */}\r\n                    <h3>Application Entry<span> \r\n                        <IconButton color='secondary'\r\n                            onClick={() =>setIswidget(!isWidget)}\r\n                        >\r\n                        <FileCopy style={{ color: '#1ABB9C'}} />\r\n                        </IconButton></span></h3>\r\n                </div>\r\n            </div>\r\n            <Grid container alignItems='center' justify='center'>\r\n                <Grid item lg={10} md={10} sm={12}>\r\n                    <Paper className='p-2'>\r\n                        <Grid item lg={12} md={12} sm={12}>\r\n                            <Grid container alignItems='center' justify='center'>\r\n                                {step==1&&<Grid item lg={9} md={9} sm={12}\r\n                                    style={{ display: 'flex', alignItems: 'center', \r\n                                        justifyContent: 'center', flexDirection: 'column',\r\n                                        \r\n                                    }}\r\n                                >\r\n                                   <Avatar \r\n                                        style={{width: '100px', height: '100px',\r\n                                            boxSizing: 'border-box', boxShadow: '0px 0px 1px 0px #000'\r\n                                        }}\r\n                                    />\r\n                                    <div style={{ position: 'absolute', marginTop: '-70px', marginLeft: '60px' }}>\r\n                                        <IconButton\r\n                                            onClick={() =>setSelect(!select)}\r\n                                        >\r\n                                            <span className='fa fa-plus-circle' style={{ color: '#1ABB9C'}}/>\r\n                                        </IconButton>\r\n                                    </div>\r\n                                    <div className='mt-2 p-1'\r\n                                        style={{ color: 'white', background: '#2A3F54',\r\n                                            display: 'flex', alignItems: 'center', height: '40px',\r\n                                            justifyContent: 'center', width: '50%', margin: 'auto',\r\n                                            boxSizing: 'border-box', boxShadow: '0px 0px 1px 0px #000'\r\n                                        }}\r\n                                    >\r\n                                        <h6>APPLICATION FORM \r\n                                           \r\n                                        </h6>\r\n                                    </div>\r\n                                    \r\n                                    <div className='mt-5 p-1'\r\n                                        style={{ color: 'white', background: '#2A3F54',\r\n                                            display: 'flex', alignItems: 'center', height: '40px',\r\n                                            justifyContent: 'center', width: '50%', margin: 'auto',\r\n                                            boxSizing: 'border-box', boxShadow: '0px 0px 5px 0px #000'\r\n                                        }}\r\n                                    >\r\n                                        <h6>A. PERSONAL DATA</h6>\r\n                                            \r\n                                    </div>\r\n                                </Grid>}\r\n                                \r\n                                {step==1&&<Grid item lg={3} md={3} sm={12} \r\n                                     style={{ display: 'flex', justifyContent: 'center' }}\r\n                                >\r\n                                    <Avatar \r\n                                        variant='square'\r\n                                        alt={applicant && applicant.customer_name[0]}\r\n                                        src={applicant && applicant.avatar}\r\n                                        style={{ width: '150px', height: '150px' ,\r\n                                            boxSizing: 'border-box', boxShadow: '0px 0px 1px 0px #000'\r\n                                        }} \r\n                                    />\r\n                                </Grid>}\r\n                            </Grid>\r\n                           \r\n                            {applicant && step==1&&<Grid container spacing={2} className='mt-3'>\r\n                                <Grid item lg={6} md={6} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        value={applicant&&applicant.customer_name}\r\n                                        variant='outlined'\r\n                                        label='Name of Applicant'\r\n                                        \r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.business_employer_name}\r\n                                        label='Business Name & RC. No Corporate Body'\r\n                                        \r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={12} md={12} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.address_1}\r\n                                        label='Residential Address:'\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.phone_no}\r\n                                        label='Phone No.'\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.customer_email}\r\n                                        label='Email Address:'\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.customer_sex}\r\n                                        label='Gender'\r\n                                        \r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.customer_marital}\r\n                                        label='Marital Status'\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.country}\r\n                                        label='Nationality:'\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.customer_state}\r\n                                        label='State of Origin:'\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={12} md={12} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.customer_address}\r\n                                        label='Permanent Home Address'\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={12} md={12} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.postal_address}\r\n                                        label='Postal Address:'\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.occupation}\r\n                                        label='Occupation:'\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.place_work}\r\n                                        label='Place of Work:'\r\n                                    />\r\n                                </Grid>\r\n                                {/* <Grid item lg={12} md={12} sm={12}>\r\n                                    <FormLabel>Business/Employer's Name & Address:</FormLabel>\r\n                                    <TextField\r\n                                        name=''\r\n                                        fullWidth\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        \r\n                                    />\r\n                                </Grid> */}\r\n                                <Grid item lg={6} md={6} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.next_kin_name}\r\n                                        label='Name of Next Kin:'\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.next_kin_relate}\r\n                                        label='Relationship With Next of Kin:'\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={12} md={12} sm={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={applicant && applicant.next_kin_addrss}\r\n                                        label='Next of Kin Address'\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>}\r\n                           <Grid item lg={12} md={12} sm={12}>\r\n                               <Grid container>\r\n                               {\r\n                                step ==2&&\r\n                                <Grid item lg={6} md={6} sm={12}\r\n                                style={{ display: 'flex', \r\n                                    justifyContent: 'center', flexDirection: 'column',\r\n                                       \r\n                                    }}\r\n                                >\r\n                                    <div className='mt-5 p-1'\r\n                                        style={{ color: 'white', background: '#2A3F54',\r\n                                            display: 'flex',  height: '40px',\r\n                                            justifyContent: 'center', width: '100%',\r\n                                            boxSizing: 'border-box', boxShadow: '0px 0px 5px 0px #000'\r\n                                        }}\r\n                                    >\r\n                                        <h6>B.SELECT PROPERTY</h6>\r\n                                    </div>\r\n                                    <div className='mt-3' />\r\n                                    <FormLabel>Select Property</FormLabel>\r\n                                    <Select\r\n                                        fullWidth\r\n                                        name='property'\r\n                                        variant='outlined'\r\n                                        value={data.property}\r\n                                        onChange={e =>handleSetPostData(e)}\r\n                                        style={{ height: '40px', width: '100%', }}\r\n                                    >\r\n                                        {\r\n                                            propServices&&\r\n                                            propServices.map((ps, index) =>{\r\n                                                const {id, name} = ps\r\n                                                return (\r\n                                                    <option key={index} value={id}> {name} </option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                    <FormLabel className='mt-3'>Amount</FormLabel>\r\n                                    <TextField\r\n                                        disabled\r\n                                       \r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={data.amount}\r\n                                        placeholder='Amount'\r\n                                        \r\n                                    />\r\n                                    <FormLabel className='mt-3'>Date</FormLabel>\r\n                                    <TextField                                       \r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        name='sale_date'\r\n                                        value={data.sale_date}\r\n                                        placeholder='Date'\r\n                                        type='date'\r\n                                        onChange={e =>handleSetPostData(e)}\r\n                                        \r\n                                    />\r\n\r\n                                    <FormLabel className='mt-3'>Select Term</FormLabel>\r\n                                    <Select\r\n                                        fullWidth\r\n                                        name='period'\r\n                                        variant='outlined'\r\n                                        value={data.period}\r\n                                        onChange={e =>handleSetTerm(e)}\r\n                                        style={{ height: '40px', width: '100%', margin: 'auto' }}\r\n                                    >\r\n                                        <option value={7}>7 Days</option>\r\n                                        <option value={14}>14 Days</option>\r\n                                        <option value={21}>21 Days</option>\r\n                                        <option value={28}>28 Days</option>\r\n                                        <option value={30}>30 Days</option>\r\n                                        <option value={60}>60 Days</option>\r\n                                        <option value={90}>90 Days</option>\r\n                                        <option value={120}>120 Days</option>\r\n                                        <option value={150}>150 Days</option>\r\n                                        <option value={180}>180 Days</option>\r\n                                        <option value={210}>210 Days</option>\r\n                                        <option value={240}>240 Days</option>\r\n                                        <option value={270}>270 Days</option>\r\n                                        <option value={300}>300 Days</option>\r\n                                        <option value={330}>330 Days</option>\r\n                                        <option value={360}>360 Days</option>\r\n                                    </Select>\r\n                                    <FormLabel className='mt-3'>Due Date</FormLabel>\r\n                                    <TextField\r\n                                        disabled\r\n                                        size='small'\r\n                                        variant='outlined'\r\n                                        value={new Date(data.due_date).toLocaleDateString()}\r\n                                        placeholder='Due Date'\r\n                                        \r\n                                    />\r\n                                    <div>\r\n                                    <IconButton\r\n                                        onClick={() =>setIsopen(true)}\r\n                                    >\r\n                                        <span className='fa fa-eye' />\r\n                                    </IconButton>\r\n                                    </div>\r\n                                </Grid>\r\n\r\n                                \r\n                            }\r\n                           \r\n                            {\r\n                                step ==2&&\r\n                                <Grid item lg={6} md={6} sm={12}\r\n                                style={{ display: 'flex',\r\n                                    justifyContent: 'center', flexDirection: 'column',\r\n                                       \r\n                                    }}\r\n                                >\r\n                                    <div className='mt-5 p-1'\r\n                                        style={{ color: 'white', background: '#2A3F54',\r\n                                            display: 'flex', alignItems: 'center', height: '40px',\r\n                                            justifyContent: 'center', width: '100%', margin: 'auto',\r\n                                            boxSizing: 'border-box', boxShadow: '0px 0px 5px 0px #000'\r\n                                        }}\r\n                                    >\r\n                                        <h6>C. CATEGORIES OF BUILDING\r\n                                            <span className='ml-3'>\r\n                                                <IconButton size='small'\r\n                                                    onClick={() =>setAdd(!add)} \r\n                                                >\r\n                                                    <span className='fa fa-plus-circle' style={{ color: '#20c997' }} />\r\n                                                </IconButton>\r\n                                            </span>\r\n                                            \r\n                                        </h6>\r\n                                    </div>\r\n                                   \r\n                                    {\r\n                                        add&&\r\n                                        <div\r\n                                            className='m-3'\r\n                                            style={{ display: 'flex', flex: 1, justifyContent: 'center' }}\r\n                                        >\r\n                                            <TextField\r\n                                            fullWidth\r\n                                            value={body.name}\r\n                                            placeholder='New Build Category'\r\n                                            onChange={e =>setBody({\r\n                                                ...body, name: e.target.value\r\n                                            })}\r\n\r\n                                            />\r\n                                            <div\r\n                                                onClick={() =>setAdd(!add)}\r\n                                            >\r\n                                            <Button \r\n                                                onClick={() =>add_BuildCategories(body)}\r\n                                                size='small' variant='contained' \r\n                                                style={{background: '#2A3F54', color: 'white'}}\r\n                                            >\r\n                                                Save\r\n                                            </Button>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                     <h3 className='ml-5'><b>PLease Tick Appropriately</b></h3>\r\n                                    {\r\n                                        buildCategories&&\r\n                                        buildCategories.map((bcategory, index) =>{\r\n                                            const {id, name} = bcategory\r\n                                            return (\r\n                                                <div className='d-flex ml-5'  key={index}>\r\n                                                    <FormControlLabel\r\n                                                    control={\r\n                                                            <Checkbox\r\n                                                                name='build_category'\r\n                                                                checked={data.build_category ==bcategory.id}\r\n                                                                onChange={e =>handleChange(bcategory.id)}\r\n                                                                style={{border: '1px solid color: black', \r\n                                                                background: '#2A3F54'}} \r\n                                                            />\r\n                                                        }\r\n                                                    label={name}\r\n                                                    />\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Grid>\r\n                            }\r\n                               </Grid>\r\n                           </Grid>\r\n                           \r\n                            {\r\n                                step ==2&&\r\n                                <Grid item lg={9} md={9} sm={12}\r\n                                style={{ display: 'flex', alignItems: 'center', \r\n                                    justifyContent: 'center', flexDirection: 'column',\r\n                                       \r\n                                    }}\r\n                                >\r\n                                    <div className='mt-5 p-1'\r\n                                        style={{ color: 'white', background: '#2A3F54',\r\n                                            display: 'flex', alignItems: 'center', height: '40px',\r\n                                            justifyContent: 'center', width: '50%', margin: 'auto',\r\n                                            boxSizing: 'border-box', boxShadow: '0px 0px 5px 0px #000'\r\n                                        }}\r\n                                    >\r\n                                        <h6>D. MODE OF PAYMENT</h6>\r\n                                    </div>\r\n\r\n                                </Grid>\r\n                            }\r\n                            {\r\n                                step ==2&&\r\n                                <Grid item lg={12} md={12} sm={12}>\r\n                                    <ul className='mt-3'>\r\n                                        <li>\r\n                                            Note That Pament should be made after the developer's approval\r\n                                            before allocation. Each applicant is expected to pay for the follwing charges:\r\n                                        </li>\r\n                                        <li>\r\n                                            All Payments should be made to Santos Estate Ltd. and evidence of payment forwarded to our corporate office for issuance of receipt.\r\n                                        </li>\r\n                                        <li>\r\n                                            i have agreed that all refunds shall be limited to the deposit i made, less 10%  administrative charges.\r\n                                        </li>\r\n                                        <li>\r\n                                            \"Disclaimer\" SANTOS ESTATE LIMITED shall not be liable for any plot re-allocated if terms and conditions are not obligated timeously.\r\n                                        </li>\r\n                                    </ul>\r\n                                </Grid>\r\n                            }\r\n                            {\r\n                                step ==2&&\r\n                                <Grid item lg={9} md={9} sm={12}\r\n                                style={{ display: 'flex', alignItems: 'center', \r\n                                    justifyContent: 'center', flexDirection: 'column',\r\n                                       \r\n                                    }}\r\n                                >\r\n                                    <div className='mt-5 p-1'\r\n                                        style={{ color: 'white', background: '#2A3F54',\r\n                                            display: 'flex', alignItems: 'center', height: '40px',\r\n                                            justifyContent: 'center', width: '50%', margin: 'auto',\r\n                                            boxSizing: 'border-box', boxShadow: '0px 0px 5px 0px #000'\r\n                                        }}\r\n                                    >\r\n                                        <h6>D. DECLARATION</h6>\r\n                                    </div>\r\n\r\n                                </Grid>\r\n                            }\r\n                            {\r\n                                step ==2&&\r\n                                <Grid item lg={12} md={12} sm={12} className='mt-3'>\r\n                                    <ul style={{listStyle: 'none'}}>\r\n                                        <li>\r\n                                            I/We <input readOnly value={applicant.customer_name} style={{ border: 'none', borderBottom: '1px solid black', outline: 'none' }} />\r\n                                            whose name and address appeared above have declared that the above statements are true and correct to the best of any \r\n                                            knowledge, and i promise to abide by all rules and regulations given by the Developer\r\n                                        </li>\r\n                                    </ul>\r\n                                    <div\r\n                                        className='m-4'\r\n                                        style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between',\r\n                                        }}\r\n                                    >\r\n                                        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                                            <input readOnly style={{ border: 'none', borderBottom: '1px solid black',\r\n                                                outline: 'none' }}\r\n                                                value={user.username}\r\n                                            />\r\n                                            <FormLabel>Initiate By \r\n                                                <IconButton size='small'>\r\n                                                <span className='fa fa-pen' style={{ color: '#1ABB9C'}}/>\r\n                                                </IconButton>\r\n                                            </FormLabel>\r\n                                        </div>\r\n                                        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                                            <input type='date' style={{ border: 'none', borderBottom: '1px solid black',\r\n                                                outline: 'none' }} \r\n                                                value={data.sale_date}\r\n                                                readOnly\r\n                                            />\r\n                                            <FormLabel>Date</FormLabel>\r\n                                        </div>\r\n                                    </div>\r\n                                </Grid>\r\n                            }\r\n                            <Grid item lg={12} md={12} sm={12}\r\n                                style={{ display:'flex', justifyContent: 'center' }}\r\n                            >\r\n                                {applicant && step ==1&&<Button variant='contained'\r\n                                    className='m-3'\r\n                                    onClick={() =>setStep(2)}\r\n                                    style={{color: 'white', background: '#2A3F54' }}\r\n                                >\r\n                                    Next\r\n                                </Button>}\r\n                                {step==2&&<Button variant='contained'\r\n                                    className='m-3'\r\n                                    onClick={() =>setStep(1)}\r\n                                   color='default'\r\n                                >\r\n                                    Previous\r\n                                </Button>}\r\n                                {step ==2&&<Button variant='contained'\r\n                                    className='m-3'\r\n                                    onClick={e =>handlePost(e)}\r\n                                    style={{color: 'white', background: '#2A3F54' }}\r\n                                >\r\n                                    Submit\r\n                                </Button>}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                    <div className='p-2' />\r\n                </Grid>\r\n            </Grid>\r\n        </div>           \r\n    )\r\n}\r\n\r\nexport default SaleFeed\r\n","import { IconButton, Paper, Typography } from '@material-ui/core'\r\nimport { MoreHoriz } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectPendingSales,} from '../appState/appSlice'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst SaleWidget = ({ isWidget, setIswidget }) => {\r\n    const sales = useSelector(selectPendingSales)\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n    return (\r\n        <div className='app__Widget'>\r\n            <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Sales List' \r\n            />\r\n            <section className='app__WidgetContainer mt-3'>\r\n                   <table className='table table-sm table-striped table-hover'>\r\n                       <thead>\r\n                           <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                           <th style={{ border: '1px solid #F7F7F7F7' }}>Customer</th>\r\n                           <th style={{ border: '1px solid #F7F7F7F7' }}>Due Date</th>\r\n                           <th style={{ border: '1px solid #F7F7F7F7' }}>Amount (<s>N</s>)</th>\r\n                           <th style={{ border: '1px solid #F7F7F7F7' }}> </th>\r\n                       </thead>\r\n                       <tbody>\r\n                           {\r\n                               sales &&\r\n                               sales.map((sale, index) =>{\r\n                                   const {applicant_name, sale_date, due_date, amount } = sale\r\n                                   return(\r\n                                    <tr key={index}>\r\n                                        <td> {index+1} </td>\r\n                                    <td>\r\n                                        {applicant_name}\r\n                                    </td>\r\n                                    <td> {new Date(due_date).toLocaleDateString()} </td>\r\n                                    <td> {amount} </td>\r\n                                    <td style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n                                        <div>\r\n                                        <IconButton size='small'>\r\n                                            <MoreHoriz style={{color: '#20c997'}} />\r\n                                        </IconButton>\r\n                                        </div>\r\n                                    </td>\r\n                                    </tr>\r\n                                   )\r\n                               })\r\n                           }\r\n                           {\r\n                           sales&&\r\n                           <tr\r\n                            style={{background: '#2A3F54', color: 'white'}} \r\n                           >\r\n                               <td colSpan={3}>\r\n                                   <Typography variant='subtitle1'\r\n                                    style={{color: 'white'}}\r\n                                   >\r\n                                        <b>Total:</b>\r\n                                    </Typography>\r\n                               </td>\r\n                               <td>\r\n                                   <Typography variant='subtitle1'\r\n                                    style={{color: 'white'}}\r\n                                   >\r\n                                    <b>{\r\n                                       calcuAmt(sales)\r\n                                    }</b>\r\n                                   </Typography>\r\n                               </td>\r\n                               <td colSpan={2}></td>\r\n                           </tr>\r\n                       }\r\n                       </tbody>\r\n                   </table>\r\n               \r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SaleWidget\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setBuildCategories, setCustomers, setpendingSales, setPropServices, setUser, setUserInvoices } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport SaleFeed from '../components/SaleFeed'\r\nimport SaleWidget from '../components/SaleWidget'\r\n\r\nconst SaleScreen = () => {\r\n    const history = useHistory()\r\n    const dispacth = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n\r\n    // func\r\n    const getProp_Services = () =>{\r\n        axios.get('/prop_service', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(ps =>{\r\n            dispacth(setPropServices(ps.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n     // func\r\n    const getCustomers = () =>{\r\n        axios.get('/customer', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(asset =>{\r\n            dispacth(setCustomers(asset.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const getBuildCategories = () =>{\r\n        axios.get('/build_category', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(categories =>{\r\n            dispacth(setBuildCategories(categories.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n     // func\r\n     const get_PendingSales = () =>{\r\n        axios.get(`/sale`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(sales =>{\r\n            dispacth(setpendingSales(sales.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const add_BuildCategories = (body) =>{\r\n        setOpen(true)\r\n        axios.post('/build_category', body,{\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(categories =>{\r\n            setOpen(false)\r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            return error\r\n        })\r\n    }\r\n    \r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispacth(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    \r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        getProp_Services()\r\n        getCustomers()\r\n        \r\n        get_Session()\r\n        \r\n    }, [])\r\n    useEffect(() =>{\r\n        getBuildCategories()\r\n        return get_PendingSales()\r\n    }, [open])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <SaleFeed\r\n                setOpen={setOpen}\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                add_BuildCategories={add_BuildCategories}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <SaleWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SaleScreen\r\n","import { Button, Container, FormLabel, Grid, IconButton, Paper, Select, TextField, Typography } from '@material-ui/core'\r\nimport { Delete, FileCopy, PlusOne, PlusOneOutlined, PlusOneRounded, Undo } from '@material-ui/icons'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectAccounts, selectExpenseCategories, selectToken } from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\nimport AppSnackbar from './global/AppSnackbar'\r\n\r\nconst StaffFeed = ({ setOpen, isWidget, setIswidget }) => {\r\n    const history = useHistory()\r\n    const token = useSelector(selectToken)\r\n    const accounts = useSelector(selectAccounts)\r\n    const [success, setSuccess] = useState(false)\r\n    const [message, setMessage] = useState()\r\n    const [data, setData ] = useState({\r\n        password: '',\r\n        password2: '',\r\n        last_login: '',\r\n        is_superuser: '',\r\n        username: '',\r\n        first_name: '',\r\n        last_name: '',\r\n        email: '',\r\n        md: '',\r\n        entries: '',\r\n        sales: '',\r\n        expense: '',\r\n        accountant: '',\r\n        date_joined: ''\r\n    })\r\n    // func\r\n    const handleChange = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n    }   \r\n    const handleSubmit =e =>{\r\n        e.preventDefault()\r\n        setOpen(true)\r\n        axios.post('/auth', data, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setOpen(false)\r\n            setMessage(result.data.message)\r\n            setSuccess(true)\r\n            setData({\r\n                password: '',\r\n                password2: '',\r\n                last_login: '',\r\n                is_superuser: '',\r\n                username: '',\r\n                first_name: '',\r\n                last_name: '',\r\n                email: '',\r\n                mobile: '',\r\n                md: '',\r\n                entries: '',\r\n                sales: '',\r\n                expense: '',\r\n                accountant: '',\r\n                date_joined: '',\r\n            })\r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            if(error) {\r\n               \r\n                if(error.status ==500) {\r\n                    return alert(error.response.statusText)\r\n                }\r\n                const err = error.response.data.split(':')[1];\r\n                alert(err)\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    \r\n    return (\r\n        <div className={`${isWidget? 'isapp__Feed': 'app__Feed'}`}>\r\n            <AppSnackbar setOpen={setSuccess} open={success} message={message} />\r\n           <AppHeader title='Staff' />\r\n           <div className=\"row align-items-center justify-content-center d-flex m-1\" >\r\n                <div className=\"col-lg-11 col-md-11\">\r\n                    {/* table */}\r\n                    <h3>Staff Entry<span> \r\n                        <IconButton color='secondary'\r\n                            onClick={() =>setIswidget(!isWidget)}\r\n                        >\r\n                        <FileCopy style={{ color: '#1ABB9C'}} />\r\n                        </IconButton></span></h3> \r\n                        {/* to do make it a component */}\r\n                        <Grid container alignItems='center' spacing={1} justify='center' className='p-3'>\r\n                            <Grid item lg={6} md={6}>\r\n                                <TextField\r\n                                    required\r\n                                    size='small'\r\n                                    name='first_name'\r\n                                    variant='outlined'\r\n                                    label='First Name'\r\n                                    placeholder='First Name'\r\n                                    value={data.first_name}\r\n                                    onChange={e =>handleChange(e)}\r\n                                    style={{width: '100%', outline: 'none', border: 'none',\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item lg={6} md={6}>\r\n                                    \r\n                                <TextField\r\n                                    required\r\n                                    size='small'\r\n                                    name='last_name'\r\n                                    variant='outlined'\r\n                                    label='Last Name'\r\n                                    placeholder='Last Name'\r\n                                    value={data.last_name}\r\n                                    onChange={e =>handleChange(e)}\r\n                                    style={{width: '100%', outline: 'none', border: 'none',\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item lg={6} md={6}>\r\n                                <TextField\r\n                                    size='small'\r\n                                    name='mobile'\r\n                                    variant='outlined'\r\n                                    label='Mobile No'\r\n                                    placeholder='Mobile Number 08010000900'\r\n                                    value={data.mobile}\r\n                                    onChange={e =>handleChange(e)}\r\n                                    style={{width: '100%', outline: 'none', border: 'none',\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item lg={6} md={6}>\r\n                                    \r\n                                <TextField\r\n                                    size='small'\r\n                                    name='email'\r\n                                    variant='outlined'\r\n                                    label='Email'\r\n                                    placeholder='Email Address(example@gmail.com)'\r\n                                    value={data.email}\r\n                                    onChange={e =>handleChange(e)}\r\n                                    style={{width: '100%', outline: 'none', border: 'none',\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item lg={6} md={6}>\r\n                                <TextField\r\n                                    size='small'\r\n                                    name='password'\r\n                                    type='password'\r\n                                    variant='outlined'\r\n                                    label='Password'\r\n                                    placeholder='Password'\r\n                                    value={data.password}\r\n                                    onChange={e =>handleChange(e)}\r\n                                    style={{width: '100%', outline: 'none', border: 'none',\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item lg={6} md={6}>\r\n                                    \r\n                                <TextField\r\n                                    size='small'\r\n                                    name='password2'\r\n                                    type='password'\r\n                                    variant='outlined'\r\n                                    label='Confirm Password'\r\n                                    placeholder='Confirm Password'\r\n                                    value={data.password2}\r\n                                    onChange={e =>handleChange(e)}\r\n                                    style={{width: '100%', outline: 'none', border: 'none',\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item lg={12} md={12}>\r\n                                <Typography variant='p'>System Rights</Typography>\r\n                            </Grid>\r\n                            <Grid item lg={6} md={6}>\r\n                                <FormLabel>Entries</FormLabel>\r\n                                <Select\r\n                                    \r\n                                    variant='outlined'\r\n                                    name='entries'\r\n                                    value={data.entries}\r\n                                    onChange={e =>handleChange(e)}\r\n                                    style={{width: '100%', outline: 'none', border: 'none',\r\n                                    height: '40px'}}\r\n                                >\r\n                                    <option></option>\r\n                                    <option value='entries'>Yes</option>\r\n                                    <option value='no'>No</option>\r\n                                </Select>\r\n                            </Grid>\r\n                            <Grid item lg={6} md={6}>\r\n                                <FormLabel>Sales</FormLabel>\r\n                                <Select\r\n                                    \r\n                                    variant='outlined'\r\n                                    name='sales'\r\n                                    value={data.sales}\r\n                                    onChange={e =>handleChange(e)}\r\n                                    style={{width: '100%', outline: 'none', border: 'none',\r\n                                    height: '40px'}}\r\n                                >\r\n                                    <option></option>\r\n                                    <option value='sales'>Yes</option>\r\n                                    <option value='no'>No</option>\r\n                                </Select>\r\n                            </Grid>\r\n                            <Grid item lg={6} md={6}>\r\n                                <FormLabel>Expense</FormLabel>\r\n                                <Select\r\n                                    \r\n                                    variant='outlined'\r\n                                    name='expense'\r\n                                    value={data.expense}\r\n                                    onChange={e =>handleChange(e)}\r\n                                    style={{width: '100%', outline: 'none', border: 'none',\r\n                                    height: '40px'}}\r\n                                >\r\n                                    <option></option>\r\n                                    <option value='expense'>Yes</option>\r\n                                    <option value='no'>No</option>\r\n                                </Select>\r\n                            </Grid>\r\n                            <Grid item lg={6} md={6}>\r\n                                <FormLabel>Accountant</FormLabel>\r\n                                <Select\r\n                                    \r\n                                    variant='outlined'\r\n                                    name='accountant'\r\n                                    value={data.accountant}\r\n                                    onChange={e =>handleChange(e)}\r\n                                    style={{width: '100%', outline: 'none', border: 'none',\r\n                                    height: '40px'}}\r\n                                >\r\n                                    <option></option>\r\n                                    <option value='accountant'>Yes</option>\r\n                                    <option value='no'>No</option>\r\n                                </Select>\r\n                            </Grid>\r\n                            <Grid item lg={6} md={6}>\r\n                                <FormLabel>Administrator</FormLabel>\r\n                                <Select\r\n                                    \r\n                                    variant='outlined'\r\n                                    name='is_superuser'\r\n                                    value={data.is_superuser}\r\n                                    onChange={e =>handleChange(e)}\r\n                                    style={{width: '100%', outline: 'none', border: 'none',\r\n                                    height: '40px'}}\r\n                                >\r\n                                    <option></option>\r\n                                    <option value='1'>Yes</option>\r\n                                    <option value='0'>No</option>\r\n                                </Select>\r\n                            </Grid>\r\n                            <Grid item lg={6} md={6}>\r\n                                <FormLabel>MD</FormLabel>\r\n                                <Select\r\n                                    \r\n                                    variant='outlined'\r\n                                    name='md'\r\n                                    value={data.md}\r\n                                    onChange={e =>handleChange(e)}\r\n                                    style={{width: '100%', outline: 'none', border: 'none',\r\n                                    height: '40px'}}\r\n                                >\r\n                                    <option></option>\r\n                                    <option value='md'>Yes</option>\r\n                                    <option value='no'>No</option>\r\n                                </Select>\r\n                            </Grid>\r\n                                \r\n                            <Grid item lg={6} md={6}>\r\n                                <FormLabel>Date Joined</FormLabel>\r\n                                <TextField\r\n                                    size='small'\r\n                                    name='date_joined'\r\n                                    type='date'\r\n                                    variant='outlined'\r\n                                    value={data.date_joined}\r\n                                    onChange={e =>handleChange(e)}\r\n                                    style={{width: '100%', outline: 'none', border: 'none',\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item lg={6} md={6}\r\n                                style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}\r\n                            >\r\n                                <Button\r\n                                    onClick={e =>handleSubmit(e)}\r\n                                    variant='contained' size='medium'\r\n                                    style={{background: '#2A3F54', color: 'white', marginTop: '10px'\r\n                                    }}\r\n                                >\r\n                                    Create\r\n                                </Button>\r\n                                <Button\r\n                                    className='ml-5'\r\n                                    onClick={e =>history.goBack()}\r\n                                    startIcon={<Undo color='error' />}\r\n                                    color='secondary'\r\n                                    variant='outlined' size='medium'\r\n                                    style={{color: '#73879c', marginTop: '10px'\r\n                                    }}\r\n                                >\r\n                                    Return\r\n                                </Button>\r\n                            </Grid>\r\n                            \r\n                        </Grid>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StaffFeed\r\n","import { IconButton } from '@material-ui/core'\r\nimport { AttachFile, CheckCircle } from '@material-ui/icons'\r\nimport React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectAllStaffs } from '../appState/appSlice'\r\nimport Mandate from './Mandate'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst StaffWidget = ({ open, setOpen, isWidget, setIswidget }) => {\r\n    const [mandate, setMandate] = useState(false)\r\n   \r\n    const staffs = useSelector(selectAllStaffs)\r\n    return (\r\n        <div className='app__Widget'>\r\n            <Mandate\r\n                open={open}\r\n                setOpen={setOpen}\r\n                mandate={mandate}\r\n                setMandate={setMandate}\r\n                url={mandate && `/auth/signature/${mandate.split(' ')[0]}`}\r\n            />\r\n            <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Staff List' \r\n            />\r\n            <section className='app__WidgetContainer mt-3'>\r\n               <table className='table table-sm table-striped table-hover'>\r\n                   <thead>\r\n                       <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                       <th style={{ border: '1px solid #F7F7F7F7' }}>Name</th>\r\n                       <th style={{ border: '1px solid #F7F7F7F7' }}>Mobile</th>\r\n                       <th style={{ border: '1px solid #F7F7F7F7' }}>Email</th>\r\n                       <th style={{ border: '1px solid #F7F7F7F7' }}>Sign</th>\r\n                   </thead>\r\n                   <tbody>\r\n                       {\r\n                           staffs&&\r\n                           staffs.map((staff, index) =>{\r\n                               const { id, first_name, last_name, email, mobile, signature } = staff\r\n                               return (\r\n                                   <tr>\r\n                                       <td> {index+1} </td>\r\n                                       <td> \r\n                                           {`${first_name} ${last_name}`}\r\n                                       </td>\r\n                                       <td> {mobile} </td>\r\n                                       <td> {email} </td>\r\n                                       <td style={{display: 'flex', alignItems: 'center', justifyContent:'center'}} >\r\n                                           {\r\n                                               signature?\r\n                                               <CheckCircle style={{color: '#20c997'}} />\r\n                                               :\r\n                                                <IconButton size='small'\r\n                                                    onClick={() =>setMandate(id+ ' ' + first_name)}\r\n                                                >\r\n                                                    <AttachFile />\r\n                                                </IconButton>\r\n                                           }\r\n                                       </td>\r\n                                   </tr>\r\n                                   \r\n                               )\r\n                           })\r\n                           \r\n                       }\r\n                      \r\n                   </tbody>\r\n               </table>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StaffWidget\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setAccounts, setAllStaffs, setExpenseCategories, setUser, setUserExpenseRaised } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport StaffFeed from '../components/StaffFeed'\r\nimport StaffWidget from '../components/StaffWidget'\r\n\r\nconst StaffScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(true)\r\n\r\n    // func\r\n \r\n    const get_Staffs =() =>{\r\n        axios.get('/auth', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(staffs =>{\r\n            dispatch(setAllStaffs(staffs.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    \r\n  \r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        get_Session()\r\n    }, [])\r\n\r\n    useEffect(() =>{\r\n        get_Staffs()\r\n    }, [open])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <StaffFeed\r\n                setOpen={setOpen}\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <StaffWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StaffScreen\r\n","import React from 'react'\r\nimport { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst VendorList = ({ index, hidden, customer_sex, \r\n        email, vendor_name, phone, balance_type, \r\n        active, isWidget\r\n    }) => {\r\n    return (\r\n        <Fragment>\r\n            <tr>\r\n                <td>{index+1} </td>\r\n                <td> {vendor_name} </td>\r\n                <td> {phone} </td>\r\n                <td> {email} </td>\r\n                <td>\r\n                    {\r\n                        active ==1?\r\n                        <span className=\"fa fa-check-circle fa-1x\"></span>\r\n                        :\r\n                        <span></span>\r\n                    }\r\n                </td>\r\n                <td>\r\n                    {\r\n                        hidden ==1?\r\n                        <span className=\"fa fa-lock fa-1x\" style={{color: 'red'}}></span>\r\n                    :\r\n                        <span className=\"fa fa-unlock-alt fa-1x\" style={{color: '#1ABB9C'}}></span>\r\n                    }\r\n                </td>\r\n                {!isWidget&& <td id=\"btn\">\r\n                    <button>Actions</button>\r\n                    <div className=\"btn__poper\">\r\n                        <Link to='#' rel=\"noopener noreferrer\">View register</Link>\r\n                        <Link to='#' rel=\"noopener noreferrer\">Update</Link>\r\n                    </div>\r\n                </td> }                      \r\n            </tr>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default VendorList\r\n","import { Container, IconButton, Paper } from '@material-ui/core'\r\nimport { PlusOne } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectVendors } from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\nimport VendorList from './VendorList'\r\n\r\nconst VendorFeed = ({ isWidget, setIswidget }) => {\r\n    const vendors = useSelector(selectVendors)\r\n    return (\r\n        <div className={`${isWidget? 'isapp__Feed': 'app__Feed'}`}>\r\n           <AppHeader title='Vendors' />\r\n           <div className=\"row align-items-center justify-content-center d-flex m-1\" >\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                    {/* table */}\r\n                    <h3>Vendor List <span> \r\n                        <IconButton color='secondary'\r\n                            onClick={() =>setIswidget(!isWidget)}\r\n                        >\r\n                        <PlusOne style={{ color: '#1ABB9C'}} />\r\n                        </IconButton></span></h3> \r\n                    <Paper>\r\n                        <Container className='p-3'>\r\n                        <table className=\"table-small table-hover table-bordered\" style={{width: '100%'}}>\r\n                            <thead>\r\n                                <th>#</th>\r\n                                <th>Name</th>\r\n                                <th>Contact</th>\r\n                                <th>Email</th>\r\n                                <th>Active</th>\r\n                                <th>Lock</th>\r\n                                {!isWidget&&<th>Actions</th>}\r\n                            </thead>\r\n                            <tbody>\r\n                                \r\n                                {\r\n                                   vendors&&\r\n                                   vendors.map((vendor, index) =>{\r\n                                        return <VendorList\r\n                                            index={index}\r\n                                            {...vendor}\r\n                                            isWidget={isWidget}\r\n                                        />\r\n                                    })\r\n\r\n                                }\r\n                                    \r\n                            </tbody>\r\n                        </table>\r\n                        {vendors&& !vendors.length>0&&\r\n                            <div className=\"alert alert-warning\">\r\n                            <h6>No Asset Accounts Availabe</h6>\r\n                            </div>\r\n                        }\r\n                        </Container>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VendorFeed\r\n","import { Button, FormGroup, FormLabel, Grid, Select, TextField, Typography } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectAccounts, selectToken } from '../../appState/appSlice'\r\n\r\nconst VendorCreationForm = ({ open, setOpen}) => {\r\n    const token = useSelector(selectToken)\r\n    const [Error, setError] = useState()\r\n    const accounts = useSelector(selectAccounts)\r\n    const [vendorData, setVendordata] = useState({\r\n            vendor_name: '',\r\n            address_1: '',\r\n            address_2: '',\r\n            city: '',\r\n            state: '',\r\n            zip_code: '',\r\n            country: '',\r\n            email: '',\r\n            website: '',\r\n            phone: '',\r\n            exp_account_FK: '',\r\n    })\r\n    // func\r\n    const handleChange = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n\r\n        setVendordata({\r\n            ...vendorData,\r\n            [name]: value\r\n        })\r\n    }\r\n    const handle_Create_Vendor =e =>{\r\n        e. preventDefault()\r\n        if(Error){\r\n            return Error\r\n        }\r\n        setOpen(true)\r\n        axios.post('/vendor', vendorData, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setOpen(false)\r\n            setVendordata({\r\n                vendor_name: '',\r\n                address_1: '',\r\n                address_2: '',\r\n                city: '',\r\n                state: '',\r\n                zip_code: '',\r\n                country: '',\r\n                email: '',\r\n                website: '',\r\n                phone: '',\r\n                exp_account_FK: '',\r\n            \r\n            })\r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            if(error){\r\n                return setError(error.response.statusText)\r\n            }\r\n        })\r\n    }\r\n    useEffect(() =>{\r\n        Object.keys(vendorData).map(key =>{\r\n            if(vendorData[key].length <=0){\r\n                return setError('Form not valid')\r\n              \r\n            }\r\n            setError('')\r\n        })\r\n        \r\n    },[vendorData])\r\n    return (\r\n        <Fragment>\r\n            <form className='mt-3 pl-2 pr-2'>\r\n                <Grid container spacing={2}>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Name'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='vendor_name'\r\n                                value={vendorData.vendor_name}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Contact'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='phone'\r\n                                value={vendorData.phone}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Eamil'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='email'\r\n                                value={vendorData.email}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    \r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Nationality'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='country'\r\n                                value={vendorData.country}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                   \r\n                    <Grid item lg={12} md={12}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Home Address'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='address_2'\r\n                                value={vendorData.address_2}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='City'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='city'\r\n                                value={vendorData.city}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Website'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='website'\r\n                                value={vendorData.website}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={12} md={12}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Residential Address'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='address_1'\r\n                                value={vendorData.address_1}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={12} md={12}>\r\n                        <FormLabel>Appear for all vendor payment</FormLabel>\r\n                        <Select\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            name='exp_account_FK'\r\n                            value={vendorData.exp_account_FK}\r\n                            onChange={e =>handleChange(e)}\r\n                            style={{ height: '40px' }}\r\n                        >\r\n                            <option value=''></option>\r\n                            {\r\n                                accounts&&\r\n                                accounts.map((acc, index) =>{\r\n                                    const { id, name, balance_type } = acc\r\n                                    return <option value={id} key={index} >{`${name} (${balance_type})`}</option>\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </Grid>\r\n                    <Grid item lg={12} md={12}>\r\n                        <FormLabel>State of origin?</FormLabel>\r\n                        <FormGroup>\r\n                            <Select style={{height: '40px'}}\r\n                                label='Marital Status'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='state'\r\n                                value={vendorData.state}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value></option>\r\n                                <option value='Abia'>Abia</option>\r\n                                <option value='Adamawa'>Adamawa</option>\r\n                                <option value='Anambara'>Anambara</option>\r\n                                <option value='Akwa-ibom'>Akwa-ibom</option>\r\n                                <option value='Benue'>Benue</option>\r\n                                <option value='Enugu'>Enugu</option>\r\n                                <option value='Cross-River'>Cross-River</option>\r\n                                <option value='Imo'>Imo</option>\r\n                                <option value='FCT'>FCT</option>\r\n                                <option value='Nsarawa'>Nsarawa</option>\r\n                                <option value='Kaduna'>Kaduna</option>\r\n                                <option value='Kano'>Kano</option>\r\n                            </Select>\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={12} md={12}>\r\n                        {/* {\r\n                            Error&&\r\n                            <Typography variant='caption' color='error'>\r\n                                {Error}\r\n                            </Typography>\r\n                        } */}\r\n                        <Button\r\n                            disabled={Error}\r\n                            onClick={e =>handle_Create_Vendor(e)}\r\n                            color='default' variant='contained'\r\n                            style={{ color: 'white', background: '#2A3F54', width: '100%'}}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default VendorCreationForm\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport VendorCreationForm from './form/VendorCreationForm'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst VendorrWidget = ({ open, setOpen, isWidget, setIswidget }) => {\r\n    return (\r\n        <div className='app__Widget'>\r\n            <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Create Vendor' \r\n            />\r\n            <section className='app__WidgetContainer'>\r\n                <VendorCreationForm\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                />\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VendorrWidget\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setAccounts, setUser, setVendors } from '../appState/appSlice'\r\nimport VendorFeed from '../components/VendorFeed'\r\nimport VendorWidget from '../components/VendorWidget'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\n\r\nconst VendorScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n    // func\r\n    const getVendors = () =>{\r\n        axios.get('/vendor', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(vendor =>{\r\n            dispatch(setVendors(vendor.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n       // func\r\n       const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        getVendors()\r\n        get_AllAccounts()\r\n        get_Session()\r\n    },[open])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <VendorFeed\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <VendorWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VendorScreen\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport AccountScreen from './screens/AccountScreen'\r\nimport AdminScreen from './screens/AdminScreen'\r\nimport { AuthScreen } from './screens/AuthScreen'\r\nimport BillScreen from './screens/BillScreen'\r\nimport CoaScreen from './screens/CoaScreen'\r\nimport CustomerScreen from './screens/CustomerScreen'\r\nimport EstimateScreen from './screens/EstimateScreen'\r\nimport ExpenseScreen from './screens/ExpenseScreen'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport InvoiceScreen from './screens/InvoiceScreen'\r\nimport JournalEntryScreen from './screens/JournalEntryScreen'\r\nimport MdApproveScreen from './screens/MdApproveScreen'\r\nimport PostingScreen from './screens/PostingScreen'\r\nimport PropertyServiceScreen from './screens/PropertyServiceScreen'\r\nimport ReceivePaymentScreen from './screens/RceivePaymentScreen'\r\nimport SalePaymentHistScreen from './screens/SalePaymentHistScreen'\r\nimport SaleScreen from './screens/SaleScreen'\r\nimport StaffScreen from './screens/StaffScreen'\r\nimport VendorScreen from './screens/VendorScreen'\r\n\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path='/' component={AuthScreen} />\r\n                <Route exact path='/staffs' component={StaffScreen} />\r\n                <Route exact path='/home' component={HomeScreen} />\r\n                <Route exact path='/coa' component={CoaScreen} />\r\n                <Route exact path='/customers' component={CustomerScreen} />\r\n                <Route exact path='/je_entry' component={JournalEntryScreen} />\r\n                <Route exact path='/expense' component={ExpenseScreen} />\r\n                <Route exact path='/bills' component ={BillScreen } />\r\n                <Route exact path='/invoice' component={InvoiceScreen} />\r\n                <Route exact path='/vendor' component={VendorScreen} />\r\n                <Route exact path='/estimate' component={EstimateScreen} />\r\n                <Route exact path ='/ps' component={PropertyServiceScreen} />\r\n                <Route exact path ='/rpayment' component={ReceivePaymentScreen} />\r\n                <Route exact path ='/sales' component ={SaleScreen} />\r\n                <Route exact path ='/applications' component={MdApproveScreen} />\r\n                <Route exact path ='/sales/tx' component={PostingScreen }/>\r\n                <Route exact path ='/sales/tx/:uuid/:name' component={SalePaymentHistScreen }/>\r\n                <Route exact path ='/coa/:name/:uuid' component={AccountScreen }/>\r\n                <Route exact path='/admin-settings-dashboard/:id' component={AdminScreen} />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React, { Fragment } from 'react';\nimport Routes from './Routes';\n\nfunction App() {\n  return (\n    <Fragment>\n      <Routes />\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport appReducer from '../appState/appSlice'\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        app_state: appReducer,\r\n    },\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\nimport appStore from './app/appStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={appStore}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}