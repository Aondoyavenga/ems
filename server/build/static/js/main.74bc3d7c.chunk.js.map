{"version":3,"sources":["appState/appSlice.js","components/global/AppBackDrop.js","components/global/UserRoles.js","components/global/SideBarNavigation.js","components/global/AppSnackbar.js","components/UploadAvatar.js","components/Mandate.js","components/global/ProfileSetting.js","components/global/SideBarMenu.js","components/global/AppHeader.js","components/AccountFeed.js","screens/AccountScreen.js","components/ExcelDownload.js","components/global/TxTableView.js","components/AdminAccountSetting.js","components/global/PurchaseRepayment.js","components/SaleViewTable.js","components/AdminCustomerSetting.js","components/AdminExpenseSetting.js","components/AdminPosting.js","components/global/PropertySoldViewTable.js","components/AdminPsSetting.js","components/AdminSaleSetting.js","components/global/CustomerList.js","components/global/CustomerViewTable.js","components/AdminStaffSetting.js","components/global/AdminMenuList.js","components/charts/AdminSideMenu.js","components/AdminFeed.js","screens/AdminScreen.js","components/global/ExpenseItemsView.js","components/global/HandleSearch.js","components/ExpenseViewTable.js","components/global/AppWidgetHeader.js","components/global/SalesItemsModal.js","components/SaleWidget.js","components/ReportsPool.js","components/ReportFeed.js","screens/ReportScreen.js","components/auth/LoginForm.js","components/auth/CreateStaff.js","screens/AuthScreen.js","components/BillFeed.js","components/form/AccountCreationForm.js","components/BillWidget.js","components/global/AddBillCategories.js","screens/BillScreen.js","components/global/AccountList.js","components/CoaFeed.js","components/SearchWidget.js","components/CoaWidget.js","screens/CoaScreen.js","components/CustomerFeed.js","components/CusSearchWidget.js","components/form/CustomerCreationForm.js","components/CustomerWidget.js","screens/CustomerScreen.js","components/EstimateFeed.js","components/EstimateWidget.js","screens/EstimateScreen.js","components/ExpenseFeed.js","components/ExpenseWidget.js","screens/ExpenseScreen.js","components/charts/MultipleChart.js","components/charts/SalesChart.js","components/TransactionList.js","components/HomeFeed.js","screens/HomeScreen.js","components/InvoiceFeed.js","components/InvoiceWidget.js","screens/InvoiceScreen.js","components/JournalFeed.js","components/JournalListTable.js","components/JournalWidget.js","screens/JournalEntryScreen.js","components/MdFeed.js","components/global/Receipt.js","components/global/CashReceipt.js","components/MdWidget.js","screens/MdApproveScreen.js","components/CustomerCard.js","components/PostingTicket.js","components/PostingFeed.js","screens/PostingScreen.js","components/form/PropServiceForm.js","components/PropServiceWidget.js","components/global/PropServiceList.js","components/PropertyServiceFeed.js","screens/PropertyServiceScreen.js","components/ReceivePaymentFeed.js","components/ReceivePaymentWidget.js","screens/RceivePaymentScreen.js","components/CustomerProfile.js","components/SalePaidHistoryView.js","components/SalePaidHistoryFeed.js","screens/SalePaymentHistScreen.js","components/global/SelectApplicant.js","components/SaleMultipleFeed.js","components/SaleFeed.js","screens/SaleScreen.js","components/StaffFeed.js","components/StaffWidget.js","screens/StaffScreen.js","components/VendorList.js","components/VendorFeed.js","components/form/VendorCreationForm.js","components/VendorWidget.js","screens/VendorScreen.js","components/SaleRepayViewTable.js","components/SaleRepaymentFeed.js","screens/SaleRepaymentReportScreen.js","components/global/RenderPeriodicTable.js","components/MultiExcelDownload.js","components/ExpenseAnalysisReport.js","components/ExpenseReportFeed.js","screens/ExpenseReportScreen.js","components/EditSaleFeed.js","screens/EditSaleScreen.js","screens/SalesListScreen.js","screens/ExpenseListScreen.js","Routes.js","App.js","serviceWorker.js","app/appStore.js","index.js"],"names":["appSlice","createSlice","name","initialState","open","token","user","vendors","accounts","customers","propServices","appWidget","assetAccounts","equityAccounts","liabilityAccounts","openEstimate","userInvoices","billCategories","buildCategories","pendingSales","txAccounts","todayTxs","duePayments","expenseHeadings","expenseCategories","userExpenseRaised","expenseItems","allStaffs","paymentHistory","paidOnpaySales","journals","staffPosted_Journals","accountTxs","sales","filterSale","locations","transactions","filterTx","filterCus","psSold","reducers","setOpen","state","action","payload","setToken","setUser","setAppWidget","setAssetAccount","setLiabilityAccount","setEquityAccount","setCustomers","setAccounts","setVendors","setPropServices","setOpenEstimate","setUserInvoices","setBillCategories","setBuildCategories","setpendingSales","setTxAccounts","setDuePayments","setExpenseCategories","setExpenseHeadings","setUserExpenseRaised","setExpenseItems","setAllStaffs","setPaymentHistory","setPaidOnpaySales","setJournals","setStaffPosted_Journals","setAccountTxs","settodayTxs","setSAles","setFilterSale","setLocations","setTransactions","setfilterTx","setFilterCus","setPsSold","actions","selectOpen","app_state","selectSales","selectFilterSale","selectToken","selectUser","selectVendors","selectCustomers","selectPsSold","selectPropServices","selectAccounts","selectAssetAccount","selectEquityAccount","selectLiabilityAccount","selectOpenEstimate","selectUserInvoices","selectBillCategories","selectBuildCategories","selectPendingSales","selectPaymentHistory","selectPaidOnpaySales","selectTxAccounts","selectTodayTxs","selectExpenseHeadings","selectExpenseCategories","selectUserExpenseRaised","selectExpenseItems","selectAllStaffs","selectStaffPosted_Journals","selectAccountTxs","selectLocations","selectTransactions","selectFilterTx","useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","AppBackdrop","classes","Backdrop","className","onClick","CircularProgress","root","width","maxWidth","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","UserRoles","admin","expense","entries","accountant","ico","md","useSelector","to","ListItem","button","ListItemIcon","style","fontSize","ListItemText","secondary","username","SideBarNavigation","useState","collapse","setCollapse","Edit","primary","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","MonetizationOn","ShoppingCart","HistoryTwoTone","CheckCircle","is_superuser","Person","AppSnackbar","message","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Fragment","IconButton","size","aria-label","AvatarUpload","blob","src","crop","unit","height","margin","aspect","appDialog","success","onSelectFile","e","target","files","length","reader","FileReader","addEventListener","setState","result","readAsDataURL","onImageLoaded","image","imageRef","onCropComplete","makeClientCrop","handleCropComplete","onCropChange","percentCrop","handleSubmitAvatar","props","data","FormData","append","axios","post","url","headers","Authorization","then","res","setMandate","sessionFunc","profileUser","catch","err","a","this","getCroppedImg","croppedImageUrl","fileName","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","window","URL","revokeObjectURL","fileUrl","createObjectURL","htmlFor","myInput","click","Avatar","AddAPhoto","Typography","variant","marginLeft","title","ref","id","type","display","accept","onChange","ruleOfThirds","onComplete","keepSelection","flex","justifyContent","alignItems","flexDirection","gap","Button","startIcon","Check","History","PureComponent","Mandate","mandate","isOpen","position","fullHeight","overflowScroll","split","ProfileSetting","dispatch","useDispatch","setUrl","setTitle","setMessage","Error","setError","isMandate","setIsMandate","password","password2","setPassword","handleChange","value","useEffect","handleValidation","get","error","dispatchOpen","Container","centered","ListItemAvatar","avatar","Tooltip","top","first_name","last_name","signature","mobile","email","alignSelf","textAlign","method","FormGroup","TextField","fullWidth","label","placeholder","helperText","setTimeout","response","handleChangePassword","SideBarMenu","history","useHistory","push","AppHeader","search","searchWidget","setSearchWidget","AccountFeed","useParams","calcuTotalDR","tDR","filter","dta","tx_type","reduce","v","amount","calcuTotalCR","tCR","Grid","container","item","lg","border","map","pay","index","tx_date","description","pay_method","account_FK","Date","toLocaleDateString","toLocaleString","colSpan","balance_type","ccolSpan","parseInt","goBack","endIcon","UndoRounded","AccountScreen","uuid","statusText","txs","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","DownloadSaleRepmt","date","dataSet1","filename","element","col","due_date","amount_paid","tx_amount","status","DownloadExpenseReport","renderExpCategory","renderAccount","expense_FK","payment_account","payee_account","expense_date","ExcelDownload","code","find","acc","paid","TxTableView","returncusName","cname","tx","rcpt_no","crData","d","drData","AdminAccountSetting","staffs","tab","setTab","active","locked","change","acc_type","account","accData","setAccdata","facc","ftxs","list","staff","borderColor","outline","disabled","paddingRight","borderLeft","borderBottom","borderTop","borderRight","readOnly","PurchaseRepayment","purchases","SaleViewTable","setRcpt_no","proptxs","setProptxs","sale","property_name","sale_date","More","applicant_name","AdminCustomerSetting","setSuccess","rm","country","phone_no","address_1","occupation","place_work","next_kin_name","customer_sex","customer_name","customer_email","customer_state","postal_address","customer_marital","customer_address","next_kin_addrss","next_kin_relate","business_employer_name","customer","cusData","setCusdata","fcus","cus","fsales","applicant","AdminExpenseSetting","expenses","AdminPostingSetting","console","log","RenderList","qty","plot_number","building","createdAt","PropertySoldViewTable","items","AdminPsSetting","propertySolds","add","setAdd","body","setBody","cost","ps_type","category","location","quantity","sale_price","psData","setPsData","fps","ps","getSoldFps","property","l","AdminSaleSetting","bcategory","CustomerList","hidden","isWidget","alt","CheckBoxRounded","CustomerViewTable","AdminStaffSetting","is_active","setData","fstaff","staf","postBy_FK","AdminMenuList","setIsActive","draggable","divider","AdminSideMenu","AdminFeed","isActive","AdminPosting","renderAdminMenu","AdminScreen","get_Paid_Onpay_Sales","localStorage","clear","paidOnpay","exps","asset","setItem","categories","ExpenseItemsView","expID","returnCategory","cat","expItems","exp","expense_ID","expitem","i","itemList","HandleSearch","explore","inputType","setSearchKey","placeHolder","paddingTop","padding","borderRadius","boxSizing","boxShadow","min","cursor","ExpenseViewTable","headerColor","userExpneses","calcuAmt","searchKey","expSearch","setExpSearch","filterExpense","includes","AppWidgetHeader","setIswidget","SalesItemsModal","sale_ID","location_name","building_name","float","handleClick","MoreHoriz","SaleWidget","isReport","setItems","saleSearch","setSaleSearch","filterSales","key","calcuEarnedAmt","ReportsPool","setExpenses","setFilterSales","filterCustomers","setFilterCustomers","start_date","end_date","fexps","fCus","fSales","ReportFeed","sm","ReportScreen","LoginForm","invalid","setInvalid","preventDefault","trim","handle_Login","CreateStaff","Paper","AuthScreen","BillFeed","setIsOpen","vendorSales","setVendorSales","billFormTemplate","billcategory","billForm","setBillform","vendor_FK","bill_date","bill_term","VALUES","total","handleSetPostData","updatedbillform","jef","Object","assign","fdata","values","findal","getSeconds","getMinutes","getMilliseconds","filterCategories","FileCopy","FormLabel","required","vendor","vendor_name","sd","duedate","setDate","getDate","handleSetTerm","categ","vsales","filterbillform","splice","handleRemovebillform","handleSubmit","AccountCreationForm","snackbar","setSnackbar","Select","native","defaultValue","FormControl","handle_Post","BillWidget","AddBillCategories","billCategoryFormTemplate","createdBy_FK","billCategoryForm","setBillCategoryform","upbillCategoryform","form","filterbillCategoryform","handleRemoveform","marginRight","BillScreen","AccountList","rel","CoaFeed","assets","equitys","liabilitys","overflow","liability","equity","styles","section","inputWrapper","icon","input","resultContainer","SearchWidget","inpuRef","useRef","setSearch","setResult","current","focus","handleSearching","autoComplete","resul","CoaWidget","CoaScreen","handleSearch","handleAddd","CustomerFeed","CusSearchWidget","CustomerCreationForm","Exist","setExist","RMS","isEmpty","keys","forEach","toString","handle_Create_Customer","autoCorrect","multiline","CustomerWidget","CustomerScreen","EstimateFeed","pss","estimateFormTemplate","pro_service","estimateForm","setEstimateform","customer_FK","estimate_date","exp_date","updatedestimateform","rate","selectedPS","filterestimateform","handleRemoveestimateform","EstimateWidget","EstimateScreen","ExpenseFeed","isHead","setisHead","head","setbody","expenseFormTemplate","expenseForm","setExpenseform","updatedexpenseform","cusID","accs","exh","filterexpenseform","handleRemoveexpenseform","Form","exform","isDisable","ExpenselWidget","ExpenseScreen","ExpenseWidget","MultipleChart","datasets","labels","dataPolar","setDataPolar","custotal","acctotal","getItem","options","responsive","SalesChart","ondata","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","dataLine","setDataLine","flabels","toUTCString","TransactionList","ticket_no","HomeFeed","setPaid","onpaid","setOnPaid","paiddata","paiddataValues","completedPaid","pelement","onpaiddata","onpaiddataValues","onPaid","onpelement","justify","elevation","HomeScreen","get_Todays_Tx","InvoiceFeed","noestimate","setNoestimate","invoiceFormTemplate","invoiceForm","setInvoiceform","asset_account_FK","invoice_date","invoice_term","invoice_ID","updatedinvoiceform","cus_FK","filterinvoiceform","handleRemoveinvoiceform","InvoiceWidget","invoices","invoice","InvoiceScreen","JournalFeed","jeFormTemplate","jeForm","setJeform","je_ID","je_date","updatedJeform","postedBy_FK","filterJeform","handleRemoveJeform","jform","JournalListTable","jeID","setTxs","fTXs","JournalWidget","isView","setIsview","staffJournals","sje","jeUID","JournalEntryScreen","MdFeed","setApplicant","setApplication","getCustomerById","Receipt","sale_uuid","Math","round","Checkbox","CashReceipt","rows","row","MdWidget","application","setIsopen","step","setStep","plans","setPlans","scheluls","period","FormControlLabel","control","checked","build_category","listStyle","handleApproval","MdApproveScreen","dispacth","CustomerCard","ID","handle_Set_Ticket","ChevronRight","PostingTicket","handlePost","bank","amount_in_words","Divider","Print","print","PostingFeed","txSearch","setTxSearch","filterduepay","due","filterTxAccounts","txacc","marginTop","PostingScreen","dues","PropServiceForm","sku","product_class","qty_athDate","reorder_point","purchase_info","sale_options","purchase_option","expense_acc_FK","income_acc_FK","handle_Add_Prop_Service","PropServiceWidget","PropServiceList","PropertyServiceFeed","renderPs","toUpperCase","PropertyServiceScreen","ReceivePaymentFeed","setInvoice","recievePayFormTemplate","orig_amount","amount_pay","receivePayForm","pay_date","deposit_account","invoi","ReceivePaymentWidget","ReceivePaymentScreen","RenderItems","buildCategory","sx","bgcolor","currency","CustomerProfile","repayment","fontWeight","propty","SalePaidHistoryView","paymentHistorys","SalePaidHistoryFeed","SalePaymentHistScreen","SelectApplicant","selected","setSelected","selectedApplicant","handle_application","SaleMultipleFeed","add_BuildCategories","properties","saleFormTemplate","saleForm","setSaleForm","updatedsaleform","salef","renderAmount","pro","formIndex","proExist","prop","locat","filtersaleform","handleRemovesaleform","SaleFeed","select","setSelect","filterProperty","SaleScreen","StaffFeed","date_joined","userData","xs","StaffWidget","StaffScreen","VendorList","phone","VendorFeed","VendorCreationForm","address_2","city","zip_code","website","exp_account_FK","vendorData","setVendordata","handle_Create_Vendor","VendorrWidget","VendorScreen","VendorWidget","SaleRepayViewTable","reports","handle_Get_Report","calcuAimed","calcuLastPaid","RenderHead","setProperty","renderTotalSoldAmount","b","RenderPropReport","report","TotalPay","SaleRepaymentFeed","setUuid","getCustomer_Report","setReports","swap","setSwap","setReport","renderTabs","SaleRepaymentReportScreen","RenderPeriodicTable","containerSyle","MultiExcelDownload","exports","setExports","expCategories","Datasets","filterData","catData","slice","expCat","RenderButtonTab","tabIndex","ExpenseAnalysisReport","filterExp","handleFilterExpense","overflowX","exphead","setExpHead","ExpenseReportFeed","headreports","setHeadReports","headingsreports","setHeadingsReports","handle_Get_Ex_Head_Report","ExpenseReportScreen","EditSaleFeed","handleEdit","property_id","location_id","building_id","EditSaleScreen","selectedSale","setSelectedSale","saleSelected","SalesListScreen","ExpenseListScreen","Routes","exact","path","ReportsScreen","App","Boolean","hostname","match","configureStore","reducer","appReducer","ReactDOM","render","StrictMode","store","appStore","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.74bc3d7c.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const appSlice = createSlice({\r\n    name: 'app_state',\r\n    initialState: {\r\n        open: '',\r\n        token: '',\r\n        user: '',\r\n        vendors: '',\r\n        accounts: '',\r\n        customers: '',\r\n        propServices: '',\r\n        appWidget: false,\r\n        assetAccounts: '',\r\n        equityAccounts: '',\r\n        liabilityAccounts: '',\r\n        openEstimate: '',\r\n        userInvoices: '',\r\n\r\n        billCategories: '',\r\n        buildCategories: '',\r\n        pendingSales: '',\r\n\r\n        txAccounts: '',\r\n        todayTxs: [],\r\n        duePayments: '',\r\n        expenseHeadings: [],\r\n        expenseCategories: '',\r\n        userExpenseRaised: '',\r\n        expenseItems: '',\r\n\r\n        allStaffs: '',\r\n        paymentHistory: '',\r\n        paidOnpaySales: '',\r\n\r\n        journals: '',\r\n        staffPosted_Journals: '',\r\n        accountTxs: '',\r\n\r\n        sales: '',\r\n        filterSale: '',\r\n        locations: '',\r\n        transactions: '',\r\n        filterTx: '',\r\n        filterCus: '',\r\n        psSold: '',\r\n    },\r\n\r\n    reducers: {\r\n        setOpen: (state, action) =>{\r\n            state.open = action.payload\r\n        },\r\n        setToken: (state, action) =>{\r\n            state.token = action.payload;\r\n        },\r\n        setUser: (state, action) =>{\r\n            state.user = action.payload\r\n        },\r\n        setAppWidget: (state, action) =>{\r\n            state.appWidget = action.payload\r\n        },\r\n        setAssetAccount: (state, action) =>{\r\n            state.assetAccounts = action.payload\r\n        },\r\n        setLiabilityAccount: (state, action) =>{\r\n            state.liabilityAccounts = action.payload\r\n        },\r\n        setEquityAccount: (state, action) =>{\r\n            state.equityAccounts = action.payload\r\n        },\r\n        setCustomers: (state, action) =>{\r\n            state.customers = action.payload\r\n        },\r\n        setAccounts: (state, action) =>{\r\n            state.accounts = action.payload\r\n        },\r\n        setVendors: (state, action) =>{\r\n            state.vendors = action.payload\r\n        },\r\n        setPropServices: (state, action) =>{\r\n            state.propServices = action.payload\r\n        },\r\n        setOpenEstimate: (state, action) =>{\r\n            state.openEstimate = action.payload\r\n        },\r\n        setUserInvoices: (state, action) =>{\r\n            state.userInvoices = action.payload\r\n        },\r\n        setBillCategories: (state, action) =>{\r\n            state.billCategories = action.payload\r\n        },\r\n        setBuildCategories: (state, action) =>{\r\n            state.buildCategories = action.payload\r\n        },\r\n        setpendingSales: (state, action) =>{\r\n            state.pendingSales = action.payload\r\n        },\r\n\r\n        setTxAccounts: (state, action ) =>{\r\n            state.txAccounts = action.payload\r\n        },\r\n        setDuePayments: (state, action) =>{\r\n            state.duePayments = action.payload\r\n        },\r\n        setExpenseCategories: (state, action) =>{\r\n            state.expenseCategories = action.payload\r\n        },\r\n        setExpenseHeadings: (state, action) =>{\r\n            state.expenseHeadings = action.payload\r\n        },\r\n        setUserExpenseRaised: (state, action) =>{\r\n            state.userExpenseRaised = action.payload\r\n        },\r\n        setExpenseItems: (state, action) =>{\r\n            state.expenseItems = action.payload\r\n        },\r\n        setAllStaffs: (state, action) =>{\r\n            state.allStaffs = action.payload\r\n        },\r\n        setPaymentHistory: (state, action) =>{\r\n            state.paymentHistory = action.payload\r\n        },\r\n        setPaidOnpaySales: (state, action) =>{\r\n            state.paidOnpaySales = action.payload\r\n        },\r\n\r\n        setJournals: (state, action) =>{\r\n            state.journals = action.payload\r\n        },\r\n        setStaffPosted_Journals: (state, action) =>{\r\n            state.staffPosted_Journals = action.payload\r\n        },\r\n        setAccountTxs: (state, action) =>{\r\n            state.accountTxs = action.payload\r\n        },\r\n        settodayTxs: (state, action) =>{\r\n            state.todayTxs = action.payload\r\n        },\r\n        setSAles: (state, action) =>{\r\n            state.sales = action.payload\r\n        },\r\n        setFilterSale: (state, action) =>{\r\n            state.filterSale = action.payload\r\n        },\r\n        setLocations: (state, action) =>{\r\n            state.locations = action.payload\r\n        },\r\n        setTransactions: (state, action) =>{\r\n            state.transactions = action.payload\r\n        },\r\n        setfilterTx: (state, action) =>{\r\n            state.filterTx = action.payload\r\n        },\r\n        setFilterCus: (state, action) =>{\r\n            state.filterCus = action.payload\r\n        },\r\n\r\n        setPsSold: (state, action) =>{\r\n            state.psSold = action.payload\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    setOpen,\r\n    setToken,\r\n    setUser,\r\n    setVendors,\r\n    setAccounts,\r\n    setCustomers,\r\n    setAppWidget,\r\n    setAssetAccount,\r\n    setEquityAccount,\r\n    setLiabilityAccount,\r\n\r\n    setPropServices,\r\n    setPsSold,\r\n\r\n    setOpenEstimate,\r\n    setUserInvoices,\r\n    setBillCategories,\r\n    setBuildCategories,\r\n    setpendingSales,\r\n    setTxAccounts,\r\n    settodayTxs,\r\n    setDuePayments,\r\n    setExpenseHeadings,\r\n    setExpenseCategories,\r\n    setUserExpenseRaised,\r\n    setExpenseItems,\r\n    setAllStaffs,\r\n    setPaymentHistory,\r\n    setPaidOnpaySales,\r\n\r\n    setJournals,\r\n    setStaffPosted_Journals,\r\n\r\n    setAccountTxs,\r\n    setSAles,\r\n    setFilterSale,\r\n    setLocations,\r\n    setTransactions,\r\n    setfilterTx,\r\n    setFilterCus,\r\n    \r\n} = appSlice.actions;\r\n\r\nexport const selectOpen = state => state.app_state.open;\r\n\r\nexport const selectSales = state => state.app_state.sales;\r\nexport const selectFilterSale = state => state.app_state.filterSale;\r\n\r\nexport const selectToken = state => state.app_state.token;\r\nexport const selectUser = state => state.app_state.user;\r\n\r\nexport const selectVendors = state => state.app_state.vendors;\r\nexport const selectAppWidget = state =>state.app_state.appWidget;\r\n\r\nexport const selectCustomers = state => state.app_state.customers;\r\n\r\nexport const selectPsSold = state =>state.app_state.psSold;\r\nexport const selectPropServices = state => state.app_state.propServices;\r\n\r\nexport const selectAccounts = state => state.app_state.accounts;\r\nexport const selectAssetAccount = state => state.app_state.assetAccounts;\r\nexport const selectEquityAccount = state => state.app_state.equityAccounts\r\nexport const selectLiabilityAccount = state => state.app_state.liabilityAccounts\r\n\r\nexport const selectOpenEstimate = state => state.app_state.openEstimate;\r\n\r\nexport const selectUserInvoices = state => state.app_state.userInvoices;\r\n\r\nexport const selectBillCategories = state => state.app_state.billCategories;\r\nexport const selectBuildCategories = state => state.app_state.buildCategories;\r\n\r\nexport const selectPendingSales = state => state.app_state.pendingSales;\r\nexport const selectPaymentHistory = state => state.app_state.paymentHistory;\r\nexport const selectPaidOnpaySales = state => state.app_state.paidOnpaySales;\r\n\r\nexport const selectTxAccounts = state => state.app_state.txAccounts;\r\nexport const selectTodayTxs = state => state.app_state.todayTxs;\r\nexport const selectDuePayments = state => state.app_state.duePayments;\r\n\r\nexport const selectExpenseHeadings = state => state.app_state.expenseHeadings;\r\nexport const selectExpenseCategories = state => state.app_state.expenseCategories;\r\nexport const selectUserExpenseRaised = state => state.app_state.userExpenseRaised;\r\nexport const selectExpenseItems = state => state.app_state.expenseItems;\r\n\r\nexport const selectAllStaffs  = state =>state.app_state.allStaffs;\r\n\r\nexport const selectJournals = state => state.app_state.journals;\r\nexport const selectStaffPosted_Journals = state => state.app_state.staffPosted_Journals;\r\n\r\nexport const selectAccountTxs = state => state.app_state.accountTxs;\r\nexport const selectLocations = state => state.app_state.locations;\r\n\r\nexport const selectTransactions = state => state.app_state.transactions;\r\nexport const selectFilterTx = state => state.app_state.filterTx;\r\n\r\nexport const selectFilterCus = state => state.app_state.filterCus;\r\n\r\nexport default appSlice.reducer;","import React from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nexport default function AppBackdrop({open, setOpen}) {\r\n  const classes = useStyles();\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleToggle = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n","import { ListItem, ListItemIcon, ListItemText, makeStyles } from '@material-ui/core'\r\nimport { Group, House, HowToVote, IndeterminateCheckBox, Lock, LockOpen, Person, PersonAdd, RedeemRounded } from '@material-ui/icons'\r\nimport React, { Fragment } from 'react'\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../../appState/appSlice';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n  }));\r\n\r\nfunction UserRoles({ admin, expense, sales, entries, accountant, ico, md }) {\r\n    const classes = useStyles()\r\n    const user = useSelector(selectUser)\r\n    return (\r\n        <Fragment>\r\n          {/* entries */}\r\n          { entries&&\r\n            <Fragment>\r\n              {/* <Link to='/bills'>\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon>\r\n                    <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                  </ListItemIcon>\r\n                  <ListItemText secondary=\"Bills\" />\r\n                </ListItem>\r\n              </Link> */}\r\n              {/* <Link to='/invoice'>\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon>\r\n                    <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                  </ListItemIcon>\r\n                  <ListItemText secondary=\"Invoices\" />\r\n                </ListItem>\r\n              </Link> */}\r\n              <Link to='/staffs'>\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon>\r\n                    <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                  </ListItemIcon>\r\n                  <ListItemText secondary=\"Staffs\" />\r\n                </ListItem>\r\n              </Link>\r\n              <Link to='/customers'>\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon>\r\n                    <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                  </ListItemIcon>\r\n                  <ListItemText secondary=\"Customers\" />\r\n                </ListItem>\r\n              </Link>\r\n              {/* <ListItem button className={classes.nested}>\r\n                <ListItemIcon>\r\n                  <AllInbox style={{ fontSize: '12px', color: 'gray' }} />\r\n                </ListItemIcon>\r\n                <ListItemText secondary=\"Cubicle\" />\r\n              </ListItem> */}\r\n            </Fragment>\r\n          }\r\n          {/* Banking officer */}\r\n            { expense &&\r\n              <Fragment>\r\n                <Link to='/expense'>\r\n                  <ListItem button className={classes.nested}>\r\n                    <ListItemIcon>\r\n                      <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                    </ListItemIcon>\r\n                    <ListItemText secondary=\"Expense\" />\r\n                  </ListItem>\r\n                </Link>\r\n                <Link to='/expense_list'>\r\n                  <ListItem button className={classes.nested}>\r\n                    <ListItemIcon>\r\n                      <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                    </ListItemIcon>\r\n                    <ListItemText secondary=\"Expense List\" />\r\n                  </ListItem>\r\n                </Link>\r\n                {/* <Link to='/vendor'>\r\n                  <ListItem button className={classes.nested}>\r\n                    <ListItemIcon>\r\n                      <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                    </ListItemIcon>\r\n                    <ListItemText secondary=\"Vendors\" />\r\n                  </ListItem>\r\n                </Link> */}\r\n              </Fragment>\r\n            }\r\n              {/* Sales */}\r\n              { sales &&\r\n                <Fragment>\r\n                  \r\n                  <Link to='/sales'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Sale\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to='/sales_list'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Sales List\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to='/sales/tx'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Posting\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to='/ps'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Property\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  {/* <Link to='/estimate'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Estimate\" />\r\n                    </ListItem>\r\n                  </Link> */}\r\n                  {/* <Link to='/rpayment'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Receive Payment\" />\r\n                    </ListItem>\r\n                  </Link> */}\r\n                </Fragment>\r\n              }\r\n              {/* Accounting */}\r\n              {\r\n                accountant&&\r\n                <Fragment>\r\n                  <Link to='/coa'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Chart of Accounts\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to='/je_entry'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Journal Entry\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to={`/${user.username}/reports`}>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Reports\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to={`/${user.username}/sale_repmt_reports`}>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Sales Reports\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to={`/${user.username}/exp_reports`}>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Expense Reports\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                </Fragment>\r\n              }\r\n\r\n              {/* Ico */}\r\n              {\r\n                ico&&\r\n                <Fragment>\r\n                  <Link to='/inter_control_sme'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"SME Loans\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to='/inter_control_micro_credit'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Micro-credit Loans\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                </Fragment>\r\n              }\r\n              {\r\n                md&&\r\n                <Fragment>\r\n                  <Link to='/applications'>\r\n                    <ListItem button className={classes.nested}>\r\n                      <ListItemIcon>\r\n                        <FiberManualRecordIcon style={{ fontSize: '12px' }} />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary=\"Approve\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  \r\n                </Fragment>\r\n              }\r\n          {/* Admin */}\r\n          \r\n          {\r\n            admin &&\r\n            <Link to={`/admin-settings-dashboard/${user.username}`} >\r\n              <ListItem button className={classes.nested}>\r\n                <ListItemIcon>\r\n                <FiberManualRecordIcon style={{ fontSize: '12px', color: 'gray' }} />\r\n                </ListItemIcon>\r\n                <ListItemText secondary=\"Admin\" />\r\n              </ListItem>\r\n            </Link>\r\n          }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UserRoles\r\n","import {\r\n  Collapse,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  CheckCircle,\r\n  Edit,\r\n  ExpandLess,\r\n  ExpandMore,\r\n  HistoryTwoTone,\r\n  MonetizationOn,\r\n  Person,\r\n  Receipt,\r\n  ShoppingCart,\r\n} from \"@material-ui/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../../appState/appSlice\";\r\nimport UserRoles from \"./UserRoles\";\r\n\r\nconst SideBarNavigation = () => {\r\n  const user = useSelector(selectUser);\r\n  const [collapse, setCollapse] = useState();\r\n  return (\r\n    <div className=\"list__Box\">\r\n      {user && user.entries !== \"no\" && (\r\n        <Fragment>\r\n          <ListItem\r\n            button\r\n            onClick={() => setCollapse(1)}\r\n            className={collapse == 1 ? \"isactive\" : \"\"}\r\n          >\r\n            <ListItemIcon>\r\n              <Edit />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Entries\" />\r\n            {collapse == 1 ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse\r\n            in={collapse == 1 ? true : false}\r\n            timeout=\"auto\"\r\n            unmountOnExit\r\n            className=\"list__Container\"\r\n          >\r\n            <List component=\"div\" disablePadding>\r\n              <UserRoles entries={user.entries} />\r\n            </List>\r\n          </Collapse>\r\n        </Fragment>\r\n      )}\r\n      {user && user.expense !== \"no\" && (\r\n        <Fragment>\r\n          <ListItem\r\n            button\r\n            onClick={() => setCollapse(2)}\r\n            className={collapse == 2 ? \"isactive\" : \"\"}\r\n          >\r\n            <ListItemIcon>\r\n              <MonetizationOn />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Expense\" />\r\n            {collapse == 2 ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse\r\n            in={collapse == 2 ? true : false}\r\n            timeout=\"auto\"\r\n            unmountOnExit\r\n            className=\"list__Container\"\r\n          >\r\n            <List component=\"div\" disablePadding>\r\n              {user && <UserRoles expense={user.expense} />}\r\n            </List>\r\n          </Collapse>\r\n        </Fragment>\r\n      )}\r\n      {user && user.sales !== \"no\" && (\r\n        <Fragment>\r\n          <ListItem\r\n            button\r\n            onClick={() => setCollapse(3)}\r\n            className={collapse == 3 ? \"isactive\" : \"\"}\r\n          >\r\n            <ListItemIcon>\r\n              <ShoppingCart />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Sales\" />\r\n            {collapse == 2 ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse\r\n            in={collapse == 3 ? true : false}\r\n            timeout=\"auto\"\r\n            unmountOnExit\r\n            className=\"list__Container\"\r\n          >\r\n            <List component=\"div\" disablePadding>\r\n              <UserRoles sales={user.sales} />\r\n            </List>\r\n          </Collapse>\r\n        </Fragment>\r\n      )}\r\n      {user && user.accountant !== \"no\" && (\r\n        <Fragment>\r\n          <ListItem\r\n            button\r\n            onClick={() => setCollapse(4)}\r\n            className={collapse == 4 ? \"isactive\" : \"\"}\r\n          >\r\n            <ListItemIcon>\r\n              <HistoryTwoTone />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Accounting\" />\r\n            {collapse == 4 ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse\r\n            in={collapse == 4 ? true : false}\r\n            timeout=\"auto\"\r\n            unmountOnExit\r\n            className=\"list__Container\"\r\n          >\r\n            <List component=\"div\" disablePadding>\r\n              <UserRoles accountant={user.accountant} />\r\n            </List>\r\n          </Collapse>\r\n        </Fragment>\r\n      )}\r\n      {user && user.md !== \"no\" && (\r\n        <Fragment>\r\n          <ListItem\r\n            button\r\n            onClick={() => setCollapse(5)}\r\n            className={collapse == 5 ? \"isactive\" : \"\"}\r\n          >\r\n            <ListItemIcon>\r\n              <CheckCircle />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Approval\" />\r\n            {collapse == 5 ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse\r\n            in={collapse == 5 ? true : false}\r\n            timeout=\"auto\"\r\n            unmountOnExit\r\n            className=\"list__Container\"\r\n          >\r\n            <List component=\"div\" disablePadding>\r\n              <UserRoles md={user.md} />\r\n            </List>\r\n          </Collapse>\r\n        </Fragment>\r\n      )}\r\n      {user && user.is_superuser !== \"n0\" && user.is_superuser !== null && (\r\n        <Fragment>\r\n          <ListItem\r\n            button\r\n            onClick={() => setCollapse(6)}\r\n            className={collapse == 6 ? \"isactive\" : \"\"}\r\n          >\r\n            <ListItemIcon>\r\n              <Person />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Adminstrator\" />\r\n            {collapse == 6 ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse\r\n            in={collapse == 6 ? true : false}\r\n            timeout=\"auto\"\r\n            unmountOnExit\r\n            className=\"list__Container\"\r\n          >\r\n            <List component=\"div\" disablePadding>\r\n              <UserRoles admin={user.is_superuser} />\r\n            </List>\r\n          </Collapse>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBarNavigation;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst AppSnackbar = ({ message, open, setOpen }) => {\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message={message}\r\n        action={\r\n          <React.Fragment>\r\n            \r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppSnackbar\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  CircularProgress,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { AddAPhoto, Check, History, Restore } from \"@material-ui/icons\";\r\nimport React, { Fragment, PureComponent } from \"react\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\nimport \"./uploadAvatar.css\";\r\nimport axios from \"axios\";\r\nimport AppSnackbar from \"./global/AppSnackbar\";\r\n\r\nclass AvatarUpload extends PureComponent {\r\n  state = {\r\n    blob: null,\r\n    src: null,\r\n    crop: {\r\n      unit: \"%\",\r\n      width: 50,\r\n      height: 50,\r\n      margin: \"auto\",\r\n      aspect: 5 / 5,\r\n    },\r\n    appDialog: false,\r\n    message: \"\",\r\n    success: false,\r\n  };\r\n\r\n  onSelectFile = (e) => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener(\"load\", () =>\r\n        this.setState({ src: reader.result })\r\n      );\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  // If you setState the crop in here you should return false.\r\n  onImageLoaded = (image) => {\r\n    this.imageRef = image;\r\n  };\r\n\r\n  onCropComplete = (crop) => {\r\n    this.makeClientCrop(crop);\r\n    // this.setState({src: null})\r\n  };\r\n\r\n  handleCropComplete = () => {\r\n    this.setState({\r\n      src: null,\r\n    });\r\n  };\r\n\r\n  onCropChange = (crop, percentCrop) => {\r\n    // You could also use percentCrop:\r\n    // this.setState({ crop: percentCrop });\r\n    this.setState({ crop });\r\n  };\r\n\r\n  async makeClientCrop(crop) {\r\n    if (this.imageRef && crop.width && crop.height) {\r\n      const croppedImageUrl = await this.getCroppedImg(\r\n        this.imageRef,\r\n        crop,\r\n        \"newFile.jpeg\"\r\n      );\r\n      this.setState({ croppedImageUrl });\r\n    }\r\n  }\r\n\r\n  getCroppedImg(image, crop, fileName) {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      canvas.toBlob((blob) => {\r\n        if (!blob) {\r\n          //reject(new Error('Canvas is empty'));\r\n          // console.error(\"Canvas is empty\");\r\n          return;\r\n        }\r\n        blob.name = fileName;\r\n        window.URL.revokeObjectURL(this.fileUrl);\r\n        this.fileUrl = window.URL.createObjectURL(blob);\r\n        resolve(this.fileUrl);\r\n        this.setState({ blob: blob });\r\n      }, \"image/jpeg\");\r\n    });\r\n  }\r\n\r\n  handleSubmitAvatar = () => {\r\n    this.setState({\r\n      appDialog: true,\r\n    });\r\n    this.props.setOpen(true);\r\n    const data = new FormData();\r\n    // const id = this.props.mandate.split(' ')[0]\r\n    data.append(\"photo\", this.state.blob);\r\n    axios\r\n      .post(this.props.url, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${this.props.token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        this.setState({\r\n          src: null,\r\n          appDialog: false,\r\n          message: res.data.message,\r\n          success: true,\r\n        });\r\n        this.props.setMandate(false);\r\n        this.props.setOpen(false);\r\n\r\n        // this.props.toggle(!this.props.isOpen)\r\n        this.props.sessionFunc();\r\n        return this.props.actions.profileUser();\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          appDialog: false,\r\n        });\r\n        this.props.setOpen(false);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { crop, croppedImageUrl, src, success, message } = this.state;\r\n    const setOpen = () => {\r\n      this.setState({\r\n        success: false,\r\n      });\r\n    };\r\n    return (\r\n      <div className=\"upload_avatar\">\r\n        <AppSnackbar open={success} message={message} setOpen={setOpen} />\r\n        <div className=\"avatar_container\">\r\n          <label htmlFor=\"upload\">\r\n            <IconButton\r\n              size=\"small\"\r\n              style={{ background: \"#2A3F54\" }}\r\n              onClick={() => this.myInput.click()}\r\n            >\r\n              <Avatar>\r\n                <AddAPhoto style={{ color: \"#1ABB9C\" }} />\r\n              </Avatar>\r\n            </IconButton>\r\n          </label>\r\n          <Typography variant=\"p\" style={{ color: \"#1ABB9C\", marginLeft: 10 }}>\r\n            {\" \"}\r\n            Select {this.props.title ? this.props.title : \"Photo\"} For Upload\r\n          </Typography>\r\n          <input\r\n            ref={(ref) => (this.myInput = ref)}\r\n            id=\"upload\"\r\n            type=\"file\"\r\n            style={{ display: \"none\" }}\r\n            accept=\"image/*\"\r\n            onChange={this.onSelectFile}\r\n          />\r\n        </div>\r\n\r\n        {src && (\r\n          <ReactCrop\r\n            src={src}\r\n            crop={crop}\r\n            ruleOfThirds\r\n            onImageLoaded={this.onImageLoaded}\r\n            onComplete={this.onCropComplete}\r\n            onChange={this.onCropChange}\r\n            keepSelection={true}\r\n            style={{ height: \"200px\", width: \"200px\", margin: \"auto\" }}\r\n          />\r\n        )}\r\n        {croppedImageUrl && (\r\n          <Fragment>\r\n            <div\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <Avatar\r\n                src={croppedImageUrl}\r\n                variant=\"square\"\r\n                style={{ width: \"130px\", height: \"130px\" }}\r\n              />\r\n            </div>\r\n\r\n            <section\r\n              className=\"m-4\"\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                gap: \"5px\",\r\n              }}\r\n            >\r\n              <div>\r\n                <Button\r\n                  size=\"small\"\r\n                  startIcon={<Check style={{ color: \"#20c997\" }} />}\r\n                  style={{ background: \"#2A3F54\", color: \"white\" }}\r\n                  variant=\"contained\"\r\n                  onClick={this.handleSubmitAvatar}\r\n                >\r\n                  upload\r\n                </Button>\r\n              </div>\r\n              <div>\r\n                <Button\r\n                  startIcon={<History color=\"secondary\" />}\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  onClick={() => {\r\n                    this.setState({ src: null });\r\n                    this.myInput.click();\r\n                  }}\r\n                >\r\n                  Reset\r\n                </Button>\r\n              </div>\r\n              {this.state.appDialog && (\r\n                <CircularProgress size=\"20px\" color=\"secondary\" />\r\n              )}\r\n            </section>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AvatarUpload;\r\n","// MUI Stuff\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Close from \"@material-ui/icons/Close\";\r\n\r\n// MDB Stuff\r\nimport {\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalFooter,\r\n  MDBModalHeader,\r\n} from \"mdbreact\";\r\nimport { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectToken } from \"../appState/appSlice\";\r\nimport AvatarUpload from \"./UploadAvatar\";\r\n\r\nconst Mandate = ({ title, url, mandate, setMandate, setOpen }) => {\r\n  const token = useSelector(selectToken);\r\n  return (\r\n    <Fragment>\r\n      <MDBModal\r\n        isOpen={mandate}\r\n        backdrop={false}\r\n        position=\"right\"\r\n        fullHeight={true}\r\n        overflowScroll={false}\r\n      >\r\n        <MDBModalHeader>\r\n          <Typography>\r\n            Upload {mandate && mandate.split(\" \")[1]}{\" \"}\r\n            {title ? title : \"Mandate\"}\r\n          </Typography>\r\n        </MDBModalHeader>\r\n        <MDBModalBody>\r\n          {/* imported component */}\r\n          <AvatarUpload\r\n            title={title}\r\n            setOpen={setOpen}\r\n            mandate={mandate}\r\n            token={token}\r\n            setMandate={setMandate}\r\n            url={url}\r\n          />\r\n        </MDBModalBody>\r\n        <MDBModalFooter>\r\n          <IconButton color=\"secondary\" onClick={() => setMandate(!mandate)}>\r\n            <Close color=\"action\" />\r\n          </IconButton>\r\n        </MDBModalFooter>\r\n      </MDBModal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Mandate;\r\n","// MUI Stuff\r\nimport List from \"@material-ui/core//List\";\r\nimport Avatar from \"@material-ui/core//Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ListItem from \"@material-ui/core//ListItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\n\r\n// Icons\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport Phone from \"@material-ui/icons/Phone\";\r\nimport Email from \"@material-ui/icons/Email\";\r\nimport EditRounded from \"@material-ui/icons/EditRounded\";\r\n\r\nimport AttachFile from \"@material-ui/icons/AttachFile\";\r\n// MDB Stuff\r\nimport {\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalFooter,\r\n  MDBModalHeader,\r\n} from \"mdbreact\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setOpen as dispatchOpen,\r\n  selectUser,\r\n  selectToken,\r\n  setUser,\r\n  setToken,\r\n  selectOpen,\r\n} from \"../../appState/appSlice\";\r\n\r\nimport Mandate from \"../Mandate\";\r\n\r\nimport axios from \"axios\";\r\nimport AppBackdrop from \"./AppBackDrop\";\r\nimport AppSnackbar from \"./AppSnackbar\";\r\n\r\nconst ProfileSetting = ({ open, setOpen }) => {\r\n  const dispatch = useDispatch();\r\n  const [url, setUrl] = useState();\r\n  const user = useSelector(selectUser);\r\n  const [title, setTitle] = useState();\r\n  const token = useSelector(selectToken);\r\n  const isOpen = useSelector(selectOpen);\r\n  const [message, setMessage] = useState();\r\n  const [Error, setError] = useState();\r\n  const [mandate, setMandate] = useState(false);\r\n  const [isMandate, setIsMandate] = useState(false);\r\n\r\n  const [password, setPassword] = useState({\r\n    Error: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n  const handleValidation = () => {\r\n    if (password.password != password.password2)\r\n      return setPassword({\r\n        ...password,\r\n        Error: \"Password must match\",\r\n      });\r\n    setPassword({\r\n      ...password,\r\n      Error: \"\",\r\n    });\r\n  };\r\n\r\n  //   func\r\n\r\n  const get_Session = () => {\r\n    axios\r\n      .get(`/auth/active`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((user) => {\r\n        dispatch(setUser(user.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  const handleDispatch = () => {\r\n    get_Session();\r\n    setIsMandate(false);\r\n    dispatch(dispatchOpen());\r\n  };\r\n\r\n  const handleSignature = () => {\r\n    setTitle(\"Signature\");\r\n    setUrl(`/auth/signature/${user && user.id}/${user.username}`);\r\n    setMandate(user && user.id + \" \" + user.first_name);\r\n  };\r\n\r\n  const handleAvatar = () => {\r\n    setTitle(\"Profile Picture\");\r\n    setUrl(`/auth/avatar/${user && user.id}/${user.username}`);\r\n    setMandate(user && user.id + \" \" + user.first_name);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setPassword({\r\n      ...password,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setPassword({\r\n      ...password,\r\n      Error: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n    });\r\n  };\r\n\r\n  const handleChangePassword = () => {\r\n    if(!password.password || !password.password2) return setError('No Changes')\r\n    dispatch(dispatchOpen());\r\n    axios\r\n      .post(\"/auth/pwd\", password, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        setTimeout(() => {\r\n          dispatch(setToken(\"\"));\r\n        }, 5000);\r\n        setMessage(result.data.message);\r\n      })\r\n      .catch((error) => {\r\n        if (error) return setError(error.response.data);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    return handleValidation();\r\n  }, [password.password, password.password2]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Mandate\r\n        title={title}\r\n        open={isMandate}\r\n        mandate={mandate}\r\n        setOpen={handleDispatch}\r\n        setMandate={setMandate}\r\n        url={mandate && url}\r\n      />\r\n      <AppBackdrop open={isOpen} />\r\n      <AppSnackbar open={message} setOpen={setMessage} message={message} />\r\n      <Container>\r\n        <MDBModal\r\n          centered\r\n          size=\"md\"\r\n          isOpen={open}\r\n          backdrop={false}\r\n          overflowScroll={false}\r\n        >\r\n          <MDBModalHeader>\r\n            <Typography variant=\"subtitle1\">Profile Settings</Typography>\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            {Error && <Typography color=\"error\"> {Error} </Typography>}\r\n            <section>\r\n              <List>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar\r\n                      src={user && user.avatar}\r\n                      style={{ width: 70, height: 70 }}\r\n                    />\r\n                    {user && !user.avatar && (\r\n                      <Tooltip title=\"Upload Profile Picture\">\r\n                        <IconButton\r\n                          size=\"medium\"\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            top: 45,\r\n                            marginLeft: 25,\r\n                          }}\r\n                          onClick={() => handleAvatar()}\r\n                        >\r\n                          <EditRounded style={{ color: \"#20c997\" }} />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    )}\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={\r\n                      user &&\r\n                      `${user.first_name} \r\n                      ${user.last_name}`\r\n                    }\r\n                    className=\"ml-2\"\r\n                    secondary={user && user.username}\r\n                  />\r\n                  <div>\r\n                    <ListItemText\r\n                      secondary={\r\n                        user && user.signature ? (\r\n                          <Tooltip title=\"Signature\">\r\n                            <Avatar variant=\"square\" src={user.signature} />\r\n                          </Tooltip>\r\n                        ) : (\r\n                          <Tooltip title=\"Upload Signature\">\r\n                            <IconButton\r\n                              size=\"medium\"\r\n                              onClick={() => handleSignature()}\r\n                            >\r\n                              <AttachFile />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        )\r\n                      }\r\n                    />\r\n                  </div>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemIcon>\r\n                    <IconButton>\r\n                      <Phone />\r\n                    </IconButton>\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary=\"Contact\"\r\n                    secondary={user && user.mobile}\r\n                  />\r\n                  <ListItemIcon>\r\n                    <IconButton>\r\n                      <Email />\r\n                    </IconButton>\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary=\"Email Address\"\r\n                    secondary={user && user.email}\r\n                  />\r\n                </ListItem>\r\n              </List>\r\n            </section>\r\n            <>\r\n              <Typography\r\n                variant=\"body1\"\r\n                style={{\r\n                  color: \"#20c997\",\r\n                  alignSelf: \"center\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                Change Password\r\n              </Typography>\r\n              <form action=\"\" method=\"post\">\r\n                <FormGroup className=\"p-3\">\r\n                  <TextField\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"New Password\"\r\n                    value={password.password}\r\n                    onChange={(e) => handleChange(e)}\r\n                    error={password && password.Error ? true : false}\r\n                    helperText={password && password.Error}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"p-3\">\r\n                  <TextField\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    type=\"password\"\r\n                    name=\"password2\"\r\n                    variant=\"outlined\"\r\n                    label=\"Confirm Password\"\r\n                    value={password.password2}\r\n                    placeholder=\"New Password\"\r\n                    onChange={(e) => handleChange(e)}\r\n                    error={password && password.Error ? true : false}\r\n                    helperText={password && password.Error}\r\n                  />\r\n                </FormGroup>\r\n              </form>\r\n            </>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              onClick={() => handleChangePassword()}\r\n              style={{ color: \"white\", backgroundColor: \"#2a3f54\" }}\r\n            >\r\n              Change\r\n            </Button>\r\n            <Tooltip title=\"Close\">\r\n              <IconButton\r\n                size=\"medium\"\r\n                color=\"secondary\"\r\n                className=\"ml-3\"\r\n                onClick={() => handleClose()}\r\n              >\r\n                <Close color=\"error\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProfileSetting;\r\n","// MUI Stuff\r\nimport List from \"@material-ui/core//List\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core//Avatar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ListItem from \"@material-ui/core//ListItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\n\r\n// MUI Icons\r\nimport Power from \"@material-ui/icons/Power\";\r\nimport Settings from \"@material-ui/icons/Settings\";\r\nimport Fullscreen from \"@material-ui/icons/Fullscreen\";\r\n\r\nimport React, { useEffect, Fragment, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { selectToken, selectUser, setToken } from \"../../appState/appSlice\";\r\nimport SideBarNavigation from \"./SideBarNavigation\";\r\nimport ProfileSetting from \"./ProfileSetting\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SideBarMenu = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const token = useSelector(selectToken);\r\n  const user = useSelector(selectUser);\r\n  const [open, setOpen] = useState(false);\r\n  useEffect(() => {\r\n    if (!token) {\r\n      return history.push(\"/\");\r\n    }\r\n  }, [token]);\r\n  return (\r\n    <Fragment>\r\n      <div className=\"side__BarContainer p-1 hide-on-print\">\r\n        {/* Profile Setting Component */}\r\n        <ProfileSetting open={open} setOpen={setOpen} />\r\n        <section\r\n          className=\"p-3\"\r\n          style={{\r\n            position: \"sticky\",\r\n            top: 0,\r\n            zIndex: 2,\r\n            backgroundColor: \"inherit\",\r\n          }}\r\n        >\r\n          <div className=\"side__BarHeader p-2\">\r\n            <Typography variant=\"subtitle1\">EMS</Typography>\r\n          </div>\r\n          <List>\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <Avatar\r\n                  src={user && user.avatar}\r\n                  style={{ width: 70, height: 70 }}\r\n                />\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={\r\n                  user &&\r\n                  `${user.first_name} \r\n                      ${user.last_name}`\r\n                }\r\n                className=\"ml-2\"\r\n                secondary={\r\n                  user && (\r\n                    <Typography\r\n                      variant=\"subtitle1\"\r\n                      style={{ color: \"#20c997\" }}\r\n                    >\r\n                      {`${user.username}`}\r\n                    </Typography>\r\n                  )\r\n                }\r\n              />\r\n            </ListItem>\r\n          </List>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            style={{ background: \"#2A3F54\", width: \"100%\", color: \"white\" }}\r\n          >\r\n            System Right\r\n          </Button>\r\n        </section>\r\n\r\n        <section className=\"side__BarMenuContainer\">\r\n          <SideBarNavigation user={user} />\r\n        </section>\r\n        <div className=\"side__BarFooter\">\r\n          {user && (\r\n            <Tooltip title=\"Settings\">\r\n              <IconButton onClick={() => setOpen(!open)}>\r\n                <Settings />\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n          <IconButton>\r\n            <Fullscreen />\r\n          </IconButton>\r\n          <Tooltip title=\"Log out\">\r\n            <IconButton onClick={() => dispatch(setToken(\"\"))}>\r\n              <Power />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SideBarMenu;\r\n","// MUI Stuff\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// Icons\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport Settings from \"@material-ui/icons/Settings\";\r\nimport MoreVert from \"@material-ui/icons/MoreVert\";\r\nimport Dashboard from \"@material-ui/icons/Dashboard\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport \"./appHeader.css\";\r\nimport { Fragment } from \"react\";\r\nimport ProfileSetting from \"./ProfileSetting\";\r\n\r\nconst AppHeader = ({ title, search, searchWidget, setSearchWidget }) => {\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"app__HeaderContainer hide-on-print\">\r\n        <div className=\"app__HeaderLeft\">\r\n          {title && (\r\n            <Typography variant=\"subtitle1\" className=\"ml-2\">\r\n              {title}\r\n            </Typography>\r\n          )}\r\n        </div>\r\n        <aside className=\"app__HeaderRight\">\r\n          <Tooltip title=\"Go To Dashboard\">\r\n            <IconButton onClick={() => history.push(\"/\")}>\r\n              <Dashboard />\r\n            </IconButton>\r\n          </Tooltip>\r\n          {search ? (\r\n            <Tooltip title={`Search ${title}`}>\r\n              <IconButton onClick={() => setSearchWidget(!searchWidget)}>\r\n                <Search />\r\n              </IconButton>\r\n            </Tooltip>\r\n          ) : (\r\n            <Tooltip title={`Setting`}>\r\n              <IconButton onClick={() => setOpen(!open)}>\r\n                <Settings />\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n          <IconButton>\r\n            <MoreVert />\r\n          </IconButton>\r\n        </aside>\r\n      </div>\r\n      {/* Profile setting component */}\r\n      <ProfileSetting open={open} setOpen={setOpen} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import { Button, Grid, Typography } from \"@material-ui/core\";\r\nimport { UndoRounded } from \"@material-ui/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  useHistory,\r\n  useParams,\r\n} from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { selectAccounts, selectAccountTxs } from \"../appState/appSlice\";\r\nimport AppHeader from \"./global/AppHeader\";\r\nimport AppBackdrop from \"./global/AppBackDrop\";\r\n\r\nconst AccountFeed = () => {\r\nconst params = useParams();\r\nconst { name } = params;\r\nconst history = useHistory();\r\nconst [open, setOpen] = useState(true)\r\nconst accountTxs = useSelector(selectAccountTxs);\r\nconst accounts = useSelector(selectAccounts)\r\n\r\nconst calcuTotalDR = (data) => {\r\n  const tDR = data && data.filter((dta) => dta.tx_type == \"DR\");\r\n  const total = tDR && tDR.reduce((a, v) => +v.amount + a, 0);\r\n  return total;\r\n};\r\n  const calcuTotalCR = (data) => {\r\n    const tCR = data && data.filter((dta) => dta.tx_type == \"CR\");\r\n    const total = tCR && tCR.reduce((a, v) => +v.amount + a, 0);\r\n    return total;\r\n  };\r\n\r\n  const renderAccountDetails = (account_FK) =>{\r\n        \r\n    const account = accounts && accounts.find(acc =>acc.code == account_FK )\r\n    return account && account.balance_type\r\n  }\r\n\r\n  useEffect(() =>{\r\n    setTimeout(() => {\r\n        setOpen(!open)\r\n    }, 500);\r\n    \r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"app__Feed\">\r\n       <AppBackdrop open={open} setOpen={setOpen} />\r\n      <AppHeader title=\"Posting\" />\r\n      <div className=\"m-3\">\r\n        <Grid container spacing={2}>\r\n          <Grid item lg={12} md={12}>\r\n            <table className=\"table table-sm table-hover\">\r\n              <thead>\r\n                <th style={{ border: \"1px solid #F7F7F7F7\" }}>#</th>\r\n                <th style={{ border: \"1px solid #F7F7F7F7\" }}>Description</th>\r\n                <th style={{ border: \"1px solid #F7F7F7F7\" }}>Date</th>\r\n                <th style={{ border: \"1px solid #F7F7F7F7\" }}>\r\n                  DR (<s>N</s>)\r\n                </th>\r\n                <th style={{ border: \"1px solid #F7F7F7F7\" }}>\r\n                  CR (<s>N</s>)\r\n                </th>\r\n                <th style={{ border: \"1px solid #F7F7F7F7\" }}> Pay Method </th>\r\n                {/* <th style={{ border: '1px solid #F7F7F7F7' }}> Status </th> */}\r\n              </thead>\r\n              <tbody>\r\n                {accountTxs &&\r\n                  accountTxs.map((pay, index) => {\r\n                    const {\r\n                      tx_date,\r\n                      tx_type,\r\n                      description,\r\n                      amount,\r\n                      account_FK,\r\n                      pay_method,\r\n                    } = pay;\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td>\r\n                            <Typography\r\n                                style={{\r\n                                    color: '#20c997'\r\n                                }}\r\n                            > {index+1} </Typography>\r\n                        </td>\r\n                        <td>{description}</td>\r\n                        <td> {new Date(tx_date).toLocaleDateString()} </td>\r\n                        <td>\r\n                          <Typography variant=\"p\" color='error'>\r\n                            {tx_type == \"DR\" ? amount.toLocaleString() : null}\r\n                          </Typography>\r\n                        </td>\r\n                        <td>\r\n                          <Typography variant=\"p\" style={{ color: \"#20c997\" }}>\r\n                            {tx_type == \"CR\" ? amount.toLocaleString() : null}\r\n                          </Typography>\r\n                        </td>\r\n                        <td> {pay_method} </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n\r\n                {accountTxs && (\r\n                  <tr style={{ background: \"none\" }}>\r\n                    <td colSpan={1}></td>\r\n                    <td colSpan={1}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{ color: \"white\", \r\n                          background: \"red\", width: '50%' }}\r\n                      >\r\n                        <b>Total Debit :</b>\r\n                      </Button>\r\n                    </td>\r\n                    <td colSpan={1}></td>\r\n                    <td colSpan={1}>\r\n                      <Typography variant=\"h5\">\r\n                        <b>\r\n                          <s>N</s>:{calcuTotalDR(accountTxs).toLocaleString()}\r\n                        </b>\r\n                      </Typography>\r\n                    </td>\r\n                    <td colSpan={2}></td>\r\n                  </tr>\r\n                )}\r\n\r\n                {accountTxs && (\r\n                  <tr style={{ background: \"none\" }}>\r\n                    <td colSpan={1}></td>\r\n                    <td colSpan={1}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{ color: \"white\", \r\n                          background: \"#2A3F54\", width: '50%' }}\r\n                      >\r\n                        <b>Total Credit :</b>\r\n                      </Button>\r\n                    </td>\r\n\r\n                    <td colSpan={2}></td>\r\n                    <td colSpan={1}>\r\n                      <Typography variant=\"h5\" style={{ color: \"#20c997\" }}>\r\n                        <b>\r\n                          <s>N</s>:{calcuTotalCR(accountTxs).toLocaleString()}\r\n                        </b>\r\n                      </Typography>\r\n                    </td>\r\n                    <td colSpan={1}></td>\r\n                  </tr>\r\n                )}\r\n\r\n                {accountTxs && (\r\n                  <tr style={{ background: \"none\" }}>\r\n                    <td colSpan={1}></td>\r\n                    <td>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{ color: \"white\", \r\n                          background: \"#20c997\", width: '50%' }}\r\n                      >\r\n                        <b>Close Balance :</b>\r\n                      </Button>\r\n                    </td>\r\n                    {\r\n                      accountTxs.length >0 && <td\r\n                      colSpan={\r\n                        accountTxs[0].balance_type == \"DR\" ? 1 : 2\r\n                      }\r\n                    ></td>\r\n                    }\r\n                    <td ccolSpan={2}>\r\n                      <Typography variant=\"h5\" style={{ color: \"#20c997\" }}>\r\n                        <b>\r\n                          <s>N</s>:\r\n                          {calcuTotalDR(accountTxs) > 0\r\n                            ?parseInt(calcuTotalCR(accountTxs) -\r\n                              calcuTotalDR(accountTxs)).toLocaleString()\r\n                            : calcuTotalCR(accountTxs).toLocaleString()}\r\n                        </b>\r\n                      </Typography>\r\n                    </td>\r\n                    {\r\n                      accountTxs.length >0 &&\r\n                      <td\r\n                      colSpan={\r\n                        accountTxs[0].balance_type == \"DR\" ? 2 : 1\r\n                      }\r\n                    ></td>\r\n                    }\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n            {!accountTxs.length > 0 && (\r\n              <Fragment>\r\n                <div className=\"alert alert-warning\">\r\n                  {`Ops!!! ${name} have no transaction history`}\r\n                </div>\r\n              </Fragment>\r\n            )}\r\n            <section\r\n              className=\"mt-5\"\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Button\r\n                size=\"medium\"\r\n                variant=\"contained\"\r\n                onClick={() => history.goBack()}\r\n                style={{ background: \"#2A3F54\", color: \"white\" }}\r\n                endIcon={<UndoRounded style={{ color: \"#20c997\" }} />}\r\n              >\r\n                Back\r\n              </Button>\r\n            </section>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountFeed;\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken,  setAccounts,  setAccountTxs,  setCustomers, setUser, } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport AccountFeed from '../components/AccountFeed'\r\n\r\nconst AccountScreen = () => {\r\n    const params = useParams()\r\n    const {uuid} = params\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n\r\n     // func\r\n\r\n    const get_Accounts_Tx = () =>{\r\n        // console.log(uuid)\r\n        axios.get(`/account/tx/${uuid}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(txs =>{\r\n            dispatch(setAccountTxs(txs.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n     // func\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    \r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        get_Session()\r\n       get_AllAccounts()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        get_Accounts_Tx()\r\n    }, [uuid])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} setOpen={setOpen} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <AccountFeed\r\n                setOpen={setOpen}\r\n            />            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccountScreen\r\n","import React from \"react\";\r\nimport ReactExport from \"react-data-export\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAccounts } from \"../appState/appSlice\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nconst ExcelDownload = ({ date, dataSet1}) => {\r\n    const accounts = useSelector(selectAccounts)\r\n    const returncusName = (code) =>{\r\n        const cname = accounts && accounts.find(acc =>acc.code ===code).name\r\n        return cname\r\n    }\r\n    return (\r\n        <ExcelFile\r\n            filename ={`TXS ${date}`}\r\n            element={<button>Export To Excel</button>}\r\n        >\r\n            <ExcelSheet data={dataSet1} name={`TXS ${date}` }>\r\n                <ExcelColumn label=\"Account Name\" value={(col) =>returncusName(col.account_FK)} />\r\n                <ExcelColumn label=\"Code\" value=\"account_FK\"/>\r\n                <ExcelColumn label=\"Description\" value=\"description\"/>\r\n                <ExcelColumn label=\"Tx Date\" \r\n                    value={(col) => new Date(col.tx_date).toLocaleDateString()}/>\r\n                <ExcelColumn label=\"CR\"\r\n                    value={(col) => col.tx_type ===\"CR\" ? col.amount : \"\"}/>\r\n                <ExcelColumn label=\"DR\"\r\n                    value={(col) => col.tx_type ===\"DR\" ? col.amount : \"\"}/>\r\n                <ExcelColumn label=\"Status\"\r\n                    value={(col) => col.paid ===1 ? \"Posted\" : \"Post\"}/>\r\n                <ExcelColumn label=\"Pay Method\" value=\"pay_method\"/>\r\n                \r\n            </ExcelSheet>\r\n           \r\n        </ExcelFile>\r\n    );\r\n    \r\n}\r\n\r\nexport const DownloadSaleRepmt = ({ date, dataSet1}) => {\r\n    return (\r\n        <ExcelFile\r\n            filename ={`Sale Rept ${date}`}\r\n            element={<button>Export To Excel</button>}\r\n        >\r\n            <ExcelSheet data={dataSet1} name={`SRPMTR ${date}` }>\r\n                <ExcelColumn label=\"Name\" value=\"applicant_name\" />\r\n                <ExcelColumn label=\"Property\" value=\"property_name\"/>\r\n                <ExcelColumn label=\"Due Date\" \r\n                    value={(col) => new Date(col.due_date).toLocaleDateString()}/>\r\n                <ExcelColumn label=\"Cost AMT(N)\"\r\n                    value={(col) => parseInt(col.amount).toLocaleString()}/>\r\n                <ExcelColumn label=\"Aimed AMT(N)\"\r\n                    value={(col) => parseInt(col.amount_paid).toLocaleString()}/>\r\n                <ExcelColumn label=\"RCPT NO.\" value=\"rcpt_no\"/>\r\n                <ExcelColumn label=\"Tx Date\" \r\n                    value={(col) => new Date(col.tx_date).toLocaleDateString()}/>\r\n                <ExcelColumn label=\"LT Paymnt(N)\"\r\n                    value={(col) => parseInt(col.tx_amount).toLocaleString()}/>\r\n                <ExcelColumn label=\"Pay Method\" value=\"pay_method\"/>\r\n                <ExcelColumn label=\"Remark\"\r\n                    value={(col) => col.status ===1 ? \"Posted\" : \"Post\"}/>\r\n            </ExcelSheet>\r\n           \r\n        </ExcelFile>\r\n    );\r\n    \r\n}\r\n\r\nexport const DownloadExpenseReport = ({ date, dataSet1, \r\n    renderExpCategory, renderAccount\r\n}) => {\r\n    return (\r\n        <ExcelFile\r\n            filename ={`Expense ${date}`}\r\n            element={<button>Export To Excel</button>}\r\n        >\r\n            <ExcelSheet data={dataSet1} name={`EXPReport ${date}` }>\r\n                <ExcelColumn label=\"Item\" \r\n                    value={(col) =>renderExpCategory(col.expense_FK)} />\r\n                <ExcelColumn label=\"Description\" value=\"description\"/>\r\n                <ExcelColumn label=\"Account Payable\" \r\n                    value={(col) =>renderAccount(col.payment_account)} />\r\n                <ExcelColumn label=\"Account Receivable\"\r\n                    value={(col) => renderAccount(col.payee_account)}/>\r\n                <ExcelColumn label={`Amount (N)`}\r\n                    value={(col) => parseInt(col.amount).toLocaleString()}/>\r\n                <ExcelColumn label=\"Date\" \r\n                    value={(col) => new Date(col.expense_date).toLocaleDateString()}/>\r\n                \r\n                <ExcelColumn label=\"Pay Method\" value=\"pay_method\"/>\r\n                \r\n            </ExcelSheet>\r\n           \r\n        </ExcelFile>\r\n    );\r\n    \r\n}\r\n\r\nexport default ExcelDownload","import { Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectAccounts, selectFilterTx } from '../../appState/appSlice'\r\nimport ExcelDownload from '../ExcelDownload'\r\nconst TxTableView = ({name, date}) => {\r\n    const txs = useSelector(selectFilterTx)\r\n    const accounts = useSelector(selectAccounts)\r\n    // func \r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total.toLocaleString()\r\n    }\r\n    const calcuTotalCR = (data) =>{\r\n        const crData = data && data.filter(d =>d.tx_type ==='CR');\r\n        const totalCR =  crData && crData.reduce((a, v) =>v.tx_type ==='CR' && v.amount+a, 0)\r\n        return totalCR.toLocaleString()\r\n    }\r\n    const calcuTotalDR = (data) =>{\r\n        const drData = data && data.filter(d =>d.tx_type ==='DR');\r\n        const totalDR =  drData && drData.reduce((a, v) =>v.tx_type ==='DR' && v.amount+a, 0)\r\n        return totalDR.toLocaleString()\r\n    }\r\n\r\n    const returncusName = (code) =>{\r\n        const cname = accounts && accounts.find(acc =>acc.code ===code)\r\n       if(cname) \r\n            return cname.name\r\n        return null\r\n    }\r\n\r\n    const tx_Status = (x) =>{\r\n        const status = x && x == 1 ?\r\n            <span className='fa fa-plus-circle' style={{color: '#20c997'}} />\r\n        :\r\n       \r\n        <span className='fa fa-minus-circle' style={{color: 'red'}} />\r\n        return status\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <table className='table-hover table-bordered'\r\n                style={{width: '98%', margin: 'auto'}}\r\n            >\r\n                <thead style={{top: '60px', position: 'sticky', background: '#EDEDED'}}>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Name</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Code</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Description</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Date</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>RCPT. NO.</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>CR (<s>N</s>)</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>DR (<s>N</s>)</th>\r\n\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}> Pay Method </th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}> Status </th>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        txs &&\r\n                        txs.map((tx, index) =>{\r\n                            const { tx_date, description, tx_type, amount, rcpt_no, account_FK, pay_method, \r\n                               paid } = tx\r\n                            return (\r\n                                <Fragment key={index}>\r\n                                    <tr>\r\n                                        <td\r\n                                            style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}\r\n                                        >\r\n                                        <Typography\r\n                                          style={{\r\n                                             \r\n                                              color: '#20c997'\r\n                                          }}\r\n                                        > {index+1} </Typography>\r\n                                      </td> \r\n                                        <td style={{textAlign: 'left'}}>\r\n                                            {returncusName(account_FK)}\r\n                                        </td>\r\n                                        <td style={{textAlign: 'left'}}>{account_FK}</td>\r\n                                        <td style={{textAlign: 'left', margin: '5px'}}>\r\n                                        \r\n                                            {description}\r\n                                        \r\n                                        </td>\r\n                                        <td> {new Date(tx_date).toLocaleDateString()} </td>\r\n                                        <td> {rcpt_no} </td>\r\n                                        {\r\n                                            tx_type =='CR'?\r\n                                            <td>\r\n                                                <Typography style={{color: '#20C997'}}>\r\n                                                { amount.toLocaleString() }\r\n                                                </Typography>\r\n                                            </td>\r\n                                            :\r\n                                            <td> </td>\r\n                                        }\r\n                                        {\r\n                                            tx_type =='DR'?\r\n                                            <td>\r\n                                                <Typography color='error'>\r\n                                                { amount.toLocaleString() }\r\n                                                </Typography>\r\n                                            </td>\r\n                                            :\r\n                                            <td> </td>\r\n                                        }\r\n                                        <td> {pay_method} </td>\r\n                                        <td\r\n                                            style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}\r\n                                        >\r\n                                            <div className='p-2'>\r\n                                            {tx_Status(paid)}\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                    {\r\n                        txs && txs.length >0 &&\r\n                        <tr\r\n                        style={{background: '#2A3F54', color: 'white'}} \r\n                        >\r\n                            <td colSpan={2}>\r\n                                <Typography variant='subtitle1'\r\n                                style={{color: 'white'}}\r\n                                >\r\n                                    <b>Total:</b>\r\n                                </Typography>\r\n                            </td>\r\n                            <td colSpan={5}>\r\n                                <Typography variant='subtitle1'\r\n                                style={{color: 'white'}}\r\n                                >\r\n                                <b>{\r\n                                    calcuTotalCR(txs)\r\n                                }</b>\r\n                                </Typography>\r\n                            </td>\r\n                            <td colSpan={1}>\r\n                                <Typography variant='subtitle1'\r\n                                    style={{color: 'white'}}\r\n                                    >\r\n                                    <b>{calcuTotalDR(txs)}</b>\r\n                                </Typography>\r\n                            </td>\r\n                            <td colSpan={2}>\r\n                                <Typography variant='subtitle1'\r\n                                    style={{color: 'white'}}\r\n                                    >\r\n                                    <b>{ calcuAmt(txs)}</b>\r\n                                </Typography>\r\n                            </td>\r\n                        </tr>\r\n                        \r\n                    }\r\n                    \r\n                </tbody>\r\n                \r\n            </table>\r\n                  \r\n            {\r\n                txs<=0 &&\r\n                \r\n                <div className='alert alert-warning'\r\n                    style={{width: '98%', margin: 'auto'}}\r\n                >\r\n                    {`Ops!!! No Transaction History`}\r\n                </div>                \r\n            }\r\n            {\r\n                name && !name.length >0 &&\r\n                <div className='alert alert-warning'\r\n                    style={{width: '98%', margin: 'auto'}}\r\n                >\r\n                    {`Ops!!! No Staff Selected`}\r\n                </div>\r\n            }\r\n            {\r\n                txs && txs.length >0 &&\r\n                <table className='table'>\r\n                    <tbody>\r\n                    <tr >\r\n                        <td className='p-3'>\r\n                            <ExcelDownload\r\n                                date={date} \r\n                                dataSet1={txs} \r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default TxTableView\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  selectAccounts,\r\n  selectAllStaffs,\r\n  selectToken,\r\n  selectTransactions,\r\n  setfilterTx,\r\n  setOpen,\r\n} from \"../appState/appSlice\";\r\nimport AppSnackbar from \"./global/AppSnackbar\";\r\nimport TxTableView from \"./global/TxTableView\";\r\n\r\nconst AdminAccountSetting = () => {\r\n  const dispatch = useDispatch();\r\n  const token = useSelector(selectToken);\r\n  const staffs = useSelector(selectAllStaffs);\r\n  const accounts = useSelector(selectAccounts);\r\n  const transactions = useSelector(selectTransactions);\r\n  const [tab, setTab] = useState();\r\n  const [Error, setError] = useState();\r\n  const [message, setMessage] = useState();\r\n  const [accData, setAccdata] = useState({\r\n    id: \"\",\r\n    name: \"\",\r\n    code: \"\",\r\n    active: \"\",\r\n    locked: \"\",\r\n    change: false,\r\n    acc_type: \"\",\r\n    account: \"\",\r\n    balance_type: \"\",\r\n  });\r\n  // func\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setAccdata({\r\n      ...accData,\r\n      [name]: value,\r\n      change: true,\r\n    });\r\n  };\r\n\r\n  const handleAccountUpdate = () => {\r\n    dispatch(setOpen(true));\r\n    axios\r\n      .post(`/account/${accData.id}`, accData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        dispatch(setOpen(false));\r\n        setMessage(result.data.message);\r\n        return setAccdata({\r\n          id: \"\",\r\n          name: \"\",\r\n          code: \"\",\r\n          active: \"\",\r\n          locked: \"\",\r\n          acc_type: \"\",\r\n          change: false,\r\n          balance_type: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setTimeout(() => {\r\n          return setError(\"\");\r\n        }, 5000);\r\n        dispatch(setOpen(false));\r\n        if (error) return setError(error.response.data);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    const facc =\r\n      accounts && accounts.filter((acc) => acc.code == accData.account)[0];\r\n    if (facc) {\r\n      return setAccdata({\r\n        ...accData,\r\n        id: facc.id,\r\n        name: facc.name,\r\n        code: facc.code,\r\n        active: facc.active,\r\n        locked: facc.locked,\r\n        acc_type: facc.acc_type,\r\n        balance_type: facc.balance_type,\r\n      });\r\n    }\r\n  }, [accData.account]);\r\n\r\n  useEffect(() => {\r\n    const ftxs =\r\n      transactions &&\r\n      transactions.filter((tx) => tx.account_FK == accData.code);\r\n\r\n    return setTab(\"gen\"), dispatch(setfilterTx(ftxs));\r\n  }, [accData]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <AppSnackbar message={message} open={message} setOpen={setMessage} />\r\n      <div className=\"admin__Title\">\r\n        <section>\r\n          <Typography variant=\"h3\">ACCOUNT</Typography>\r\n          {Error && (\r\n            <Typography color=\"error\" variant=\"body2\">\r\n              {\" \"}\r\n              {Error}{\" \"}\r\n            </Typography>\r\n          )}\r\n        </section>\r\n        <div>\r\n          <Link to=\"/\" className=\"ml-3\">\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<span className=\"fa fa-arrow-right\" />}\r\n              style={{ background: \"#2A3F54\", color: \"white\" }}\r\n            >\r\n              <Typography variant=\"caption\">Account Lists</Typography>\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"p-1\" />\r\n\r\n      <table\r\n        className=\"mt-1 table-bordered\"\r\n        style={{\r\n          width: \"98%\",\r\n          margin: \"auto\",\r\n          position: \"sticky\",\r\n          top: 0,\r\n          zIndex: 222,\r\n        }}\r\n      >\r\n        <thead>\r\n          <th>Account</th>\r\n          <th>\r\n            <input\r\n              placeholder=\"Select\"\r\n              value={accData.account}\r\n              name=\"account\"\r\n              list=\"account\"\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n            <datalist id=\"account\">\r\n              {accounts &&\r\n                accounts.map((account, index) => {\r\n                  const { id, code, name } = account;\r\n                  return (\r\n                    <option key={index} value={code}>\r\n                      {\" \"}\r\n                      {name}{\" \"}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </datalist>\r\n          </th>\r\n          <th>Staff Username</th>\r\n          <th>\r\n            <input\r\n              list=\"usernames\"\r\n              name=\"username\"\r\n              placeholder=\"Process by ?\"\r\n            />\r\n            <datalist id=\"usernames\">\r\n              {staffs &&\r\n                staffs.map((staff, index) => {\r\n                  return <option key={index} value={staff.username}></option>;\r\n                })}\r\n            </datalist>\r\n          </th>\r\n          <th style={{ borderColor: \"none\" }}>\r\n            <Link to=\"/\" className=\"ml-3\">\r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<span className=\"fa fa-plus\" />}\r\n                style={{ background: \"#2A3F54\", color: \"white\" }}\r\n              >\r\n                <Typography variant=\"caption\">Add New</Typography>\r\n              </Button>\r\n            </Link>\r\n          </th>\r\n          <th style={{ border: \"none\", outline: \"none\" }}>\r\n            <Button\r\n              onClick={() => handleAccountUpdate()}\r\n              disabled={\r\n                tab !== \"gen\" || accData.change === false ? true : false\r\n              }\r\n              startIcon={<span className=\"fa fa-check />\" />}\r\n              variant=\"contained\"\r\n              style={{ background: \"#2A3F54\", color: \"white\" }}\r\n            >\r\n              <Typography variant=\"caption\">Update</Typography>\r\n            </Button>\r\n          </th>\r\n          <th style={{ border: \"none\", outline: \"none\" }}>\r\n            <Button\r\n              startIcon={<span className=\"fa fa-trash />\" />}\r\n              variant=\"contained\"\r\n              style={{ background: \"#2A3F54\", color: \"white\", width: \"100%\" }}\r\n            >\r\n              <Typography variant=\"caption\">Delete</Typography>\r\n            </Button>\r\n          </th>\r\n        </thead>\r\n      </table>\r\n      <div className=\"p-1\" />\r\n      <table\r\n        className=\"mt-1 table-bordered\"\r\n        style={{\r\n          width: \"98%\",\r\n          margin: \"auto\",\r\n          position: \"sticky\",\r\n          top: \"40px\",\r\n          zIndex: 222,\r\n        }}\r\n      >\r\n        <thead>\r\n          <th\r\n            onClick={() => setTab(\"gen\")}\r\n            style={{\r\n              background: tab == \"gen\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"gen\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            General Info\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"tx\")}\r\n            style={{\r\n              background: tab == \"tx\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"tx\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Transaction\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"rep\")}\r\n            style={{\r\n              background: tab == \"rep\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"rep\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Report\r\n          </th>\r\n          <th\r\n            style={{\r\n              color: \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n              borderTop: \"none\",\r\n              borderRight: \"none\",\r\n            }}\r\n          ></th>\r\n          {/* <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Sales\r\n                    </th> */}\r\n          {/* <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Journal\r\n                    </th> */}\r\n        </thead>\r\n        {accData.code && tab === \"gen\" && (\r\n          <tbody>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Code</td>\r\n              <td>\r\n                <input\r\n                  name=\"code\"\r\n                  readOnly\r\n                  value={accData.code}\r\n                  placeholder=\"Select\"\r\n                />\r\n              </td>\r\n              <td>Name</td>\r\n              <td>\r\n                <input\r\n                  name=\"name\"\r\n                  value={accData.name}\r\n                  placeholder=\"Account Name\"\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </td>\r\n              <td>Account Type</td>\r\n              <td>\r\n                <select\r\n                  id=\"acctype\"\r\n                  name=\"acc_type\"\r\n                  value={accData.acc_type}\r\n                  onChange={(e) => handleChange(e)}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <optgroup label=\"Assets\">\r\n                    <option value=\"asset_ca_cash\">Current Asset</option>\r\n                    <option value=\"asset_ca_mkt_sec\">\r\n                      Marketable Securities\r\n                    </option>\r\n                    <option value=\"asset_ca_recv\">Receivables</option>\r\n                    <option value=\"asset_ca_inv\">Inventory</option>\r\n                    <option value=\"asset_ca_uncoll\">Uncollectibles</option>\r\n                    <option value=\"asset_ca_prepaid\">Prepaid</option>\r\n                    <option value=\"asset_ca_other\">Other Liquid Assets</option>\r\n                    <option value=\"asset_lti_notes\">Notes Receivable</option>\r\n                    <option value=\"asset_lti_land\">Land</option>\r\n                    <option value=\"asset_lti_sec\">Securities</option>\r\n                    <option value=\"asset_ppe\">\r\n                      Property Plant &amp; Equipment\r\n                    </option>\r\n                    <option value=\"asset_ia\">Intangible Assets</option>\r\n                    <option value=\"asset_adjustment\">Other Assets</option>\r\n                  </optgroup>\r\n\r\n                  <optgroup label=\"Liabilities\">\r\n                    <option value=\"lia_cl_acc_pay\">Accounts Payable</option>\r\n                    <option value=\"lia_cl_wage_pay\">Wages Payable</option>\r\n                    <option value=\"lia_cl_wage_pay\">Interest Payable</option>\r\n                    <option value=\"lia_cl_st_notes_payable\">\r\n                      Notes Payable\r\n                    </option>\r\n                    <option value=\"lia_cl_ltd_mat\">\r\n                      Current Maturities of Long Tern Debt\r\n                    </option>\r\n                    <option value=\"lia_cl_def_rev\">Deferred Revenue</option>\r\n                    <option value=\"lia_cl_other\">Other Liabilities</option>\r\n                    <option value=\"lia_ltl_notes\">Notes Payable</option>\r\n                    <option value=\"lia_ltl_bonds\">Bonds Payable</option>\r\n                    <option value=\"lia_ltl_mortgage\">Mortgage Payable</option>\r\n                  </optgroup>\r\n                  <optgroup label=\"Equity\">\r\n                    <option value=\"eq_capital\">Capital</option>\r\n                    <option value=\"eq_stock_c\">Common Stock</option>\r\n                    <option value=\"eq_stock_p\">Preferred Stock</option>\r\n                    <option value=\"eq_adjustment\">\r\n                      Other Equity Adjustments\r\n                    </option>\r\n                    <option value=\"in_sales\">Sales Income</option>\r\n                    <option value=\"in_pass\">Passive Income</option>\r\n                    <option value=\"in_other\">Other Income</option>\r\n                    <option value=\"ex_cogs\">Cost of Goods Sold</option>\r\n                    <option value=\"ex_op\">Operational Expense</option>\r\n                    <option value=\"ex_interest\">Interest Expense</option>\r\n                    <option value=\"ex_taxes\">Tax Expense</option>\r\n                    <option value=\"ex_cap\">Capital Expense</option>\r\n                    <option value=\"ex_other\">Other Expense</option>\r\n                  </optgroup>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Balance Type</td>\r\n              <td>\r\n                <select\r\n                  id=\"accbalance\"\r\n                  name=\"balance_type\"\r\n                  value={accData.balance_type}\r\n                  onChange={(e) => handleChange(e)}\r\n                >\r\n                  <option value=\"CR\">Credit</option>\r\n                  <option value=\"DR\">Debit</option>\r\n                </select>\r\n              </td>\r\n              <td>Active</td>\r\n              <td>\r\n                <select\r\n                  name=\"active\"\r\n                  placeholder=\"Select\"\r\n                  value={accData.active}\r\n                  onChange={(e) => handleChange(e)}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value={1}>Yes</option>\r\n                  <option value={0}>No</option>\r\n                </select>\r\n              </td>\r\n              <td>Locked</td>\r\n              <td>\r\n                <select\r\n                  list=\"locked\"\r\n                  name=\"locked\"\r\n                  placeholder=\"Select\"\r\n                  value={accData.locked}\r\n                  onChange={(e) => handleChange(e)}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value={1}>Yes</option>\r\n                  <option value={0}>No</option>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        )}\r\n      </table>\r\n      {tab == \"tx\" && <TxTableView />}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AdminAccountSetting;\r\n","import { Button, IconButton, Typography } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectFilterSale } from '../../appState/appSlice'\r\nimport ExcelDownload from '../ExcelDownload'\r\n\r\nconst PurchaseRepayment = ({name, txs}) => {\r\n    const purchases = useSelector(selectFilterSale)\r\n    // func \r\n    const tx_Status = (x) =>{\r\n        const status = x && x == 1 ?\r\n            <span className='fa fa-plus-circle' style={{color: '#20c997'}} />\r\n        :\r\n        <span className='fa fa-minus-circle' style={{color: 'red'}} />\r\n        return status\r\n    }\r\n\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <table className='table-hover'\r\n                style={{width: '98%', margin: 'auto'}}\r\n            >\r\n                <thead style={{top: '60px', position: 'sticky'}}>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Description</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Date</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>RCPT. NO.</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Amount (<s>N</s>)</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}> Pay Method </th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}> Status </th>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        txs &&\r\n                        txs.map((tx, index) =>{\r\n                            const { tx_date, description, amount, rcpt_no, pay_method, \r\n                               paid } = tx\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td\r\n                                         style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}\r\n                                    > {index+1} </td>\r\n                                    <td style={{textAlign: 'left', margin: '5px'}}>\r\n                                    \r\n                                        {description}\r\n                                    \r\n                                    </td>\r\n                                    <td> {new Date(tx_date).toLocaleDateString()} </td>\r\n                                    <td> {rcpt_no} </td>\r\n                                    <td> { amount.toLocaleString() } </td>\r\n                                    <td> {pay_method} </td>\r\n                                    <td\r\n                                        style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}\r\n                                    >\r\n                                        <div className='p-2'>\r\n                                        {tx_Status(paid)}\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                     {\r\n                purchases && purchases[0].amount_paid < calcuAmt(txs)?\r\n                <tr\r\n                    style={{background: '#2A3F54', color: 'white'}}\r\n                >\r\n                    <td>  </td>\r\n                    <td colSpan={1}>\r\n                        <Typography variant={'h6'}>\r\n                            Outstanding Balance\r\n                        </Typography>\r\n                    </td>\r\n                    {\r\n                        purchases && purchases.length >0&&\r\n                        <td colSpan={3}>\r\n                            <Typography variant={'h6'}\r\n                                style={{color: 'red'}}\r\n                            >\r\n                                <s>N</s>: \r\n                            {\r\n                                parseInt(parseInt(purchases[0].amount) -\r\n                                parseInt(purchases[0].amount_paid)).toLocaleString()\r\n                            }\r\n                            </Typography>\r\n                            \r\n                        </td>\r\n                        \r\n                    }\r\n                    <td colSpan={2}></td>\r\n                </tr>\r\n                :\r\n                <Button variant='contained'\r\n                    style={{background: '#2A3F54', color: 'white'}}\r\n                >Close Deal</Button>\r\n\r\n            }\r\n                <tr>\r\n                    <td>\r\n                        <ExcelDownload\r\n                        date={`${name} Repayments`} \r\n                        dataSet1={txs} />\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n                \r\n            </table>\r\n            {\r\n                !txs && name.length >0 &&\r\n                \r\n                <div className='alert alert-warning'\r\n                    style={{width: '98%', margin: 'auto'}}\r\n                >\r\n                    {`Ops!!! No Transaction History`}\r\n                </div>                \r\n            }\r\n            {\r\n                name && !name.length >0 &&\r\n                <div className='alert alert-warning'\r\n                    style={{width: '98%', margin: 'auto'}}\r\n                >\r\n                    {`Ops!!! No Staff Selected`}\r\n                </div>\r\n            }\r\n           \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default PurchaseRepayment\r\n","import { IconButton, Typography } from '@material-ui/core'\r\nimport { More } from '@material-ui/icons'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectFilterSale, selectTransactions, setfilterTx,} from '../appState/appSlice'\r\nimport PurchaseRepayment from './global/PurchaseRepayment.js'\r\n\r\nconst SaleViewTable = () => {\r\n    const purchases = useSelector(selectFilterSale)\r\n    const transactions = useSelector(selectTransactions)\r\n    const [rcpt_no, setRcpt_no] = useState()\r\n    const [proptxs, setProptxs] = useState()\r\n   \r\n\r\n    useEffect(() =>{\r\n       if(!purchases.length >0){\r\n            return setProptxs('')\r\n       }\r\n       const ftxs = transactions && transactions.filter(tx =>tx.rcpt_no == purchases[0].uuid);\r\n       return setProptxs(ftxs)\r\n    }, [purchases, rcpt_no])\r\n    return (\r\n        <Fragment>\r\n            <table className='table-hover'\r\n                style={{width: '98%', margin: 'auto'}}\r\n            >\r\n                <thead>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>#</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Property</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Date Sold</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Due Date</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Amount (<s>N</s>)</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}> </th>\r\n                </thead>\r\n                <tbody>\r\n                           {\r\n                               purchases &&\r\n                               purchases.map((sale, index) =>{\r\n                                   const {property_name, sale_date, due_date, uuid, amount } = sale\r\n                                   return(\r\n                                       <Fragment key={index}>\r\n                                            <tr>\r\n                                                <td style={{textAlign: 'center'}}> {index+1} </td>\r\n                                                <td style={{textAlign: 'left'}}>\r\n                                                    {property_name}\r\n                                                </td>\r\n                                                <td style={{textAlign: 'center'}}> {new Date(sale_date).toLocaleDateString()} </td>\r\n                                                <td style={{textAlign: 'center'}}> {new Date(due_date).toLocaleDateString()} </td>\r\n                                                <td style={{textAlign: 'center'}}> {amount.toLocaleString()} </td>\r\n                                                <td style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n                                                    <div>\r\n                                                    <IconButton size='small'\r\n                                                        onClick={() =>setRcpt_no(uuid)}\r\n                                                    >\r\n                                                        <More style={{color: '#20c997'}} />\r\n                                                    </IconButton>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </Fragment>\r\n                                   )\r\n                               })\r\n                           }\r\n                           {\r\n                           rcpt_no&&\r\n                           <tr\r\n                            style={{background: '#2A3F54', color: 'white'}} \r\n                           >\r\n                               <td colSpan={3}>\r\n                                   <Typography variant='h6'\r\n                                    style={{color: '#20c997'}}\r\n                                   >\r\n                                        Repayment History\r\n                                    </Typography>\r\n                               </td>\r\n                               <td style={{textAlign: 'center'}}>\r\n                                   <Typography variant='subtitle1'\r\n                                    style={{color: 'white'}}\r\n                                   >\r\n                                    \r\n                                   </Typography>\r\n                               </td>\r\n                               <td colSpan={2}></td>\r\n                           </tr>\r\n                       }\r\n                       </tbody>\r\n            </table>\r\n            {\r\n               rcpt_no &&\r\n                <PurchaseRepayment txs={proptxs} name={purchases? purchases[0].applicant_name: null} />\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default SaleViewTable\r\n","import { Button, Typography } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  selectAllStaffs,\r\n  selectCustomers,\r\n  selectSales,\r\n  selectToken,\r\n  selectTransactions,\r\n  setFilterSale,\r\n  setfilterTx,\r\n  setOpen,\r\n} from \"../appState/appSlice\";\r\nimport AppSnackbar from \"./global/AppSnackbar\";\r\nimport TxTableView from \"./global/TxTableView\";\r\nimport SaleViewTable from \"./SaleViewTable\";\r\n\r\nconst AdminCustomerSetting = () => {\r\n  const dispatch = useDispatch();\r\n  const token = useSelector(selectToken);\r\n  const staffs = useSelector(selectAllStaffs);\r\n  const sales = useSelector(selectSales);\r\n  const customers = useSelector(selectCustomers);\r\n  const transactions = useSelector(selectTransactions);\r\n  const [success, setSuccess] = useState(false);\r\n  const [message, setMessage] = useState();\r\n  const [tab, setTab] = useState(\"gen\");\r\n  const [cusData, setCusdata] = useState({\r\n    rm: \"\",\r\n    change: false,\r\n    tx_date: \"\",\r\n    active: \"\",\r\n    country: \"\",\r\n    phone_no: \"\",\r\n    address_1: \"\",\r\n    occupation: \"\",\r\n    place_work: \"\",\r\n    next_kin_name: \"\",\r\n    customer_sex: \"\",\r\n    customer_name: \"\",\r\n    customer_email: \"\",\r\n    customer_state: \"\",\r\n    postal_address: \"\",\r\n    customer_marital: \"\",\r\n    customer_address: \"\",\r\n    next_kin_addrss: \"\",\r\n    next_kin_relate: \"\",\r\n    business_employer_name: \"\",\r\n    customer: \"\",\r\n  });\r\n\r\n  // func\r\n\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setCusdata({\r\n      ...cusData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    dispatch(setOpen(true));\r\n    axios\r\n      .post(`/customer/${cusData.customer}`, cusData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        setMessage(result.data.message);\r\n        dispatch(setOpen(false));\r\n        setSuccess(true);\r\n        setCusdata({\r\n          customer: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch(setOpen(false));\r\n        if (error) {\r\n          setMessage(error.response.statusText);\r\n          setSuccess(true);\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fcus =\r\n      customers && customers.filter((cus) => cus.id == cusData.customer)[0];\r\n    if (fcus) {\r\n      return (\r\n        setCusdata({\r\n          ...cusData,\r\n          rm: fcus.rm,\r\n          change: true,\r\n          code: fcus.code,\r\n          tx_date: fcus.tx_date,\r\n          country: fcus.country,\r\n          phone_no: fcus.phone_no,\r\n          address_1: fcus.address_1,\r\n          occupation: fcus.occupation,\r\n          place_work: fcus.place_work,\r\n          next_kin_name: fcus.next_kin_name,\r\n          customer_sex: fcus.customer_sex,\r\n          customer_name: fcus.customer_name,\r\n          customer_email: fcus.customer_email,\r\n          customer_state: fcus.customer_state,\r\n          postal_address: fcus.postal_address,\r\n          customer_marital: fcus.customer_marital,\r\n          customer_address: fcus.customer_address,\r\n          next_kin_addrss: fcus.next_kin_addrss,\r\n          next_kin_relate: fcus.next_kin_relate,\r\n          business_employer_name: fcus.business_employer_name,\r\n        }),\r\n        setTab(\"gen\")\r\n      );\r\n    }\r\n  }, [cusData.customer]);\r\n\r\n  useEffect(() => {\r\n    const ftxs =\r\n      transactions &&\r\n      transactions.filter((tx) => tx.account_FK == cusData.code);\r\n    const fsales =\r\n      sales && sales.filter((sale) => sale.applicant == cusData.customer);\r\n\r\n    dispatch(setfilterTx(ftxs));\r\n\r\n    dispatch(setFilterSale(fsales));\r\n    return;\r\n  }, [cusData]);\r\n\r\n  return (\r\n    <div>\r\n      <AppSnackbar open={success} setOpen={setSuccess} message={message} />\r\n      <div className=\"admin__Title\">\r\n        <section>\r\n          <Typography variant=\"h3\">CUSTOMER</Typography>\r\n        </section>\r\n        <div>\r\n          <Link to=\"/customers\" className=\"ml-3\">\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<span className=\"fa fa-arrow-right\" />}\r\n              style={{ background: \"#2A3F54\", color: \"white\" }}\r\n            >\r\n              <Typography variant=\"caption\">Customer Lists</Typography>\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"p-1\" />\r\n\r\n      <table\r\n        className=\"mt-1 table-bordered\"\r\n        style={{\r\n          width: \"98%\",\r\n          margin: \"auto\",\r\n          position: \"sticky\",\r\n          top: 0,\r\n          zIndex: 222,\r\n        }}\r\n      >\r\n        <thead>\r\n          <th>Select</th>\r\n          <th>\r\n            <select\r\n              name=\"customer\"\r\n              value={cusData.customer}\r\n              onChange={(e) => handleChange(e)}\r\n            >\r\n              <option value=\"\"></option>\r\n              {customers &&\r\n                customers.map((cus, index) => {\r\n                  return (\r\n                    <option key={index} value={cus.id}>\r\n                      {\" \"}\r\n                      {cus.customer_name}{\" \"}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </th>\r\n          <th>Customer Id</th>\r\n          <th>\r\n            <input\r\n              value={cusData.customer}\r\n              placeholder=\"Customer\"\r\n              onChange={(e) => handleChange(e)}\r\n              name=\"customer\"\r\n              list=\"customers\"\r\n            />\r\n            <datalist id=\"customers\">\r\n              {customers &&\r\n                customers.map((cus, index) => {\r\n                  return (\r\n                    <option key={index} value={cus.id}>\r\n                      {\" \"}\r\n                      {cus.customer_name}{\" \"}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </datalist>\r\n          </th>\r\n          <th style={{ borderColor: \"none\" }}>\r\n            <Link to=\"/customers\" className=\"ml-3\">\r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<span className=\"fa fa-plus\" />}\r\n                style={{ background: \"#2A3F54\", color: \"white\" }}\r\n              >\r\n                <Typography variant=\"caption\">Add New</Typography>\r\n              </Button>\r\n            </Link>\r\n          </th>\r\n          <th style={{ border: \"none\", outline: \"none\" }}>\r\n            <Button\r\n              onClick={() => handleUpdate()}\r\n              disabled={\r\n                tab !== \"gen\" || cusData.change === false ? true : false\r\n              }\r\n              startIcon={<span className=\"fa fa-check />\" />}\r\n              variant=\"contained\"\r\n              style={{ background: \"#2A3F54\", color: \"white\" }}\r\n            >\r\n              <Typography variant=\"caption\">Update</Typography>\r\n            </Button>\r\n          </th>\r\n          <th style={{ border: \"none\", outline: \"none\" }}>\r\n            <Button\r\n              startIcon={<span className=\"fa fa-trash />\" />}\r\n              variant=\"contained\"\r\n              style={{ background: \"#2A3F54\", color: \"white\", width: \"100%\" }}\r\n            >\r\n              <Typography variant=\"caption\">Delete</Typography>\r\n            </Button>\r\n          </th>\r\n        </thead>\r\n      </table>\r\n      <div className=\"p-1\" />\r\n      <table\r\n        className=\"mt-1 table-bordered\"\r\n        style={{\r\n          width: \"98%\",\r\n          margin: \"auto\",\r\n          position: \"sticky\",\r\n          top: \"40px\",\r\n          zIndex: 222,\r\n        }}\r\n      >\r\n        <thead>\r\n          <th\r\n            onClick={() => setTab(\"gen\")}\r\n            style={{\r\n              background: tab == \"gen\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"gen\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            General Info\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"tx\")}\r\n            style={{\r\n              background: tab == \"tx\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"tx\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Transactions\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"pur\")}\r\n            style={{\r\n              background: tab == \"pur\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"pur\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Purchase\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"bal\")}\r\n            style={{\r\n              background: tab == \"bal\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"bal\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Balance\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"man\")}\r\n            style={{\r\n              background: tab == \"man\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"man\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Mandate\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"jou\")}\r\n            style={{\r\n              background: tab == \"jou\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"jou\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Journal\r\n          </th>\r\n        </thead>\r\n        {cusData.customer && tab == \"gen\" && (\r\n          <tbody>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Name</td>\r\n              <td>\r\n                <input\r\n                  name=\"customer_name\"\r\n                  value={cusData.customer_name}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </td>\r\n              <td>Contact</td>\r\n              <td>\r\n                <input\r\n                  name=\"phone_no\"\r\n                  value={cusData.phone_no}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </td>\r\n              <td>Email</td>\r\n              <td>\r\n                <input\r\n                  name=\"customer_email\"\r\n                  value={cusData.customer_email}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Nationality</td>\r\n              <td>\r\n                <input\r\n                  name=\"country\"\r\n                  value={cusData.country}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </td>\r\n              <td>Address</td>\r\n              <td colSpan={3}>\r\n                <input\r\n                  name=\"customer_address\"\r\n                  style={{ width: \"100%\" }}\r\n                  placeholder=\"Customer Address\"\r\n                  value={cusData.customer_address}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Marital Status</td>\r\n              <td>\r\n                <select\r\n                  name=\"customer_marital\"\r\n                  onChange={(e) => handleChange(e)}\r\n                  value={cusData.customer_marital}\r\n                >\r\n                  <option value=\"Single\">Single</option>\r\n                  <option value=\"Married\">Married</option>\r\n                  <option value=\"Widow\">Widow</option>\r\n                  <option value=\"Divorce\">Divorce</option>\r\n                </select>\r\n              </td>\r\n              <td>Gender</td>\r\n              <td>\r\n                <select\r\n                  name=\"customer_sex\"\r\n                  onChange={(e) => handleChange(e)}\r\n                  value={cusData.customer_sex}\r\n                >\r\n                  <option value=\"male\">Male</option>\r\n                  <option value=\"female\">Female</option>\r\n                </select>\r\n              </td>\r\n              <td>State</td>\r\n              <td>\r\n                <select\r\n                  name=\"customer_state\"\r\n                  onChange={(e) => handleChange(e)}\r\n                  value={cusData.customer_state}\r\n                >\r\n                  <option value=\"Abia\">Abia</option>\r\n                  <option value=\"Adamawa\">Adamawa</option>\r\n                  <option value=\"Akwa Ibom\">Akwa Ibom</option>\r\n                  <option value=\"Anambra\">Anambra</option>\r\n                  <option value=\"Bauchi\">Bauchi</option>\r\n                  <option value=\"Bayelsa\">Bayelsa</option>\r\n                  <option value=\"Benue\">Benue</option>\r\n                  <option value=\"Borno\">Borno</option>\r\n                  <option value=\"Cross Rive\">Cross River</option>\r\n                  <option value=\"Delta\">Delta</option>\r\n                  <option value=\"Ebonyi\">Ebonyi</option>\r\n                  <option value=\"Edo\">Edo</option>\r\n                  <option value=\"Ekiti\">Ekiti</option>\r\n                  <option value=\"Enugu\">Enugu</option>\r\n                  <option value=\"FCT\">Federal Capital Territory</option>\r\n                  <option value=\"Gombe\">Gombe</option>\r\n                  <option value=\"Imo\">Imo</option>\r\n                  <option value=\"Jigawa\">Jigawa</option>\r\n                  <option value=\"Kaduna\">Kaduna</option>\r\n                  <option value=\"Kano\">Kano</option>\r\n                  <option value=\"Katsina\">Katsina</option>\r\n                  <option value=\"Kebbi\">Kebbi</option>\r\n                  <option value=\"Kogi\">Kogi</option>\r\n                  <option value=\"Kwara\">Kwara</option>\r\n                  <option value=\"Lagos\">Lagos</option>\r\n                  <option value=\"Nasarawa\">Nasarawa</option>\r\n                  <option value=\"Niger\">Niger</option>\r\n                  <option value=\"Ogun\">Ogun</option>\r\n                  <option value=\"Ondo\">Ondo</option>\r\n                  <option value=\"Osun\">Osun</option>\r\n                  <option value=\"Oyo\">Oyo</option>\r\n                  <option value=\"Plateau\">Plateau</option>\r\n                  <option value=\"Rivers\">Rivers</option>\r\n                  <option value=\"Sokoto\">Sokoto</option>\r\n                  <option value=\"Taraba\">Taraba</option>\r\n                  <option value=\"Yobe\">Yobe</option>\r\n                  <option value=\"Zamfara\">Zamfara</option>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Occupation</td>\r\n              <td>\r\n                <input\r\n                  name=\"occupation\"\r\n                  value={cusData.occupation}\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </td>\r\n              <td>Address</td>\r\n              <td colSpan={3}>\r\n                <input\r\n                  name=\"postal_address\"\r\n                  placeholder=\"Post Address\"\r\n                  style={{ width: \"100%\" }}\r\n                  onChange={(e) => handleChange(e)}\r\n                  value={cusData.postal_address}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Business/Employer's</td>\r\n              <td colSpan={3}>\r\n                <input\r\n                  style={{ width: \"100%\" }}\r\n                  onChange={(e) => handleChange(e)}\r\n                  name=\"business_employer_address\"\r\n                  placeholder=\"Business/Employer's Name\"\r\n                  value={cusData.business_employer_name}\r\n                />\r\n              </td>\r\n              <td>Place of work</td>\r\n              <td>\r\n                <input\r\n                  name=\"place_work\"\r\n                  value={cusData.place_work}\r\n                  onChange={(e) => handleChange(e)}\r\n                  placeholder=\"Name of place of work\"\r\n                />\r\n              </td>\r\n            </tr>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Next Kin name</td>\r\n              <td>\r\n                <input\r\n                  name=\"next_kin_name\"\r\n                  onChange={(e) => handleChange(e)}\r\n                  value={cusData.next_kin_name}\r\n                  placeholder=\"Name of next of kin\"\r\n                />\r\n              </td>\r\n              <td>Kin Address</td>\r\n              <td colSpan={3}>\r\n                <input\r\n                  name=\"next_kin_addrss\"\r\n                  style={{ width: \"100%\" }}\r\n                  onChange={(e) => handleChange(e)}\r\n                  placeholder=\"Next of kin address\"\r\n                  value={cusData.next_kin_addrss}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Relationship</td>\r\n              <td>\r\n                <select\r\n                  name=\"next_kin_relate\"\r\n                  onChange={(e) => handleChange(e)}\r\n                  value={cusData.next_kin_relate}\r\n                >\r\n                  <option value=\"Son\">Son</option>\r\n                  <option value=\"Sister\">Sister</option>\r\n                  <option value=\"Brother\">Brother</option>\r\n                  <option value=\"Aunt\">Aunt</option>\r\n                  <option value=\"Uncle\">Uncle</option>\r\n                  <option value=\"Wife\">Wife</option>\r\n                  <option value=\"Husband\">Husband</option>\r\n                  <option value=\"Daughter\">Daughter</option>\r\n                  <option value=\"Father\">Father</option>\r\n                  <option value=\"Mother\">Mother</option>\r\n                </select>\r\n              </td>\r\n              <td>(RM)</td>\r\n              <td>\r\n                <select\r\n                  name=\"rm\"\r\n                  value={cusData.rm}\r\n                  onChange={(e) => handleChange(e)}\r\n                >\r\n                  <option value=\"\">Relationship Manager</option>\r\n                  {staffs &&\r\n                    staffs.map((staff, index) => {\r\n                      const { id, first_name, last_name } = staff;\r\n                      return (\r\n                        <option value={index}>\r\n                          {\" \"}\r\n                          {`${first_name} ${last_name}`}{\" \"}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </td>\r\n              <td>Active</td>\r\n              <td>\r\n                <select\r\n                  name=\"active\"\r\n                  value={cusData.active}\r\n                  onChange={(e) => handleChange(e)}\r\n                >\r\n                  <option value={1}>Yes</option>\r\n                  <option value={0}>No</option>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Date: {new Date(cusData.tx_date).toLocaleDateString()}</td>\r\n              <td colSpan={5}>\r\n                <input\r\n                  name=\"tx_date\"\r\n                  type=\"date\"\r\n                  style={{ width: \"100%\" }}\r\n                  onChange={(e) => handleChange(e)}\r\n                  placeholder=\"Date Created\"\r\n                  value={new Date(cusData.tx_date)}\r\n                />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        )}\r\n      </table>\r\n      {tab == \"tx\" && (\r\n        <TxTableView\r\n          date={cusData.customer_name}\r\n          name={cusData.customer_name}\r\n        />\r\n      )}\r\n      {tab == \"pur\" && <SaleViewTable />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminCustomerSetting;\r\n","import { Button, Typography } from '@material-ui/core'\r\nimport { Check } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { selectAccounts, selectAllStaffs, selectUserExpenseRaised } from '../appState/appSlice'\r\n\r\nconst AdminExpenseSetting = () => {\r\n    const staffs = useSelector(selectAllStaffs)\r\n    const accounts = useSelector(selectAccounts)\r\n    const expenses = useSelector(selectUserExpenseRaised)\r\n   \r\n    return (\r\n        <div>\r\n            <div className='admin__Title'>\r\n                <section>\r\n                    <Typography variant='h3'>EXPENSE</Typography>\r\n                </section>\r\n                <div>\r\n                    <Link to='/' className='ml-3'>\r\n                        <Button \r\n                            variant='contained'\r\n                            startIcon={<span className='fa fa-arrow-right' />}\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Expense Lists\r\n                            </Typography>\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div className='p-1' />\r\n            \r\n            <table className='mt-1 table-bordered' style={{width: '98%', margin: 'auto'}}>\r\n                <thead>\r\n                    <th>Expense</th>\r\n                    <th>\r\n                        <input\r\n                            placeholder='Expense Id'\r\n                            name='expense' list='items' \r\n                        />\r\n                        <datalist id='items' name='expense'>\r\n                            {\r\n                                expenses&&\r\n                                expenses.map((expense, index) =>{\r\n                                    const {uuid} = expense\r\n                                    return <option key={index} value={uuid}> #Expense</option>\r\n                                })\r\n                            }\r\n                        </datalist>\r\n                    </th>\r\n                    <th>Staff Username</th>\r\n                    <th>\r\n                    <input\r\n                            list='usernames'\r\n                            name='username'\r\n                            placeholder='Expesne Raised by ?'\r\n                        />\r\n                        <datalist id='usernames'>\r\n                            {\r\n                                staffs&&\r\n                                staffs.map((staff, index) =>{\r\n                                    return <option key={index} value={staff.username}></option>\r\n                                })\r\n                            }\r\n                        </datalist>\r\n                    </th>\r\n                    <th\r\n                        style={{borderColor: 'none'}}\r\n                    >\r\n                        <Link to='/' className='ml-3'>\r\n                            <Button \r\n                                variant='contained'\r\n                                startIcon={<span className='fa fa-plus' />}\r\n                                style={{background: '#2A3F54', color: 'white'}}\r\n                            >\r\n                                <Typography variant='caption'>\r\n                                    Add New\r\n                                </Typography>\r\n                            </Button>\r\n                        </Link>\r\n                    </th>\r\n                    <th\r\n                        style={{border: 'none', outline: 'none'}}\r\n                    >\r\n                        <Button\r\n                            startIcon={<span className='fa fa-check />' />}\r\n                            variant='contained'\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Update \r\n                            </Typography>\r\n                        </Button>\r\n                    </th>\r\n                    <th\r\n                        style={{border: 'none', outline: 'none'}}\r\n                    >\r\n                        <Button\r\n                            startIcon={<span className='fa fa-trash />' />}\r\n                            variant='contained'\r\n                            style={{background: '#2A3F54', color: 'white', width: '100%'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Delete \r\n                            </Typography>\r\n                        </Button>\r\n                    </th>\r\n                </thead>\r\n            </table>\r\n            <div className='p-1' />\r\n            <table className='mt-1 table-bordered' style={{width: '98%', margin: 'auto'}}>\r\n                <thead>\r\n                    <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderBottom: 'none' }}\r\n                    >\r\n                       \r\n                        General Info\r\n                           \r\n                    </th>\r\n                    <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Expense Details\r\n                    </th>\r\n                    <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                      Expense Report\r\n                    </th>\r\n                    <th\r\n                        style={{color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none',\r\n                        borderTop: 'none', borderRight: 'none'}}\r\n                    >\r\n                      \r\n                    </th>\r\n                    \r\n                </thead>\r\n                <tbody>\r\n                    <div className='p-1' />\r\n                    <tr>\r\n                        <td>Expense Id</td>\r\n                        <td>\r\n                            <input\r\n                                readOnly\r\n                                name='uuid'\r\n                                placeholder='Expense Id (read only)'\r\n                            />\r\n                        </td>\r\n                        <td>Date</td>\r\n                        <td>\r\n                            <input \r\n                                name='expense_date'\r\n                                placeholder='Expense Date' \r\n                            />\r\n                        </td>\r\n                        <td>Amount</td>\r\n                        <td>\r\n                            <input\r\n                                name='amount' \r\n                                placeholder='Expense Amount'\r\n                            />\r\n                        </td>\r\n                        \r\n                    </tr>\r\n                    <div className='p-1' />\r\n                    <tr>\r\n                        <td>Account Receivable</td>\r\n                        <td>\r\n                            <input\r\n                                list='payee'\r\n                                name='payee_account'\r\n                                placeholder='Account Receivable' \r\n                            />\r\n                            <datalist id='payee'>\r\n                                {\r\n                                    accounts&&\r\n                                    accounts.map((acc, index) =>{\r\n                                        const { name, code, balance_type } = acc\r\n                                        return <option value={code} key={index} >{`${name} (${balance_type})`}</option>\r\n                                    })\r\n                                }\r\n                            </datalist>\r\n                        </td>\r\n                        <td>Account Payable</td>\r\n                        <td>\r\n                            <input\r\n                                list='payable'\r\n                                name='payment_account'\r\n                                placeholder='Account Payable'\r\n                            />\r\n                            <datalist id='payable'>\r\n                                {\r\n                                    accounts&&\r\n                                    accounts.map((acc, index) =>{\r\n                                        const { name, code, balance_type } = acc\r\n                                        return <option value={code} key={index} >{`${name} (${balance_type})`}</option>\r\n                                    })\r\n                                }\r\n                            </datalist>\r\n                        </td>\r\n                    \r\n                        <td>Pay Method</td>\r\n                        <td>\r\n                            <input\r\n                                list='paymethod'\r\n                                name='pay_method'\r\n                                placeholder='Payment Method'\r\n                            />\r\n                            <datalist id='paymethod'>\r\n                                <option value='cash'>Cash</option>\r\n                                <option value='cheque'>Cheque</option>\r\n                                <option value='transfer'>Transfer</option>\r\n                            </datalist>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminExpenseSetting\r\n","import { Button, Typography } from '@material-ui/core'\r\nimport { Check } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { selectAccounts, selectAllStaffs, \r\n    selectBuildCategories, \r\n    selectPropServices, selectSales, } from '../appState/appSlice'\r\n\r\nconst AdminPostingSetting = () => {\r\n    const staffs = useSelector(selectAllStaffs)\r\n    const accounts = useSelector(selectAccounts)\r\n    const sales = useSelector(selectSales)\r\n    const propServices = useSelector(selectPropServices)\r\n    const buildCategories = useSelector(selectBuildCategories)\r\n    console.log(buildCategories)\r\n    return (\r\n        <div>\r\n            <div className='admin__Title'>\r\n                <section>\r\n                    <Typography variant='h3'>POST</Typography>\r\n                </section>\r\n                <div>\r\n                    <Link to='/' className='ml-3'>\r\n                        <Button \r\n                            variant='contained'\r\n                            startIcon={<span className='fa fa-arrow-right' />}\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Post Lists\r\n                            </Typography>\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div className='p-1' />\r\n            \r\n            <table className='mt-1 table-bordered' style={{width: '98%', margin: 'auto'}}>\r\n                <thead>\r\n                    <th>Posts</th>\r\n                    <th>\r\n                        <input\r\n                            placeholder='Receipt No'\r\n                            name='sale' list='items' \r\n                        />\r\n                        <datalist id='items'>\r\n                            {\r\n                                sales&&\r\n                                sales.map((sale, index) =>{\r\n                                    const {uuid, property_name} = sale\r\n                                    return <option key={index} value={uuid}> {property_name} </option>\r\n                                })\r\n                            }\r\n                        </datalist>\r\n                    </th>\r\n                    <th>Staff Username</th>\r\n                    <th>\r\n                    <input\r\n                            list='usernames'\r\n                            name='username'\r\n                            placeholder='Process by ?'\r\n                        />\r\n                        <datalist id='usernames'>\r\n                            {\r\n                                staffs&&\r\n                                staffs.map((staff, index) =>{\r\n                                    return <option key={index} value={staff.username}></option>\r\n                                })\r\n                            }\r\n                        </datalist>\r\n                    </th>\r\n                    <th\r\n                        style={{borderColor: 'none'}}\r\n                    >\r\n                        <Link to='/' className='ml-3'>\r\n                            <Button \r\n                                variant='contained'\r\n                                startIcon={<span className='fa fa-plus' />}\r\n                                style={{background: '#2A3F54', color: 'white'}}\r\n                            >\r\n                                <Typography variant='caption'>\r\n                                    Add New\r\n                                </Typography>\r\n                            </Button>\r\n                        </Link>\r\n                    </th>\r\n                    <th\r\n                        style={{border: 'none', outline: 'none'}}\r\n                    >\r\n                        <Button\r\n                            startIcon={<span className='fa fa-check />' />}\r\n                            variant='contained'\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Update \r\n                            </Typography>\r\n                        </Button>\r\n                    </th>\r\n                    <th\r\n                        style={{border: 'none', outline: 'none'}}\r\n                    >\r\n                        <Button\r\n                            startIcon={<span className='fa fa-trash />' />}\r\n                            variant='contained'\r\n                            style={{background: '#2A3F54', color: 'white', width: '100%'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Delete \r\n                            </Typography>\r\n                        </Button>\r\n                    </th>\r\n                </thead>\r\n            </table>\r\n            <div className='p-1' />\r\n            <table className='mt-1 table-bordered' style={{width: '98%', margin: 'auto'}}>\r\n                <thead>\r\n                    <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderBottom: 'none' }}\r\n                    >\r\n                       \r\n                        General Info\r\n                           \r\n                    </th>\r\n                    <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Post History\r\n                    </th>\r\n                    <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                      Post Report\r\n                    </th>\r\n                    <th\r\n                        style={{color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none',\r\n                        borderTop: 'none', borderRight: 'none'}}\r\n                    >\r\n                      \r\n                    </th>\r\n                    {/* <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Sales\r\n                    </th> */}\r\n                    {/* <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Journal\r\n                    </th> */}\r\n                </thead>\r\n                <tbody>\r\n                    <div className='p-1' />\r\n                    <tr>\r\n                        <td>Receipt No</td>\r\n                        <td>\r\n                            <input\r\n                                readOnly\r\n                                name='rcpt_no'\r\n                                placeholder='Receipt No(read only)'\r\n                            />\r\n                        </td>\r\n                        <td>Account</td>\r\n                        <td>\r\n                            <input\r\n                                list='account'\r\n                                name='account_FK'\r\n                                placeholder='Customer Name' \r\n                            />\r\n                            <datalist id='account'>\r\n                            {\r\n                                accounts&&\r\n                                accounts.map((account, index) =>{\r\n                                    const {code, name} = account\r\n                                    return (\r\n                                        <option key={index} value={code}> {name} </option>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </datalist>\r\n                        </td>\r\n                        <td>Amount</td>\r\n                        <td>\r\n                            <input\r\n                                name='amount' \r\n                                placeholder='Amount'\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <div className='p-1' />\r\n                    <tr>\r\n                        <td>Transaction Type</td>\r\n                        <td>\r\n                            <input\r\n                                list='txtype'\r\n                                name='tx_type'\r\n                                placeholder='Payment Method'\r\n                            />\r\n                            <datalist id='txtype'>\r\n                                <option value='CR'></option>\r\n                                <option value='DR'></option>\r\n                            </datalist>\r\n                        </td>\r\n                        <td>Pay Method</td>\r\n                        <td>\r\n                            <input\r\n                                list='paymethod'\r\n                                name='pay_method'\r\n                                placeholder='Payment Method'\r\n                            />\r\n                            <datalist id='paymethod'>\r\n                                <option value='cash'></option>\r\n                                <option value='cheque'></option>\r\n                                <option value='transfer'></option>\r\n                            </datalist>\r\n                        </td>\r\n                        <td>Status</td>\r\n                        <td>\r\n                            <input\r\n                                list='status'\r\n                                name='status'\r\n                                placeholder='Select'\r\n                            />\r\n                            <datalist id='status'>\r\n                                <option value='0'>Not Paid</option>\r\n                                <option value='1'>Paid</option>\r\n                            </datalist>\r\n                        </td>\r\n                    </tr>\r\n                    <div className='p-1' />\r\n                    <tr>\r\n                        <td>Narration</td>\r\n                        <td colSpan={5}>\r\n                            <input\r\n                                name='description'\r\n                                placeholder='Transaction Narration'\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminPostingSetting\r\n","import { Typography } from \"@material-ui/core\";\r\nimport React, { Fragment } from \"react\";\r\n\r\nconst RenderList = ({\r\n    id, qty, index, amount, plot_number, sale_date,\r\n    building, createdAt, customer_name, amount_paid\r\n}) =>{\r\n    return (\r\n        <Fragment>\r\n            <tr>\r\n                <td\r\n                    style={{textAlign: 'center'}}\r\n                >\r\n                    <Typography\r\n                        style={{\r\n                          \r\n                            color: '#20c997'\r\n                        }}\r\n                    > {index+1} </Typography>\r\n                </td>\r\n                <td\r\n                    style={{textAlign: 'left'}}\r\n                > {customer_name} </td>\r\n                <td> {building} </td>\r\n                <td> {qty} </td>\r\n                <td> {plot_number} </td>\r\n                <td>\r\n                    <Typography color='error'>\r\n                        {amount?.toLocaleString()}\r\n                    </Typography>\r\n                </td>\r\n                <td>\r\n                    <Typography\r\n                        style={{\r\n                          \r\n                            color: '#20c997'\r\n                        }}\r\n                    >\r\n                        {amount_paid?.toLocaleString()}\r\n                    </Typography>\r\n                </td>\r\n                <td> {new Date(sale_date).toLocaleDateString()} </td>\r\n            </tr>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst PropertySoldViewTable = ({items}) =>{\r\n    return (\r\n        <Fragment>\r\n            <table\r\n                className=\"table-hover table-bordered\"\r\n                style={{ width: \"98%\", margin: \"auto\" }}\r\n            >\r\n                <thead>\r\n                <th style={{ border: \"1px solid #F7F7F7F7\" }}>#</th>\r\n                <th style={{ border: \"1px solid #F7F7F7F7\" }}>Customer Name</th>\r\n                <th style={{ border: \"1px solid #F7F7F7F7\" }}>Building Category</th>\r\n                <th style={{ border: \"1px solid #F7F7F7F7\" }}>Quantity</th>\r\n                <th style={{ border: \"1px solid #F7F7F7F7\" }}>Plot Number</th>\r\n                <th style={{ border: \"1px solid #F7F7F7F7\" }}> Cost Amt (<s>N</s>)</th>\r\n                <th style={{ border: \"1px solid #F7F7F7F7\" }}> Earned Amt (<s>N</s>)</th>\r\n                <th style={{ border: \"1px solid #F7F7F7F7\" }}>Date Sold</th>\r\n                </thead>\r\n                <tbody>\r\n                    {items?.map((item, index) =>{\r\n                        return (\r\n                            <RenderList\r\n                                {...item}\r\n                                index={index}\r\n                            />\r\n                        )\r\n                    })}\r\n                    \r\n                </tbody>\r\n            </table>\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default PropertySoldViewTable;","// MUI Stuff\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  selectLocations,\r\n  selectOpen,\r\n  selectPropServices,\r\n  selectPsSold,\r\n  selectSales,\r\n  selectToken,\r\n  setOpen,\r\n  setPsSold,\r\n} from \"../appState/appSlice\";\r\nimport AppBackdrop from \"./global/AppBackDrop\";\r\nimport AppSnackbar from \"./global/AppSnackbar\";\r\nimport PropertySoldViewTable from \"./global/PropertySoldViewTable\";\r\n\r\nconst AdminPsSetting = () => {\r\n  const dispatch = useDispatch();\r\n  const open = useSelector(selectOpen);\r\n  const token = useSelector(selectToken);\r\n  const sales = useSelector(selectSales);\r\n  const propertySolds = useSelector(selectPsSold)\r\n  const locations = useSelector(selectLocations);\r\n  const propServices = useSelector(selectPropServices);\r\n  const [tab, setTab] = useState();\r\n  const [add, setAdd] = useState(false);\r\n  const [error, setError] = useState();\r\n  const [success, setSuccess] = useState();\r\n\r\n  const [body, setBody] = useState({\r\n    name: \"\",\r\n  });\r\n  const [psData, setPsData] = useState({\r\n    id: \"\",\r\n    cost: \"\",\r\n    status: \"\",\r\n    name: \"\",\r\n    ps_type: \"\",\r\n    category: \"\",\r\n    location: \"\",\r\n    quantity: \"\",\r\n    change: false,\r\n    description: \"\",\r\n    sale_price: \"\",\r\n  });\r\n  // func\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setPsData({\r\n      ...psData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handle_PsoldSearch = () => {\r\n    dispatch(setOpen(true));\r\n    axios\r\n      .get(`/prop_service/${psData.id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        dispatch(setOpen(false));\r\n        dispatch(setPsSold(result.data))\r\n      })\r\n      .catch((error) => {\r\n        dispatch(setOpen(false));\r\n        if (error) {\r\n          return setError(error.response.statusText);\r\n        }\r\n      });\r\n  }\r\n  const handle_Edit_Ps = () => {\r\n    dispatch(setOpen(true));\r\n    axios\r\n      .post(`/prop_service/${psData.id}`, psData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        dispatch(setOpen(false));\r\n        setSuccess(result.data.message);\r\n        setPsData({\r\n          id: \"\",\r\n          cost: \"\",\r\n          name: \"\",\r\n          status: \"\",\r\n          ps_type: \"\",\r\n          category: \"\",\r\n          location: \"\",\r\n          quantity: \"\",\r\n          description: \"\",\r\n          sale_price: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch(setOpen(false));\r\n        if (error) {\r\n          return setError(error.response.statusText);\r\n        }\r\n      });\r\n  };\r\n\r\n  const handle_Add_Location = () => {\r\n    dispatch(setOpen(true));\r\n    axios\r\n      .post(\"/location\", body, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((locations) => {\r\n        setBody(\"\");\r\n        dispatch(setOpen(false));\r\n        setAdd(false);\r\n      })\r\n      .catch((error) => {\r\n        dispatch(setOpen(false));\r\n        if (error) {\r\n          return error.response.statusText;\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fps =\r\n      propServices && propServices.filter((ps) => ps.id == psData.id)[0];\r\n    if (fps) {\r\n      return (\r\n        setPsData({\r\n          id: fps.id,\r\n          cost: fps.cost,\r\n          name: fps.name,\r\n          status: fps.status,\r\n          ps_type: fps.ps_type,\r\n          category: fps.category,\r\n          location: fps.location,\r\n          quantity: fps.quantity,\r\n          description: fps.description,\r\n          sale_price: fps.sale_price,\r\n        }),\r\n        setTab(\"gen\")\r\n      );\r\n    }\r\n  }, [psData.id]);\r\n\r\n  useEffect(() => {\r\n    const getSoldFps =\r\n      sales && sales.filter((sale) => sale.property == psData.id);\r\n\r\n    if (getSoldFps) {\r\n      return dispatch(setPsSold(getSoldFps));\r\n    }\r\n  }, [psData]);\r\n\r\n  useEffect(() =>{\r\n    handle_PsoldSearch()\r\n  }, [psData.id])\r\n\r\n  return (\r\n    <div>\r\n      <AppBackdrop open={open} />\r\n      <AppSnackbar open={success} setOpen={setSuccess} message={success} />\r\n      <div className=\"admin__Title\">\r\n        <section>\r\n          <Typography variant=\"h3\">PROPERTY</Typography>\r\n        </section>\r\n        <div>\r\n          <Link to=\"/\" className=\"ml-3\">\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<span className=\"fa fa-arrow-right\" />}\r\n              style={{ background: \"#2A3F54\", color: \"white\" }}\r\n            >\r\n              <Typography variant=\"caption\">Property Lists</Typography>\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"p-1\" />\r\n\r\n      <table\r\n        className=\"mt-1 table-bordered\"\r\n        style={{ width: \"98%\", margin: \"auto\" }}\r\n      >\r\n        <thead>\r\n          <th>Property</th>\r\n          <th>\r\n            <select\r\n              name=\"id\"\r\n              value={psData.id}\r\n              onChange={(e) => handleChange(e)}\r\n            >\r\n              <option value=\"\"></option>\r\n              {propServices &&\r\n                propServices.map((sale, index) => {\r\n                  const { id, name } = sale;\r\n                  return (\r\n                    <option key={index} value={id}>\r\n                      {\" \"}\r\n                      {name}{\" \"}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </th>\r\n\r\n          <th style={{ borderColor: \"none\" }}>\r\n            <Link to=\"/ps\" className=\"ml-3\">\r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<span className=\"fa fa-plus\" />}\r\n                style={{ background: \"#2A3F54\", color: \"white\" }}\r\n              >\r\n                <Typography variant=\"caption\">Add New</Typography>\r\n              </Button>\r\n            </Link>\r\n          </th>\r\n          <th style={{ border: \"none\", outline: \"none\" }}>\r\n            <Button\r\n              onClick={() => handle_Edit_Ps()}\r\n              disabled={tab !== \"gen\" || psData.change === false ? true : false}\r\n              startIcon={<span className=\"fa fa-check />\" />}\r\n              variant=\"contained\"\r\n              style={{ background: \"#2A3F54\", color: \"white\" }}\r\n            >\r\n              <Typography variant=\"caption\">Update</Typography>\r\n            </Button>\r\n          </th>\r\n          <th style={{ border: \"none\", outline: \"none\" }}>\r\n            <Button\r\n              startIcon={<span className=\"fa fa-trash />\" />}\r\n              variant=\"contained\"\r\n              style={{ background: \"#2A3F54\", color: \"white\", width: \"100%\" }}\r\n            >\r\n              <Typography variant=\"caption\">Delete</Typography>\r\n            </Button>\r\n          </th>\r\n        </thead>\r\n      </table>\r\n      <div className=\"p-1\" />\r\n      <table\r\n        className=\"mt-1 table-bordered\"\r\n        style={{ width: \"98%\", margin: \"auto\" }}\r\n      >\r\n        <thead>\r\n          <th\r\n            onClick={() => setTab(\"gen\")}\r\n            style={{\r\n              background: tab == \"gen\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"gen\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            General Info\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"sol\")}\r\n            style={{\r\n              background: tab == \"sol\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"sol\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Sold\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"pos\")}\r\n            style={{\r\n              background: tab == \"pos\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"pos\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Post Report\r\n          </th>\r\n          <th\r\n            style={{\r\n              color: \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n              borderTop: \"none\",\r\n              borderRight: \"none\",\r\n            }}\r\n          ></th>\r\n        </thead>\r\n        {tab == \"gen\" && psData.id && (\r\n          <tbody>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Property/Service</td>\r\n              <td>\r\n                <input\r\n                  list=\"ps\"\r\n                  name=\"ps_type\"\r\n                  value={psData.ps_type}\r\n                  placeholder=\"Select\"\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n                <datalist id=\"ps\">\r\n                  <option value=\"\"></option>\r\n                  <option value=\"property\"></option>\r\n                  <option value=\"service\"></option>\r\n                </datalist>\r\n              </td>\r\n              <td>Name</td>\r\n              <td>\r\n                <input\r\n                  name=\"name\"\r\n                  value={psData.name}\r\n                  placeholder=\"Property Name\"\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </td>\r\n              <td\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                Location\r\n                <span>\r\n                  <IconButton\r\n                    onClick={() => setAdd(!add)}\r\n                    size=\"small\"\r\n                    className=\" ml-2\"\r\n                  >\r\n                    <span\r\n                      className=\"fa fa-plus-circle\"\r\n                      style={{ color: \"#20c997\" }}\r\n                    />\r\n                  </IconButton>\r\n                </span>\r\n              </td>\r\n              {!add ? (\r\n                <td>\r\n                  <select\r\n                    name=\"location\"\r\n                    value={psData.location}\r\n                    onChange={(e) => handleChange(e)}\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    {locations &&\r\n                      locations.map((l, index) => {\r\n                        const { id, name } = l;\r\n                        return (\r\n                          <option key={index} value={id}>\r\n                            {name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                  </select>\r\n                </td>\r\n              ) : (\r\n                <td>\r\n                  {add && (\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      <input\r\n                        value={body.name}\r\n                        placeholder=\"Location Name\"\r\n                        onChange={(e) =>\r\n                          setBody({\r\n                            ...body,\r\n                            name: e.target.value,\r\n                          })\r\n                        }\r\n                      />\r\n                      <Button\r\n                        className=\"ml-4\"\r\n                        onClick={() => handle_Add_Location()}\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        style={{\r\n                          background: \"#2A3F54\",\r\n                          color: \"white\",\r\n                          width: \"200px\",\r\n                        }}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                </td>\r\n              )}\r\n            </tr>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Sale Price</td>\r\n              <td>\r\n                <input\r\n                  name=\"sale_price\"\r\n                  value={psData.sale_price}\r\n                  placeholder=\"Selling Price\"\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </td>\r\n              <td>Quantity</td>\r\n              <td>\r\n                <input\r\n                  name=\"quantity\"\r\n                  type=\"number\"\r\n                  value={psData.quantity}\r\n                  placeholder=\"Quantity\"\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </td>\r\n              <td>Status</td>\r\n              <td>\r\n                <select\r\n                  name=\"status\"\r\n                  value={psData.status}\r\n                  onChange={(e) => handleChange(e)}\r\n                >\r\n                  <option value=\"\"></option>\r\n                  <option value={1}>Active</option>\r\n                  <option value={0}>InActive</option>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Description</td>\r\n              <td colSpan={5}>\r\n                <input\r\n                  name=\"description\"\r\n                  value={psData.description}\r\n                  onChange={(e) => handleChange(e)}\r\n                  placeholder=\"Property Description\"\r\n                />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        )}\r\n      </table>\r\n      {/* imported component */}\r\n      {tab == \"sol\" && \r\n       propertySolds && <PropertySoldViewTable items={propertySolds} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPsSetting;\r\n","import { Button, Typography } from '@material-ui/core'\r\nimport { Check } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { selectAccounts, selectAllStaffs, \r\n    selectBuildCategories, \r\n    selectPropServices, selectSales, } from '../appState/appSlice'\r\n\r\nconst AdminSaleSetting = () => {\r\n    const staffs = useSelector(selectAllStaffs)\r\n    const accounts = useSelector(selectAccounts)\r\n    const sales = useSelector(selectSales)\r\n    const propServices = useSelector(selectPropServices)\r\n    const buildCategories = useSelector(selectBuildCategories)\r\n    return (\r\n        <div>\r\n            <div className='admin__Title'>\r\n                <section>\r\n                    <Typography variant='h3'>SALE</Typography>\r\n                </section>\r\n                <div>\r\n                    <Link to='/' className='ml-3'>\r\n                        <Button \r\n                            variant='contained'\r\n                            startIcon={<span className='fa fa-arrow-right' />}\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Sale Lists\r\n                            </Typography>\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div className='p-1' />\r\n            \r\n            <table className='mt-1 table-bordered' style={{width: '98%', margin: 'auto'}}>\r\n                <thead>\r\n                    <th>Sale</th>\r\n                    <th>\r\n                        <input\r\n                            placeholder='Sale Id'\r\n                            name='sale' list='items' \r\n                        />\r\n                        <datalist id='items'>\r\n                            {\r\n                                sales&&\r\n                                sales.map((sale, index) =>{\r\n                                    const {uuid, property_name} = sale\r\n                                    return <option key={index} value={uuid}> {property_name} </option>\r\n                                })\r\n                            }\r\n                        </datalist>\r\n                    </th>\r\n                    <th>Staff Username</th>\r\n                    <th>\r\n                    <input\r\n                            list='usernames'\r\n                            name='username'\r\n                            placeholder='Process by ?'\r\n                        />\r\n                        <datalist id='usernames'>\r\n                            {\r\n                                staffs&&\r\n                                staffs.map((staff, index) =>{\r\n                                    return <option key={index} value={staff.username}></option>\r\n                                })\r\n                            }\r\n                        </datalist>\r\n                    </th>\r\n                    <th\r\n                        style={{borderColor: 'none'}}\r\n                    >\r\n                        <Link to='/' className='ml-3'>\r\n                            <Button \r\n                                variant='contained'\r\n                                startIcon={<span className='fa fa-plus' />}\r\n                                style={{background: '#2A3F54', color: 'white'}}\r\n                            >\r\n                                <Typography variant='caption'>\r\n                                    Add New\r\n                                </Typography>\r\n                            </Button>\r\n                        </Link>\r\n                    </th>\r\n                    <th\r\n                        style={{border: 'none', outline: 'none'}}\r\n                    >\r\n                        <Button\r\n                            startIcon={<span className='fa fa-check />' />}\r\n                            variant='contained'\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Update \r\n                            </Typography>\r\n                        </Button>\r\n                    </th>\r\n                    <th\r\n                        style={{border: 'none', outline: 'none'}}\r\n                    >\r\n                        <Button\r\n                            startIcon={<span className='fa fa-trash />' />}\r\n                            variant='contained'\r\n                            style={{background: '#2A3F54', color: 'white', width: '100%'}}\r\n                        >\r\n                            <Typography variant='caption'>\r\n                                Delete \r\n                            </Typography>\r\n                        </Button>\r\n                    </th>\r\n                </thead>\r\n            </table>\r\n            <div className='p-1' />\r\n            <table className='mt-1 table-bordered' style={{width: '98%', margin: 'auto'}}>\r\n                <thead>\r\n                    <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderBottom: 'none' }}\r\n                    >\r\n                       \r\n                        General Info\r\n                           \r\n                    </th>\r\n                    <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Payment History\r\n                    </th>\r\n                    <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                      Sale Report\r\n                    </th>\r\n                    <th\r\n                        style={{color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none',\r\n                        borderTop: 'none', borderRight: 'none'}}\r\n                    >\r\n                      \r\n                    </th>\r\n                    {/* <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Sales\r\n                    </th> */}\r\n                    {/* <th\r\n                        style={{background: '#2A3F54', color: 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Journal\r\n                    </th> */}\r\n                </thead>\r\n                <tbody>\r\n                    <div className='p-1' />\r\n                    <tr>\r\n                        <td>Sale Id</td>\r\n                        <td>\r\n                            <input\r\n                                readOnly\r\n                                name='uuid'\r\n                                placeholder='Expense Id (read only)'\r\n                            />\r\n                        </td>\r\n                        <td>Applicant</td>\r\n                        <td>\r\n                            <input \r\n                                name='applicant_name'\r\n                                placeholder='Customer Name' \r\n                            />\r\n                        </td>\r\n                        <td>Amount</td>\r\n                        <td>\r\n                            <input\r\n                                name='amount' \r\n                                placeholder='Amount'\r\n                            />\r\n                        </td>\r\n                        \r\n                    </tr>\r\n                    <div className='p-1' />\r\n                    <tr>\r\n                        <td>Property</td>\r\n                        <td>\r\n                            <input\r\n                                list='property'\r\n                                name='property_name'\r\n                                placeholder='Property' \r\n                            />\r\n                            <datalist id='property'>\r\n                                {\r\n                                    propServices&&\r\n                                    propServices.map((ps, index) =>{\r\n                                        const {id, name} = ps\r\n                                        return (\r\n                                            <option key={index} value={id}> {name} </option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </datalist>\r\n                        </td>\r\n                        <td>Building Category</td>\r\n                        <td>\r\n                            <input\r\n                                list='category'\r\n                                name='build_category'\r\n                                placeholder='Building Category'\r\n                            />\r\n                            <datalist id='category'>\r\n                                {\r\n                                    buildCategories&&\r\n                                    buildCategories.map((bcategory, index) =>{\r\n                                        const { id, name } = bcategory\r\n                                        return <option value={id} key={index} >{`${name}`}</option>\r\n                                    })\r\n                                }\r\n                            </datalist>\r\n                        </td>\r\n                    \r\n                        <td>Pay Method</td>\r\n                        <td>\r\n                            <input\r\n                                list='paymethod'\r\n                                name='pay_method'\r\n                                placeholder='Payment Method'\r\n                            />\r\n                            <datalist id='paymethod'>\r\n                                <option value='cash'></option>\r\n                                <option value='cheque'></option>\r\n                                <option value='transfer'></option>\r\n                            </datalist>\r\n                        </td>\r\n                    </tr>\r\n                    <div className='p-1' />\r\n                    <tr>\r\n                        <td>Term</td>\r\n                        <td>\r\n                            <input\r\n                                list='period'\r\n                                name='period'\r\n                                placeholder='Payment Method'\r\n                            />\r\n                            <datalist id='period'>\r\n                                <option value={7}>7 Days</option>\r\n                                <option value={14}>14 Days</option>\r\n                                <option value={21}>21 Days</option>\r\n                                <option value={28}>28 Days</option>\r\n                                <option value={30}>30 Days</option>\r\n                                <option value={60}>60 Days</option>\r\n                                <option value={90}>90 Days</option>\r\n                                <option value={120}>120 Days</option>\r\n                                <option value={150}>150 Days</option>\r\n                                <option value={180}>180 Days</option>\r\n                                <option value={210}>210 Days</option>\r\n                                <option value={240}>240 Days</option>\r\n                                <option value={270}>270 Days</option>\r\n                                <option value={300}>300 Days</option>\r\n                                <option value={330}>330 Days</option>\r\n                                <option value={360}>360 Days</option>\r\n                            </datalist>\r\n                        </td>\r\n                        <td>Due Date</td>\r\n                        <input \r\n                            name='due_date'\r\n                            placeholder='Sale Due Date'\r\n                        />\r\n                        <td>Status</td>\r\n                        <td>\r\n                            <input\r\n                                list='status'\r\n                                name='status'\r\n                                placeholder='Select'\r\n                            />\r\n                            <datalist id='status'>\r\n                                <option value='1'>Paid</option>\r\n                                <option value='3'>Close</option>\r\n                            </datalist>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminSaleSetting\r\n","import Avatar from \"@material-ui/core/Avatar\";\r\nimport More from \"@material-ui/icons/More\";\r\nimport { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { CheckBoxRounded } from \"@material-ui/icons\";\r\n\r\nconst CustomerList = ({\r\n  search,\r\n  id,\r\n  index,\r\n  hidden,\r\n  customer_email,\r\n  customer_name,\r\n  phone_no,\r\n  code,\r\n  active,\r\n  isWidget,\r\n  setMandate,\r\n  avatar,\r\n}) => {\r\n  return (\r\n    <Fragment key={index}>\r\n      <tr>\r\n        <td style={{ textAlign: \"center\" }}>\r\n          <Typography\r\n              style={{\r\n                  paddingRight: 2,\r\n                  color: '#20c997'\r\n              }}\r\n          > {index+1} </Typography>\r\n        </td>\r\n        <td style={{ textAlign: \"left\" }}>{customer_name}</td>\r\n        <td> {phone_no} </td>\r\n        {!search && !isWidget && <td> {customer_email} </td>}\r\n        <td> {code} </td>\r\n        <td\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {avatar && <Avatar alt={customer_name[0]} src={avatar} />}\r\n        </td>\r\n        <td>\r\n          {active == 1 ? (\r\n            <span className=\"fa fa-check-circle fa-1x\"></span>\r\n          ) : (\r\n            <span></span>\r\n          )}\r\n        </td>\r\n        <td>\r\n          {hidden == 1 ? (\r\n            <span className=\"fa fa-lock\" style={{ color: \"red\" }}></span>\r\n          ) : (\r\n            <span\r\n              className=\"fa fa-unlock-alt\"\r\n              style={{ color: \"#1ABB9C\" }}\r\n            ></span>\r\n          )}\r\n        </td>\r\n        {!isWidget && (\r\n          <td onClick={() => setMandate(`${id} ${customer_name}`)}>\r\n            {!avatar ? (\r\n              <Tooltip title={`Upload ${customer_name} Mandate`}>\r\n                <More\r\n                  style={{ color: \"#2A3F54\", fontSize: 20, marginLeft: 20 }}\r\n                />\r\n              </Tooltip>\r\n            ) : (\r\n              <Tooltip title={`${customer_name} Mandate uploaded`}>\r\n                <CheckBoxRounded\r\n                  style={{ color: \"#20c997\", fontSize: 20, marginLeft: 20 }}\r\n                />\r\n              </Tooltip>\r\n            )}\r\n          </td>\r\n        )}\r\n      </tr>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CustomerList;\r\n","import React, { useState } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport Mandate from \"../Mandate\";\r\nimport CustomerList from \"./CustomerList\";\r\n\r\nconst CustomerViewTable = ({ customers }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [mandate, setMandate] = useState(false);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Mandate\r\n        open={open}\r\n        setOpen={setOpen}\r\n        mandate={mandate}\r\n        setMandate={setMandate}\r\n        url={mandate && `/customer/avatar/${mandate.split(\" \")[0]}`}\r\n      />\r\n      <table\r\n        className=\"table-hover table-bordered\"\r\n        style={{ width: \"98%\", margin: \"auto\" }}\r\n      >\r\n        <thead>\r\n          <th style={{ border: \"1px solid #F7F7F7F7\" }}>#</th>\r\n          <th style={{ border: \"1px solid #F7F7F7F7\" }}>Name</th>\r\n          <th style={{ border: \"1px solid #F7F7F7F7\" }}>Contact</th>\r\n          <th style={{ border: \"1px solid #F7F7F7F7\" }}>Email</th>\r\n          <th style={{ border: \"1px solid #F7F7F7F7\" }}>Code</th>\r\n          <th style={{ border: \"1px solid #F7F7F7F7\" }}>Photo</th>\r\n          <th style={{ border: \"1px solid #F7F7F7F7\" }}>Active</th>\r\n          <th style={{ border: \"1px solid #F7F7F7F7\" }}>Lock</th>\r\n          <th style={{ border: \"1px solid #F7F7F7F7\" }}>Action</th>\r\n        </thead>\r\n        <tbody>\r\n          {customers &&\r\n            customers.map((customer, index) => {\r\n              return (\r\n                <CustomerList\r\n                  key={index}\r\n                  index={index}\r\n                  {...customer}\r\n                  open={open}\r\n                  setOpen={setOpen}\r\n                  mandate={mandate}\r\n                  setMandate={setMandate}\r\n                />\r\n              );\r\n            })}\r\n        </tbody>\r\n      </table>\r\n      {customers && customers.length <= 0 && (\r\n        <div className=\"alert alert-warning\">\r\n          <h6>No Customer Availabe</h6>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CustomerViewTable;\r\n","import { Button, Typography } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  selectAllStaffs,\r\n  selectTransactions,\r\n  selectOpen,\r\n  selectToken,\r\n  setOpen,\r\n  setfilterTx,\r\n  selectCustomers,\r\n  setFilterCus,\r\n} from \"../appState/appSlice\";\r\nimport AppBackdrop from \"./global/AppBackDrop\";\r\nimport AppSnackbar from \"./global/AppSnackbar\";\r\nimport CustomerViewTable from \"./global/CustomerViewTable\";\r\nimport TxTableView from \"./global/TxTableView\";\r\n\r\nconst AdminStaffSetting = () => {\r\n  const dispatch = useDispatch();\r\n  const open = useSelector(selectOpen);\r\n  const token = useSelector(selectToken);\r\n  const staffs = useSelector(selectAllStaffs);\r\n  const customers = useSelector(selectCustomers);\r\n  const transactions = useSelector(selectTransactions);\r\n  const [tab, setTab] = useState();\r\n  const [message, setMessage] = useState();\r\n  const [success, setSuccess] = useState(false);\r\n  const [data, setData] = useState({\r\n    id: \"\",\r\n    staff: \"\",\r\n    change: false,\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n    mobile: \"\",\r\n    is_active: \"\",\r\n    username: \"\",\r\n    md: \"\",\r\n    entries: \"\",\r\n    sales: \"\",\r\n    expense: \"\",\r\n    accountant: \"\",\r\n  });\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setData({\r\n      ...data,\r\n      [name]: value,\r\n    });\r\n    setTab(\"gen\");\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    dispatch(setOpen(true));\r\n    axios\r\n      .post(`/auth/edit/${data.username}`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setMessage(res.data.message);\r\n        setSuccess(true);\r\n        dispatch(setOpen(false));\r\n        setData({\r\n          staff: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        if (error) {\r\n          setMessage(error.response.statusText);\r\n          dispatch(setOpen(false));\r\n        }\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    const fstaff =\r\n      staffs && staffs.filter((staf) => staf.username == data.staff)[0];\r\n    if (fstaff) {\r\n      setData({\r\n        ...data,\r\n        change: true,\r\n        id: fstaff.id,\r\n        md: fstaff.md,\r\n        sales: fstaff.sales,\r\n        email: fstaff.email,\r\n        mobile: fstaff.mobile,\r\n        entries: fstaff.entries,\r\n        expense: fstaff.expense,\r\n        username: fstaff.username,\r\n        last_name: fstaff.last_name,\r\n        first_name: fstaff.first_name,\r\n        is_active: fstaff.is_active,\r\n        accountant: fstaff.accountant,\r\n      });\r\n    }\r\n    const ftxs =\r\n      transactions &&\r\n      transactions.filter((tx) => tx.postBy_FK == `${data.username}`);\r\n    const fcus = customers && customers.filter((cus) => cus.rm == data.id);\r\n    dispatch(setfilterTx(ftxs));\r\n    dispatch(setFilterCus(fcus));\r\n    return;\r\n  }, [data.staff, data.username]);\r\n\r\n  return (\r\n    <div>\r\n      <AppBackdrop open={open} setOpen={setOpen} />\r\n      <AppSnackbar open={success} setOpen={setSuccess} message={message} />\r\n      <div className=\"admin__Title\">\r\n        <section>\r\n          <Typography variant=\"h3\">STAFF</Typography>\r\n        </section>\r\n        <div>\r\n          <Link to=\"/staffs\" className=\"ml-3\">\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<span className=\"fa fa-arrow-right\" />}\r\n              style={{ background: \"#2A3F54\", color: \"white\" }}\r\n            >\r\n              <Typography variant=\"caption\">Staff Lists</Typography>\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"p-1\" />\r\n      {/* table */}\r\n      <table\r\n        className=\"mt-1 table-bordered\"\r\n        style={{\r\n          width: \"98%\",\r\n          margin: \"auto\",\r\n          position: \"sticky\",\r\n          top: 0,\r\n          zIndex: 222,\r\n        }}\r\n      >\r\n        <thead>\r\n          <th>Select</th>\r\n          <th>\r\n            <input\r\n              value={data.staff}\r\n              placeholder=\"Staff\"\r\n              name=\"staff\"\r\n              list=\"staffs\"\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n            <datalist id=\"staffs\">\r\n              {staffs &&\r\n                staffs.map((staff, index) => {\r\n                  const { username, first_name, last_name } = staff;\r\n                  return (\r\n                    <option key={index} value={username}>\r\n                      {\" \"}\r\n                      {`${first_name} ${last_name}`}{\" \"}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </datalist>\r\n          </th>\r\n          <th>Staff Username</th>\r\n          <th>\r\n            <input\r\n              list=\"usernames\"\r\n              name=\"staff\"\r\n              value={data.staff}\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n            <datalist id=\"usernames\">\r\n              {staffs &&\r\n                staffs.map((staff, index) => {\r\n                  return <option key={index} value={staff.username}></option>;\r\n                })}\r\n            </datalist>\r\n          </th>\r\n          <th style={{ borderColor: \"none\" }}>\r\n            <Link to=\"/staffs\" className=\"ml-3\">\r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<span className=\"fa fa-plus\" />}\r\n                style={{ background: \"#2A3F54\", color: \"white\" }}\r\n              >\r\n                <Typography variant=\"caption\">Add New</Typography>\r\n              </Button>\r\n            </Link>\r\n          </th>\r\n          <th style={{ border: \"none\", outline: \"none\" }}>\r\n            <Button\r\n              onClick={() => handleUpdate()}\r\n              disabled={tab !== \"gen\" || data.change === false ? true : false}\r\n              startIcon={<span className=\"fa fa-check />\" />}\r\n              variant=\"contained\"\r\n              style={{ background: \"#2A3F54\", color: \"white\" }}\r\n            >\r\n              <Typography variant=\"caption\">Update</Typography>\r\n            </Button>\r\n          </th>\r\n          <th style={{ border: \"none\", outline: \"none\" }}>\r\n            <Button\r\n              startIcon={<span className=\"fa fa-trash />\" />}\r\n              variant=\"contained\"\r\n              style={{ background: \"#2A3F54\", color: \"white\", width: \"100%\" }}\r\n            >\r\n              <Typography variant=\"caption\">Delete</Typography>\r\n            </Button>\r\n          </th>\r\n        </thead>\r\n      </table>\r\n\r\n      <div className=\"p-1\" />\r\n      <table\r\n        className=\"mt-1 table-bordered\"\r\n        style={{\r\n          width: \"98%\",\r\n          margin: \"auto\",\r\n          position: \"sticky\",\r\n          top: \"40px\",\r\n          zIndex: 222,\r\n        }}\r\n      >\r\n        <thead>\r\n          <th\r\n            onClick={() => setTab(\"gen\")}\r\n            style={{\r\n              background: tab == \"gen\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"gen\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            General Info\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"tx\")}\r\n            style={{\r\n              background: tab == \"tx\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"tx\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Transactions\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"cus\")}\r\n            style={{\r\n              background: tab == \"cus\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"cus\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Customers\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"exp\")}\r\n            style={{\r\n              background: tab == \"exp\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"exp\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Expense\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"sal\")}\r\n            style={{\r\n              background: tab == \"sal\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"sal\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Sales\r\n          </th>\r\n          <th\r\n            onClick={() => setTab(\"jou\")}\r\n            style={{\r\n              background: tab == \"jou\" ? \"\" : \"#2A3F54\",\r\n              color: tab == \"jou\" ? \"#2A3F54\" : \"white\",\r\n              paddingLeft: \"5px\",\r\n              paddingRight: \"5px\",\r\n              border: \"1px solid #000\",\r\n              borderLeft: \"1px solid white\",\r\n              borderBottom: \"none\",\r\n            }}\r\n          >\r\n            Journal\r\n          </th>\r\n        </thead>\r\n        {data.username && tab == \"gen\" ? (\r\n          <tbody>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>First Name</td>\r\n              <td>\r\n                <input\r\n                  name=\"first_name\"\r\n                  value={data.first_name}\r\n                  placeholder=\"First Name\"\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </td>\r\n              <td>Last Name</td>\r\n              <td>\r\n                <input\r\n                  name=\"last_name\"\r\n                  value={data.last_name}\r\n                  placeholder=\"Last Name\"\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </td>\r\n              <td>User Name</td>\r\n              <td>\r\n                <input\r\n                  readOnly\r\n                  name=\"username\"\r\n                  value={data.username}\r\n                  placeholder=\"Staff Username (read only)\"\r\n                />\r\n              </td>\r\n            </tr>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Mobile</td>\r\n              <td>\r\n                <input\r\n                  name=\"mobile\"\r\n                  value={data.mobile}\r\n                  placeholder=\"Staff Phone Number\"\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </td>\r\n              <td>Email</td>\r\n              <td colSpan={3}>\r\n                <input\r\n                  name=\"email\"\r\n                  value={data.email}\r\n                  onChange={(e) => handleChange(e)}\r\n                  placeholder=\"Staff Email Address (example@mail.com)\"\r\n                />\r\n              </td>\r\n            </tr>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Entries</td>\r\n              <td>\r\n                <select\r\n                  name=\"entries\"\r\n                  value={data.entries}\r\n                  onChange={(e) => handleChange(e)}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"entries\">Yes</option>\r\n                  <option value=\"no\">No</option>\r\n                </select>\r\n              </td>\r\n              <td>Expense</td>\r\n              <td>\r\n                <select\r\n                  name=\"expense\"\r\n                  value={data.expense}\r\n                  onChange={(e) => handleChange(e)}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"expense\">Yes</option>\r\n                  <option value=\"no\">No</option>\r\n                </select>\r\n              </td>\r\n              <td>Sales</td>\r\n              <td>\r\n                <select\r\n                  name=\"sales\"\r\n                  value={data.sales}\r\n                  onChange={(e) => handleChange(e)}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"sales\">Yes</option>\r\n                  <option value=\"no\">No</option>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <div className=\"p-1\" />\r\n            <tr>\r\n              <td>Accountant</td>\r\n              <td>\r\n                <select\r\n                  name=\"accountant\"\r\n                  value={data.accountant}\r\n                  onChange={(e) => handleChange(e)}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"accountant\">Yes</option>\r\n                  <option value=\"no\">No</option>\r\n                </select>\r\n              </td>\r\n              <td>MD</td>\r\n              <td>\r\n                <select\r\n                  name=\"md\"\r\n                  value={data.md}\r\n                  onChange={(e) => handleChange(e)}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"md\">Yes</option>\r\n                  <option value=\"no\">No</option>\r\n                </select>\r\n              </td>\r\n              <td>Active</td>\r\n              <td>\r\n                <select\r\n                  name=\"is_active\"\r\n                  value={data.is_active}\r\n                  onChange={(e) => handleChange(e)}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value={1}>Yes</option>\r\n                  <option value={0}>No</option>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        ) : null}\r\n      </table>\r\n      {tab == \"tx\" && (\r\n        <TxTableView name={`${data.first_name} ${data.last_name}`} />\r\n      )}\r\n      {tab == \"cus\" && <CustomerViewTable />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminStaffSetting;\r\n","import { IconButton, ListItem, ListItemText } from '@material-ui/core'\r\nimport { More } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { Fragment } from 'react'\r\n\r\nconst AdminMenuList = ({setIsActive}) => {\r\n    return (\r\n        <Fragment>\r\n            <ListItem draggable divider button\r\n                onClick={() =>setIsActive('staff')}\r\n            >\r\n                <ListItemText\r\n                    primary='Staff'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem>\r\n            <ListItem draggable divider button\r\n                onClick={() =>setIsActive('customer')}\r\n            >\r\n                <ListItemText\r\n                    primary='Customer'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem>\r\n            {/* <ListItem draggable divider button\r\n                onClick={() =>setIsActive('expense')}\r\n            >\r\n                <ListItemText\r\n                    primary='Expense'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem>\r\n            <ListItem draggable divider button\r\n                onClick={() =>setIsActive('sale')}\r\n            >\r\n                <ListItemText\r\n                    primary='Sale'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem> */}\r\n            {/* <ListItem draggable divider button\r\n                onClick={() =>setIsActive('posting')}\r\n            >\r\n                <ListItemText\r\n                    primary='Posting'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem> */}\r\n            <ListItem draggable divider button\r\n                onClick={() =>setIsActive('ps')}\r\n            >\r\n                <ListItemText\r\n                    primary='Property/Service'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem>\r\n            <ListItem draggable divider button\r\n                onClick={() =>setIsActive('account')}\r\n            >\r\n                <ListItemText\r\n                    primary='Account'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem>\r\n            {/* <ListItem draggable divider button\r\n                onClick={() =>setIsActive('journal')}\r\n            >\r\n                <ListItemText\r\n                    primary='Journal'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem> */}\r\n            <ListItem draggable divider button\r\n                onClick={() =>setIsActive('security')}\r\n            >\r\n                <ListItemText\r\n                    primary='Security'\r\n                />\r\n                <More style={{color: '#20c997', fontSize: 20}} />\r\n            </ListItem>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminMenuList\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { MDBContainer } from \"mdbreact\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAccounts, selectAllStaffs, selectCustomers, selectUserExpenseRaised } from \"../../appState/appSlice\";\r\nimport { Fragment } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AdminMenuList from \"../global/AdminMenuList\";\r\n\r\nconst AdminSideMenu = ({setIsActive}) => {\r\n  const userExpneses = useSelector(selectUserExpenseRaised)\r\n  const customers = useSelector(selectCustomers)\r\n  const accounts = useSelector(selectAccounts)\r\n\r\n    return (\r\n        <Fragment>\r\n            <section className='p-2'>\r\n                <Button \r\n                    variant='contained' size='small'\r\n                    style={{background: '#2A3F54', width: '100%', color: 'white'}}\r\n                >\r\n                    Admin Menu\r\n                </Button>\r\n                <div className='admin__MenuList mt-2'>\r\n                    <AdminMenuList\r\n                        setIsActive={setIsActive}\r\n                    />\r\n                </div>\r\n            </section>\r\n        </Fragment>\r\n    );\r\n  }\r\n\r\nexport default AdminSideMenu;","import { Grid } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { Fragment } from 'react'\r\nimport AdminAccountSetting from './AdminAccountSetting'\r\nimport AdminCustomerSetting from './AdminCustomerSetting'\r\nimport AdminExpenseSetting from './AdminExpenseSetting'\r\nimport AdminPostingSetting from './AdminPosting'\r\nimport AdminPsSetting from './AdminPsSetting'\r\nimport AdminSaleSetting from './AdminSaleSetting'\r\nimport AdminStaffSetting from './AdminStaffSetting'\r\nimport AdminSideMenu from './charts/AdminSideMenu'\r\nimport AppHeader from './global/AppHeader'\r\n\r\nconst AdminFeed = () => {\r\n    const [isActive, setIsActive] = useState()\r\n\r\n    const renderAdminMenu = (active) =>{\r\n        switch (active) {\r\n            case 'staff':\r\n            return <AdminStaffSetting />\r\n\r\n            case 'customer':\r\n            return <AdminCustomerSetting />\r\n\r\n            case 'expense':\r\n            return <AdminExpenseSetting />\r\n\r\n            case 'sale':\r\n            return <AdminSaleSetting />\r\n\r\n            case  'posting':\r\n            return <AdminPostingSetting />\r\n\r\n            case 'ps':\r\n                return <AdminPsSetting />\r\n            \r\n            case 'account':\r\n                return <AdminAccountSetting />\r\n        \r\n            default:\r\n                return <AdminStaffSetting />\r\n                \r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    return (\r\n        <Fragment>\r\n            <div className='app__Feed'>\r\n                <AppHeader title='Settings' />\r\n                <div className='admin__FeedContainer'>\r\n                    <Grid container spacing={2} >\r\n                        <Grid item lg={2} md={2} className='admin__Menu'>\r\n                            <AdminSideMenu\r\n                                isActive={isActive}\r\n                                setIsActive={setIsActive}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item lg={10} md={10}>\r\n                            {\r\n                               renderAdminMenu(isActive)\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div> \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminFeed\r\n","import axios from 'axios'\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectOpen, selectToken, setAccounts, setAllStaffs, setBuildCategories, setCustomers, setExpenseItems, setLocations, setPaidOnpaySales, setPropServices, setSAles, setTransactions, setUser, setUserExpenseRaised } from '../appState/appSlice'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport AdminFeed from '../components/AdminFeed'\r\nimport './homeScreen.css'\r\n\r\nconst AdminScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const open = useSelector(selectOpen)\r\n    const token = useSelector(selectToken)\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Paid_Onpay_Sales = async () =>{\r\n        await localStorage.clear()\r\n        axios.get(`/sale/paid_onpay`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(paidOnpay =>{\r\n            dispatch(setPaidOnpaySales(paidOnpay.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const getCustomers = () =>{\r\n        axios.get('/customer', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(asset =>{\r\n            dispatch(setCustomers(asset.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_All_Txs = () =>{\r\n        axios.get('/transaction', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(txs =>{\r\n            dispatch(setTransactions(txs.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Staffs =() =>{\r\n        axios.get('/auth', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(staffs =>{\r\n            localStorage.setItem('staffs', staffs.data.length)\r\n            dispatch(setAllStaffs(staffs.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_Raised_Expenses =() =>{\r\n        axios.get('/expense', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(exps =>{\r\n            dispatch(setUserExpenseRaised(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_Raised_Expense_Items =() =>{\r\n        axios.get('/expense/Items', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(exps =>{\r\n            dispatch(setExpenseItems(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_All_Sales =() =>{\r\n        axios.get('/sale/all', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(sales =>{\r\n            dispatch(setSAles(sales.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const getProp_Services = () =>{\r\n        axios.get('/prop_service', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(ps =>{\r\n            dispatch(setPropServices(ps.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const handleGet_Locations = () =>{\r\n        axios.get('/location', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(locations =>{\r\n            dispatch(setLocations(locations.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error) {\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n    \r\n    const getBuildCategories = () =>{\r\n        axios.get('/build_category', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(categories =>{\r\n            dispatch(setBuildCategories(categories.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        get_Session()\r\n        get_Paid_Onpay_Sales()\r\n        get_AllAccounts()\r\n        get_Raised_Expenses()\r\n        getCustomers()\r\n        get_Staffs()\r\n        get_All_Sales()\r\n        getProp_Services()\r\n        handleGet_Locations()\r\n        get_All_Txs()\r\n        getBuildCategories()\r\n    }, [open])\r\n    \r\n\r\n    return (\r\n        <Fragment>\r\n           <div className='app'>\r\n                {/* side__Bar */}\r\n                <SideBarMenu />\r\n                {/* feed */}\r\n                <AdminFeed />\r\n                {/* widget */}\r\n           </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminScreen\r\n","import { ArrowDownward } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Close from '@material-ui/icons/Close'\r\nimport { MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader } from 'mdbreact'\r\n\r\nimport { selectExpenseCategories, selectExpenseItems } from '../../appState/appSlice'\r\n\r\nconst ExpenseItemsView = ({open, setOpen, expID}) => {\r\n    const expenseItems = useSelector(selectExpenseItems);\r\n    const expenseCategories = useSelector(selectExpenseCategories)\r\n\r\n    const returnCategory = (id) =>{\r\n        const cat = expenseCategories && expenseCategories\r\n        .find(category =>category.id === id)\r\n\r\n        if(cat) {\r\n            return cat.name\r\n        }\r\n    }\r\n    const itemList = (id) => {\r\n        const expItems = expenseItems && expenseItems\r\n            .filter(exp =>exp.expense_ID == id)\r\n        \r\n        if(expItems) {\r\n            return (\r\n                expItems.map((expitem, i) =>{\r\n                    const {expense_FK, amount, description} = expitem\r\n                    return (\r\n                        <Fragment>\r\n                            <tr key={i}>\r\n                                <td> {i+1} </td>\r\n                                <td>{returnCategory(expense_FK)}</td>\r\n                                <td>{description}</td>\r\n                                <td>{amount.toLocaleString()}</td>\r\n                            </tr>\r\n                        </Fragment>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n    <Fragment>\r\n        <MDBModal \r\n            backdrop={false}\r\n            isOpen={open} size='lg' \r\n            centered overflowScroll={false} \r\n        >\r\n            <div\r\n                style={{\r\n                    paddingLeft: 25,\r\n                    color: '#FFF',\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    alignItems: 'center',\r\n                    backgroundColor: '#2a3f54',\r\n                    justifyContent: 'space-between'\r\n                }}\r\n            > \r\n                <Typography \r\n                    className='p-2'\r\n                    style={{color: 'white'}} \r\n                >\r\n                    Voucher {expID}\r\n                    \r\n                </Typography>\r\n            </div>\r\n                \r\n            <MDBModalBody>\r\n            <Fragment>\r\n          \r\n              \r\n            <table className='table-hover'\r\n                style={{width: '100%', margin: 'auto'}}\r\n            >\r\n                \r\n                <thead>\r\n                    <th>#</th>\r\n                    <th>Expense Head</th>\r\n                    <th>Description</th>\r\n                    <th>Amount</th>\r\n                </thead>\r\n                <tbody>\r\n                    {/* return */}\r\n                    {itemList(expID)}\r\n                </tbody>\r\n            </table>\r\n        </Fragment>\r\n                \r\n            </MDBModalBody>\r\n            <MDBModalFooter>\r\n            \r\n                <IconButton color='secondary'\r\n                    onClick={() =>setOpen(!open)}\r\n                >\r\n                    <Close color='action' />\r\n                </IconButton>\r\n            </MDBModalFooter>\r\n        </MDBModal>\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nexport default ExpenseItemsView\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport Undo from \"@material-ui/icons/Undo\";\r\nimport PlusOne from \"@material-ui/icons/PlusOne\";\r\nimport SearchOutlined from \"@material-ui/icons/SearchOutlined\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HandleSearch = ({ \r\n    url, \r\n    explore, \r\n    history, \r\n    isWidget,\r\n    inputType,\r\n    setSearchKey,\r\n    placeHolder\r\n}) =>{\r\n    return (\r\n        <Fragment>\r\n            <div\r\n                style={{\r\n                    gap: 10,\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    paddingTop: 10,\r\n                    paddingRight: 10,\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'flex-end'\r\n                }}\r\n                className={!isWidget ? 'mt-3' : ''}\r\n            >\r\n                <div\r\n                    id='searchBox'\r\n                    style={{\r\n                        padding: 5,\r\n                        width: isWidget ? '90%' : '30%',\r\n                        display: 'flex',\r\n                        flexDirection: 'row',\r\n                        borderRadius: '50px',\r\n                        boxSizing: 'border-box',\r\n                        backgroundColor: 'white',\r\n                        boxShadow: '0px 2px 2px gray'\r\n                    }}\r\n                >\r\n                    <input \r\n                        name='searchKy'\r\n                        type={inputType}\r\n                        min={inputType=='number' ? 1: ''}\r\n                        placeholder={placeHolder} \r\n                        style={{\r\n                            flex: 1,\r\n                            padding: 5,\r\n                            outline: 'none',\r\n                            border: 'none'\r\n                        }}\r\n                        onChange={e => setSearchKey(e.target.value)}\r\n                    />\r\n                    <IconButton\r\n                        size='small'\r\n                    >\r\n                        <SearchOutlined color='action' />\r\n                    </IconButton>\r\n                </div>\r\n                {\r\n                    isWidget ?\r\n                    <Link to={explore}>                       \r\n                        <Button\r\n                            style={{\r\n                                boxSizing: 'border-box',\r\n                                backgroundColor: 'white',\r\n                                boxShadow: '0px 2px 2px gray'\r\n                            }}\r\n                            \r\n                        >\r\n                            Explore\r\n                        </Button>\r\n                    </Link>\r\n                    :\r\n                    <Button\r\n                        color='action'\r\n                        variant='outlined'\r\n                        onClick={() =>history.goBack()}\r\n                        endIcon={\r\n                            <Undo color='action' />\r\n                        }\r\n                        style={{\r\n                            border: 'none',\r\n                            boxSizing: 'border-box',\r\n                            backgroundColor: 'white',\r\n                            boxShadow: '0px 2px 2px gray'\r\n                        }}\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                }\r\n                {\r\n                    !isWidget &&\r\n                    <Link to={url}> \r\n                    <Tooltip title='Add new sales'>                     \r\n                        <Button\r\n                            style={{\r\n                                width: 100,\r\n                                color: 'white',\r\n                                boxSizing: 'border-box',\r\n                                backgroundColor: '#2a3f54',\r\n                                boxShadow: '0px 2px 2px gray'\r\n                            }}\r\n                            endIcon={\r\n                                <PlusOne />\r\n                            }\r\n                        >\r\n                        New\r\n                        </Button>\r\n                    </Tooltip>\r\n                    </Link>\r\n                }\r\n            </div>\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default HandleSearch;","import React, { useEffect, useState } from 'react'\r\nimport { Fragment } from 'react'\r\nimport { IconButton, Typography } from '@material-ui/core'\r\nimport { More } from '@material-ui/icons'\r\nimport ExpenseItemsView from './global/ExpenseItemsView'\r\nimport HandleSearch from './global/HandleSearch'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectAccounts } from '../appState/appSlice'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst RenderList = ({index, open, isWidget, renderAccount, setOpen,\r\n    uuid, amount, expense_date, payee_account, \r\n    payment_account, first_name, last_name, }) =>{\r\n    return (\r\n        <Fragment key={index} >\r\n            <tr\r\n                onClick={() =>setOpen(index)}\r\n            >\r\n                <td style={{textAlign: 'center'}}>\r\n                <td>\r\n                    <Typography\r\n                        style={{\r\n                            paddingRight: 2,\r\n                            color: '#20c997'\r\n                        }}\r\n                    > {index+1} </Typography>\r\n                </td>\r\n                </td>\r\n                <td style={{textAlign: 'left'}}> \r\n                    <Typography\r\n                        style={{color: '#20C997', cursor: 'pointer'}}\r\n                    >\r\n                    {`Expense #${uuid}`}\r\n                    </Typography>\r\n                </td>\r\n                {   !isWidget &&\r\n                    <td> {renderAccount(payment_account)} </td>\r\n                }\r\n                {   !isWidget &&\r\n                    <td> {renderAccount(payee_account)} </td>\r\n                }\r\n                {   !isWidget &&\r\n                    <td> {`${first_name} ${last_name}`} </td>\r\n                }\r\n                <td>\r\n                    <Typography color='error'>\r\n                    {amount.toLocaleString()} \r\n                    </Typography>\r\n                </td>\r\n                <td> {new Date(expense_date).toLocaleDateString()} </td>\r\n            \r\n                <td style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n                    <div>\r\n                    <IconButton size='small'\r\n                    >\r\n                        <More style={{color: '#20c997'}} />\r\n                    </IconButton>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n            {/* imported component  */}\r\n            {\r\n                open ===index &&\r\n                <ExpenseItemsView \r\n                    open={open}\r\n                    expID={uuid} \r\n                    setOpen={setOpen}\r\n                />\r\n            }\r\n        </Fragment>\r\n    \r\n    )\r\n}\r\n\r\nconst ExpenseViewTable = ({ \r\n    isWidget, \r\n    headerColor,  \r\n    userExpneses, \r\n    calcuAmt\r\n}) => {\r\n    const history = useHistory()\r\n    const [open, setOpen] = useState(false)\r\n    const [searchKey, setSearchKey] = useState();\r\n    const [expSearch, setExpSearch] = useState();\r\n    const accounts = useSelector(selectAccounts);\r\n\r\n    const renderAccount = (code) => {\r\n        const acc = accounts && accounts.find((acc) => acc.code == code);\r\n        return acc?.name;\r\n      };\r\n\r\n    useEffect(() => {\r\n        const filterExpense =\r\n        userExpneses &&\r\n        userExpneses.filter((exp) => exp.uuid.includes(searchKey));\r\n        if(filterExpense) {\r\n            return setExpSearch(filterExpense);\r\n        }\r\n           \r\n         return setExpSearch('');\r\n        \r\n    }, [searchKey]);\r\n\r\n    useEffect(() =>{\r\n        return setExpSearch('');\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n             <HandleSearch\r\n                url='/expense'\r\n                inputType='number'\r\n                history={history}\r\n                isWidget={isWidget}\r\n                explore='/expense_list'\r\n                placeHolder='Search (By Expense code 283938) ...'\r\n                setSearchKey={setSearchKey}\r\n            />\r\n            <table className='mt-2 table-hover'\r\n                style={{width: '98%', margin: 'auto'}}\r\n            >\r\n                <thead style={{top: '60px', position: 'sticky', background:  headerColor? headerColor : '#EDEDED',\r\n                    color: headerColor? 'white': null\r\n                }}>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Expense</th>\r\n                    {\r\n                        !isWidget &&\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>Acc. Payable</th>\r\n                    }\r\n                    {\r\n                        !isWidget &&\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>Acc. Receivable</th>\r\n                    }\r\n                     {\r\n                        !isWidget &&\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>Raised By</th>\r\n                    }\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Amount (<s>N</s>)</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Date</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}></th>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        expSearch ?\r\n                        expSearch.map((exp, index) =>{\r\n                            return (\r\n                                <RenderList \r\n                                    {...exp}\r\n                                    open={open}\r\n                                    index={index}\r\n                                    setOpen={setOpen}\r\n                                    isWidget={isWidget}\r\n                                    renderAccount={renderAccount}\r\n                                />\r\n                            )\r\n                        })\r\n                        :\r\n                        userExpneses &&\r\n                        userExpneses.map((exps, index) =>{\r\n                            return (\r\n                                <RenderList \r\n                                    {...exps}\r\n                                    open={open}\r\n                                    index={index}\r\n                                    setOpen={setOpen}\r\n                                    isWidget={isWidget}\r\n                                    renderAccount={renderAccount}\r\n                                />\r\n                            )\r\n                        })\r\n                        \r\n                    }\r\n                    {\r\n                        userExpneses &&\r\n                        <tr\r\n                        style={{background: '#2A3F54', color: 'white'}} \r\n                        >\r\n                            <td colSpan={2}>\r\n                                <Typography variant='subtitle1'\r\n                                style={{color: 'white'}}\r\n                                >\r\n                                    <b>Total:</b>\r\n                                </Typography>\r\n                            </td>\r\n                            <td>\r\n                                <Typography variant='subtitle1'\r\n                                style={{color: 'white'}}\r\n                                >\r\n                                <b>{\r\n                                    calcuAmt(userExpneses).toLocaleString()\r\n                                }</b>\r\n                                </Typography>\r\n                            </td>\r\n                            <td colSpan={2}></td>\r\n                        </tr>\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ExpenseViewTable\r\n","// MUI Stuff\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport React from \"react\";\r\n\r\nconst AppWidgetHeader = ({ title, isWidget, setIswidget }) => {\r\n  return (\r\n    <div className=\"app__HeaderContainer\">\r\n      <div className=\"app__HeaderLeft\">\r\n        <Tooltip title={`Close`}>\r\n          <IconButton onClick={() => setIswidget(!isWidget)}>\r\n            <Close />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </div>\r\n      <aside className=\"app__HeaderRight\">\r\n        <Typography variant=\"subtitle1\" className=\"mr-2\">\r\n          {title}\r\n        </Typography>\r\n      </aside>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppWidgetHeader;\r\n","import { Button, IconButton, Typography } from '@material-ui/core'\r\nimport { Close, Edit } from '@material-ui/icons'\r\nimport { MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader } from 'mdbreact'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst SalesItemsModal = ({ items, open, setOpen }) => {\r\n\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n  \r\n    return (\r\n        <div>\r\n            <MDBModal \r\n                backdrop={false}\r\n                isOpen={open} size='lg' \r\n                centered overflowScroll={false} \r\n            >\r\n                  \r\n                <div\r\n                    style={{\r\n                        paddingLeft: 25,\r\n                        color: '#FFF',\r\n                        width: '100%',\r\n                        display: 'flex',\r\n                        flexDirection: 'row',\r\n                        alignItems: 'center',\r\n                        backgroundColor: '#2a3f54',\r\n                        justifyContent: 'space-between'\r\n                    }}\r\n                > \r\n                    <Typography>\r\n                    Sale Items\r\n                    </Typography>\r\n                    <Link to={`/sales/${items[0]?.sale_ID}`} >\r\n                        <IconButton>\r\n                        <Edit\r\n                            style={{\r\n                                color: '#20c997'\r\n                            }} \r\n                        />\r\n                        </IconButton>\r\n                    </Link>\r\n                </div>\r\n                        \r\n                <MDBModalBody>\r\n                   \r\n                <table className='table-hover'\r\n                style={{width: '98%', margin: 'auto'}}\r\n            >\r\n                <thead style={{top: '60px', color: '#2a3f54', position: 'sticky', backgroundColor: '#F7F7F7'}}>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Property</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}> Location </th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}> Building </th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Quantity</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Date</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Amt (<s>N</s>)</th>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        items &&\r\n                        items.map((item, index) =>{\r\n                            const { qty,\r\n                                amount,\r\n                                sale_ID,\r\n                                createdAt,\r\n                                property_name,\r\n                                location_name,\r\n                                building_name} = item\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td\r\n                                         style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}\r\n                                    > {index+1} </td>\r\n                                    <td style={{textAlign: 'left', margin: '5px'}}>\r\n                                    \r\n                                        {property_name}\r\n                                    \r\n                                    </td>\r\n                                    <td style={{textAlign: 'left', margin: '5px'}}>\r\n                                    \r\n                                        {location_name}\r\n                                    \r\n                                    </td>\r\n                                    <td style={{textAlign: 'left', margin: '5px'}}>\r\n                                    \r\n                                        {building_name}\r\n                                    \r\n                                    </td>\r\n                                    <td style={{textAlign: 'center', margin: '5px'}}>\r\n                                    \r\n                                        {qty}\r\n                                    \r\n                                    </td>\r\n                                    <td>\r\n                                        {new Date(createdAt).toLocaleDateString()} \r\n                                    </td>\r\n                                    <td>\r\n                                        \r\n                                        <Typography\r\n                                            style={{color: '#20c997'}}\r\n                                        >\r\n                                         { amount.toLocaleString() }\r\n                                        </Typography>\r\n                                    </td>                                    \r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                 <tr>\r\n                     <td colSpan={4}>\r\n                        <Button \r\n                            variant='contained'\r\n                            style={{\r\n                                width: '40%',\r\n                                color: 'white',\r\n                                backgroundColor: '#2a3f54'}}\r\n                        >\r\n                            Total\r\n                        </Button>\r\n                     </td>\r\n                     <td colSpan={3}>\r\n                        <Typography\r\n                            style={{\r\n                                float: 'right',\r\n                                alignSelf: 'flex-end'\r\n                            }}\r\n                        >\r\n                           <strong>\r\n                           <s>N</s>: {calcuAmt(items).toLocaleString()}\r\n                           </strong>\r\n                        </Typography>\r\n                     </td>\r\n                 </tr>\r\n               \r\n            </tbody>\r\n                \r\n            </table>\r\n            \r\n\r\n                </MDBModalBody>\r\n                <MDBModalFooter>\r\n                   \r\n                    <IconButton color='secondary'\r\n                        onClick={() =>setOpen(!open)}\r\n                    >\r\n                        <Close color='action' />\r\n                    </IconButton>\r\n                </MDBModalFooter>\r\n            </MDBModal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SalesItemsModal\r\n\r\n\r\n\r\n\r\n","import { Button, IconButton, Tooltip, Typography } from '@material-ui/core'\r\nimport { Edit, MoreHoriz, PlusOne, SearchOutlined, Undo } from '@material-ui/icons'\r\nimport React, {useState, useEffect} from 'react'\r\nimport { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport AppHeader from './global/AppHeader'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\nimport HandleSearch from './global/HandleSearch'\r\nimport SalesItemsModal from './global/SalesItemsModal'\r\n\r\nconst RenderList = ({ sale, index, applicant_name, uuid, sale_date,\r\n    amount_paid, due_date, amount, isWidget, handleClick }) =>{\r\n    return (\r\n        <Fragment key={index}>\r\n            <tr>\r\n                <td style={{textAlign: 'center'}}>\r\n                    <Typography\r\n                        style={{\r\n                            paddingRight: 2,\r\n                            color: '#20c997'\r\n                        }}\r\n                    > {index+1} </Typography>\r\n                </td>\r\n                <td style={{textAlign: 'left'}} >\r\n                    {applicant_name}\r\n                </td>\r\n                {\r\n                    !isWidget &&\r\n                <td> <strong\r\n                        style={{color: '#20c997'}}\r\n                    >{new Date(sale_date).toLocaleDateString()}</strong> </td>\r\n                }\r\n                <td> {new Date(due_date).toLocaleDateString()} </td>\r\n                <td> <strong\r\n                    style={{color: '#F00'}}\r\n                >{amount.toLocaleString()}</strong> </td>\r\n                {\r\n                    !isWidget &&\r\n                <td> <strong\r\n                        style={{color: '#20c997'}}\r\n                    >{amount_paid.toLocaleString()}</strong> </td>\r\n                }\r\n                <td style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n                    <div>\r\n                    <IconButton size='small'\r\n                        onClick={() =>handleClick(sale.items)}\r\n                    >\r\n                        <MoreHoriz style={{color: '#20c997'}} />\r\n                    </IconButton>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    \r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'row',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center'\r\n                    }} \r\n                >\r\n                    <Link to={`/sales/${uuid}`} >\r\n                        <Edit\r\n                            style={{\r\n                                color: '#2a3f54'\r\n                            }} \r\n                        />\r\n                    </Link>\r\n                </div>\r\n                    \r\n                </td>\r\n            </tr>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst SaleWidget = ({ sales, isReport, isWidget, setIswidget }) => {\r\n    const history = useHistory()\r\n    const [open, setOpen] = useState(false)\r\n    const [items, setItems] = useState([])\r\n    const [searchKey, setSearchKey] = useState();\r\n    const [saleSearch, setSaleSearch] = useState();\r\n\r\n    const handleClick = (item) => {\r\n        setItems(item)\r\n        setOpen(true)\r\n    }\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n    const calcuEarnedAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount_paid + a, 0)\r\n        return total\r\n    }\r\n\r\n    \r\n    // handle search\r\n    useEffect(() => {\r\n        const filterSales =\r\n        sales &&\r\n        sales.filter((sale) => sale.applicant_name.includes(searchKey));\r\n        if(filterSales) {\r\n            return setSaleSearch(filterSales);\r\n        }\r\n           \r\n         return setSaleSearch('');\r\n        \r\n    }, [searchKey]);\r\n\r\n    useEffect(() =>{\r\n        return setSaleSearch('');\r\n    }, [])\r\n\r\n   \r\n\r\n    return (\r\n        <div className={!isWidget ? '': 'app__Widget'}\r\n           \r\n        >\r\n            {!isReport && <Fragment>\r\n                {\r\n                    isWidget ?\r\n                    <AppWidgetHeader\r\n                        isWidget={isWidget}\r\n                        setIswidget={setIswidget}\r\n                        title='Sales List' \r\n                    />\r\n                    :\r\n                    <AppHeader title='Sales List' />\r\n                }\r\n            </Fragment>}\r\n            <SalesItemsModal open={open} setOpen={setOpen} items={items} />\r\n            {/* handle search */}\r\n            <HandleSearch \r\n                url='/sales'\r\n                history={history}\r\n                isWidget={isWidget}\r\n                explore='/sales_list'\r\n                inputType='text'\r\n                setSearchKey={setSearchKey}\r\n                placeHolder='Search (Customer name) ...'\r\n            />\r\n            <table className='mt-2 table-hover'\r\n                style={{width: '98%', margin: 'auto'}}\r\n            >\r\n                <thead>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Customer</th>\r\n                    {\r\n                    !isWidget && \r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Sold On</th>\r\n                    }\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Due Date</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Cost Amt (<s>N</s>)</th>\r\n                    {\r\n                    !isWidget && \r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Earned Amnt (<s>N</s>)</th>\r\n                    }\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Voucher</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}> Action</th>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        saleSearch ?\r\n                        saleSearch.map((sale, index) =>{\r\n                            return(\r\n                            <RenderList \r\n                                {...sale} \r\n                                key={index} \r\n                                sale={sale} \r\n                                index={index} \r\n                                isWidget={isWidget}\r\n                                handleClick={handleClick}\r\n                            />\r\n                            )\r\n                        })\r\n                        :\r\n                        sales &&\r\n                        sales.map((sale, index) =>{\r\n                            return(\r\n                            <RenderList \r\n                                {...sale} \r\n                                key={index} \r\n                                sale={sale} \r\n                                index={index} \r\n                                isWidget={isWidget}\r\n                                handleClick={handleClick} \r\n                            />\r\n                            )\r\n                        })\r\n                    }\r\n                    {\r\n                    sales&&\r\n                    <tr\r\n                    style={{background: '#2A3F54', color: 'white'}} \r\n                    >\r\n                        <td colSpan={!isWidget ? 4 : 3}>\r\n                            <Typography variant='subtitle1'\r\n                            style={{color: 'white'}}\r\n                            >\r\n                                <b>Total:</b>\r\n                            </Typography>\r\n                        </td>\r\n                        <td>\r\n                            <Typography variant='subtitle1'\r\n                            style={{color: 'white'}}\r\n                            >\r\n                            <b> <strike>N</strike>: {' '}\r\n                            {\r\n                                calcuAmt(sales).toLocaleString()\r\n                            }</b>\r\n                            </Typography>\r\n                        </td>\r\n                        {\r\n                            !isWidget &&\r\n                            <td>\r\n                                <Typography variant='subtitle1'\r\n                                style={{color: '#20c997'}}\r\n                                >\r\n                                <b> <strike>N</strike>: {' '}\r\n                                {\r\n                                    calcuEarnedAmt(sales).toLocaleString()\r\n                                }</b>\r\n                                </Typography>\r\n                            </td>\r\n                        }\r\n                        <td colSpan={2}></td>\r\n                    </tr>\r\n                }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SaleWidget\r\n","import { Button, Typography } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectAllStaffs, selectTransactions, selectOpen, \r\n    selectToken, setOpen, setfilterTx, selectCustomers,\r\n    setFilterCus,\r\n    selectUserExpenseRaised,\r\n    selectSales,\r\n} from '../appState/appSlice'\r\nimport ExpenseViewTable from './ExpenseViewTable'\r\nimport AppBackdrop from './global/AppBackDrop'\r\nimport AppSnackbar from './global/AppSnackbar'\r\nimport CustomerViewTable from './global/CustomerViewTable'\r\nimport SalesViewTable from './global/SalesViewTable'\r\nimport TxTableView from './global/TxTableView'\r\nimport SaleWidget from './SaleWidget'\r\n\r\nconst ReportsPool = () => {\r\n    const dispatch = useDispatch()\r\n    const open = useSelector(selectOpen)\r\n    const token = useSelector(selectToken)\r\n    const staffs = useSelector(selectAllStaffs)\r\n    const sales = useSelector(selectSales)\r\n    const customers = useSelector(selectCustomers)\r\n    const transactions = useSelector(selectTransactions)\r\n    const userExpneses = useSelector(selectUserExpenseRaised)\r\n    const [tab, setTab] = useState('gen')\r\n    const [message, setMessage] = useState()\r\n    const [success, setSuccess] = useState(false)\r\n    const [expenses, setExpenses] = useState()\r\n    const [filterSales, setFilterSales] = useState()\r\n    const [filterCustomers, setFilterCustomers] = useState()\r\n    const [data, setData] = useState({\r\n       start_date: '',\r\n       end_date: '',\r\n       staff: ''\r\n    })\r\n    const handleChange = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total.toLocaleString()\r\n    } \r\n\r\n    useEffect(() =>{\r\n        const ftxs = transactions && transactions.filter(tx => tx.tx_date >=data.start_date && tx.tx_date <= data.end_date)\r\n        return dispatch(setfilterTx(ftxs))\r\n        \r\n    },[data])\r\n\r\n    useEffect(() =>{\r\n        const fexps = userExpneses && userExpneses.filter(exp => exp.expense_date >=data.start_date && exp.expense_date <= data.end_date)\r\n        return setExpenses(fexps)\r\n        \r\n    },[data])\r\n\r\n    useEffect(() =>{\r\n        const fCus = customers && customers.filter(cus => cus.createdAt >=data.start_date && cus.createdAt <= data.end_date)\r\n        return setFilterCustomers(fCus)\r\n        \r\n    },[data])\r\n\r\n    useEffect(() =>{\r\n        const fSales = sales && sales.filter(sale => sale.createdAt >=data.start_date && sale.createdAt <= data.end_date)\r\n        return setFilterSales(fSales)\r\n        \r\n    },[data])\r\n\r\n    \r\n    return (\r\n        <Fragment>\r\n            <AppBackdrop open={open} setOpen={setOpen} />\r\n            <AppSnackbar open={success} setOpen={setSuccess} message={message} />\r\n            <div className='admin__Title'>\r\n                <section>\r\n                    <Typography variant='h3'>Reports Pool</Typography>\r\n                </section>\r\n                \r\n            </div>\r\n            <div className='p-1' />\r\n            {/* table */}\r\n            <table className='mt-1 table-bordered' style={{width: '98%', margin: 'auto', \r\n                position: 'sticky', top: 0, zIndex: 222}}>\r\n                <thead>\r\n                    <th>From</th>\r\n                    <th>\r\n                        <input\r\n                            type='date'\r\n                            value={data.start_date}\r\n                            placeholder='Staff'\r\n                            name='start_date' list='staffs'\r\n                            onChange={e =>handleChange(e)}\r\n                        />\r\n                        \r\n                    </th>\r\n                    <th>To</th>\r\n                    <th>\r\n                        <input\r\n                            name='end_date'\r\n                            type='date'\r\n                            value={data.end_date}\r\n                            onChange={e =>handleChange(e)}\r\n                            \r\n                        />\r\n                        \r\n                    </th>                    \r\n                </thead>\r\n            </table>\r\n            \r\n            <div className='p-1' />\r\n            { data.start_date && data.end_date &&\r\n            <table className='mt-1 table-bordered' style={{width: '98%', margin: 'auto',\r\n                position: 'sticky', top: '30px', zIndex: 222}}>\r\n                <thead>\r\n                    {/* <th\r\n                        onClick={() =>setTab('gen')}\r\n                        style={{background: tab=='gen'?'':'#2A3F54', color: tab=='gen'? '#2A3F54': 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderBottom: 'none' }}\r\n                    >\r\n                       \r\n                        General Info\r\n                           \r\n                    </th> */}\r\n                    <th\r\n                        onClick={() =>setTab('tx')}\r\n                        style={{background: tab=='tx'?'':'#2A3F54', color: tab=='tx'? '#2A3F54': 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Transactions\r\n                    </th>\r\n                    <th\r\n                        onClick={() =>setTab('cus')}\r\n                        style={{background: tab=='cus'?'':'#2A3F54', color: tab=='cus'? '#2A3F54': 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Customers\r\n                    </th>\r\n                    <th\r\n                        onClick={() =>setTab('exp')}\r\n                        style={{background: tab=='exp'?'':'#2A3F54', color: tab=='exp'? '#2A3F54': 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Expense\r\n                    </th>\r\n                    <th\r\n                        onClick={() =>setTab('sal')}\r\n                        style={{background: tab=='sal'?'':'#2A3F54', color: tab=='sal'? '#2A3F54': 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Sales\r\n                    </th>\r\n                    <th\r\n                        onClick={() =>setTab('jou')}\r\n                        style={{background: tab=='jou'?'':'#2A3F54', color: tab=='jou'? '#2A3F54': 'white', paddingLeft: '5px',\r\n                        paddingRight: '5px', border: '1px solid #000', borderLeft: '1px solid white', borderBottom: 'none'}}\r\n                    >\r\n                       Journal\r\n                    </th>\r\n                </thead>                \r\n            </table>}\r\n                {\r\n                    tab =='tx' &&\r\n                    <TxTableView\r\n                        date={`${data.start_date} to ${data.end_date}` }\r\n                        name={`${data.first_name} ${data.last_name}`} \r\n                    />\r\n                }\r\n                {\r\n                    tab =='cus' &&\r\n                    <CustomerViewTable customers={filterCustomers} />\r\n                }\r\n                {\r\n                    tab=='exp' &&\r\n                  \r\n                        <ExpenseViewTable \r\n                            calcuAmt={calcuAmt}\r\n                            userExpneses={expenses}\r\n                        />\r\n                  \r\n                }\r\n                {\r\n                    tab=='sal' &&\r\n                    <SaleWidget isReport sales={filterSales} />\r\n                }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ReportsPool\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport { Fragment } from \"react\";\r\n\r\nimport AppHeader from \"./global/AppHeader\";\r\nimport ReportsPool from \"./ReportsPool\";\r\n\r\nconst ReportFeed = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"app__Feed\">\r\n        <AppHeader title=\"Report\" />\r\n        <div className=\"admin__FeedContainer\">\r\n          <Grid container spacing={2}>\r\n            <Grid item lg={12} md={12} sm={12}>\r\n              <ReportsPool />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ReportFeed;\r\n","import axios from 'axios'\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectOpen, selectToken, setAccounts, setAllStaffs, setBuildCategories, setCustomers, setExpenseCategories, setExpenseItems, setLocations, setPaidOnpaySales, setPropServices, setSAles, setTransactions, setUser, setUserExpenseRaised } from '../appState/appSlice'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport ReportFeed from '../components/ReportFeed'\r\nimport './homeScreen.css'\r\n\r\nconst ReportScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const open = useSelector(selectOpen)\r\n    const token = useSelector(selectToken)\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Paid_Onpay_Sales = async () =>{\r\n        await localStorage.clear()\r\n        axios.get(`/sale/paid_onpay`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(paidOnpay =>{\r\n            dispatch(setPaidOnpaySales(paidOnpay.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const getCustomers = () =>{\r\n        axios.get('/customer', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(asset =>{\r\n            dispatch(setCustomers(asset.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_All_Txs = () =>{\r\n        axios.get('/transaction', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(txs =>{\r\n            dispatch(setTransactions(txs.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Staffs =() =>{\r\n        axios.get('/auth', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(staffs =>{\r\n            localStorage.setItem('staffs', staffs.data.length)\r\n            dispatch(setAllStaffs(staffs.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_Raised_Expenses =() =>{\r\n        axios.get('/expense', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(exps =>{\r\n            dispatch(setUserExpenseRaised(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_Raised_Expense_Items =() =>{\r\n        axios.get('/expense/Items', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            } \r\n        })\r\n        .then(exps =>{\r\n            dispatch(setExpenseItems(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_All_Sales =() =>{\r\n        axios.get('/sale/all', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(sales =>{\r\n            dispatch(setSAles(sales.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const getProp_Services = () =>{\r\n        axios.get('/prop_service', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(ps =>{\r\n            dispatch(setPropServices(ps.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const handleGet_Locations = () =>{\r\n        axios.get('/location', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(locations =>{\r\n            dispatch(setLocations(locations.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error) {\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n    const get_ExpenseCategories =() =>{\r\n        axios.get('/expense/categories', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(exps =>{\r\n            dispatch(setExpenseCategories(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n    \r\n    const getBuildCategories = () =>{\r\n        axios.get('/build_category', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(categories =>{\r\n            dispatch(setBuildCategories(categories.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        get_Session()\r\n        get_Paid_Onpay_Sales()\r\n        get_AllAccounts()\r\n        get_Raised_Expenses()\r\n        getCustomers()\r\n        get_Staffs()\r\n        get_All_Sales()\r\n        getProp_Services()\r\n        handleGet_Locations()\r\n        get_All_Txs()\r\n        getBuildCategories()\r\n        get_Raised_Expense_Items()\r\n        get_ExpenseCategories()\r\n    }, [open])\r\n    \r\n\r\n    return (\r\n        <Fragment>\r\n           <div className='app'>\r\n                {/* side__Bar */}\r\n                <SideBarMenu />\r\n                {/* feed */}\r\n                <ReportFeed />\r\n                {/* widget */}\r\n           </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ReportScreen\r\n","import TextField from \"@material-ui/core/TextField\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\n\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setToken } from \"../../appState/appSlice\";\r\nimport { useState } from \"react\";\r\n\r\nconst LoginForm = ({ setSuccess, setError, setOpen, user, setUser }) => {\r\n  const dispatch = useDispatch();\r\n  const [invalid, setInvalid] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const handle_Login = (e) => {\r\n    e.preventDefault();\r\n    if (user.username.trim().length <= 0)\r\n      return setInvalid({\r\n        ...invalid,\r\n        username: \"Is required\",\r\n      });\r\n\r\n    setInvalid({\r\n      ...invalid,\r\n      username: \" \",\r\n    });\r\n    if (user.password.trim().length <= 0)\r\n      return setInvalid({\r\n        ...invalid,\r\n        password: \"Is required\",\r\n      });\r\n    setInvalid({\r\n      ...invalid,\r\n      username: \"\",\r\n      password: \"\",\r\n    });\r\n    setOpen(true);\r\n    axios\r\n      .post(\"/auth/login\", user)\r\n\r\n      .then((result) => {\r\n        setSuccess(false);\r\n        return dispatch(setToken(result.data));\r\n      })\r\n      .catch((error) => {\r\n        setOpen(false);\r\n        setSuccess(true);\r\n        if (error.status == 500) {\r\n          setSuccess(true);\r\n          return setError(error.response.statusText);\r\n        }\r\n        setSuccess(true);\r\n        setError(error.response.data.message);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n        <FormGroup>\r\n          <TextField\r\n            name=\"User Id\"\r\n            value={user.username}\r\n            placeholder=\"Example (SA@2021)\"\r\n            label=\"User ID\"\r\n            onChange={(e) =>\r\n              setUser({\r\n                ...user,\r\n                username: e.target.value,\r\n              })\r\n            }\r\n            error={invalid && invalid.username.length > 0}\r\n            helperText={invalid && invalid.username}\r\n          />\r\n        </FormGroup>\r\n      </div>\r\n      <div className=\"p-1\" />\r\n      <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n        <FormGroup>\r\n          <TextField\r\n            type=\"password\"\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            value={user.password}\r\n            placeholder=\"Password\"\r\n            onChange={(e) =>\r\n              setUser({\r\n                ...user,\r\n                password: e.target.value,\r\n              })\r\n            }\r\n            error={invalid && invalid.password.length > 0}\r\n            helperText={invalid && invalid.password}\r\n          />\r\n        </FormGroup>\r\n      </div>\r\n\r\n      <div className=\"col-lg-12 col-md-12\">\r\n        <div className=\"btn__Container\">\r\n          <button\r\n            onClick={(e) => handle_Login(e)}\r\n            type=\"submit\"\r\n            className=\"p-1\"\r\n          >\r\n            Log In\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","// MUI Stuff\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport AppBackdrop from \"../global/AppBackDrop\";\r\nimport AppSnackbar from \"../global/AppSnackbar\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport { Typography } from \"@material-ui/core\";\r\nconst CreateStaff = () => {\r\n  const [Error, setError] = useState();\r\n  const [open, setOpen] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const [user, setUser] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  return (\r\n    <div className=\"auth__FormContainer\">\r\n      <AppBackdrop setOpen={setOpen} open={open} />\r\n      <AppSnackbar message={Error} open={success} setOpen={setSuccess} />\r\n      <form method=\"post\">\r\n        <div className=\"row align-items-center justify-content-center\">\r\n          <Paper className=\"col-lg-6 col-md-6 col-sm-12 p-4\">\r\n            <div\r\n              className=\"align-items-center justify-content-center d-flex\"\r\n              style={{ flexDirection: \"column\" }}\r\n            >\r\n              <Avatar variant=\"rounded\" style={{ width: 80, height: 80 }} />\r\n              <Typography style={{ color: \"#2a3f54\", padding: 5 }}>\r\n                <b>USER</b>\r\n              </Typography>\r\n            </div>\r\n            <LoginForm\r\n              user={user}\r\n              open={open}\r\n              Error={Error}\r\n              setOpen={setOpen}\r\n              setUser={setUser}\r\n              setError={setError}\r\n              setSuccess={setSuccess}\r\n            />\r\n          </Paper>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateStaff;\r\n// password, is_superuser, username,\r\n// first_name, last_name, email, is_staff, is_active, date_joined\r\n","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { selectToken } from \"../appState/appSlice\";\r\nimport \"../components/auth/auth.css\";\r\nimport CreateStaff from \"../components/auth/CreateStaff\";\r\n\r\nexport const AuthScreen = () => {\r\n  const token = useSelector(selectToken);\r\n  const history = useHistory();\r\n\r\n  if (token) {\r\n    history.push(\"/home\");\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div className=\"auth__Container\">\r\n        <CreateStaff />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n","import { Button, Container, FormLabel, Grid, IconButton, Paper, Select, TextField, Typography } from '@material-ui/core'\r\nimport { FileCopy, PlusOne,} from '@material-ui/icons'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectAccounts, selectBillCategories, selectToken, selectVendors, setBillCategories } from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\nimport AppSnackbar from './global/AppSnackbar'\r\n\r\nconst BillFeed = ({ setOpen, isOpen, setIsOpen, isWidget, setIswidget }) => {\r\n    const token = useSelector(selectToken)\r\n    const vendors = useSelector(selectVendors)\r\n    const categories = useSelector(selectBillCategories)\r\n    const [success, setSuccess] = useState(false)\r\n    const [message, setMessage] = useState()\r\n    const [vendorSales, setVendorSales] = useState()\r\n    const billFormTemplate = {billcategory:'', amount: '',  description: ''};\r\n    const [billForm, setBillform] = useState([billFormTemplate])\r\n\r\n    const [data, setData ] = useState({\r\n        vendor_FK: '', \r\n        bill_date: '',\r\n        bill_term: '',\r\n        due_date: '',\r\n        VALUES: [],\r\n        uuid: '',\r\n        total: ''\r\n    })\r\n// func\r\n    const handleSetPostData = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n\r\n    } \r\n\r\n    const handleSetTerm = (e) =>{\r\n        const d = new Date()\r\n        const sd = new Date()\r\n        const value = e.target.value;\r\n         const duedate = d.setDate(sd.getDate()+parseInt(value))\r\n            return setData({\r\n                ...data,\r\n                bill_term: value,\r\n                due_date: new Date(duedate)\r\n            })\r\n    }\r\n\r\n    const addBillFrom = () =>{\r\n        setBillform([\r\n            ...billForm,\r\n            billFormTemplate\r\n        ])\r\n    }\r\n    const handleChange = (e, index) =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n        const updatedbillform = billForm.map((jef, i) => index == i ? Object.assign(jef, {[name]: value}): jef);\r\n        setBillform(updatedbillform)\r\n\r\n        if(name =='amount') {\r\n            const updatedbillform =  billForm.map((jef, i) => index == i ?\r\n            Object.assign(jef, {'bill_ID': data.uuid, 'createdAt': data.bill_date  }): jef);\r\n        }\r\n    }\r\n    const handleRemovebillform = (index) =>{\r\n        const filterbillform = [...billForm];\r\n        filterbillform.splice(index, 1);\r\n        \r\n        setBillform(filterbillform)\r\n    }\r\n\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n    // submit post\r\n    const handleSubmit =e =>{\r\n        e.preventDefault()\r\n        setOpen(true)\r\n        axios.post('/bill',data, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setOpen(false)\r\n            setSuccess(true)\r\n            setMessage(result.data.message)\r\n            setData({\r\n                vendor_FK: '', \r\n                bill_date: '',\r\n                bill_term: '',\r\n                due_date: '',\r\n                VALUES: [],\r\n                uuid: '',\r\n                total: ''\r\n            })\r\n          \r\n            setBillform([\r\n               billFormTemplate\r\n            ])\r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            if(error) {\r\n                return error.response.data\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    // useEffect func\r\n    useEffect(() =>{\r\n        \r\n        const fdata = billForm.map(x =>Object.values(x))\r\n        const findal =[]\r\n        // const data = fdata\r\n        for(let i =0; i< fdata.length; i++){\r\n            const element = fdata[i]\r\n            findal.push(element)\r\n        }\r\n        \r\n         setData({\r\n            ...data,\r\n            VALUES: findal\r\n        })\r\n    }, [billForm])\r\n   \r\n    useEffect(() =>{\r\n        setData({\r\n            ...data,\r\n            total: calcuAmt(billForm)\r\n        })\r\n    }, [data.VALUES])\r\n    useEffect(() =>{\r\n        setData({\r\n            ...data,\r\n            uuid:  new Date().getSeconds().toLocaleString() + new Date().getMinutes().toLocaleString()+new Date().getMilliseconds()\r\n        })\r\n    }, [success])\r\n\r\n    useEffect(() =>{\r\n        const filterCategories = categories&&categories.filter(cat => parseInt(cat.vendor_FK) == parseInt(data.vendor_FK))\r\n       if(filterCategories) {\r\n           return  setVendorSales(filterCategories)\r\n       }\r\n      setVendorSales('')\r\n       \r\n    },[data.vendor_FK])\r\n    return (\r\n        <div className={`${isWidget? 'isapp__Feed': 'app__Feed'}`}>\r\n            <AppSnackbar open={success} setOpen={setSuccess} message={message} />\r\n           <AppHeader title='Bill' />\r\n           <div className=\"row align-items-center justify-content-center d-flex m-1\" >\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                    {/* table */}\r\n                    <h3>Bill Entry<span> \r\n                        <IconButton color='secondary'\r\n                            onClick={() =>setIswidget(!isWidget)}\r\n                        >\r\n                        <FileCopy style={{ color: '#1ABB9C'}} />\r\n                        </IconButton></span></h3> \r\n                        {/* to do make it a component */}\r\n                        <Grid container spacing={2} className='p-3'>\r\n                            <Grid item lg={4} md={4}>\r\n                                <FormLabel>Vendor</FormLabel>\r\n                                <select\r\n                                    required\r\n                                    name='vendor_FK'\r\n                                    placeholder='Vendor'\r\n                                    style={{border: 'none'}}\r\n                                    value={data.vendor_FK}\r\n                                    onChange={e =>handleSetPostData(e)}\r\n                                >\r\n                                    <option value=''>Select</option>\r\n                                    <option value='-1'>All</option>\r\n                                    {\r\n                                    vendors&&\r\n                                    vendors.map((vendor, index) =>{\r\n                                        const { id, vendor_name} = vendor\r\n                                        return <option value={id} key={index} >{`${vendor_name}`}</option>\r\n                                    })\r\n                                }\r\n                                </select>\r\n                            </Grid>\r\n                                \r\n                                <Grid item lg={8} md={8}\r\n                                    style={{display: 'flex', \r\n                                    justifyContent: 'flex-end', alignItems: 'flex-end', flexDirection: 'column'}}\r\n                                >\r\n                                    <FormLabel>Amount</FormLabel>\r\n                                    <Typography variant='h5'>\r\n                                        <s>N</s>: {calcuAmt(billForm)}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                \r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Period Term</FormLabel>\r\n                                    <select\r\n                                        required\r\n                                        name='bill_term'\r\n                                        value={data.bill_term}\r\n                                        onChange={e =>handleSetTerm(e)}\r\n                                        style={{width: '100%', outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                    >\r\n                                        <option></option>\r\n                                        <option value={7}>7 Days</option>\r\n                                        <option value={14}>14 Days</option>\r\n                                        <option value={21}>21 Days</option>\r\n                                        <option value={28}>28 Days</option>\r\n                                        <option value={30}>30 Days</option>\r\n                                        <option value={60}>60 Days</option>\r\n                                        <option value={90}>90 Days</option>\r\n                                        <option value={120}>120 Days</option>\r\n                                        <option value={150}>150 Days</option>\r\n                                        <option value={180}>180 Days</option>\r\n                                        <option value={210}>210 Days</option>\r\n                                        <option value={240}>240 Days</option>\r\n                                        <option value={270}>270 Days</option>\r\n                                        <option value={300}>300 Days</option>\r\n                                        <option value={330}>330 Days</option>\r\n                                        <option value={360}>360 Days</option>\r\n                                    </select>\r\n                                </Grid>\r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Bill Date</FormLabel>\r\n                                    <input\r\n                                        required\r\n                                        name='bill_date'\r\n                                        type='date'\r\n                                        value={data.bill_date}\r\n                                        onChange={e =>handleSetPostData(e)}\r\n                                        style={{width: '100%', outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Due Date</FormLabel>\r\n                                    <input\r\n                                        name='due_date'\r\n                                        value={data.due_date ? new Date(data.due_date).toLocaleDateString(): new Date().toLocaleDateString()}\r\n                                        style={{width: '100%', outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                    />\r\n                                </Grid>\r\n                            \r\n                        </Grid>\r\n                        <h5>\r\n                            Category Details\r\n                            <span>\r\n                                <IconButton\r\n                                    color='secondary'\r\n                                    onClick={() =>setIsOpen(!isOpen)}\r\n                                >\r\n                                    <PlusOne style={{color: '#20c997'}} />\r\n                                </IconButton>\r\n                            </span>\r\n                        </h5>\r\n                    <Paper>\r\n                        <Container className='p-3'>\r\n                        <table className=\"table-small table-hover table-bordered\" style={{width: '100%'}}>\r\n                            <thead>\r\n                                \r\n                                <th>#</th>\r\n                                <th> {' '} </th>\r\n                                <th>Category</th>\r\n                                <th>Amount</th>\r\n                                <th>Description</th>\r\n                               \r\n                                <th></th>\r\n                            </thead>\r\n                            <tbody id='je__Table'>\r\n                                {\r\n                                    billForm.map((categ, index) =>(\r\n                                        <tr>\r\n                                            <td>{index+1} </td>\r\n                                            <td\r\n                                                    onClick={() =>addBillFrom()}\r\n                                                >\r\n                                                    <span className='fa fa-plus-circle fa-1x'\r\n                                                        style={{color: '#20c997'}}\r\n                                                    />\r\n                                            </td>\r\n                                            <td>\r\n                                                <select\r\n                                                    name='billcategory'\r\n                                                    value={categ.billcategory}\r\n                                                    placeholder='Category'\r\n                                                    style={{border: 'none'}}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                >\r\n                                                    <option value=''></option>\r\n                                                    {\r\n                                                        vendorSales&& vendorSales.length > 0?\r\n                                                        vendorSales.map((vsales, index) =>{\r\n                                                            const { id, name} = vsales\r\n                                                            return <option value={id} key={index} >{`${name}`}</option>\r\n                                                        })\r\n                                                    :\r\n                                                       categories&&\r\n                                                       categories.map((category, index) =>{\r\n                                                            const { id, name} = category\r\n                                                            return <option value={id} key={index} >{`${name}`}</option>\r\n                                                        })\r\n                                                    }\r\n                                                   \r\n                                                </select>\r\n                                            </td>\r\n                                            <td>\r\n                                                <input\r\n                                                    name='amount'\r\n                                                    type='number'\r\n                                                    placeholder='Amount'\r\n                                                    value={categ.amount}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n                                            \r\n                                            <td>\r\n                                                <input\r\n                                                    name='description'\r\n                                                    placeholder='Description'\r\n                                                    value={categ.description}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n                     \r\n                                            <td\r\n                                                onClick={() =>handleRemovebillform(index)}\r\n                                            >\r\n                                                    <span className='fa fa-trash'\r\n                                                        style={{color: 'red'}}\r\n                                                    ></span>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                                    \r\n                            </tbody>\r\n                        </table>\r\n                       \r\n                        <Button\r\n                            className='m-3'\r\n                            variant='contained'\r\n                            onClick={e =>handleSubmit(e)}\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >submit</Button>\r\n                        </Container>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BillFeed\r\n","import {\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectToken } from \"../../appState/appSlice\";\r\nimport AppSnackbar from \"../global/AppSnackbar\";\r\n\r\nconst AccountCreationForm = ({ open, setOpen }) => {\r\n  const token = useSelector(selectToken);\r\n  const [success, setSuccess] = useState();\r\n  const [snackbar, setSnackbar] = useState(false);\r\n  const [Error, setError] = useState(\"\");\r\n  const [accData, setAccdata] = useState({\r\n    name: \"\",\r\n    code: \"\",\r\n    active: \"\",\r\n    locked: \"\",\r\n    acc_type: \"\",\r\n    balance_type: \"\",\r\n  });\r\n  // func\r\n  const handleChange = (e) => {\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n    setAccdata({\r\n      ...accData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handle_Post = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      !accData.name.trim().length > 3 ||\r\n      !accData.acc_type.trim().length > 0\r\n    ) {\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n      return setError(\"Invalid Form\");\r\n    }\r\n    setOpen(!open);\r\n\r\n    axios\r\n      .post(\"/account\", accData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        if (result.status == 201) {\r\n          setAccdata({\r\n            name: \"\",\r\n            code: \"\",\r\n            active: \"\",\r\n            locked: \"\",\r\n            acc_type: \"\",\r\n            balance_type: \"\",\r\n          });\r\n          setError(\"\");\r\n          setOpen(false);\r\n          setSuccess(result.data.message);\r\n          return setSnackbar(true);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setOpen(false);\r\n        if (error) {\r\n          setError(error.response.statusText);\r\n          console.log(error.response.statusText);\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"form__container\">\r\n      <AppSnackbar open={snackbar} setOpen={setSnackbar} message={success} />\r\n      <form action=\"\" method=\"post\" className=\"p-3\">\r\n        <TextField\r\n          name=\"name\"\r\n          label=\"Name\"\r\n          size=\"small\"\r\n          fullWidth\r\n          required\r\n          variant=\"outlined\"\r\n          value={accData.name}\r\n          placeholder=\"Full name\"\r\n          onChange={(e) => handleChange(e)}\r\n        />\r\n        {/* <TextField\r\n          name=\"code\"\r\n          label=\"code\"\r\n          className=\"mt-2\"\r\n          size=\"small\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          value={accData.code}\r\n          onChange={(e) => handleChange(e)}\r\n        /> */}\r\n        <FormLabel>Account Type</FormLabel>\r\n        <Select\r\n          fullWidth\r\n          name=\"acc_type\"\r\n          className=\"mt-2\"\r\n          value={accData.acc_type}\r\n          onChange={(e) => handleChange(e)}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          label=\"Type\"\r\n          native\r\n          defaultValue=\"\"\r\n          id=\"grouped-native-select\"\r\n          style={{ height: \"40px\" }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\">\r\n            Select\r\n          </option>\r\n          <optgroup label=\"Assets\">\r\n            <option value=\"asset_ca_cash\">Current Asset</option>\r\n            <option value=\"asset_ca_mkt_sec\">Marketable Securities</option>\r\n            <option value=\"asset_ca_recv\">Receivables</option>\r\n            <option value=\"asset_ca_inv\">Inventory</option>\r\n            <option value=\"asset_ca_uncoll\">Uncollectibles</option>\r\n            <option value=\"asset_ca_prepaid\">Prepaid</option>\r\n            <option value=\"asset_ca_other\">Other Liquid Assets</option>\r\n            <option value=\"asset_lti_notes\">Notes Receivable</option>\r\n            <option value=\"asset_lti_land\">Land</option>\r\n            <option value=\"asset_lti_sec\">Securities</option>\r\n            <option value=\"asset_ppe\">Property Plant &amp; Equipment</option>\r\n            <option value=\"asset_ia\">Intangible Assets</option>\r\n            <option value=\"asset_adjustment\">Other Assets</option>\r\n          </optgroup>\r\n\r\n          <optgroup label=\"Liabilities\">\r\n            <option value=\"lia_cl_acc_pay\">Accounts Payable</option>\r\n            <option value=\"lia_cl_wage_pay\">Wages Payable</option>\r\n            <option value=\"lia_cl_wage_pay\">Interest Payable</option>\r\n            <option value=\"lia_cl_st_notes_payable\">Notes Payable</option>\r\n            <option value=\"lia_cl_ltd_mat\">\r\n              Current Maturities of Long Tern Debt\r\n            </option>\r\n            <option value=\"lia_cl_def_rev\">Deferred Revenue</option>\r\n            <option value=\"lia_cl_other\">Other Liabilities</option>\r\n            <option value=\"lia_ltl_notes\">Notes Payable</option>\r\n            <option value=\"lia_ltl_bonds\">Bonds Payable</option>\r\n            <option value=\"lia_ltl_mortgage\">Mortgage Payable</option>\r\n          </optgroup>\r\n          <optgroup label=\"Equity\">\r\n            <option value=\"eq_capital\">Capital</option>\r\n            <option value=\"eq_stock_c\">Common Stock</option>\r\n            <option value=\"eq_stock_p\">Preferred Stock</option>\r\n            <option value=\"eq_adjustment\">Other Equity Adjustments</option>\r\n            <option value=\"in_sales\">Sales Income</option>\r\n            <option value=\"in_pass\">Passive Income</option>\r\n            <option value=\"in_other\">Other Income</option>\r\n            <option value=\"ex_cogs\">Cost of Goods Sold</option>\r\n            <option value=\"ex_op\">Operational Expense</option>\r\n            <option value=\"ex_interest\">Interest Expense</option>\r\n            <option value=\"ex_taxes\">Tax Expense</option>\r\n            <option value=\"ex_cap\">Capital Expense</option>\r\n            <option value=\"ex_other\">Other Expense</option>\r\n          </optgroup>\r\n        </Select>\r\n        <FormLabel>Balance Type</FormLabel>\r\n        <Select\r\n          fullWidth\r\n          className=\"mt-2\"\r\n          name=\"balance_type\"\r\n          style={{ height: \"40px\" }}\r\n          value={accData.balance_type}\r\n          onChange={(e) => handleChange(e)}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          label=\"Type\"\r\n          native\r\n          defaultValue=\"\"\r\n          id=\"grouped-native-select\"\r\n        >\r\n          <option value=\"\">Select</option>\r\n          <option value=\"CR\">Credit</option>\r\n          <option value=\"DR\">Debit</option>\r\n        </Select>\r\n        <FormLabel>Account Status</FormLabel>\r\n        <Select\r\n          fullWidth\r\n          name=\"active\"\r\n          className=\"mt-2\"\r\n          value={accData.active}\r\n          onChange={(e) => handleChange(e)}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          label=\"Type\"\r\n          native\r\n          defaultValue=\"\"\r\n          id=\"grouped-native-select\"\r\n          style={{ height: \"40px\" }}\r\n        >\r\n          <option value=\"\">Active</option>\r\n          <option value={0}>Yes</option>\r\n          <option value={1}>No</option>\r\n        </Select>\r\n        <FormLabel>Restriction</FormLabel>\r\n        <Select\r\n          fullWidth\r\n          name=\"locked\"\r\n          className=\"mt-2\"\r\n          value={accData.locked}\r\n          onChange={(e) => handleChange(e)}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          label=\"Lock\"\r\n          native\r\n          defaultValue=\"\"\r\n          style={{ height: \"40px\" }}\r\n        >\r\n          <option value=\"\">Locked</option>\r\n          <option value={1}>Yes</option>\r\n          <option value={0}>No</option>\r\n        </Select>\r\n        <FormControl className=\"mt-2\"\r\n          style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center'\r\n          }}\r\n        >\r\n          {Error && (\r\n            <Typography variant=\"caption\" color=\"error\">\r\n              {Error}\r\n            </Typography>\r\n          )}\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n            onClick={(e) => handle_Post(e)}\r\n            style={{ background: \"#2A3F54\", color: \"white\", }}\r\n          >\r\n            Create\r\n          </Button>\r\n        </FormControl>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountCreationForm;\r\n","import { Paper } from '@material-ui/core'\r\nimport React from 'react'\r\nimport AccountCreationForm from './form/AccountCreationForm'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst BillWidget = ({ open, setOpen, isWidget, setIswidget }) => {\r\n    return (\r\n        <div className='app__Widget'>\r\n            <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Bill List' \r\n            />\r\n            <section className='app__WidgetContainer'>\r\n                {/* <AccountCreationForm\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                /> */}\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BillWidget\r\n","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { selectToken, selectUser, selectVendors } from '../../appState/appSlice';\r\nimport { Button, IconButton, Select, TextField, Typography } from '@material-ui/core';\r\nimport { MDBBtn, MDBContainer, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader } from 'mdbreact'\r\nimport { Close } from '@material-ui/icons';\r\nimport axios from 'axios';\r\nimport AppBackdrop from './AppBackDrop';\r\nimport AppSnackbar from './AppSnackbar';\r\n\r\nconst AddBillCategories = ({  open, setOpen }) => {\r\n    const vendors = useSelector(selectVendors)\r\n    const [body, setBody] = useState()\r\n    const [Error, setError] = useState()\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const token = useSelector(selectToken)\r\n    const [success, setSuccess] = useState(false)\r\n    const [message, setMessage] = useState()\r\n    const billCategoryFormTemplate = {name:'',  vendor_FK: '',  createdBy_FK: '', createdAt: ''  };\r\n    const [billCategoryForm, setBillCategoryform] = useState([billCategoryFormTemplate])\r\n    const user = useSelector(selectUser)\r\n    const createdAt = new Date().toLocaleDateString()\r\n    // func\r\n    const handleChange = (e, index) =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n        const upbillCategoryform =  billCategoryForm.map((jef, i) => index == i ?\r\n        Object.assign(jef, {[name]: value, 'createdBy_FK': user.id, 'createdAt': createdAt  }): jef);\r\n        setBillCategoryform(upbillCategoryform)\r\n    }\r\n\r\n    const addBillCategoryFrom = () =>{\r\n        setBillCategoryform([\r\n            ...billCategoryForm,\r\n            billCategoryFormTemplate\r\n        ])\r\n    }\r\n\r\n    const handleRemoveform = (index) =>{\r\n        const filterbillCategoryform = [...billCategoryForm];\r\n        filterbillCategoryform.splice(index, 1);\r\n        \r\n        setBillCategoryform(filterbillCategoryform)\r\n    }\r\n\r\n    // handleSubmit\r\n    const handleSubmit =e=>{\r\n        e.preventDefault()\r\n        setIsOpen(true)\r\n        \r\n        axios.post('/bill/category', body, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setIsOpen(false)\r\n            setOpen(false)\r\n            setBillCategoryform([billCategoryFormTemplate])\r\n            setMessage(result.statusText)\r\n            setSuccess(true)\r\n\r\n        })\r\n        .catch(error =>{\r\n            setTimeout(() =>{\r\n                setError('')\r\n            }, 5000)\r\n            setIsOpen(false)\r\n           if(error) {\r\n              if(error.response.status ==500){\r\n                return  setError('Fields required')\r\n              }\r\n               return  setError(error.response.statusText)\r\n           }\r\n        })\r\n        \r\n    }\r\n\r\n       \r\n    useEffect(() =>{\r\n        \r\n        const fdata = billCategoryForm.map(x =>Object.values(x))\r\n        const findal =[]\r\n        // const data = fdata\r\n        for(let i =0; i< fdata.length; i++){\r\n            const element = fdata[i]\r\n            findal.push(element)\r\n        }\r\n        \r\n        return setBody(findal)\r\n    }, [billCategoryForm])\r\n   \r\n    return (\r\n        <div>\r\n            <AppBackdrop open={isOpen} setOpen={setIsOpen} />\r\n            <AppSnackbar open={success} \r\n                setOpen={setSuccess}\r\n                message={message}\r\n            />\r\n            <MDBModal isOpen={open} centered backdrop={false}>\r\n                <MDBModalHeader>Add Bill Category</MDBModalHeader>\r\n                <MDBModalBody>\r\n                    <table className='table table-hover'>\r\n                      <thead>\r\n                          <th>#</th>\r\n                          <th></th>\r\n                          <th>Name</th>\r\n                          <th>Vendor/Supplier</th>\r\n                          <th></th>\r\n                      </thead>\r\n                      <tbody>\r\n                          {\r\n                              billCategoryForm&&\r\n                              billCategoryForm.map((form, index) =>{\r\n                                  return(\r\n                                      <tr key={index}>\r\n                                        <td> {index+1} </td>\r\n                                        <td\r\n                                            onClick={() =>addBillCategoryFrom()}\r\n                                        >\r\n                                            <span className='fa fa-plus-circle' />\r\n                                        </td>\r\n                                        <td>\r\n                                            <TextField\r\n                                                size='small'\r\n                                                name='name'\r\n                                                label='Name'\r\n                                                required\r\n                                                value={form.name}\r\n                                                variant='outlined'\r\n                                                placeholder='Bill Name'\r\n                                                onChange={e =>handleChange(e, index)}\r\n                                            />\r\n                                        </td>\r\n                                        <td>\r\n                                        <Select\r\n                                            variant='outlined'\r\n                                            name='vendor_FK'\r\n                                            value={form.vendor_FK}\r\n                                            style={{height: '40px', width: '100%'}}\r\n                                            onChange={e =>handleChange(e, index)}\r\n                                        >\r\n                                            <option>Select</option>\r\n                                            <option value={0}>Basic</option>\r\n                                            {\r\n                                                vendors&&\r\n                                                vendors.map((vendor, i) =>{\r\n                                                    const {id, vendor_name} = vendor\r\n                                                    return <option key={i} value={id}> {vendor_name} </option>\r\n                                                })\r\n                                            }\r\n                                        </Select>\r\n                                        </td>\r\n                                        <td \r\n                                            onClick={() =>handleRemoveform(index)}\r\n                                        >\r\n                                            <span className='fa fa-trash' \r\n                                                style={{color: 'red'}}\r\n                                            />\r\n                                        </td>\r\n                                      </tr>\r\n                                  )\r\n                              })\r\n                          }\r\n                      </tbody>\r\n                  </table>\r\n                </MDBModalBody>\r\n                <MDBModalFooter>\r\n                    {\r\n                        Error&&\r\n                        <Typography \r\n                            className='mr-5'\r\n                            variant='h6' color='error'>\r\n                            {Error}\r\n                        </Typography>\r\n                    }\r\n                    <Button\r\n                        variant='contained'\r\n                        onClick={e =>handleSubmit(e)}\r\n                        style={{background: '#2A3F54', \r\n                        color: 'white', marginRight: '25px'}}\r\n                        disabled={Error}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <IconButton color='secondary'\r\n                        onClick={() =>setOpen(!open)}\r\n                    >\r\n                        <Close color='action' />\r\n                    </IconButton>\r\n                </MDBModalFooter>\r\n            </MDBModal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddBillCategories\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setBillCategories, setUser, setVendors} from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport BillFeed from '../components/BillFeed'\r\nimport BillWidget from '../components/BillWidget'\r\nimport AddBillCategories from '../components/global/AddBillCategories'\r\n\r\nconst BillScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n// func\r\n    const getVendors = () =>{\r\n        axios.get('/vendor', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(vendor =>{\r\n            dispatch(setVendors(vendor.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_BillCategories = () =>{\r\n        axios.get('/bill/category', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(category =>{\r\n            dispatch(setBillCategories(category.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Active_User = () =>{\r\n        axios.get('/auth/active', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        getVendors()\r\n        get_Active_User()\r\n        get_Session()\r\n    }, [])\r\n    useEffect(() =>{\r\n        return get_BillCategories()\r\n    }, [isOpen])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <AddBillCategories open={isOpen} setOpen={setIsOpen} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <BillFeed\r\n                setOpen={setOpen}\r\n                isOpen={isOpen}\r\n                setIsOpen={setIsOpen}\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <BillWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BillScreen\r\n","import { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// MUI Stuff\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst AccountList = ({ index, code, name, active, locked }) => {\r\n  return (\r\n    <Fragment key={index}>\r\n      <tr>\r\n        <td style={{ textAlign: \"center\" }}>\r\n          <Typography\r\n            style={{\r\n               \r\n                color: '#20c997'\r\n            }}\r\n          > {index+1} </Typography>\r\n        </td>\r\n        <td> {code} </td>\r\n        <td> {name} </td>\r\n        <td>\r\n          {active == 0 ? (\r\n            <span className=\"fa fa-check-circle fa-1x\"></span>\r\n          ) : (\r\n            <span></span>\r\n          )}\r\n        </td>\r\n        <td>\r\n          {locked == 1 ? (\r\n            <span className=\"fa fa-lock fa-1x\" style={{ color: \"red\" }}></span>\r\n          ) : (\r\n            <span\r\n              className=\"fa fa-unlock-alt fa-1x\"\r\n              style={{ color: \"#1ABB9C\" }}\r\n            ></span>\r\n          )}\r\n        </td>\r\n\r\n        <td\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {locked !== 1 ? (\r\n            <Link to={`/coa/${name}/${code}`} rel=\"noopener noreferrer\">\r\n              <Tooltip title={`View ${name} Register`}>\r\n                <IconButton size=\"small\">\r\n                  {\" \"}\r\n                  <span className=\"fa fa-eye fa-1x p-1\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Link>\r\n          ) : (\r\n            <div>\r\n              <Tooltip title={`${name} is locked can not be view`}>\r\n                <IconButton size=\"small\">\r\n                  {\" \"}\r\n                  <span\r\n                    className=\"fa fa-eye fa-1x p-1\"\r\n                    style={{ color: \"red\" }}\r\n                  />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </div>\r\n          )}\r\n        </td>\r\n      </tr>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AccountList;\r\n","import { useSelector } from \"react-redux\";\r\nimport AppHeader from \"./global/AppHeader\";\r\n// MUI Stuff\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport \"./coaFeed.css\";\r\nimport { PlusOne } from \"@material-ui/icons\";\r\nimport {\r\n  selectAssetAccount,\r\n  selectEquityAccount,\r\n  selectLiabilityAccount,\r\n} from \"../appState/appSlice\";\r\nimport AccountList from \"./global/AccountList\";\r\nconst CoaFeed = ({ isWidget, setIswidget, searchWidget, setSearchWidget }) => {\r\n  const assets = useSelector(selectAssetAccount);\r\n  const equitys = useSelector(selectEquityAccount);\r\n  const liabilitys = useSelector(selectLiabilityAccount);\r\n  return (\r\n    <div className={`${isWidget ? \"isapp__Feed\" : \"app__Feed\"}`}>\r\n      <AppHeader\r\n        title=\"Chart Of Account\"\r\n        search\r\n        searchWidget={searchWidget}\r\n        setSearchWidget={setSearchWidget}\r\n      />\r\n\r\n      <div\r\n        style={{ overflow: \"auto\" }}\r\n        className=\"row align-items-center justify-content-center d-flex m-1\"\r\n      >\r\n        <div className=\"col-lg-12 col-md-12\">\r\n          {/* table */}\r\n          <h3>\r\n            Asset Accounts{\" \"}\r\n            <span>\r\n              <Tooltip title=\"Add New Account\">\r\n                <IconButton\r\n                  color=\"secondary\"\r\n                  onClick={() => setIswidget(!isWidget)}\r\n                >\r\n                  <PlusOne style={{ color: \"#1ABB9C\" }} />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </span>\r\n          </h3>\r\n          <>\r\n            <Container>\r\n              <table className=\" table-hover\" style={{ width: \"100%\" }}>\r\n                <thead>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    #\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Code\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Account Name\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Active\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Lock\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Actions\r\n                  </th>\r\n                </thead>\r\n                <tbody>\r\n                  {assets &&\r\n                    assets.map((asset, index) => {\r\n                      return <AccountList index={index} {...asset} />;\r\n                    })}\r\n                </tbody>\r\n              </table>\r\n              {assets && !assets.length > 0 && (\r\n                <div className=\"alert alert-warning\">\r\n                  <h6>No Asset Accounts Availabe</h6>\r\n                </div>\r\n              )}\r\n            </Container>\r\n          </>\r\n          {/* liability */}\r\n          <h3>\r\n            Liability Accounts{\" \"}\r\n            <span>\r\n              <Tooltip title=\"Add New Account\">\r\n                <IconButton\r\n                  color=\"secondary\"\r\n                  onClick={() => setIswidget(!isWidget)}\r\n                >\r\n                  <PlusOne style={{ color: \"#1ABB9C\" }} />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </span>\r\n          </h3>\r\n          <>\r\n            <Container>\r\n              <table className=\" table-hover\" style={{ width: \"100%\" }}>\r\n                <thead>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    #\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Code\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Account Name\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Active\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Lock\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Actions\r\n                  </th>\r\n                </thead>\r\n                <tbody>\r\n                  {liabilitys &&\r\n                    liabilitys.map((liability, index) => {\r\n                      return <AccountList index={index} {...liability} />;\r\n                    })}\r\n                </tbody>\r\n              </table>\r\n              {liabilitys && !liabilitys.length > 0 && (\r\n                <div className=\"alert alert-warning\">\r\n                  <h6>No Liability Accounts Availabe</h6>\r\n                </div>\r\n              )}\r\n            </Container>\r\n          </>\r\n          {/* Equity */}\r\n          <h3>\r\n            Expense Accounts{\" \"}\r\n            <span>\r\n              <Tooltip title=\"Add New Account\">\r\n                <IconButton\r\n                  color=\"secondary\"\r\n                  onClick={() => setIswidget(!isWidget)}\r\n                >\r\n                  <PlusOne style={{ color: \"#1ABB9C\" }} />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </span>\r\n          </h3>\r\n          <>\r\n            <Container>\r\n              <table className=\" table-hover\" style={{ width: \"100%\" }}>\r\n                <thead>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    #\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Code\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Account Name\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Active\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Lock\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Actions\r\n                  </th>\r\n                </thead>\r\n                <tbody>\r\n                  {equitys &&\r\n                    equitys.map((equity, index) => {\r\n                      return <AccountList index={index} {...equity} />;\r\n                    })}\r\n                </tbody>\r\n              </table>\r\n              {equitys && !equitys.length > 0 && (\r\n                <div className=\"alert alert-warning\">\r\n                  <h6>No Liability Accounts Availabe</h6>\r\n                </div>\r\n              )}\r\n            </Container>\r\n          </>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CoaFeed;\r\n","import Search from \"@material-ui/icons/Search\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectToken } from \"../appState/appSlice\";\r\nimport AccountList from \"./global/AccountList\";\r\n\r\nconst SearchWidget = () => {\r\n  const inpuRef = useRef();\r\n  const [search, setSearch] = useState();\r\n  const [result, setResult] = useState([]);\r\n  const token = useSelector(selectToken);\r\n  const handleSearching = () => {\r\n    if (search && search.trim().length > 0)\r\n      return axios\r\n        .get(`account/search/${search}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then((result) => {\r\n          setResult(result.data);\r\n        })\r\n        .catch((err) => {\r\n          return err;\r\n        });\r\n  };\r\n\r\n  useEffect(() => {\r\n    inpuRef.current.focus();\r\n  }, []);\r\n  useEffect(() => {\r\n    handleSearching();\r\n  }, [search]);\r\n  return (\r\n    <Fragment>\r\n      <section style={styles.section}>\r\n        <div \r\n          id='searchBox'\r\n          style={styles.inputWrapper} className=\"mt-3\"\r\n          >\r\n          <Search style={styles.icon} />\r\n          <input\r\n            ref={inpuRef}\r\n            type=\"text\"\r\n            name=\"search\"\r\n            id=\"search\"\r\n            autoComplete={false}\r\n            style={styles.input}\r\n            placeholder=\"Search By (Name Or Code)...\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n          />\r\n        </div>\r\n      </section>\r\n      <div style={styles.resultContainer}>\r\n        <table className=\"table-hover\" style={{ width: \"100%\" }}>\r\n          <tbody>\r\n            {result.length > 0 &&\r\n              result.map((resul, index) => {\r\n                if (resul[\"locked\"] !== 1)\r\n                  return <AccountList key={index} index={index} {...resul} />;\r\n              })}\r\n          </tbody>\r\n        </table>\r\n\r\n        {!result.length > 0 && (\r\n          <h6 style={{ alignSelf: \"center\" }}>Search for an account</h6>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  section: {\r\n    margin: 10,\r\n  },\r\n  error: {\r\n    width: \"100%\",\r\n  },\r\n  inputWrapper: {\r\n    margin: 5,\r\n    padding: 6,\r\n    display: \"flex\",\r\n    borderRadius: \"50px\",\r\n    boxSizing: 'border-box',\r\n    backgroundColor: 'white',\r\n    boxShadow: '0px 2px 2px gray'\r\n  },\r\n  icon: {\r\n    color: \"#EDEDED\",\r\n  },\r\n\r\n  input: {\r\n    flex: 1,\r\n    border: \"none\",\r\n    outline: \"none\",\r\n  },\r\n  resultContainer: {\r\n    flex: 1,\r\n    padding: 5,\r\n    height: \"82vh\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    position: \"sticky\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n};\r\n\r\nexport default SearchWidget;\r\n","import { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport AccountCreationForm from \"./form/AccountCreationForm\";\r\nimport AppWidgetHeader from \"./global/AppWidgetHeader\";\r\nimport SearchWidget from \"./SearchWidget\";\r\n\r\nconst CoaWidget = ({\r\n  open,\r\n  add,\r\n  setOpen,\r\n  isWidget,\r\n  setIswidget,\r\n  searchWidget,\r\n  setSearchWidget,\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {add === false ? (\r\n        <div className=\"app__Widget\">\r\n          <AppWidgetHeader\r\n            isWidget={searchWidget}\r\n            setIswidget={setSearchWidget}\r\n            title=\"Search Account\"\r\n          />\r\n          <section className=\"app__WidgetContainer\">\r\n            <SearchWidget />\r\n          </section>\r\n        </div>\r\n      ) : (\r\n        <div className=\"app__Widget\">\r\n          <AppWidgetHeader\r\n            isWidget={isWidget}\r\n            setIswidget={setIswidget}\r\n            title=\"Create Account\"\r\n          />\r\n          <section className=\"app__WidgetContainer\">\r\n            <AccountCreationForm open={open} setOpen={setOpen} />\r\n          </section>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CoaWidget;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport {\r\n  selectToken,\r\n  setAssetAccount,\r\n  setEquityAccount,\r\n  setLiabilityAccount,\r\n  setUser,\r\n} from \"../appState/appSlice\";\r\nimport CoaFeed from \"../components/CoaFeed\";\r\nimport CoaWidget from \"../components/CoaWidget\";\r\nimport AppBackdrop from \"../components/global/AppBackDrop\";\r\nimport SideBarMenu from \"../components/global/SideBarMenu\";\r\n\r\nconst CoaScreen = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const token = useSelector(selectToken);\r\n  const [open, setOpen] = useState(false);\r\n  const [isWidget, setIswidget] = useState(false);\r\n  const [add, setAdd] = useState(false);\r\n  const [searchWidget, setSearchWidget] = useState(false);\r\n\r\n  // func\r\n  const getAsset = () => {\r\n    axios\r\n      .get(\"/account/asset\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((asset) => {\r\n        dispatch(setAssetAccount(asset.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n  const getLiability = () => {\r\n    axios\r\n      .get(\"/account/liability\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((liability) => {\r\n        dispatch(setLiabilityAccount(liability.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n  const getEquity = () => {\r\n    axios\r\n      .get(\"/account/equity\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((equity) => {\r\n        dispatch(setEquityAccount(equity.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  const get_Session = () => {\r\n    axios\r\n      .get(`/auth/active`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((user) => {\r\n        dispatch(setUser(user.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    if (isWidget === true && searchWidget === false)\r\n      return setSearchWidget(!searchWidget), setAdd(false);\r\n    setSearchWidget(!searchWidget);\r\n    setAdd(false);\r\n    setIswidget(!isWidget);\r\n  };\r\n\r\n  const handleAddd = () => {\r\n    if (isWidget === true && add === false)\r\n      return setAdd(!add), setSearchWidget(false);\r\n\r\n    setAdd(!add);\r\n    setIswidget(!isWidget);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAsset();\r\n    getEquity();\r\n    getLiability();\r\n    get_Session();\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      return history.push(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <AppBackdrop open={open} />\r\n      <SideBarMenu />\r\n      {/* feed */}\r\n      <CoaFeed\r\n        isWidget={isWidget}\r\n        setIswidget={handleAddd}\r\n        searchWidget={searchWidget}\r\n        setSearchWidget={handleSearch}\r\n      />\r\n      {/* widget */}\r\n      {isWidget && (\r\n        <CoaWidget\r\n          open={open}\r\n          add={add}\r\n          setOpen={setOpen}\r\n          isWidget={isWidget}\r\n          setIswidget={handleAddd}\r\n          searchWidget={searchWidget}\r\n          setSearchWidget={handleSearch}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CoaScreen;\r\n","import IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport PlusOne from \"@material-ui/icons/PlusOne\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectCustomers } from \"../appState/appSlice\";\r\nimport AppHeader from \"./global/AppHeader\";\r\nimport CustomerList from \"./global/CustomerList\";\r\n\r\nconst CustomerFeed = ({\r\n  open,\r\n  setOpen,\r\n  isWidget,\r\n  setIswidget,\r\n  setMandate,\r\n  searchWidget,\r\n  setSearchWidget,\r\n}) => {\r\n  const customers = useSelector(selectCustomers);\r\n\r\n  return (\r\n    <div className={`${isWidget ? \"isapp__Feed\" : \"app__Feed\"}`}>\r\n      <AppHeader\r\n        title=\"Customers\"\r\n        search\r\n        searchWidget={searchWidget}\r\n        setSearchWidget={setSearchWidget}\r\n      />\r\n      <div className=\"row align-items-center justify-content-center d-flex m-1\">\r\n        <div className=\"col-lg-12 col-md-12\">\r\n          {/* table */}\r\n          <h3>\r\n            Customer List{\" \"}\r\n            <span>\r\n              <Tooltip title=\"Add Customer\">\r\n                <IconButton\r\n                  color=\"secondary\"\r\n                  onClick={() => setIswidget(!isWidget)}\r\n                >\r\n                  <PlusOne style={{ color: \"#1ABB9C\" }} />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </span>\r\n          </h3>\r\n          <Paper style={{ backgroundColor: \"inherit\" }}>\r\n            <Container className=\"p-3\">\r\n              <table className=\"table-hover\" style={{ width: \"100%\" }}>\r\n                <thead style={{ position: \"sticky\", top: \"60px\", zIndex: 222 }}>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    #\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Name\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Contact\r\n                  </th>\r\n                  {!isWidget && (\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Email\r\n                  </th>\r\n                  )}\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Code\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Photo\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Active\r\n                  </th>\r\n                  {!isWidget && (\r\n                  <th\r\n                    style={{\r\n                      border: \"1px solid #F7F7F7F7\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Lock\r\n                  </th>\r\n                  )}\r\n                  {!isWidget && (\r\n                    <th\r\n                      style={{\r\n                        border: \"1px solid #F7F7F7F7\",\r\n                        textAlign: \"center\",\r\n                      }}\r\n                    >\r\n                      Actions\r\n                    </th>\r\n                  )}\r\n                </thead>\r\n                <tbody>\r\n                  {customers &&\r\n                    customers\r\n\t\t\t\t\t\t\r\n                    .map((customer, index) => {\r\n                      return (\r\n\r\n                        <CustomerList\r\n                          key={index}\r\n                          index={index}\r\n                          {...customer}\r\n                          isWidget={isWidget}\r\n                          open={open}\r\n                          setOpen={setOpen}\r\n                          setMandate={setMandate}\r\n                        />\r\n                      );\r\n                    })}\r\n                </tbody>\r\n              </table>\r\n              {customers && !customers.length > 0 && (\r\n                <div className=\"alert alert-warning\">\r\n                  <h6>No Customer Availabe</h6>\r\n                </div>\r\n              )}\r\n            </Container>\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerFeed;\r\n","import Search from \"@material-ui/icons/Search\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectToken } from \"../appState/appSlice\";\r\nimport CustomerList from \"./global/CustomerList\";\r\n\r\nconst CusSearchWidget = ({ setMandate }) => {\r\n  const inpuRef = useRef();\r\n  const [search, setSearch] = useState();\r\n  const [result, setResult] = useState([]);\r\n  const token = useSelector(selectToken);\r\n  const handleSearching = () => {\r\n    if (search && search.trim().length > 0)\r\n      return axios\r\n        .get(`customer/search/${search}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then((result) => {\r\n          setResult(result.data);\r\n        })\r\n        .catch((err) => {\r\n          return err;\r\n        });\r\n  };\r\n\r\n  useEffect(() => {\r\n    inpuRef.current.focus();\r\n  }, []);\r\n  useEffect(() => {\r\n    handleSearching();\r\n  }, [search]);\r\n  return (\r\n    <Fragment>\r\n      <section style={styles.section}>\r\n        <div style={styles.inputWrapper} className=\"mt-3\">\r\n          <Search style={styles.icon} />\r\n          <input\r\n            ref={inpuRef}\r\n            type=\"text\"\r\n            name=\"search\"\r\n            id=\"search\"\r\n            autoComplete={false}\r\n            style={styles.input}\r\n            placeholder=\"Search...\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n          />\r\n        </div>\r\n      </section>\r\n      <div style={styles.resultContainer}>\r\n        <table className=\"table-hover\" style={{ width: \"100%\" }}>\r\n          <tbody>\r\n            {result !== [] &&\r\n              result.map((resul, index) => {\r\n                return (\r\n                  <CustomerList\r\n                    setMandate={setMandate}\r\n                    search\r\n                    key={index}\r\n                    index={index}\r\n                    {...resul}\r\n                  />\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n\r\n        {!result.length > 0 && (\r\n          <h6 style={{ alignSelf: \"center\" }}>Search for an account</h6>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  section: {\r\n    margin: 10,\r\n  },\r\n  error: {\r\n    width: \"100%\",\r\n  },\r\n  inputWrapper: {\r\n    margin: 5,\r\n    padding: 6,\r\n    display: \"flex\",\r\n    background: \"white\",\r\n    borderRadius: \"50px\",\r\n    boxSizing: \"border-box\",\r\n    boxShadow: \"0px 2px 3px 0px #ccc\",\r\n  },\r\n  icon: {\r\n    color: \"#EDEDED\",\r\n  },\r\n\r\n  input: {\r\n    flex: 1,\r\n    border: \"none\",\r\n    outline: \"none\",\r\n  },\r\n  resultContainer: {\r\n    flex: 1,\r\n    padding: 5,\r\n    height: \"82vh\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    position: \"sticky\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    backgroundColor: \"inherit\",\r\n  },\r\n};\r\n\r\nexport default CusSearchWidget;\r\n","import {\r\n  Button,\r\n  FormGroup,\r\n  FormLabel,\r\n  Grid,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAllStaffs, selectToken } from \"../../appState/appSlice\";\r\n\r\nconst CustomerCreationForm = ({ open, setOpen }) => {\r\n  const token = useSelector(selectToken);\r\n  const [Error, setError] = useState();\r\n  const [Exist, setExist] = useState();\r\n  const RMS = useSelector(selectAllStaffs);\r\n  const [cusData, setCusdata] = useState({\r\n    rm: \"\",\r\n    tx_date: \"\",\r\n    country: \"\",\r\n    phone_no: \"\",\r\n    address_1: \"\",\r\n    occupation: \"\",\r\n    place_work: \"\",\r\n    next_kin_name: \"\",\r\n    customer_sex: \"\",\r\n    customer_name: \"\",\r\n    customer_email: \"\",\r\n    customer_state: \"\",\r\n    postal_address: \"\",\r\n    customer_marital: \"\",\r\n    customer_address: \"\",\r\n    next_kin_addrss: \"\",\r\n    next_kin_relate: \"\",\r\n    business_employer_name: \"\",\r\n  });\r\n  // func\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setCusdata({\r\n      ...cusData,\r\n      [name]: value,\r\n    });\r\n  };\r\n  const isEmpty = () => {\r\n    let data = cusData;\r\n    let error = {};\r\n    Object.keys(data).forEach((v, i) => {\r\n      return !data[v].toString().length > 0\r\n        ? (error[v] = \"Is required\")\r\n        : (error = error);\r\n    });\r\n\r\n    // setError(error), Object.keys(error).length > 0 ? true : false;\r\n  };\r\n\r\n  const handle_Create_Customer = async (e) => {\r\n    await isEmpty();\r\n    e.preventDefault();\r\n\r\n    if (isEmpty()) return;\r\n    setOpen(true);\r\n    axios\r\n      .post(\"/customer\", cusData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        setOpen(false);\r\n        setCusdata({\r\n          rm: \"\",\r\n          tx_date: \"\",\r\n          country: \"\",\r\n          phone_no: \"\",\r\n          address_1: \"\",\r\n          occupation: \"\",\r\n          place_work: \"\",\r\n          next_kin_name: \"\",\r\n          customer_sex: \"\",\r\n          customer_name: \"\",\r\n          customer_email: \"\",\r\n          customer_state: \"\",\r\n          postal_address: \"\",\r\n          customer_marital: \"\",\r\n          customer_address: \"\",\r\n          next_kin_addrss: \"\",\r\n          next_kin_relate: \"\",\r\n          business_employer_name: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setOpen(false);\r\n        if (error.response.status === 400)\r\n          setTimeout(() => {\r\n            setExist(\"\");\r\n          }, 5000);\r\n        return setExist(\r\n          error.response.data.customer_email && error.response.data.phone_no\r\n            ? `Customer exist`\r\n            : `${error.response.statusText} exist`\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <form className=\"mt-3 pl-2 pr-2\" autoCorrect autoComplete={false}>\r\n        <Grid container spacing={1}>\r\n          <Grid item lg={12} md={12}>\r\n            <FormGroup>\r\n              <TextField\r\n                label=\"Date\"\r\n                size=\"small\"\r\n                required\r\n                variant=\"outlined\"\r\n                name=\"tx_date\"\r\n                type=\"date\"\r\n                placeholder=\"Date Created\"\r\n                value={cusData.tx_date}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.tx_date}\r\n                error={Error && Error.tx_date ? true : false}\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={12} md={12}>\r\n            <FormGroup>\r\n              <TextField\r\n                label=\"Name\"\r\n                size=\"small\"\r\n                required\r\n                variant=\"outlined\"\r\n                name=\"customer_name\"\r\n                placeholder=\"Full Name\"\r\n                value={cusData.customer_name}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.customer_name}\r\n                error={Error && Error.customer_name ? true : false}\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={6} md={6}>\r\n            <FormGroup>\r\n              <TextField\r\n                label=\"Contact\"\r\n                size=\"small\"\r\n                required\r\n                variant=\"outlined\"\r\n                name=\"phone_no\"\r\n                placeholder=\"Phone Number\"\r\n                value={cusData.phone_no}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.phone_no}\r\n                error={Error && Error.phone_no ? true : false}\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={6} md={6}>\r\n            <FormGroup>\r\n              <TextField\r\n                label=\"Eamil\"\r\n                size=\"small\"\r\n                required\r\n                variant=\"outlined\"\r\n                name=\"customer_email\"\r\n                placeholder=\"Email Address\"\r\n                value={cusData.customer_email}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.customer_email}\r\n                error={Error && Error.customer_email ? true : false}\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={12} md={12}>\r\n            <FormGroup>\r\n              <TextField\r\n                required\r\n                multiline\r\n                label=\"Address\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"address_1\"\r\n                placeholder=\"Residential Address\"\r\n                value={cusData.address_1}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.address_1}\r\n                error={Error && Error.address_1 ? true : false}\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={6} md={6}>\r\n            <FormLabel>Gender</FormLabel>\r\n            <FormGroup>\r\n              <Select\r\n                style={{ height: \"40px\" }}\r\n                label=\"Sex\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"customer_sex\"\r\n                value={cusData.customer_sex}\r\n                onChange={(e) => handleChange(e)}\r\n                error={Error && Error.customer_sex}\r\n              >\r\n                <option value>Select</option>\r\n                <option value=\"Male\">Male</option>\r\n                <option value=\"Female\">Female</option>\r\n              </Select>\r\n              {Error && Error.customer_sex && (\r\n                <small\r\n                  style={{ color: \"red\", fontSize: \"13px\", marginLeft: 15 }}\r\n                >\r\n                  {Error.customer_sex}\r\n                </small>\r\n              )}\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={6} md={6}>\r\n            <FormLabel>Marital Status</FormLabel>\r\n            <FormGroup>\r\n              <Select\r\n                style={{ height: \"40px\" }}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"customer_marital\"\r\n                value={cusData.customer_marital}\r\n                onChange={(e) => handleChange(e)}\r\n                error={Error && Error.customer_marital ? true : false}\r\n              >\r\n                <option value>Select</option>\r\n                <option value=\"Single\">Single</option>\r\n                <option value=\"Married\">Married</option>\r\n                <option value=\"Widow\">Widow</option>\r\n                <option value=\"Divorce\">Divorce</option>\r\n              </Select>\r\n              {Error && Error.customer_marital && (\r\n                <small\r\n                  style={{ color: \"red\", fontSize: \"13px\", marginLeft: 15 }}\r\n                >\r\n                  {Error.customer_marital}\r\n                </small>\r\n              )}\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={6} md={6}>\r\n            <FormLabel>Nationality</FormLabel>\r\n            <FormGroup>\r\n              <TextField\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"country\"\r\n                placeholder=\"Country\"\r\n                value={cusData.country}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.country}\r\n                error={Error && Error.country ? true : false}\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={6} md={6}>\r\n            <FormLabel>State of origin?</FormLabel>\r\n            <FormGroup>\r\n              <Select\r\n                style={{ height: \"40px\" }}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"customer_state\"\r\n                value={cusData.customer_state}\r\n                onChange={(e) => handleChange(e)}\r\n                error={Error && Error.customer_state ? true : false}\r\n              >\r\n                <option value=\"Abia\">Abia</option>\r\n                <option value=\"Adamawa\">Adamawa</option>\r\n                <option value=\"Akwa Ibom\">Akwa Ibom</option>\r\n                <option value=\"Anambra\">Anambra</option>\r\n                <option value=\"Bauchi\">Bauchi</option>\r\n                <option value=\"Bayelsa\">Bayelsa</option>\r\n                <option value=\"Benue\">Benue</option>\r\n                <option value=\"Borno\">Borno</option>\r\n                <option value=\"Cross Rive\">Cross River</option>\r\n                <option value=\"Delta\">Delta</option>\r\n                <option value=\"Ebonyi\">Ebonyi</option>\r\n                <option value=\"Edo\">Edo</option>\r\n                <option value=\"Ekiti\">Ekiti</option>\r\n                <option value=\"Enugu\">Enugu</option>\r\n                <option value=\"FCT\">Federal Capital Territory</option>\r\n                <option value=\"Gombe\">Gombe</option>\r\n                <option value=\"Imo\">Imo</option>\r\n                <option value=\"Jigawa\">Jigawa</option>\r\n                <option value=\"Kaduna\">Kaduna</option>\r\n                <option value=\"Kano\">Kano</option>\r\n                <option value=\"Katsina\">Katsina</option>\r\n                <option value=\"Kebbi\">Kebbi</option>\r\n                <option value=\"Kogi\">Kogi</option>\r\n                <option value=\"Kwara\">Kwara</option>\r\n                <option value=\"Lagos\">Lagos</option>\r\n                <option value=\"Nasarawa\">Nasarawa</option>\r\n                <option value=\"Niger\">Niger</option>\r\n                <option value=\"Ogun\">Ogun</option>\r\n                <option value=\"Ondo\">Ondo</option>\r\n                <option value=\"Osun\">Osun</option>\r\n                <option value=\"Oyo\">Oyo</option>\r\n                <option value=\"Plateau\">Plateau</option>\r\n                <option value=\"Rivers\">Rivers</option>\r\n                <option value=\"Sokoto\">Sokoto</option>\r\n                <option value=\"Taraba\">Taraba</option>\r\n                <option value=\"Yobe\">Yobe</option>\r\n                <option value=\"Zamfara\">Zamfara</option>\r\n              </Select>\r\n              {Error && Error.customer_state && (\r\n                <small\r\n                  style={{ color: \"red\", fontSize: \"13px\", marginLeft: 15 }}\r\n                >\r\n                  {Error.customer_state}{\" \"}\r\n                </small>\r\n              )}\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={12} md={12}>\r\n            <FormGroup>\r\n              <TextField\r\n                multiline\r\n                label=\"Home Address\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"customer_address\"\r\n                value={cusData.customer_address}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.customer_address}\r\n                error={Error && Error.customer_address ? true : false}\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={12} md={12}>\r\n            <FormGroup>\r\n              <TextField\r\n                multiline\r\n                label=\"Postal Address\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"postal_address\"\r\n                value={cusData.postal_address}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.postal_address}\r\n                error={Error && Error.postal_address ? true : false}\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={6} md={6}>\r\n            <FormGroup>\r\n              <TextField\r\n                label=\"Occupation\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"occupation\"\r\n                value={cusData.occupation}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.occupation}\r\n                error={Error && Error.occupation ? true : false}\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={6} md={6}>\r\n            <FormGroup>\r\n              <TextField\r\n                label=\"Place of work\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"place_work\"\r\n                value={cusData.place_work}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.place_work}\r\n                error={Error && Error.place_work ? true : false}\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={12} md={12}>\r\n            <FormGroup>\r\n              <TextField\r\n                multiline\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"business_employer_name\"\r\n                label={`Business/Employer's Name`}\r\n                value={cusData.business_employer_name}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.business_employer_name}\r\n                error={Error && Error.business_employer_name ? true : false}\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={12} md={12}>\r\n            <FormLabel>Relationship Mannger (RM)</FormLabel>\r\n            <FormGroup>\r\n              <Select\r\n                style={{ height: \"40px\" }}\r\n                label=\"RM\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"rm\"\r\n                value={cusData.rm}\r\n                onChange={(e) => handleChange(e)}\r\n                error={Error && Error.rm ? true : false}\r\n              >\r\n                {RMS &&\r\n                  RMS.map((rm, index) => {\r\n                    const { id, first_name, last_name } = rm;\r\n\r\n                    return (\r\n                      <option key={index} value={id}>\r\n                        {first_name + \" \" + last_name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </Select>\r\n              {Error && Error.rm && (\r\n                <small\r\n                  style={{ color: \"red\", fontSize: \"13px\", marginLeft: 15 }}\r\n                >\r\n                  {Error.rm}\r\n                </small>\r\n              )}\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={12} md={12}>\r\n            <Typography variant=\"h6\">Next of Kin Details</Typography>\r\n          </Grid>\r\n          <Grid item lg={6} md={6}>\r\n            <FormLabel>Name</FormLabel>\r\n            <FormGroup>\r\n              <TextField\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"next_kin_name\"\r\n                value={cusData.next_kin_name}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.next_kin_name}\r\n                error={Error && Error.next_kin_name ? true : false}\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={6} md={6}>\r\n            <FormLabel>Relationship</FormLabel>\r\n            <FormGroup>\r\n              <Select\r\n                style={{ height: \"40px\" }}\r\n                label=\"Relationship\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"next_kin_relate\"\r\n                value={cusData.next_kin_relate}\r\n                onChange={(e) => handleChange(e)}\r\n                error={Error && Error.next_kin_relate ? true : false}\r\n              >\r\n                <option value>Related ?</option>\r\n                <option value=\"Son\">Son</option>\r\n                <option value=\"Sister\">Sister</option>\r\n                <option value=\"Brother\">Brother</option>\r\n                <option value=\"Aunt\">Aunt</option>\r\n                <option value=\"Uncle\">Uncle</option>\r\n                <option value=\"Wife\">Wife</option>\r\n                <option value=\"Husband\">Husband</option>\r\n                <option value=\"Daughter\">Daughter</option>\r\n                <option value=\"Father\">Father</option>\r\n                <option value=\"Mother\">Mother</option>\r\n              </Select>\r\n              {Error && (\r\n                <small\r\n                  style={{ color: \"red\", fontSize: \"13px\", marginLeft: 15 }}\r\n                >\r\n                  {Error.next_kin_relate}\r\n                </small>\r\n              )}\r\n            </FormGroup>\r\n          </Grid>\r\n          \r\n          <Grid item lg={12} md={12}>\r\n            <FormGroup>\r\n              <TextField\r\n                multiline\r\n                label=\"Address\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"next_kin_addrss\"\r\n                value={cusData.next_kin_addrss}\r\n                onChange={(e) => handleChange(e)}\r\n                error={Error && Error.next_kin_addrss ? true : false}\r\n                helperText={Error && Error.next_kin_addrss}\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item lg={12} md={12}>\r\n            {Exist && Exist && <Typography color=\"error\">{Exist}</Typography>}\r\n            <Button\r\n              className=\"mb-4\"\r\n              onClick={(e) => handle_Create_Customer(e)}\r\n              color=\"default\"\r\n              variant=\"contained\"\r\n              style={{ color: \"white\", background: \"#2A3F54\", width: \"100%\" }}\r\n            >\r\n              Create\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CustomerCreationForm;\r\n","import React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport CusSearchWidget from \"./CusSearchWidget\";\r\nimport CustomerCreationForm from \"./form/CustomerCreationForm\";\r\nimport AppWidgetHeader from \"./global/AppWidgetHeader\";\r\n\r\nconst CustomerWidget = ({\r\n  open,\r\n  add,\r\n  setOpen,\r\n  mandate,\r\n  setMandate,\r\n  isWidget,\r\n  setIswidget,\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {add === false ? (\r\n        <div className=\"app__Widget\">\r\n          <AppWidgetHeader\r\n            isWidget={isWidget}\r\n            setIswidget={setIswidget}\r\n            title=\"Search Customer\"\r\n          />\r\n\r\n          <CusSearchWidget mandate={mandate} setMandate={setMandate} />\r\n        </div>\r\n      ) : (\r\n        <div className=\"app__Widget\">\r\n          <AppWidgetHeader\r\n            isWidget={isWidget}\r\n            setIswidget={setIswidget}\r\n            title=\"Create Customer\"\r\n          />\r\n\r\n          <CustomerCreationForm open={open} setOpen={setOpen} />\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CustomerWidget;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport {\r\n  selectToken,\r\n  setAllStaffs,\r\n  setCustomers,\r\n  setUser,\r\n} from \"../appState/appSlice\";\r\nimport CustomerFeed from \"../components/CustomerFeed\";\r\nimport CustomerWidget from \"../components/CustomerWidget\";\r\nimport AppBackdrop from \"../components/global/AppBackDrop\";\r\nimport SideBarMenu from \"../components/global/SideBarMenu\";\r\nimport Mandate from \"../components/Mandate\";\r\n\r\nconst CustomerScreen = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const token = useSelector(selectToken);\r\n  const [open, setOpen] = useState(false);\r\n  const [isWidget, setIswidget] = useState(false);\r\n  const [add, setAdd] = useState(false);\r\n  const [searchWidget, setSearchWidget] = useState(false);\r\n  const [mandate, setMandate] = useState(false);\r\n  // func\r\n  const getCustomers = () => {\r\n    axios\r\n      .get(\"/customer\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((asset) => {\r\n        dispatch(setCustomers(asset.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  const get_Session = () => {\r\n    axios\r\n      .get(`/auth/active`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((user) => {\r\n        dispatch(setUser(user.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n  const get_Staffs = () => {\r\n    axios\r\n      .get(`/auth`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((staffs) => {\r\n        dispatch(setAllStaffs(staffs.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    if (isWidget === true && searchWidget === false)\r\n      return setSearchWidget(!searchWidget), setAdd(false);\r\n    setSearchWidget(!searchWidget);\r\n    setAdd(false);\r\n    setIswidget(!isWidget);\r\n  };\r\n\r\n  const handleAddd = () => {\r\n    if (isWidget === true && add === false)\r\n      return setAdd(!add), setSearchWidget(false);\r\n\r\n    setAdd(!add);\r\n    setIswidget(!isWidget);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      return history.push(\"/\");\r\n    }\r\n    getCustomers();\r\n    get_Session();\r\n    get_Staffs();\r\n  }, [open]);\r\n  return (\r\n    <div className=\"app\">\r\n      <AppBackdrop open={open} />\r\n      <Mandate\r\n        open={open}\r\n        setOpen={setOpen}\r\n        mandate={mandate}\r\n        setMandate={setMandate}\r\n        url={\r\n          mandate &&\r\n          `/customer/avatar/${mandate.split(\" \")[0]}/${mandate.split(\" \")[1]}`\r\n        }\r\n      />\r\n      <SideBarMenu />\r\n      {/* feed */}\r\n      <CustomerFeed\r\n        open={open}\r\n        setOpen={setOpen}\r\n        isWidget={isWidget}\r\n        setIswidget={handleAddd}\r\n        setMandate={setMandate}\r\n        searchWidget={searchWidget}\r\n        setSearchWidget={handleSearch}\r\n      />\r\n      {/* widget */}\r\n      {isWidget && (\r\n        <CustomerWidget\r\n          open={open}\r\n          add={add}\r\n          setOpen={setOpen}\r\n          isWidget={isWidget}\r\n          setMandate={setMandate}\r\n          setIswidget={handleAddd}\r\n          searchWidget={searchWidget}\r\n          setSearchWidget={handleSearch}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerScreen;\r\n","import { Button, Container, FormLabel, Grid, IconButton, Paper, Select, TextField, Typography } from '@material-ui/core'\r\nimport { Delete, FileCopy, PlusOne, PlusOneOutlined, PlusOneRounded } from '@material-ui/icons'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectPropServices, selectCustomers, selectToken } from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\nimport AppSnackbar from './global/AppSnackbar'\r\n\r\nconst EstimateFeed = ({ setOpen, isWidget, setIswidget }) => {\r\n    const token = useSelector(selectToken)\r\n    const [success, setSuccess] = useState(false)\r\n    const [message, setMessage] = useState()\r\n    const pss = useSelector(selectPropServices)\r\n    const customers = useSelector(selectCustomers)\r\n    const estimateFormTemplate = {pro_service:'', description: '', qty: ''};\r\n    const [estimateForm, setEstimateform] = useState([estimateFormTemplate])\r\n    const [data, setData ] = useState({\r\n        customer_FK: '', \r\n        estimate_date: '',\r\n        exp_date: '', \r\n        total: '',\r\n        status: '',\r\n        VALUES: '',\r\n        uuid:''\r\n    })\r\n   \r\n    // func\r\n    const handleSetPostData = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n    } \r\n    // func\r\n    const addEstimateFrom = () =>{\r\n        setEstimateform([\r\n            ...estimateForm,\r\n            estimateFormTemplate\r\n        ])\r\n    }\r\n    const handleChange = (e, index) =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n\r\n        const updatedestimateform = estimateForm.map((jef, i) => index == i ?\r\n        Object.assign(jef, {[name]: value, 'estimate_ID': data.uuid, 'createdAt': data.estimate_date }): jef);\r\n        setEstimateform(updatedestimateform)\r\n\r\n        if(name =='qty') {\r\n            const updatedestimateform = estimateForm.map((jef, i) => index == i ?\r\n            Object.assign(jef, {'amount': value * jef.rate }): jef);\r\n        }\r\n      \r\n        if(name =='pro_service') {\r\n            const selectedPS = pss.filter(ps => ps.id ==parseInt(value))\r\n            // console.log(selectedPS[0].description)\r\n            const updatedestimateform = estimateForm.map((jef, i) => index == i ?\r\n            Object.assign(jef, {'description': selectedPS[0].description, 'rate': +selectedPS[0].sale_price }): jef);\r\n        }\r\n    }\r\n    const handleRemoveestimateform = (index) =>{\r\n        const filterestimateform = [...estimateForm];\r\n        filterestimateform.splice(index, 1);\r\n        \r\n        setEstimateform(filterestimateform)\r\n    }\r\n    // func\r\n    const calcuAmt = (data) =>{\r\n       \r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n// handle submit\r\n    const handleSubmit = e =>{\r\n        \r\n        e.preventDefault()\r\n        setOpen(true)\r\n        axios.post('/estimate',data, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setOpen(false)\r\n            setSuccess(true)\r\n            setMessage(result.data.message)\r\n            setData({\r\n                customer_FK: '', \r\n                estimate_date: '',\r\n                exp_date: '', \r\n                total: '',\r\n                status: '',\r\n                VALUES: '',\r\n                uuid:''\r\n            })\r\n          \r\n            setEstimateform([\r\n                estimateFormTemplate\r\n            ])\r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            if(error) {\r\n                return error.response.data\r\n            }\r\n        })\r\n        // console.log(data)\r\n    }\r\n   \r\n    useEffect(() =>{\r\n        \r\n        const fdata = estimateForm.map(x =>Object.values(x))\r\n        const findal =[]\r\n        // const data = fdata\r\n        for(let i =0; i< fdata.length; i++){\r\n            const element = fdata[i]\r\n            findal.push(element)\r\n        }\r\n        \r\n         setData({\r\n            ...data,\r\n            VALUES: findal\r\n        })\r\n    }, [estimateForm])\r\n   \r\n    useEffect(() =>{\r\n        setData({\r\n            ...data,\r\n            total: calcuAmt(estimateForm)\r\n        })\r\n    }, [data.VALUES])\r\n    useEffect(() =>{\r\n        setData({\r\n            ...data,\r\n            uuid:  new Date().getSeconds().toLocaleString() + new Date().getMinutes().toLocaleString()+new Date().getMilliseconds()\r\n        })\r\n    }, [success])\r\n    return (\r\n        <div className={`${isWidget? 'isapp__Feed': 'app__Feed'}`}> \r\n            <AppSnackbar open={success} setOpen={setSuccess} message={message} />\r\n           <AppHeader title='Estimate' />\r\n           <div className=\"row align-items-center justify-content-center d-flex m-1\" >\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                    {/* table */}\r\n                    <h3>Estimate Entry<span> \r\n                        <IconButton color='secondary'\r\n                            onClick={() =>setIswidget(!isWidget)}\r\n                        >\r\n                        <FileCopy style={{ color: '#1ABB9C'}} />\r\n                        </IconButton></span></h3> \r\n                        {/* to do make it a component */}\r\n                        <Grid container spacing={2} className='p-3'>\r\n                            <Grid item lg={3} md={3}>\r\n                                <FormLabel>Customer</FormLabel>\r\n                                <select\r\n                                    name='customer_FK'\r\n                                    value={data.customer_FK}\r\n                                    placeholder='Customer'\r\n                                    style={{border: 'none'}}\r\n                                    onChange={e =>handleSetPostData(e)}\r\n                                >\r\n                                    <option value=''></option>\r\n                                    {\r\n                                        customers&&\r\n                                        customers.map((cus, index) =>{\r\n                                            const{id, customer_name} = cus\r\n                                            return <option value={id} key={index} >{customer_name} {id}</option>\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </Grid>\r\n                            \r\n                            <Grid item lg={2} md={2}>\r\n                                <FormLabel style={{float: 'center'}}>Status</FormLabel><br />\r\n                                <select\r\n                                    name='status'\r\n                                    value={data.status}\r\n                                    style={{ background: 'inherit',\r\n                                         border: 'none'\r\n                                    }}\r\n                                    onChange={e =>handleSetPostData(e)}\r\n                                >\r\n                                    <option value=''></option>\r\n                                    <option value='1'>Received</option>\r\n                                    <option value='0'>Pending</option>\r\n                                </select>\r\n                            </Grid>\r\n\r\n                            <Grid item lg={7} md={7}\r\n                                style={{display: 'flex', \r\n                                justifyContent: 'flex-end', alignItems: 'flex-end', flexDirection: 'column'}}\r\n                            >\r\n                                <FormLabel>Amount</FormLabel>\r\n                                <Typography variant='h5'>\r\n                                    <s>N</s>: {calcuAmt(estimateForm)}\r\n                                </Typography>\r\n                            </Grid>\r\n                                \r\n                            <Grid item lg={3} md={3}>\r\n                                <FormLabel>Estimate Date</FormLabel>\r\n                                <input\r\n                                    name='estimate_date'\r\n                                    type='date'\r\n                                    value={data.estimate_date}\r\n                                    onChange={e =>handleSetPostData(e)}\r\n                                    style={{width: '100%', outline: 'none', border: 'none',\r\n                                    height: '30px'}}\r\n                                />\r\n                            </Grid>\r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Expiration Date</FormLabel>\r\n                                    <input\r\n                                        name='exp_date'\r\n                                        type='date'\r\n                                        value={data.exp_date}\r\n                                        onChange={e =>handleSetPostData(e)}\r\n                                        style={{width: '100%', outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                    />\r\n                                </Grid>\r\n                            \r\n                        </Grid>\r\n                        <h5>\r\n                            Details\r\n                        </h5>\r\n                    <Paper>\r\n                        <Container className='p-3'>\r\n                        <table className=\"table-small table-hover table-bordered\" style={{width: '100%'}}>\r\n                            <thead>\r\n                                \r\n                                <th>#</th>\r\n                                <th> {' '} </th>\r\n                                <th>Property/Service</th>\r\n                                <th>Description</th>\r\n                                <th>QTY</th>\r\n                                <th>Rate</th>\r\n                                <th>Amount</th>\r\n                                <th></th>\r\n                            </thead>\r\n                            <tbody id='je__Table'>\r\n                                {\r\n                                    estimateForm.map((jef, index) =>(\r\n                                        <tr>\r\n                                            <td>{index+1} </td>\r\n                                            <td\r\n                                                    onClick={() =>addEstimateFrom()}\r\n                                                >\r\n                                                     <span className='fa fa-plus-circle fa-1x'\r\n                                                        style={{color: '#20c997'}}\r\n                                                    />\r\n                                            </td>\r\n                                            <td>\r\n                                                <select\r\n                                                    name='pro_service'\r\n                                                    value={jef.pro_service}\r\n                                                    placeholder='Account'\r\n                                                    style={{border: 'none'}}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                >\r\n                                                    <option value=''></option>\r\n                                                    {\r\n                                                        pss&&\r\n                                                        pss.map((ps, index) =>{\r\n                                                            const { id, name, ps_type } = ps\r\n                                                            return <option value={id} key={index} >{`${name}: ${ps_type}`}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </select>\r\n                                            </td>\r\n                                            \r\n                                            <td>\r\n                                                <input\r\n                                                    name='description'\r\n                                                    placeholder='Description'\r\n                                                    value={jef.description}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                            <td>\r\n                                                <input\r\n                                                    name='qty'\r\n                                                    type='number'\r\n                                                    placeholder='Quantity'\r\n                                                    value={jef.qty}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                            <td>\r\n                                                <input\r\n                                                    name='rate'\r\n                                                    type='number'\r\n                                                    placeholder='Rate'\r\n                                                    value={jef.rate}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                            <td>\r\n                                                {/* <input\r\n                                                    name='amount'\r\n                                                    type='number'\r\n                                                    readOnly\r\n                                                    placeholder='Amount'\r\n                                                    value={}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                /> */}\r\n                                               { jef.rate&&jef.qty&&jef.rate*jef.qty }\r\n                                            </td>\r\n                     \r\n                                            <td\r\n                                                onClick={() =>handleRemoveestimateform(index)}\r\n                                            >\r\n                                                    <span className='fa fa-trash'\r\n                                                        style={{color: 'red'}}\r\n                                                    ></span>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            {/*                                 \r\n                                {\r\n                                   customers&&\r\n                                   customers.map((customer, index) =>{\r\n                                        return <CustomerList\r\n                                            index={index}\r\n                                            {...customer}\r\n                                            isWidget={isWidget}\r\n                                        />\r\n                                    })\r\n\r\n                                } */}\r\n                                    \r\n                            </tbody>\r\n                        </table>\r\n                        {/* {customers&& !customers.length>0&&\r\n                            <div className=\"alert alert-warning\">\r\n                            <h6>No Asset Accounts Availabe</h6>\r\n                            </div>\r\n                        } */}\r\n                        <Button\r\n                            className='m-3'\r\n                            variant='contained'\r\n                            onClick={e =>handleSubmit(e)}\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >submit</Button>\r\n                        </Container>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EstimateFeed\r\n","import { Paper } from '@material-ui/core'\r\nimport React from 'react'\r\nimport AccountCreationForm from './form/AccountCreationForm'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst EstimateWidget = ({ open, setOpen, isWidget, setIswidget }) => {\r\n    return (\r\n        <div className='app__Widget'>\r\n            <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Estimate List' \r\n            />\r\n            <section className='app__WidgetContainer'>\r\n                {/* <AccountCreationForm\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                /> */}\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EstimateWidget\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setCustomers, setPropServices, setUser } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport EstimateFeed from '../components/EstimateFeed'\r\nimport EstimateWidget from '../components/EstimateWidget'\r\n\r\nconst EstimateScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n\r\n    // func\r\n    const get_AllCustomers =() =>{\r\n        axios.get('/customer', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(customers =>{\r\n            dispatch(setCustomers(customers.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const getProp_Services = () =>{\r\n        axios.get('/prop_service', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(ps =>{\r\n            dispatch(setPropServices(ps.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        get_AllCustomers()\r\n        getProp_Services()\r\n        get_Session()\r\n    }, [])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <EstimateFeed\r\n                open={open}\r\n                setOpen={setOpen}\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <EstimateWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EstimateScreen\r\n","import axios from \"axios\";\r\n// MUI Stuff\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ToolTip from \"@material-ui/core/ToolTip\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// Icons\r\nimport FileCopy from \"@material-ui/icons/FileCopy\";\r\n\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectAccounts,\r\n  selectExpenseCategories,\r\n  selectExpenseHeadings,\r\n  selectToken,\r\n} from \"../appState/appSlice\";\r\nimport AppHeader from \"./global/AppHeader\";\r\nimport AppSnackbar from \"./global/AppSnackbar\";\r\n\r\nconst ExpenseFeed = ({ setOpen, isWidget, setIswidget }) => {\r\n  const token = useSelector(selectToken);\r\n  const accounts = useSelector(selectAccounts);\r\n  const [success, setSuccess] = useState(false);\r\n  const [message, setMessage] = useState();\r\n  const [add, setAdd] = useState(false);\r\n  const [isHead, setisHead] = useState(false);\r\n  const [error, setError] = useState();\r\n  const [head, setHead] = useState({\r\n    name: ''\r\n  })\r\n  const [body, setbody] = useState({\r\n    name: \"\",\r\n  });\r\n  const expenseHeadings = useSelector(selectExpenseHeadings)\r\n  console.log(expenseHeadings)\r\n  const expenseCategories = useSelector(selectExpenseCategories);\r\n  const expenseFormTemplate = { account: \"\", amount: \"\", description: \"\" };\r\n  const [expenseForm, setExpenseform] = useState([expenseFormTemplate]);\r\n  const [data, setData] = useState({\r\n    expense_date: \"\",\r\n    payee_account: \"\",\r\n    payment_account: \"\",\r\n    pay_method: \"\",\r\n    description: \"\",\r\n    tx_date: \"\",\r\n    VALUES: [],\r\n    head: '',\r\n    uuid: \"\",\r\n    total: \"\",\r\n  });\r\n  // func\r\n  const addExpenseFrom = () => {\r\n    setExpenseform([...expenseForm, expenseFormTemplate]);\r\n  };\r\n  const handleChange = (e, index) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    const updatedexpenseform = expenseForm.map((jef, i) =>\r\n      index == i ? Object.assign(jef, { [name]: value }) : jef\r\n    );\r\n    setExpenseform(updatedexpenseform);\r\n    if (name == \"amount\") {\r\n      const updatedexpenseform = expenseForm.map((jef, i) =>\r\n        index == i\r\n          ? Object.assign(jef, {\r\n              expense_ID: data.uuid,\r\n              createdAt: data.expense_date,\r\n            })\r\n          : jef\r\n      );\r\n      setData({\r\n        ...data,\r\n        tx_date: data.expense_date,\r\n      });\r\n    }\r\n    if (name == \"description\")\r\n      return setData({\r\n        ...data,\r\n        description: value,\r\n      });\r\n  };\r\n  const handleRemoveexpenseform = (index) => {\r\n    const filterexpenseform = [...expenseForm];\r\n    filterexpenseform.splice(index, 1);\r\n\r\n    setExpenseform(filterexpenseform);\r\n  };\r\n\r\n  const calcuAmt = (data) => {\r\n    const total = data && data.reduce((a, v) => +v.amount + a, 0);\r\n    return total;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fdata = expenseForm.map((x) => Object.values(x));\r\n    const findal = [];\r\n    // const data = fdata\r\n    for (let i = 0; i < fdata.length; i++) {\r\n      const element = fdata[i];\r\n      findal.push(element);\r\n    }\r\n\r\n    setData({\r\n      ...data,\r\n      VALUES: findal,\r\n    });\r\n  }, [expenseForm]);\r\n\r\n  useEffect(() => {\r\n    setData({\r\n      ...data,\r\n      total: calcuAmt(expenseForm),\r\n    });\r\n  }, [data.VALUES]);\r\n\r\n  // add expense category\r\n  const handle_Add_ExpCategory = (e) => {\r\n    setOpen(true);\r\n    axios\r\n      .post(\"/expense/category\", body, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        setOpen(false);\r\n        setMessage(result.data.message);\r\n        setSuccess(true);\r\n        setAdd(!add);\r\n      })\r\n      .catch((error) => {\r\n        setOpen(false);\r\n        if (error) {\r\n          return error.response.statusText;\r\n        }\r\n      });\r\n  };\r\n   // add expense head\r\n   const handle_Add_Exphead = (e) => {\r\n    setOpen(true);\r\n    axios\r\n      .post(\"/expense/heads\", head, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        setOpen(false);\r\n        setMessage(result.data.message);\r\n        setSuccess(true);\r\n        setisHead(!isHead);\r\n      })\r\n      .catch((error) => {\r\n        setOpen(false);\r\n        if (error) {\r\n          return error.response.statusText;\r\n        }\r\n      });\r\n  };\r\n  //   handle error / post\r\n  const isDisable = (Form) => {\r\n    const error =\r\n      Form &&\r\n      Form.map((exform) =>\r\n        !exform[\"account\"].length > 0 ||\r\n        !exform[\"amount\"].length > 0 ||\r\n        !exform[\"description\"].length > 0\r\n          ? true\r\n          : false\r\n      );\r\n\r\n    const filterError = error && error.includes(true) ? true : false;\r\n    // console.log(filterError);\r\n    return filterError;\r\n  };\r\n\r\n  const isEmpty = (input) => {\r\n    return data[input] === \"\" ? true : false;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const err = Object.keys(data).map((key) => isEmpty(key));\r\n    const isError = err.includes(true);\r\n    if (isError == true) return setError(\"All field are required\")\r\n      setError(\"\");\r\n      setOpen(true);\r\n      axios\r\n        .post(\"/expense\", data, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then((result) => {\r\n          setOpen(false);\r\n          setMessage(result.data.message);\r\n          setExpenseform([expenseFormTemplate]);\r\n          setSuccess(true);\r\n          setData({\r\n            expense_date: \"\",\r\n            payee_account: \"\",\r\n            payment_account: \"\",\r\n            pay_method: \"\",\r\n            description: \"\",\r\n            tx_date: \"\",\r\n            VALUES: [],\r\n            uuid: \"\",\r\n            head: '',\r\n            total: \"\",\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setOpen(false);\r\n          if (error) {\r\n            return error.response.statusText;\r\n          }\r\n        });\r\n    \r\n  };\r\n\r\n  useEffect(() => {\r\n    setData({\r\n      ...data,\r\n      uuid:\r\n        new Date().getSeconds().toLocaleString() +\r\n        new Date().getMinutes().toLocaleString() +\r\n        new Date().getMilliseconds(),\r\n    });\r\n  }, [success]);\r\n  return (\r\n    <div className={`${isWidget ? \"isapp__Feed\" : \"app__Feed\"}`}>\r\n      <AppSnackbar setOpen={setSuccess} open={success} message={message} />\r\n      <AppHeader title=\"Expense\" />\r\n      <div className=\"row align-items-center justify-content-center d-flex m-1\">\r\n        <div className=\"col-lg-12 col-md-12\">\r\n          {/* table */}\r\n          <h3>\r\n            Expense Entry\r\n            <span>\r\n              <ToolTip title=\"Expense List\">\r\n                <IconButton\r\n                  color=\"secondary\"\r\n                  onClick={() => setIswidget(!isWidget)}\r\n                >\r\n                  <FileCopy style={{ color: \"#1ABB9C\" }} />\r\n                </IconButton>\r\n              </ToolTip>\r\n            </span>\r\n          </h3>\r\n          {/* to do make it a component */}\r\n          <Grid container spacing={2} className=\"p-3\">\r\n            <Grid item lg={4} md={4}>\r\n              <FormLabel>Account Receivable</FormLabel>\r\n              <select\r\n                name=\"payee_account\"\r\n                placeholder=\"Account\"\r\n                style={{ border: \"none\" }}\r\n                value={data.payee_account}\r\n                onChange={(e) =>\r\n                  setData({\r\n                    ...data,\r\n                    payee_account: e.target.value,\r\n                  })\r\n                }\r\n              >\r\n                <option value=\"\"></option>\r\n                {accounts &&\r\n                  accounts.filter(acc => acc.cusID ==null).map((accs, index) => {\r\n                    const { name, code, balance_type } = accs;\r\n                    return (\r\n                      <option\r\n                        value={code}\r\n                        key={index}\r\n                      >{`${name} (${balance_type})`}</option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </Grid>\r\n            <Grid item lg={4} md={4}>\r\n              <FormLabel>Account Payable</FormLabel>\r\n              <select\r\n                name=\"payment_account\"\r\n                placeholder=\"Account\"\r\n                style={{ border: \"none\" }}\r\n                value={data.payment_account}\r\n                onChange={(e) =>\r\n                  setData({\r\n                    ...data,\r\n                    payment_account: e.target.value,\r\n                  })\r\n                }\r\n              >\r\n                <option value=\"\"></option>\r\n                {accounts &&\r\n                  accounts.filter(acc => acc.cusID == null).map((acc, index) => {\r\n                    const { code, name, balance_type } = acc;\r\n                    return (\r\n                      <option\r\n                        value={code}\r\n                        key={index}\r\n                      >{`${name} (${balance_type})`}</option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              lg={4}\r\n              md={4}\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n                alignItems: \"flex-end\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <FormLabel>Amount</FormLabel>\r\n              <Typography variant=\"h5\">\r\n                <s>N</s>:{\" \"}\r\n                {expenseForm && calcuAmt(expenseForm).toLocaleString()}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item lg={4} md={4}>\r\n              <FormLabel>Payment Date</FormLabel>\r\n              <input\r\n                name=\"expense_date\"\r\n                type=\"date\"\r\n                value={data.expense_date}\r\n                onChange={(e) =>\r\n                  setData({\r\n                    ...data,\r\n                    expense_date: e.target.value,\r\n                  })\r\n                }\r\n                style={{\r\n                  width: \"100%\",\r\n                  outline: \"none\",\r\n                  border: \"none\",\r\n                  height: \"30px\",\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={4} md={4}>\r\n              <FormLabel>Payment Method</FormLabel>\r\n              <select\r\n                name=\"pay_method\"\r\n                value={data.pay_method}\r\n                onChange={(e) =>\r\n                  setData({\r\n                    ...data,\r\n                    pay_method: e.target.value,\r\n                  })\r\n                }\r\n                style={{\r\n                  width: \"100%\",\r\n                  outline: \"none\",\r\n                  border: \"none\",\r\n                  height: \"30px\",\r\n                }}\r\n              >\r\n                <option></option>\r\n                <option value=\"cash\">Cash</option>\r\n                <option value=\"cheque\">Cheque</option>\r\n                <option value=\"transfer\">Transfer</option>\r\n              </select>\r\n            </Grid>\r\n            <Grid item lg={8} md={8}>\r\n              <FormLabel>Heading</FormLabel>\r\n              <span>\r\n                  <ToolTip title=\"Add New Heanding\">\r\n                    <IconButton size=\"small\" onClick={() => setisHead(!isHead)}>\r\n                      <span\r\n                        className=\"fa fa-plus-circle\"\r\n                        style={{ color: \"#20c997\" }}\r\n                      />\r\n                    </IconButton>\r\n                  </ToolTip>\r\n                </span>\r\n                {isHead && (\r\n                  <div style={{ display: \"flex\" }}>\r\n                    <TextField\r\n                      size=\"small\"\r\n                      label=\"Name\"\r\n                      value={data.head}\r\n                      variant=\"outlined\"\r\n                      placeholder=\"Category Name\"\r\n                      onChange={(e) =>\r\n                        setData({\r\n                          ...data,\r\n                          head: e.target.value,\r\n                        })\r\n                      }\r\n                    />\r\n                    <Button\r\n                      onClick={(e) => handle_Add_Exphead(e)}\r\n                      variant=\"contained\"\r\n                      size=\"small\"\r\n                      style={{ background: \"#2A3F54\", color: \"white\" }}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </div>\r\n                )}\r\n              <select\r\n                name=\"head\"\r\n                value={data.head}\r\n                onChange={(e) =>\r\n                  setData({\r\n                    ...data,\r\n                    head: e.target.value,\r\n                  })\r\n                }\r\n                style={{\r\n                  width: \"100%\",\r\n                  outline: \"none\",\r\n                  border: \"none\",\r\n                  height: \"30px\",\r\n                }}\r\n              >\r\n                <option></option>\r\n                {\r\n                  expenseHeadings.length > 0 &&\r\n                  expenseHeadings.map((exh, index) =>(\r\n                   <Fragment key={index}>\r\n                      <option value={exh.id}>{exh.name}</option>\r\n                   </Fragment>\r\n                  ))\r\n                }                \r\n              </select>\r\n            </Grid>\r\n          </Grid>\r\n          <h5>Details</h5>\r\n          <Paper style={{ backgroundColor: \"inherit\" }}>\r\n            <Container>\r\n              <table\r\n                className=\"table-small table-hover table-bordered\"\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <thead>\r\n                  <th>#</th>\r\n                  <th> </th>\r\n                  <th>\r\n                    Category\r\n                    <span>\r\n                      <ToolTip title=\"Add New\">\r\n                        <IconButton size=\"small\" onClick={() => setAdd(!add)}>\r\n                          <span\r\n                            className=\"fa fa-plus-circle\"\r\n                            style={{ color: \"#20c997\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </ToolTip>\r\n                    </span>\r\n                    {add && (\r\n                      <div style={{ display: \"flex\" }}>\r\n                        <TextField\r\n                          size=\"small\"\r\n                          label=\"Name\"\r\n                          value={body.name}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"Category Name\"\r\n                          onChange={(e) =>\r\n                            setbody({\r\n                              ...body,\r\n                              name: e.target.value,\r\n                            })\r\n                          }\r\n                        />\r\n                        <Button\r\n                          onClick={(e) => handle_Add_ExpCategory(e)}\r\n                          variant=\"contained\"\r\n                          size=\"small\"\r\n                          style={{ background: \"#2A3F54\", color: \"white\" }}\r\n                        >\r\n                          Save\r\n                        </Button>\r\n                      </div>\r\n                    )}\r\n                  </th>\r\n                  <th>Amount</th>\r\n                  <th>Description</th>\r\n\r\n                  <th></th>\r\n                </thead>\r\n                <tbody id=\"je__Table\">\r\n                  {expenseForm.map((jef, index) => (\r\n                    <Fragment key={index}>\r\n                      <tr>\r\n                        <td>{index + 1} </td>\r\n                        <td onClick={() => addExpenseFrom()}>\r\n                          <ToolTip title=\"Add New Row\">\r\n                            <span\r\n                              className=\"fa fa-plus-circle fa-1x\"\r\n                              style={{ color: \"#20c997\" }}\r\n                            />\r\n                          </ToolTip>\r\n                        </td>\r\n                        <td>\r\n                          <select\r\n                            name=\"account\"\r\n                            value={jef.account}\r\n                            placeholder=\"Account\"\r\n                            style={{ border: \"none\" }}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          >\r\n                            <option value=\"\"></option>\r\n                            {expenseCategories &&\r\n                              expenseCategories.map((exps, index) => {\r\n                                const { id, name } = exps;\r\n                                return (\r\n                                  <option\r\n                                    value={id}\r\n                                    key={index}\r\n                                  >{`${name}`}</option>\r\n                                );\r\n                              })}\r\n                          </select>\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            min={100}\r\n                            name=\"amount\"\r\n                            type=\"number\"\r\n                            placeholder=\"Amount\"\r\n                            value={jef.amount}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          />\r\n                        </td>\r\n\r\n                        <td>\r\n                          <input\r\n                            name=\"description\"\r\n                            placeholder=\"Description\"\r\n                            value={jef.description}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          />\r\n                        </td>\r\n\r\n                        <td onClick={() => handleRemoveexpenseform(index)}>\r\n                          <ToolTip title=\"Delete Row\">\r\n                            <span\r\n                              className=\"fa fa-trash\"\r\n                              style={{ color: \"red\" }}\r\n                            ></span>\r\n                          </ToolTip>\r\n                        </td>\r\n                      </tr>\r\n                    </Fragment>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-end\",\r\n                }}\r\n              >\r\n                {error && (\r\n                  <Button\r\n                    size=\"small\"\r\n                    variant=\"contained\"\r\n                    style={{ color: \"white\", background: \"red\" }}\r\n                  >\r\n                    {error}\r\n                  </Button>\r\n                )}\r\n                <Button\r\n                  className=\"m-3\"\r\n                  variant=\"contained\"\r\n                  disabled={isDisable(expenseForm)}\r\n                  onClick={(e) => handleSubmit(e)}\r\n                  style={{ background: \"#2A3F54\", color: \"white\" }}\r\n                >\r\n                  Post\r\n                </Button>\r\n              </div>\r\n            </Container>\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseFeed;\r\n","\r\nimport React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectUserExpenseRaised } from '../appState/appSlice'\r\nimport ExpenseViewTable from './ExpenseViewTable'\r\nimport AppHeader from './global/AppHeader'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst ExpenselWidget = ({ isWidget, setIswidget }) => {\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n    const userExpneses = useSelector(selectUserExpenseRaised)\r\n    return (\r\n        <div className='app__Widget'>\r\n            {\r\n                isWidget ?\r\n                <AppWidgetHeader\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget}\r\n                    title='Expense List' \r\n                />\r\n                :\r\n                <AppHeader title='Expenses' />\r\n            }\r\n            <div className=\"pt-2\" />\r\n            <ExpenseViewTable\r\n                isWidget={isWidget}\r\n                calcuAmt={calcuAmt} \r\n                userExpneses={userExpneses}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenselWidget\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setAccounts, setExpenseCategories, setUser, \r\n    setExpenseItems, setExpenseHeadings, setUserExpenseRaised } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport ExpenseFeed from '../components/ExpenseFeed'\r\nimport ExpenseWidget from '../components/ExpenseWidget'\r\n\r\nconst ExpenseScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n\r\n    // func\r\n    const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n    const get_ExpenseCategories =() =>{\r\n        axios.get('/expense/categories', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(exps =>{\r\n            dispatch(setExpenseCategories(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n    const get_ExpenseHeadings =() =>{\r\n        axios.get('/expense/heads', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(exps =>{\r\n            dispatch(setExpenseHeadings(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_Raised_Expense_Items =() =>{\r\n        axios.get('/expense/Items', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            } \r\n        })\r\n        .then(exps =>{\r\n            dispatch(setExpenseItems(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_User_Raised_Expense =() =>{\r\n        axios.get('/expense/user', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(exps =>{\r\n            dispatch(setUserExpenseRaised(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        get_AllAccounts()\r\n        get_Session()\r\n    }, [])\r\n\r\n    useEffect(() =>{\r\n        return (\r\n            get_ExpenseCategories(),\r\n            get_ExpenseHeadings(),\r\n            get_User_Raised_Expense(),\r\n            get_Raised_Expense_Items()\r\n        )\r\n    }, [open])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <ExpenseFeed\r\n                setOpen={setOpen}\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <ExpenseWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseScreen\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Doughnut, } from \"react-chartjs-2\";\r\nimport { MDBContainer } from \"mdbreact\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAccounts, selectAllStaffs, selectCustomers, selectUserExpenseRaised } from \"../../appState/appSlice\";\r\n\r\nconst MultipleChart = () => {\r\n  const userExpneses = useSelector(selectUserExpenseRaised)\r\n  const customers = useSelector(selectCustomers)\r\n  const accounts = useSelector(selectAccounts)\r\n  const [dataPolar, setDataPolar] = useState({\r\n      datasets: '',\r\n      labels: [\"Expenses\", \"Staffs\", \"Customers\", \"Accounts\"]\r\n  })\r\n\r\n  useEffect(() =>{\r\n    const custotal = customers&&customers.length\r\n    const acctotal = accounts && accounts.length\r\n    const staffs = localStorage.getItem('staffs')\r\n    const calcuAmt = (data) =>{\r\n      const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n      return total\r\n  }\r\n    setDataPolar({\r\n      ...dataPolar,\r\n      datasets: [\r\n        {\r\n          data: [calcuAmt(userExpneses), +staffs, +custotal, +acctotal],\r\n          backgroundColor: [\r\n            \"rgba(247, 70, 74, 0.5)\",\r\n            \"#20c997\",\r\n            \"#111d29\",\r\n            \"rgba(148, 159, 177, 0.5)\",\r\n            \"#2A3F54\"\r\n          ],\r\n          label: \"Dataset\" // for legend\r\n        }\r\n      ],\r\n    })\r\n  },[])\r\n\r\n    return (\r\n      <div>\r\n        <h3 className=\"mt-5\">Data </h3>\r\n        <Doughnut data={dataPolar} options={{ responsive: true }} />\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default MultipleChart;","import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { MDBContainer } from \"mdbreact\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectPaidOnpaySales } from \"../../appState/appSlice\";\r\n\r\nconst SalesChart =() =>{\r\n  const data = localStorage.getItem('paid')\r\n  const ondata = localStorage.getItem('onPaid')\r\n  \r\n  const paidOnpaySales = useSelector(selectPaidOnpaySales)\r\n  const [dataLine, setDataLine] = useState({\r\n    labels: '',\r\n      datasets: [\r\n        {\r\n          label: \"Sales on progress\",\r\n          fill: true,\r\n          lineTension: 0.3,\r\n          backgroundColor: \"rgba(225, 204,230, .3)\",\r\n          borderColor: \"rgb(205, 130, 158)\",\r\n          borderCapStyle: \"butt\",\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: \"miter\",\r\n          pointBorderColor: \"rgb(205, 130,1 58)\",\r\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n          pointBorderWidth: 10,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n          pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data: ondata && [...ondata]\r\n        },\r\n        {\r\n          label: \"Completed Sales\",\r\n          fill: true,\r\n          lineTension: 0.3,\r\n          backgroundColor: \"rgba(184, 185, 210, .3)\",\r\n          borderColor: \"rgb(35, 26, 136)\",\r\n          borderCapStyle: \"butt\",\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: \"miter\",\r\n          pointBorderColor: \"rgb(35, 26, 136)\",\r\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n          pointBorderWidth: 10,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data: data && [...data]\r\n        }\r\n      ]\r\n  })\r\n\r\n  useEffect(() =>{\r\n        \r\n    const labels = paidOnpaySales&&paidOnpaySales.map(x =>Object.values(x))\r\n    \r\n    const flabels =[]\r\n    \r\n    for(let i =0; i< labels.length; i++){\r\n        const element = labels[i][10]\r\n        flabels.push(new Date(element).toUTCString().split(' ')[2])\r\n    }\r\n    setDataLine({\r\n      ...dataLine,\r\n      labels: flabels,\r\n    })\r\n\r\n  }, [])\r\n\r\n    return (\r\n      <MDBContainer>\r\n        <h3 className=\"mt-5\">Sales</h3>\r\n        <Line data={dataLine} options={{ responsive: true }} />\r\n      </MDBContainer>\r\n    );\r\n}\r\n\r\nexport default SalesChart;","import { Typography } from '@material-ui/core'\r\nimport React, { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectTodayTxs } from '../appState/appSlice'\r\n\r\nconst rendeTxList = (data) =>{\r\n    return (\r\n        <Fragment>\r\n            {\r\n                data && data.map((tx, index) =>{\r\n                    const {\r\n                        pay_method, amount, name, code, tx_type, tx_date, ticket_no\r\n                        } = tx\r\n                    return (\r\n                        <Fragment key={index}>\r\n                            <tr>\r\n                                <td> {index+1} </td>\r\n                                <td>{name}</td>\r\n                                <td> {code} </td>\r\n                                <td>{new Date(tx_date).toLocaleDateString()}</td>\r\n                                <td>\r\n                                    {\r\n                                        tx_type == 'CR'&&\r\n                                        <Typography\r\n                                            style={{\r\n                                                color: '#20c997'\r\n                                            }}\r\n                                        > {amount.toLocaleString()} </Typography>\r\n                                    }\r\n                                </td>\r\n                                <td>\r\n                                    {\r\n                                        tx_type == 'DR'&&\r\n                                        <Typography\r\n                                            style={{\r\n                                                color: '#F00'\r\n                                            }}\r\n                                        > {amount.toLocaleString()} </Typography>\r\n                                    }\r\n                                </td>\r\n                                <td> {pay_method} </td>\r\n                            </tr>\r\n                        </Fragment>\r\n                    )\r\n                })\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst TransactionList = ({styles}) => {\r\n    const todayTxs = useSelector(selectTodayTxs)\r\n    return (\r\n        <>\r\n            <Typography\r\n                variant='h4'\r\n                style={{\r\n                    color: '#2a3f54'\r\n                }}\r\n                className='mb-2'\r\n            >\r\n                Current Transaction\r\n            </Typography>\r\n            <table \r\n                style={{\r\n                    width: '100%'\r\n                }}\r\n                className='table-hover table-bordered'\r\n            >\r\n                <thead\r\n                    style={styles}\r\n                >\r\n                    <th>#</th>\r\n                    <th>Acc. Name</th>\r\n                    <th>Acc. Code</th>\r\n                    <th>TX Date</th>\r\n                    <th>CR</th>\r\n                    <th>DR</th>\r\n                    <th>Pay Method</th>\r\n                </thead>\r\n                <tbody>\r\n                {rendeTxList(todayTxs)}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TransactionList\r\n","import { Grid, Paper } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectPaidOnpaySales, selectTodayTxs } from \"../appState/appSlice\";\r\nimport MultipleChart from \"./charts/MultipleChart\";\r\nimport SalesChart from \"./charts/SalesChart\";\r\nimport AppHeader from \"./global/AppHeader\";\r\nimport TransactionList from './TransactionList'\r\n\r\nconst HomeFeed = () => {\r\n  const todayTxs = useSelector(selectTodayTxs)\r\n  const paidOnpaySales = useSelector(selectPaidOnpaySales);\r\n  const [paid, setPaid] = useState();\r\n  const [onpaid, setOnPaid] = useState();\r\n  // const data = [65, 59, 80, 81, 56, 55, 40]\r\n  useEffect(() => {\r\n    const paiddata =\r\n      paidOnpaySales &&\r\n      paidOnpaySales.filter(\r\n        (paid, i) => paid && paid.amount == 2\r\n      );\r\n\r\n    const paiddataValues = paiddata && paiddata.map((x) => Object.values(x));\r\n    const completedPaid = [];\r\n    // set completed data\r\n\r\n    for (let i = 0; i < paiddataValues.length; i++) {\r\n      const pelement = paiddataValues[i][5];\r\n      completedPaid.push(pelement);\r\n    }\r\n\r\n    // set on pay data\r\n    // console.log(completedPaid)\r\n    const onpaiddata =\r\n      paidOnpaySales &&\r\n      paidOnpaySales.filter(\r\n        (paid, i) => paid && paid.status == 0\r\n      );\r\n    const onpaiddataValues =\r\n      onpaiddata && onpaiddata.map((x) => Object.values(x));\r\n    const onPaid = [];\r\n    // set completed data\r\n\r\n    for (let i = 0; i < onpaiddataValues.length; i++) {\r\n      const onpelement = onpaiddataValues[i][4];\r\n      onPaid.push(onpelement);\r\n    }\r\n\r\n    return (\r\n      setPaid(completedPaid),\r\n      setOnPaid(onPaid),\r\n      localStorage.setItem(\"paid\", completedPaid),\r\n      localStorage.setItem(\"onPaid\", onPaid)\r\n    );\r\n  }, [paidOnpaySales]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"app__Feed\">\r\n        <AppHeader title=\"Dashboard\" />\r\n\r\n        <div className=\"m-3\">\r\n          <Grid container spacing={2}>\r\n            <Grid item lg={11} md={11}\r\n              style={{\r\n                top: 0,\r\n                position: 'sticky',\r\n                backgroundColor: '#ededed'\r\n              }}\r\n            >\r\n              <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\r\n                <Grid item lg={9} md={9}>\r\n                  \r\n                     <SalesChart \r\n                      data={paid} \r\n                      onpaid={onpaid}\r\n                    />\r\n                </Grid>\r\n                <Grid item lg={3} md={3}>\r\n                  <MultipleChart />\r\n                </Grid>\r\n                \r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\r\n              <Grid item lg={12} md={12} sm={12}>\r\n                {\r\n                  todayTxs &&\r\n\t\t\t\t\t<Paper\r\n\t\t\t\t\t\televation={0}\r\n\t\t\t\t\t\tclassName='p-3'\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackgroundColor: 'inherit'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<TransactionList \r\n              styles={{\r\n                top: '69%',\r\n                position: 'sticky',\r\n                backgroundColor: '#ededed'\r\n              }}\r\n            />\r\n\t\t\t\t\t</Paper>\r\n                }\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default HomeFeed;\r\n","import axios from \"axios\";\r\nimport React, { Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport {\r\n  selectOpen,\r\n  selectToken,\r\n  setAccounts,\r\n  setAllStaffs,\r\n  setCustomers,\r\n  setPaidOnpaySales,\r\n  settodayTxs,\r\n  setUser,\r\n  setUserExpenseRaised,\r\n} from \"../appState/appSlice\";\r\nimport SideBarMenu from \"../components/global/SideBarMenu\";\r\nimport HomeFeed from \"../components/HomeFeed\";\r\nimport \"./homeScreen.css\";\r\n\r\nconst HomeScreen = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const open = useSelector(selectOpen);\r\n  const token = useSelector(selectToken);\r\n\r\n  const get_Session = () => {\r\n    axios\r\n      .get(`/auth/active`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((user) => {\r\n        dispatch(setUser(user.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  const get_Paid_Onpay_Sales = async () => {\r\n    await localStorage.clear();\r\n    axios\r\n      .get(`/sale/paid_onpay`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((paidOnpay) => {\r\n        dispatch(setPaidOnpaySales(paidOnpay.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  const get_AllAccounts = () => {\r\n    axios\r\n      .get(\"/account\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((accounts) => {\r\n        dispatch(setAccounts(accounts.data));\r\n      })\r\n      .catch((error) => {\r\n        if (error) {\r\n          return error.response.statusText;\r\n        }\r\n      });\r\n  };\r\n\r\n  const getCustomers = () => {\r\n    axios\r\n      .get(\"/customer\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((asset) => {\r\n        dispatch(setCustomers(asset.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  const get_Todays_Tx = () =>{\r\n    axios.get('/transaction/today', {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n    .then(txs =>{\r\n        dispatch(settodayTxs(txs.data))\r\n    })\r\n    .catch(error =>{\r\n        return error\r\n    })\r\n  }\r\n\r\n  const get_Staffs = () => {\r\n    axios\r\n      .get(\"/auth\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((staffs) => {\r\n        localStorage.setItem(\"staffs\", staffs.data.length);\r\n        dispatch(setAllStaffs(staffs.data));\r\n      })\r\n      .catch((error) => {\r\n        if (error) {\r\n          return error.response.statusText;\r\n        }\r\n      });\r\n  };\r\n\r\n  const get_User_Raised_Expense = () => {\r\n    axios\r\n      .get(\"/expense/user\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((exps) => {\r\n        dispatch(setUserExpenseRaised(exps.data));\r\n      })\r\n      .catch((error) => {\r\n        if (error) {\r\n          return error.response.statusText;\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      return history.push(\"/\");\r\n    }\r\n    return (\r\n      get_Session(),\r\n      get_Paid_Onpay_Sales(),\r\n      get_AllAccounts(),\r\n      get_User_Raised_Expense(),\r\n      getCustomers(),\r\n      get_Staffs(),\r\n      get_Todays_Tx\r\n    );\r\n  }, [open]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"app\">\r\n        {/* side__Bar */}\r\n        <SideBarMenu />\r\n        {/* feed */}\r\n        <HomeFeed />\r\n        {/* widget */}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import { Button, Container, FormLabel, Grid, IconButton, Paper, Select, TextField, Typography } from '@material-ui/core'\r\nimport { Delete, FileCopy, PlusOne, PlusOneOutlined, PlusOneRounded } from '@material-ui/icons'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectPropServices, selectCustomers, selectToken, selectOpenEstimate, setOpenEstimate } from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\nimport AppSnackbar from './global/AppSnackbar'\r\n\r\nconst InvoiceFeed = ({  open, setOpen, isWidget, setIswidget }) => {\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const props = useSelector(selectPropServices)\r\n    const customers = useSelector(selectCustomers)\r\n    const openEstimate = useSelector(selectOpenEstimate)\r\n    const pss = useSelector(selectPropServices)\r\n    const [noestimate, setNoestimate] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n    const [message, setMessage] = useState()\r\n    const invoiceFormTemplate = {pro_service:'', description: '', qty: '', rate: '',  amount: '',  };\r\n    const [invoiceForm, setInvoiceform] = useState([])\r\n\r\n    const [data, setData ] = useState({\r\n        asset_account_FK: openEstimate.asset_account_FK,\r\n        customer_FK: '', \r\n        invoice_date: '',\r\n        invoice_term: '',\r\n        due_date: '',\r\n        VALUES: [],\r\n        uuid: '',\r\n        total: ''\r\n    })\r\n\r\n    // func\r\n    const get_OpenEstimate =(cus_FK) =>{\r\n       \r\n        axios.get(`estimate/${cus_FK}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setNoestimate(false)\r\n            dispatch(setOpenEstimate(result.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error) {\r\n                setNoestimate(false)\r\n                dispatch(setOpenEstimate(''))\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSetPostData = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n\r\n    } \r\n\r\n    const handleSetTerm = (e) =>{\r\n        const d = new Date()\r\n        const sd = new Date()\r\n        const value = e.target.value;\r\n         const duedate = d.setDate(sd.getDate()+parseInt(value))\r\n            return setData({\r\n                ...data,\r\n                invoice_term: value,\r\n                due_date: new Date(duedate)\r\n            })\r\n    }\r\n\r\n    // func\r\n    const addInvoiceFrom = () =>{\r\n        setInvoiceform([\r\n            ...invoiceForm,\r\n            invoiceFormTemplate\r\n        ])\r\n    }\r\n  \r\n\r\n    useEffect(() =>{\r\n        const form = []\r\n        for(let i= 0; i <openEstimate.length;  i++){\r\n           \r\n\r\n            form.push(\r\n                {\r\n                    pro_service:  openEstimate&& openEstimate[i].id, \r\n                    description:  openEstimate&& openEstimate[i].description, \r\n                    qty:  openEstimate&& openEstimate[i].qty,\r\n                    invoice_ID: data.uuid,\r\n                    rate:  openEstimate&& openEstimate[i].rate,  \r\n                    amount:  openEstimate&& openEstimate[i].amount,\r\n                    createdAt: data.invoice_date \r\n                }\r\n            )\r\n        }\r\n        return setInvoiceform(form)\r\n    },[openEstimate])\r\n\r\n    useEffect(() =>{\r\n        setInvoiceform([\r\n            invoiceFormTemplate\r\n        ])\r\n       \r\n    },[!openEstimate])\r\n    const handleChange = (e, index) =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n   \r\n        const updatedinvoiceform =  invoiceForm.map((jef, i) => index == i ?\r\n        Object.assign(jef, {[name]: value, 'invoice_ID': data.uuid, 'createdAt': data.invoice_date }): jef);\r\n        setInvoiceform(updatedinvoiceform)\r\n\r\n        if(name =='qty') {\r\n            const updatedinvoiceform =  invoiceForm.map((jef, i) => index == i ?\r\n            Object.assign(jef, {'amount': value * jef.rate, 'invoice_ID': data.uuid, 'createdAt': data.invoice_date  }): jef);\r\n        }\r\n      \r\n        if(name =='pro_service') {\r\n            const selectedPS = pss.filter(ps => ps.id ==parseInt(value))\r\n            // console.log(selectedPS[0].description)\r\n            const updatedinvoiceform =  invoiceForm.map((jef, i) => index == i ?\r\n            Object.assign(jef, {'description': selectedPS[0].description, 'rate': +selectedPS[0].sale_price }): jef);\r\n        }\r\n    }\r\n    const handleRemoveinvoiceform = (index) =>{\r\n        const filterinvoiceform = [...invoiceForm];\r\n        filterinvoiceform.splice(index, 1);\r\n        \r\n        setInvoiceform(filterinvoiceform)\r\n    }\r\n// func\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n\r\n       // handle submit\r\n    const handleSubmit = e =>{\r\n        \r\n        e.preventDefault()\r\n        setOpen(true)\r\n        axios.post('/invoice',data, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setOpen(false)\r\n            setSuccess(true)\r\n            setMessage(result.data.message)\r\n            setData({\r\n                customer_FK: '', \r\n                invoice_date: '',\r\n                invoice_term: '',\r\n                due_date: '',\r\n                VALUES: [],\r\n                uuid: '',\r\n                total: ''\r\n            })\r\n          \r\n            setInvoiceform([\r\n                invoiceFormTemplate\r\n            ])\r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            if(error) {\r\n                return error.response.data\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        get_OpenEstimate(data.customer_FK)\r\n    }, [data.customer_FK])\r\n\r\n    useEffect(() =>{\r\n        \r\n        const fdata = invoiceForm.map(x =>Object.values(x))\r\n        const findal =[]\r\n        // const data = fdata\r\n        for(let i =0; i< fdata.length; i++){\r\n            const element = fdata[i]\r\n            findal.push(element)\r\n        }\r\n        \r\n         setData({\r\n            ...data,\r\n            VALUES: findal\r\n        })\r\n    }, [invoiceForm])\r\n   \r\n    useEffect(() =>{\r\n        setData({\r\n            ...data,\r\n            total: calcuAmt(invoiceForm)\r\n        })\r\n    }, [data.VALUES])\r\n    useEffect(() =>{\r\n        setData({\r\n            ...data,\r\n            uuid:  new Date().getSeconds().toLocaleString() + new Date().getMinutes().toLocaleString()+new Date().getMilliseconds()\r\n        })\r\n    }, [success])\r\n   \r\n    return (\r\n        <div className={`${isWidget? 'isapp__Feed': 'app__Feed'}`}>\r\n            <AppSnackbar open={success} setOpen={setSuccess} message={message} />\r\n           <AppHeader title='Invoice' />\r\n           <div className=\"row align-items-center justify-content-center d-flex m-1\" >\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                    {/* table */}\r\n                    <h3>Invoice Entry<span> \r\n                        <IconButton color='secondary'\r\n                            onClick={() =>setIswidget(!isWidget)}\r\n                        >\r\n                        <FileCopy style={{ color: '#1ABB9C'}} />\r\n                        </IconButton></span></h3> \r\n                        {/* to do make it a component */}\r\n                        <Grid container spacing={2} className='p-3'>\r\n                            <Grid item lg={4} md={4}>\r\n                                <FormLabel>Customer</FormLabel>\r\n                                <select\r\n                                    name='customer_FK'\r\n                                    value={data.customer_FK}\r\n                                    placeholder='Customer'\r\n                                    style={{border: 'none'}}\r\n                                    onChange={e =>handleSetPostData(e)}\r\n                                >\r\n                                    <option value=''>Select</option>\r\n                                    {\r\n                                        customers&&\r\n                                        customers.map((cus, index) =>{\r\n                                            const{id, customer_name} = cus\r\n                                            return <option key={index} value={id} > {customer_name} </option>\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </Grid>\r\n                                \r\n                                <Grid item lg={8} md={8}\r\n                                    style={{display: 'flex', \r\n                                    justifyContent: 'flex-end', alignItems: 'flex-end', flexDirection: 'column'}}\r\n                                >\r\n                                    <FormLabel>Due Balance</FormLabel>\r\n                                    <Typography variant='h5'>\r\n                                        <s>N</s>: {invoiceForm.length>0 && calcuAmt(invoiceForm)}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                \r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Period Term</FormLabel>\r\n                                    <select\r\n                                        name='invoice_term'\r\n                                        style={{width: '100%', \r\n                                        outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                        value={data.invoice_term}\r\n                                        onChange={ e => handleSetTerm(e)}\r\n                                    >\r\n                                        <option value=''></option>\r\n                                        <option value={7}>7 Days</option>\r\n                                        <option value={14}>14 Days</option>\r\n                                        <option value={21}>21 Days</option>\r\n                                        <option value={28}>28 Days</option>\r\n                                        <option value={30}>30 Days</option>\r\n                                        <option value={60}>60 Days</option>\r\n                                        <option value={90}>90 Days</option>\r\n                                        <option value={120}>120 Days</option>\r\n                                        <option value={150}>150 Days</option>\r\n                                        <option value={180}>180 Days</option>\r\n                                        <option value={210}>210 Days</option>\r\n                                        <option value={240}>240 Days</option>\r\n                                        <option value={270}>270 Days</option>\r\n                                        <option value={300}>300 Days</option>\r\n                                        <option value={330}>330 Days</option>\r\n                                        <option value={360}>360 Days</option>\r\n                                    </select>\r\n                                </Grid>\r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Invoice Date</FormLabel>\r\n                                    <input\r\n                                        name='invoice_date'\r\n                                        type='date'\r\n                                        value ={data.invoice_date}\r\n                                        onChange={e =>handleSetPostData(e)}\r\n                                        style={{width: '100%', outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Due Date</FormLabel>\r\n                                    <input\r\n                                        name='due_date'\r\n                                        readOnly\r\n                                        value={ data.due_date ? new Date(data.due_date).toLocaleDateString(): new Date().toLocaleDateString()}\r\n                                        onChange={e =>handleSetPostData(e)}\r\n                                        style={{width: '100%', outline: 'none', \r\n                                        border: 'none',\r\n                                        height: '30px'}}\r\n                                    />\r\n                                </Grid>\r\n                            \r\n                        </Grid>\r\n                        <h5>\r\n                            Details\r\n                        </h5>\r\n                   { !noestimate&&<Paper>\r\n                        <Container className='p-3'>\r\n                        <table className=\"table-small table-hover table-bordered\" style={{width: '100%'}}>\r\n                            <thead>\r\n                                \r\n                                <th>#</th>\r\n                                <th> {' '} </th>\r\n                                <th>Property/Service</th>\r\n                                <th>Description</th>\r\n                                <th>QTY</th>\r\n                                <th>Rate</th>\r\n                                <th>Amount</th>\r\n                                <th></th>\r\n                            </thead>\r\n                            <tbody id='je__Table'>\r\n                                {\r\n                                    invoiceForm && invoiceForm.map((jef, index) =>(\r\n                                        <tr key={index}>\r\n                                            <td>{index+1} </td>\r\n                                            <td\r\n                                                    onClick={() =>addInvoiceFrom()}\r\n                                                >\r\n                                                     <span className='fa fa-plus-circle fa-1x'\r\n                                                        style={{color: '#20c997'}}\r\n                                                    />\r\n                                            </td>\r\n                                            <td>\r\n                                                <select\r\n                                                    name='pro_service'\r\n                                                    value={jef.account}\r\n                                                    placeholder='Account'\r\n                                                    style={{border: 'none'}}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                >\r\n                                                    <option value=''></option>\r\n                                                    {\r\n                                                        props&&\r\n                                                        props.map((ps, index) =>{\r\n                                                            const { id, name, ps_type } = ps\r\n                                                            return <option value={id} key={index} >{`${name} (${ps_type})`}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </select>\r\n                                            </td>\r\n                                            \r\n                                            <td>\r\n                                                <input\r\n                                                    name='description'\r\n                                                    placeholder='Description'\r\n                                                    value={jef.description}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                            <td>\r\n                                                <input\r\n                                                    name='qty'\r\n                                                    type='number'\r\n                                                    placeholder='Quantity'\r\n                                                    value={jef.qty}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                            <td>\r\n                                                <input\r\n                                                    name='rate'\r\n                                                    type='number'\r\n                                                    placeholder='Rate'\r\n                                                    value={jef.rate}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                            <td>\r\n                                                <input\r\n                                                    name='amount'\r\n                                                    type='number'\r\n                                                    placeholder='Amount'\r\n                                                    value={jef.amount}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n                     \r\n                                            <td\r\n                                                onClick={() =>handleRemoveinvoiceform(index)}\r\n                                            >\r\n                                                    <span className='fa fa-trash'\r\n                                                        style={{color: 'red'}}\r\n                                                    ></span>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            {/*                                 \r\n                                {\r\n                                   customers&&\r\n                                   customers.map((customer, index) =>{\r\n                                        return <CustomerList\r\n                                            index={index}\r\n                                            {...customer}\r\n                                            isWidget={isWidget}\r\n                                        />\r\n                                    })\r\n\r\n                                } */}\r\n                                    \r\n                            </tbody>\r\n                        </table>\r\n                        {/* {customers&& !customers.length>0&&\r\n                            <div className=\"alert alert-warning\">\r\n                            <h6>No Asset Accounts Availabe</h6>\r\n                            </div>\r\n                        } */}\r\n                        <Button\r\n                            className='m-3'\r\n                            variant='contained'\r\n                            onClick={e =>handleSubmit(e)}\r\n                            style={{background: '#2A3F54', color: 'white'}}\r\n                        >submit</Button>\r\n                        </Container>\r\n                    </Paper>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InvoiceFeed\r\n","import { Paper, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { selectUserInvoices } from '../appState/appSlice'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst InvoiceWidget = ({ isWidget, setIswidget }) => {\r\n    const invoices = useSelector(selectUserInvoices)\r\n// func\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n    return (\r\n        <div className='app__Widget'>\r\n            <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Invoice List' \r\n            />\r\n            <section className='app__WidgetContainer mt-3'>\r\n                <table className='table table-sm table-striped table-hover'>\r\n                    <thead>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>Description</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>Due Date</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>Amount (<s>N</s>)</th>\r\n                        {/* <th style={{ border: '1px solid #F7F7F7F7' }}>Action</th> */}\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            invoices &&\r\n                            invoices.map((invoice, index) =>{\r\n                                const { uuid, invoice_date, due_date, amount } = invoice\r\n                                return(\r\n                                <tr key={index}>\r\n                                <td> { index+1 } </td>\r\n                                <td>\r\n                                    {`Invoice #${uuid} `}\r\n                                </td>\r\n                                <td> {new Date(due_date).toLocaleDateString()} </td>\r\n                                <td> {amount} </td>\r\n                                <td></td>\r\n                                </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                        {\r\n                           invoices&&\r\n                           <tr\r\n                            style={{background: '#2A3F54', color: 'white'}} \r\n                           >\r\n                               <td colSpan={3}>\r\n                                   <Typography variant='subtitle1'\r\n                                    style={{color: 'white'}}\r\n                                   >\r\n                                        <b>Total:</b>\r\n                                    </Typography>\r\n                               </td>\r\n                               <td>\r\n                                   <Typography variant='subtitle1'\r\n                                    style={{color: 'white'}}\r\n                                   >\r\n                                    <b>{\r\n                                       calcuAmt(invoices)\r\n                                    }</b>\r\n                                   </Typography>\r\n                               </td>\r\n                               <td colSpan={1}></td>\r\n                           </tr>\r\n                       }\r\n                    </tbody>\r\n                </table>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InvoiceWidget\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setAccounts, setCustomers, setPropServices, setUser, setUserInvoices } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport InvoiceFeed from '../components/InvoiceFeed'\r\nimport InvoiceWidget from '../components/InvoiceWidget'\r\n\r\nconst InvoiceScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n\r\n    // func\r\n    const getProp_Services = () =>{\r\n        axios.get('/prop_service', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(ps =>{\r\n            dispatch(setPropServices(ps.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n     // func\r\n    const getCustomers = () =>{\r\n        axios.get('/customer', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(asset =>{\r\n            dispatch(setCustomers(asset.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n     // func\r\n     const get_My_Invoices = () =>{\r\n        axios.get(`/invoice`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(invoices =>{\r\n            dispatch(setUserInvoices(invoices.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        getProp_Services()\r\n        getCustomers()\r\n        get_Session()\r\n        \r\n    }, [])\r\n    useEffect(() =>{\r\n        return get_My_Invoices()\r\n    }, [open])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <InvoiceFeed\r\n                setOpen={setOpen}\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <InvoiceWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InvoiceScreen\r\n","import axios from \"axios\";\r\n// MUI Stuff\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// Icons\r\nimport FileCopy from \"@material-ui/icons/FileCopy\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAccounts, selectToken, selectUser } from \"../appState/appSlice\";\r\nimport AppHeader from \"./global/AppHeader\";\r\nimport AppSnackbar from \"./global/AppSnackbar\";\r\n\r\nconst JournalFeed = ({ setOpen, isWidget, setIswidget }) => {\r\n  const token = useSelector(selectToken);\r\n  const user = useSelector(selectUser);\r\n  const accounts = useSelector(selectAccounts);\r\n  const [success, setSuccess] = useState(false);\r\n  const [Error, setError] = useState();\r\n  const [message, setMessage] = useState();\r\n  const jeFormTemplate = {\r\n    account_FK: \"\",\r\n    tx_type: \"\",\r\n    paid: 1,\r\n    pay_method: \"\",\r\n    amount: \"\",\r\n    description: \"\",\r\n  };\r\n  const [jeForm, setJeform] = useState([jeFormTemplate]);\r\n  const [data, setData] = useState({\r\n    je_ID: \"\",\r\n    name: \"\",\r\n    total: \"\",\r\n    je_date: \"\",\r\n    VALUES: [],\r\n  });\r\n  // func\r\n  const addJeFrom = () => {\r\n    setJeform([...jeForm, jeFormTemplate]);\r\n  };\r\n\r\n  const handleRemoveJeform = (index) => {\r\n    const filterJeform = [...jeForm];\r\n    filterJeform.splice(index, 1);\r\n\r\n    setJeform(filterJeform);\r\n  };\r\n\r\n  const calcuAmt = (data) => {\r\n    const total = data && data.reduce((a, v) => +v.amount + a, 0);\r\n    return total;\r\n  };\r\n  const calcuTotalDR = (data) => {\r\n    const tDR = data && data.filter((dta) => dta.tx_type == \"DR\");\r\n    const total = tDR && tDR.reduce((a, v) => +v.amount + a, 0);\r\n    return total.toLocaleString();\r\n  };\r\n  const calcuTotalCR = (data) => {\r\n    const tCR = data && data.filter((dta) => dta.tx_type == \"CR\");\r\n    const total = tCR && tCR.reduce((a, v) => +v.amount + a, 0);\r\n    return total.toLocaleString();\r\n  };\r\n\r\n  const handleChange = (e, index) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    const updatedJeform = jeForm.map((jef, i) =>\r\n      index == i ? Object.assign(jef, { [name]: value }) : jef\r\n    );\r\n    setJeform(updatedJeform);\r\n\r\n    if (name == \"amount\") {\r\n      const updatedJeform = jeForm.map((jef, i) =>\r\n        index == i\r\n          ? Object.assign(jef, {\r\n              rcpt_no: data.je_ID.split(\"-\")[1],\r\n              tx_date: data.je_date,\r\n              postedBy_FK: user.username,\r\n              createdAt: new Date(),\r\n              uuid: data.je_ID,\r\n            })\r\n          : jef\r\n      );\r\n    }\r\n\r\n    if (\r\n      name == \"pay_method\" &&\r\n      calcuTotalDR(jeForm) != calcuTotalCR(jeForm) &&\r\n      calcuTotalCR(jeForm) != calcuTotalDR(jeForm)\r\n    ) {\r\n      return setJeform([...jeForm, jeFormTemplate]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fdata = jeForm.map((x) => Object.values(x));\r\n    const findal = [];\r\n    // const data = fdata\r\n    for (let i = 0; i < fdata.length; i++) {\r\n      const element = fdata[i];\r\n      findal.push(element);\r\n    }\r\n\r\n    setData({\r\n      ...data,\r\n      VALUES: findal,\r\n    });\r\n  }, [jeForm]);\r\n\r\n  useEffect(() => {\r\n    setData({\r\n      ...data,\r\n      total: calcuAmt(jeForm),\r\n    });\r\n  }, [data.VALUES]);\r\n\r\n  // handle post\r\n\r\n  const isDisable = (Form) => {\r\n    const error =\r\n      Form &&\r\n      Form.map((jform) =>\r\n        !jform[\"account_FK\"].length > 0 ||\r\n        !jform[\"tx_type\"].length > 0 ||\r\n        !jform[\"amount\"].length > 0 ||\r\n        !jform[\"description\"].length > 0 ||\r\n        !jform[\"pay_method\"].length > 0\r\n          ? true\r\n          : false\r\n      );\r\n    const filterError = error && error.includes(true) ? true : false;\r\n    return filterError;\r\n  };\r\n\r\n  const isEmpty = (input) => {\r\n    return data[input] === \"\" ? true : false;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    const err = await Object.keys(data).map((key) => isEmpty(key));\r\n    const isError = err.includes(true);\r\n    if (isError === true) {\r\n      return setError(\"All field are required\");\r\n    } else {\r\n      if (\r\n        calcuTotalDR(jeForm) > calcuTotalCR(jeForm) ||\r\n        calcuTotalCR(jeForm) > calcuTotalDR(jeForm)\r\n      ) {\r\n        return setError(\r\n          \"Debit amount and Credit must be equal, highest tolerance is 0.1\"\r\n        );\r\n      }\r\n      // console.log(data)\r\n      setError(\"\");\r\n      setOpen(true);\r\n      axios\r\n        .post(\"/journal\", data, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then((result) => {\r\n          setOpen(false);\r\n          setMessage(result.data.message);\r\n          setSuccess(true);\r\n\r\n          setData({\r\n            je_ID: \"\",\r\n            name: \"\",\r\n            total: \"\",\r\n            je_date: \"\",\r\n            VALUES: [],\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setOpen(false);\r\n          if (error) {\r\n            return error.response;\r\n          }\r\n        });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setData({\r\n      ...data,\r\n      je_ID:\r\n        \"je-\" +\r\n        new Date().getSeconds().toLocaleString() +\r\n        new Date().getMinutes().toLocaleString() +\r\n        new Date().getMilliseconds(),\r\n    });\r\n    setJeform([jeFormTemplate]);\r\n  }, [success]);\r\n\r\n  return (\r\n    <div className={`${isWidget ? \"isapp__Feed\" : \"app__Feed\"}`}>\r\n      <AppHeader title=\"Journal\" />\r\n      <AppSnackbar setOpen={setSuccess} open={success} message={message} />\r\n      <div className=\"row align-items-center justify-content-center d-flex m-1\">\r\n        <div className=\"col-lg-12 col-md-12\">\r\n          {/* table */}\r\n          <h3>\r\n            Journal Entry\r\n            <span>\r\n              <Tooltip title=\"Journal List\">\r\n                <IconButton\r\n                  color=\"secondary\"\r\n                  onClick={() => setIswidget(!isWidget)}\r\n                >\r\n                  <FileCopy style={{ color: \"#1ABB9C\" }} />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </span>\r\n          </h3>\r\n          <Grid container spacing={2} alignItems=\"center\" className=\"mt-3\">\r\n            <Grid item lg={6} md={6}>\r\n              <TextField\r\n                required\r\n                name=\"name\"\r\n                size=\"small\"\r\n                label=\"Journal Name\"\r\n                fullWidth\r\n                value={data.name}\r\n                variant=\"outlined\"\r\n                placeholder=\"Journal Name Or Description\"\r\n                onChange={(e) =>\r\n                  setData({\r\n                    ...data,\r\n                    name: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item lg={6} md={6} justify=\"flex-end\" className=\"d-flex\">\r\n              <div\r\n                className=\"d-flex align-items-center\"\r\n                style={{ flexDirection: \"column\", justifyContent: \"center\" }}\r\n              >\r\n                <Typography variant=\"p\">Amount</Typography>\r\n                <Typography variant=\"h5\">\r\n                  <b>\r\n                    <s>N</s>:{calcuAmt(jeForm).toLocaleString()}\r\n                  </b>\r\n                </Typography>\r\n              </div>\r\n            </Grid>\r\n            <Grid item lg={3} md={3}>\r\n              <TextField\r\n                required\r\n                name=\"je_date\"\r\n                size=\"small\"\r\n                type=\"date\"\r\n                fullWidth\r\n                value={data.je_date}\r\n                label=\"Transaction Date\"\r\n                variant=\"outlined\"\r\n                placeholder=\"Journal Name\"\r\n                onChange={(e) =>\r\n                  setData({\r\n                    ...data,\r\n                    je_date: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item lg={3} md={3}>\r\n              <TextField\r\n                required\r\n                disabled\r\n                fullWidth\r\n                name=\"je_ID\"\r\n                size=\"small\"\r\n                value={data.je_ID}\r\n                label=\"Journal Id\"\r\n                variant=\"outlined\"\r\n                placeholder=\"Journal Id\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Typography variant=\"h5\" className=\"mt-3 mb-3\">\r\n            Transaction Details\r\n          </Typography>\r\n          {Error && <Typography color=\"error\">{Error}</Typography>}\r\n          <Paper style={{ backgroundColor: \"inherit\" }}>\r\n            <Container className=\"p-3\">\r\n              <table\r\n                className=\"table-small table-hover table-bordered\"\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <thead>\r\n                  <th>#</th>\r\n                  <th> </th>\r\n                  <th>Account</th>\r\n                  <th>Tx. Type</th>\r\n                  <th>\r\n                    Amount (<s>N</s>)\r\n                  </th>\r\n                  <th>Description</th>\r\n                  <th>Pay Method</th>\r\n                  <th></th>\r\n                </thead>\r\n                <tbody id=\"je__Table\">\r\n                  {jeForm &&\r\n                    jeForm.map((jef, index) => (\r\n                      <tr>\r\n                        <td>{index + 1} </td>\r\n                        <td onClick={() => addJeFrom()}>\r\n                          <Tooltip title=\"Add New Row\">\r\n                            <span\r\n                              className=\"fa fa-plus-circle fa-1x\"\r\n                              style={{ color: \"#20c997\" }}\r\n                            />\r\n                          </Tooltip>\r\n                        </td>\r\n                        <td>\r\n                          <select\r\n                            name=\"account_FK\"\r\n                            value={jef.account_FK}\r\n                            placeholder=\"Account\"\r\n                            style={{ border: \"none\" }}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          >\r\n                            <option value=\"\"></option>\r\n                            {accounts &&\r\n                              accounts.map((acc, index) => {\r\n                                const { code, name, balance_type } = acc;\r\n                                return (\r\n                                  <option\r\n                                    value={code}\r\n                                    key={index}\r\n                                  >{`${name} (${balance_type})`}</option>\r\n                                );\r\n                              })}\r\n                          </select>\r\n                        </td>\r\n                        <td>\r\n                          <select\r\n                            name=\"tx_type\"\r\n                            value={jef.tx_type}\r\n                            style={{ border: \"none\" }}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"DR\">Debit</option>\r\n                            <option value=\"CR\">Credit</option>\r\n                          </select>\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            name=\"amount\"\r\n                            type=\"number\"\r\n                            placeholder=\"Amount\"\r\n                            value={jef.amount}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            name=\"description\"\r\n                            placeholder=\"Description\"\r\n                            value={jef.description}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <select\r\n                            name=\"pay_method\"\r\n                            value={jef.pay_method}\r\n                            style={{ border: \"none\" }}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"cash\">Cash</option>\r\n                            <option value=\"cheque\">Cheque</option>\r\n                          </select>\r\n                        </td>\r\n\r\n                        <td onClick={() => handleRemoveJeform(index)}>\r\n                          <Tooltip title=\"Delet Row\">\r\n                            <span\r\n                              className=\"fa fa-trash\"\r\n                              style={{ color: \"red\" }}\r\n                            />\r\n                          </Tooltip>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  <tr>\r\n                    <td colSpan={5}>\r\n                      <section\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"flex-end\",\r\n                        }}\r\n                      >\r\n                        <table\r\n                          className=\"bordered\"\r\n                          style={{ width: \"70%\", marginLeft: \"auto\" }}\r\n                        >\r\n                          <thead>\r\n                            <th>\r\n                              Total DR (<s>N</s>)\r\n                            </th>\r\n                            <th>\r\n                              Total CR (<s>N</s>)\r\n                            </th>\r\n                          </thead>\r\n                          <tbody>\r\n                            <tr>\r\n                              <td>\r\n                                <Typography variant=\"h6\" color=\"error\">\r\n                                  <b>{calcuTotalDR(jeForm)}</b>\r\n                                </Typography>\r\n                              </td>\r\n                              <td>\r\n                                <Typography variant=\"h6\">\r\n                                  <b>{calcuTotalCR(jeForm)}</b>\r\n                                </Typography>\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </section>\r\n                    </td>\r\n                    <td colSpan={4}>\r\n                      <Button\r\n                        size=\"medium\"\r\n                        className=\"m-3\"\r\n                        variant=\"contained\"\r\n                        onClick={(e) => handleSubmit(e)}\r\n                        style={{\r\n                          background: \"#2A3F54\",\r\n                          color: \"white\",\r\n                          width: \"80%\",\r\n                          margin: \"auto\",\r\n                        }}\r\n                        disabled={isDisable(jeForm)}\r\n                      >\r\n                        post\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </Container>\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JournalFeed;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Fragment } from 'react'\r\n\r\n// MUI Stuff\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectAccounts, selectTransactions } from '../appState/appSlice'\r\n\r\nconst JournalListTable = ({jeID}) => {\r\n    const dispatch = useDispatch()\r\n    const [txs, setTxs] = useState()\r\n    const transactions = useSelector(selectTransactions)\r\n    const accounts = useSelector(selectAccounts)\r\n\r\n    // func\r\n    const calcuAmt = (data) =>{\r\n        const total = data && data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n\r\n    const calcuTotalCR = (data) =>{\r\n        const crData = data && data.filter(d =>d.tx_type ==='CR');\r\n        const totalCR =  crData && crData.reduce((a, v) =>v.tx_type ==='CR' && v.amount+a, 0)\r\n        return totalCR.toLocaleString()\r\n    }\r\n    const calcuTotalDR = (data) =>{\r\n        const drData = data && data.filter(d =>d.tx_type ==='DR');\r\n        const totalDR =  drData && drData.reduce((a, v) =>v.tx_type ==='DR' && v.amount+a, 0)\r\n        return totalDR.toLocaleString()\r\n    }\r\n\r\n    const returncusName = (code) =>{\r\n        const cname = accounts && accounts.find(acc =>acc.code ===code)\r\n       if(cname) \r\n            return cname.name\r\n        return null\r\n    }\r\n    useEffect(() =>{\r\n        const fTXs = transactions && transactions.filter(tx =>tx.rcpt_no === parseInt(jeID.trim().split('-')[1]) || tx.uuid ===jeID);\r\n        console.log(fTXs)\r\n        console.log(transactions)\r\n        return setTxs(fTXs)\r\n    },[jeID])\r\n    return (\r\n        <Fragment>\r\n            <tr>\r\n                <td colSpan={5}>\r\n                <table style={{width: '100%', borderLeft: '2px solid #20c997'}} >\r\n                    <thead style={{zIndex: 222, top: '60px', position: 'sticky', background: '#EDEDED'}}>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>Account</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>Description</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>Code</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>CR (<s>N</s>)</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>DR (<s>N</s>)</th>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                            txs &&\r\n                            txs.map((tx, index) =>{\r\n                                const { tx_date, description, tx_type, amount, account_FK, pay_method, \r\n                                paid } = tx\r\n                                return (\r\n                                    <Fragment key={index}>\r\n                                        <tr>\r\n                                            <td\r\n                                                style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}\r\n                                            > {index+1} </td>\r\n                                            <td style={{textAlign: 'left'}}>\r\n                                                {returncusName(account_FK)}\r\n                                            </td>\r\n                                            \r\n                                            <td style={{textAlign: 'left'}}>\r\n                                            \r\n                                                {description}\r\n                                            \r\n                                            </td>\r\n                                            <td style={{textAlign: 'left'}}>{account_FK}</td>\r\n                                            {\r\n                                                tx_type =='CR'?\r\n                                                <td>\r\n                                                    <Typography style={{color: '#20C997'}}>\r\n                                                    { amount.toLocaleString() }\r\n                                                    </Typography>\r\n                                                </td>\r\n                                                :\r\n                                                <td> </td>\r\n                                            }\r\n                                            {\r\n                                                tx_type =='DR'?\r\n                                                <td>\r\n                                                    <Typography color='error'>\r\n                                                    { amount.toLocaleString() }\r\n                                                    </Typography>\r\n                                                </td>\r\n                                                :\r\n                                                <td> </td>\r\n                                            }\r\n                                        \r\n                                            \r\n                                        </tr>\r\n                                </Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                    {\r\n                        txs && txs.length >0 &&\r\n                        <tr>\r\n                            <td colSpan={3}>\r\n                                <Typography variant='subtitle1'\r\n                                style={{color: '#2A3F54'}}\r\n                                >\r\n                                    <b>Total:</b>\r\n                                </Typography>\r\n                            </td>\r\n                            <td></td>\r\n                            <td colSpan={1}>\r\n                                <Typography variant='subtitle1'\r\n                                style={{color: '#2A3F54'}}\r\n                                >\r\n                                <b>{\r\n                                    calcuTotalCR(txs)\r\n                                }</b>\r\n                                </Typography>\r\n                            </td>\r\n                            <td colSpan={1}>\r\n                                <Typography variant='subtitle1'\r\n                                    style={{color: 'white'}}\r\n                                    >\r\n                                    <b>{calcuTotalDR(txs)}</b>\r\n                                </Typography>\r\n                            </td>\r\n                            \r\n                        </tr>\r\n                        \r\n                    }\r\n                    \r\n                </tbody>\r\n            </table>\r\n            {\r\n                txs<=0 &&\r\n                \r\n                <div className='alert alert-warning'\r\n                    style={{width: '98%', margin: 'auto'}}\r\n                >\r\n                    {`Ops!!! No Transaction History`}\r\n                </div>                \r\n            }\r\n            </td>\r\n        </tr>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default JournalListTable\r\n","// MUI Stuff\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport MoreVertOutlined from '@material-ui/icons/MoreVertOutlined'\r\n\r\nimport { Fragment, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectStaffPosted_Journals } from '../appState/appSlice'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\nimport JournalListTable from './JournalListTable'\r\n\r\nconst JournalWidget = ({ isWidget, setIswidget }) => {\r\n    const [isView, setIsview] = useState(null)\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n    const staffJournals = useSelector(selectStaffPosted_Journals)\r\n    return (\r\n        <Fragment>\r\n            <div className='app__Widget'>\r\n                <AppWidgetHeader\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget}\r\n                    title='Journal List' \r\n                />\r\n                <>\r\n                <table className='table table-sm table-striped table-hover'>\r\n                    <thead style={{top: '60px', position: 'sticky', background: '#EDEDED'}}>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>Name or Description</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>Amount (<s>N</s>)</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>Date</th>\r\n                        <th style={{ border: '1px solid #F7F7F7F7' }}>Action</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            staffJournals&&\r\n                            staffJournals.map((sje, index) =>{\r\n                                const { name, amount, je_date, uuid, je_ID } = sje\r\n                                return (\r\n                                    <Fragment key={index}>\r\n                                        <tr>\r\n                                            <td> {index+1} </td>\r\n                                            <td> \r\n                                                <Typography variant='p'\r\n                                                    style={{color: '#20C997', cursor: 'pointer'}}\r\n                                                >\r\n                                                {`${name}`}\r\n                                                </Typography>\r\n                                            </td>\r\n                                            <td> {amount} </td>\r\n                                            <td> {new Date(je_date).toLocaleDateString()} </td>\r\n                                            <td\r\n                                                style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}\r\n                                            >\r\n                                                <div>\r\n                                                <IconButton size='small'\r\n                                                    onClick={() =>setIsview(uuid)}\r\n                                                >\r\n                                                    <MoreVertOutlined style={{color: '#20c997'}} />\r\n                                                </IconButton>\r\n                                               \r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                        {/* Component */}\r\n                                        \r\n                                        {\r\n                                        isView === uuid  &&\r\n                                        \r\n                                        <JournalListTable jeID= {je_ID} jeUID={uuid} />\r\n                                        }\r\n                                    </Fragment>\r\n                                )\r\n                            })\r\n                            \r\n                        }\r\n                        {\r\n                            staffJournals&&\r\n                            <tr\r\n                                style={{background: '#2A3F54', color: 'white'}} \r\n                            >\r\n                                <td colSpan={2}>\r\n                                    <Typography variant='subtitle1'\r\n                                        style={{color: 'white'}}\r\n                                    >\r\n                                            <b>Total:</b>\r\n                                        </Typography>\r\n                                </td>\r\n                                <td>\r\n                                    <Typography variant='subtitle1'\r\n                                        style={{color: 'white'}}\r\n                                    >\r\n                                        <b>\r\n                                            <s>N</s>: {' '}\r\n                                            {\r\n                                        calcuAmt(staffJournals)\r\n                                            }\r\n                                        </b>\r\n                                    </Typography>\r\n                                </td>\r\n                                <td colSpan={2}></td>\r\n                            </tr>\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                </>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default JournalWidget\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setAccounts, setJournals, setStaffPosted_Journals, setTransactions, setUser } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport JournalFeed from '../components/JournalFeed'\r\nimport JournalWidget from '../components/JournalWidget'\r\n\r\nconst JournalEntryScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n\r\n    // func\r\n    const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_All_Txs = () =>{\r\n        axios.get('/transaction', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(txs =>{\r\n            dispatch(setTransactions(txs.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_All_Posted_Journals =() =>{\r\n        axios.get('/journal', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(journals =>{\r\n            dispatch(setJournals(journals.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_All_Staff_Posted_Journals =() =>{\r\n        axios.get('/journal/user', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(journals =>{\r\n            dispatch(setStaffPosted_Journals(journals.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n       return (\r\n        get_AllAccounts(),\r\n        get_Session(),\r\n        get_All_Txs()\r\n       )\r\n       \r\n    }, [])\r\n    \r\n    useEffect(() =>{\r\n        get_All_Posted_Journals()\r\n        get_All_Staff_Posted_Journals()\r\n    }, [open])\r\n\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <JournalFeed\r\n                setOpen={setOpen}\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <JournalWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JournalEntryScreen\r\n","// MUI Stuff\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectPendingSales, selectToken } from \"../appState/appSlice\";\r\nimport AppBackdrop from \"./global/AppBackDrop\";\r\nimport AppHeader from \"./global/AppHeader\";\r\n\r\nconst MdFeed = ({ setApplicant, setApplication, isWidget, setIswidget }) => {\r\n  const sales = useSelector(selectPendingSales);\r\n  const token = useSelector(selectToken);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const getCustomerById = (id, applicant) => {\r\n    setOpen(true);\r\n    axios\r\n      .get(`/customer/${parseInt(id)}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((customer) => {\r\n        setOpen(false);\r\n        return (\r\n          setApplicant(customer.data[0]),\r\n          setApplication(applicant),\r\n          setIswidget(true)\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        setOpen(false);\r\n        return error;\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={`${isWidget ? \"isapp__Feed\" : \"app__Feed\"}`}>\r\n      <AppBackdrop open={open} setOpen={setOpen} />\r\n      <AppHeader title=\"Applications\" />\r\n      <section className=\"app__WidgetContainer\">\r\n        <div className=\"m-2 mt-3\">\r\n          <table\r\n            className=\"table-hover table-bordered\"\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <thead>\r\n              <th\r\n                style={{ border: \"1px solid #F7F7F7F7\", textAlign: \"center\" }}\r\n              >\r\n                #\r\n              </th>\r\n              <th\r\n                style={{ border: \"1px solid #F7F7F7F7\", textAlign: \"center\" }}\r\n              >\r\n                Customer\r\n              </th>\r\n              {!isWidget && (\r\n                <th\r\n                  style={{ border: \"1px solid #F7F7F7F7\", textAlign: \"center\" }}\r\n                >\r\n                  Property\r\n                </th>\r\n              )}\r\n              {!isWidget && (\r\n                <th\r\n                  style={{ border: \"1px solid #F7F7F7F7\", textAlign: \"center\" }}\r\n                >\r\n                  Due Date\r\n                </th>\r\n              )}\r\n              <th\r\n                style={{ border: \"1px solid #F7F7F7F7\", textAlign: \"center\" }}\r\n              >\r\n                Amount\r\n              </th>\r\n              <th\r\n                style={{ border: \"1px solid #F7F7F7F7\", textAlign: \"center\" }}\r\n              >\r\n                Paid\r\n              </th>\r\n              <th\r\n                style={{ border: \"1px solid #F7F7F7F7\", textAlign: \"center\" }}\r\n              >\r\n                Action\r\n              </th>\r\n            </thead>\r\n            <tbody>\r\n              {sales &&\r\n                sales.map((sale, index) => {\r\n                  const {\r\n                    applicant_name,\r\n                    property_name,\r\n                    due_date,\r\n                    amount,\r\n                    amount_paid,\r\n                    applicant,\r\n                  } = sale;\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td> {index + 1} </td>\r\n                      <td style={{ color: \"#2A3F54\" }}>{applicant_name}</td>\r\n                      {!isWidget && (\r\n                        <td style={{ color: \"#2A3F54\" }}>{property_name}</td>\r\n                      )}\r\n                      {!isWidget && (\r\n                        <td>{new Date(due_date).toLocaleDateString()}</td>\r\n                      )}\r\n                      <td>\r\n                        <Typography style={{ color: \"2A3F54\" }}>\r\n                          {parseInt(amount).toLocaleString()}\r\n                        </Typography>\r\n                      </td>\r\n                      <td>\r\n                        <Typography style={{ color: \"#20c997\" }}>\r\n                          {parseInt(amount_paid).toLocaleString()}\r\n                        </Typography>\r\n                      </td>\r\n                      <td\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        <div>\r\n                          <Tooltip title={`View ${applicant_name}`}>\r\n                            <IconButton\r\n                              onClick={() => getCustomerById(applicant, sale)}\r\n                              size=\"small\"\r\n                            >\r\n                              {\" \"}\r\n                              <span className=\"fa fa-eye fa-1x p-1\" />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MdFeed;\r\n","import { Button, Checkbox, FormLabel, Grid, Paper, TextField, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Fragment } from 'react'\r\n\r\nconst Receipt = ({ sale_uuid, amount, date, applicant_name, property_name }) => {\r\n    return (\r\n        <Fragment>\r\n            <Grid item lg={12} md={12} sm={12}>\r\n                <Paper className='p-2 mb-5'>\r\n                    <div style={{ display: 'flex', alignItems: 'center',\r\n                        flexDirection: 'column'\r\n                    }}>\r\n                        <Typography variant='h3'>\r\n                            SANTOS ESTATE LTD.\r\n                        </Typography>\r\n                        <Typography variant='p'>\r\n                            Suite B22 AJB Mall, Gudu District, Abuja\r\n                        </Typography>\r\n                        <Typography variant='caption'>\r\n                            Tel: 08036488807, 08023058629\r\n                        </Typography>\r\n                        <div style={{display: 'flex', alignItems: 'center'}}>\r\n                            <Button variant='contained' style={{background: '#2A3F54', \r\n                                color: 'white'}}>\r\n                                CASH RECEIPT\r\n                            </Button>\r\n                            <Typography style={{marginLeft: '10px'}}>\r\n                                <b>NO: {sale_uuid} </b>\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{display: 'flex'}}>\r\n                        <p>\r\n                            Date: </p>\r\n                            <TextField \r\n                                fullWidth\r\n                                disabled\r\n                                className='ml-3'\r\n                                value={new Date(date).toLocaleDateString()}\r\n                                size='small'\r\n                            />\r\n                        \r\n                    </div>\r\n                    <div style={{display: 'flex'}}>\r\n                        <p>\r\n                            From: </p>\r\n                            <TextField\r\n                                disabled\r\n                                fullWidth\r\n                                size='small'\r\n                                value={applicant_name}\r\n                                className='ml-3'\r\n                            />\r\n                        \r\n                    </div>\r\n                    <div style={{display: 'flex'}}>\r\n                        <p>\r\n                            Sum:  </p>\r\n                            <TextField \r\n                                fullWidth\r\n                                disabled\r\n                                size='small'\r\n                                className='ml-3'\r\n                                value={Math.round(parseInt(amount))}\r\n                            />\r\n                        \r\n                    </div>\r\n                    <div style={{display: 'flex'}}>\r\n                        \r\n                            <TextField \r\n                                fullWidth\r\n                                size='small'\r\n                                disabled\r\n                            />\r\n                            <span>Naira</span>\r\n                            <TextField \r\n                            disabled \r\n                            value={`00.00`}\r\n                            className='ml-5'\r\n                            /> Kobo\r\n                        \r\n                    </div>\r\n                    <div style={{display: 'flex'}}>\r\n                            <FormLabel> Being payment for </FormLabel>\r\n                            <TextField \r\n                                fullWidth\r\n                                disabled\r\n                                size='small'\r\n                                value={property_name}\r\n                            />\r\n                        \r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center',\r\n                    justifyContent: 'space-between'}}>\r\n                        Cheque: <Checkbox style={{border: '1px solid color: black', \r\n                                                    background: '#2A3F54'}} /> \r\n                        Cash: <Checkbox style={{border: '1px solid color: black', \r\n                                                    background: '#2A3F54'}} />\r\n                        <div\r\n                        style={{border: '2px solid black'}}\r\n                        >\r\n                            <s>N</s><input\r\n                                readOnly\r\n                                value={Math.round(parseInt(amount))}\r\n                                style={{ border: 'none', outline: 'none', margin: '5px' }}\r\n                            /> :K\r\n                        </div>\r\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                            <TextField />\r\n                            <FormLabel>\r\n                                Receiver's Signature\r\n                            </FormLabel>\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n            </Grid>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Receipt\r\n","import { Button, Grid, IconButton, } from '@material-ui/core'\r\nimport { Close, } from '@material-ui/icons'\r\nimport { MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader } from 'mdbreact'\r\nimport React from 'react'\r\nimport Receipt from './Receipt'\r\n\r\nconst CashReceipt = ({ rows, isOpen, setIsOpen}) => {\r\n    return (\r\n        <div>\r\n            <MDBModal isOpen={isOpen} size='lg'  centered\r\n            >\r\n                <MDBModalHeader\r\n                    style={{ top: '0', position: 'sticky', zIndex: 222,\r\n                    background: '#2A3F54', color: 'white'\r\n                 }}\r\n                >Receipts <sup style={{color: '#20c997'}}> {rows && rows.length} </sup> </MDBModalHeader>\r\n                <MDBModalBody>\r\n                    <Grid container>\r\n                        \r\n                        {\r\n                            rows&&\r\n                            rows.map((row, index) =>{\r\n                                return (\r\n                                    <Receipt key={index} {...row} />\r\n                                )\r\n                            })\r\n                        }\r\n                       \r\n                    </Grid>\r\n                </MDBModalBody>\r\n                <MDBModalFooter>\r\n                    \r\n                    <Button\r\n                        variant='contained'\r\n                        \r\n                        style={{background: '#2A3F54', \r\n                        color: 'white', marginRight: '25px'}}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <IconButton color='secondary'\r\n                        onClick={() =>setIsOpen(!isOpen)}\r\n                    >\r\n                        <Close color='action' />\r\n                    </IconButton>\r\n                </MDBModalFooter>\r\n            </MDBModal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CashReceipt\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  Grid,\r\n  IconButton,\r\n  Paper,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectBuildCategories,\r\n  selectPropServices,\r\n  selectToken,\r\n  selectUser,\r\n} from \"../appState/appSlice\";\r\nimport AppSnackbar from \"./global/AppSnackbar\";\r\nimport AppWidgetHeader from \"./global/AppWidgetHeader\";\r\nimport CashReceipt from \"./global/CashReceipt\";\r\n\r\nconst MdWidget = ({\r\n  applicant,\r\n  application,\r\n  open,\r\n  setOpen,\r\n  isWidget,\r\n  setIswidget,\r\n}) => {\r\n  const user = useSelector(selectUser);\r\n  const token = useSelector(selectToken);\r\n  const propServices = useSelector(selectPropServices);\r\n  const buildCategories = useSelector(selectBuildCategories);\r\n  const [success, setSuccess] = useState(false);\r\n  const [message, setMessage] = useState();\r\n  const [isOpen, setIsopen] = useState(false);\r\n  const [step, setStep] = useState(1);\r\n  const [plans, setPlans] = useState();\r\n\r\n  // handle post\r\n  const handleApproval = (e) => {\r\n    e.preventDefault();\r\n    setOpen(true);\r\n    const body = {\r\n      id: application.id,\r\n    };\r\n    axios\r\n      .post(`/sale/update`, body, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        setMessage(result.data.message);\r\n        setSuccess(true);\r\n        setOpen(false);\r\n        setIswidget(!isWidget);\r\n      })\r\n      .catch((error) => {\r\n        setOpen(false);\r\n        if (error) {\r\n          return error.response.statusText;\r\n        }\r\n      });\r\n  };\r\n\r\n  // func\r\n  const get_Sales_Scheldules = (uuid) => {\r\n    axios\r\n      .get(`/sale/scheldule/${uuid}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((scheluls) => {\r\n        setPlans(scheluls.data);\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    return get_Sales_Scheldules(application.uuid);\r\n  }, [applicant, application]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {!applicant && (\r\n        <div className=\"app__Widget\">\r\n          <Typography color=\"error\" variant=\"h6\">\r\n            Invalid Customer\r\n          </Typography>\r\n        </div>\r\n      )}\r\n      {applicant && (\r\n        <div className=\"app__Widget\">\r\n          <AppWidgetHeader\r\n            isWidget={isWidget}\r\n            setIswidget={setIswidget}\r\n            title=\"Application Form\"\r\n          />\r\n\r\n          <CashReceipt rows={plans} isOpen={isOpen} setIsOpen={setIsopen} />\r\n          <AppSnackbar open={success} setOpen={setSuccess} message={message} />\r\n\r\n          <div className=\"row align-items-center justify-content-center d-flex m-1\"></div>\r\n          <Grid container alignItems=\"center\" justify=\"center\">\r\n            <Grid item lg={11} md={11} sm={12}>\r\n              <Paper className=\"p-2\">\r\n                <Grid item lg={12} md={12} sm={12}>\r\n                  <Grid container alignItems=\"center\" justify=\"center\">\r\n                    {step == 1 && (\r\n                      <Grid\r\n                        item\r\n                        lg={9}\r\n                        md={9}\r\n                        sm={12}\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          flexDirection: \"column\",\r\n                        }}\r\n                      >\r\n                        <Avatar\r\n                          style={{\r\n                            width: \"80px\",\r\n                            height: \"80px\",\r\n                            boxSizing: \"border-box\",\r\n                            boxShadow: \"0px 0px 1px 0px #000\",\r\n                          }}\r\n                        />\r\n\r\n                        <div\r\n                          className=\"mt-1 p-1\"\r\n                          style={{\r\n                            color: \"white\",\r\n                            background: \"#2A3F54\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            height: \"40px\",\r\n                            justifyContent: \"center\",\r\n                            width: \"80%\",\r\n                            margin: \"auto\",\r\n                            boxSizing: \"border-box\",\r\n                            boxShadow: \"0px 0px 1px 0px #000\",\r\n                          }}\r\n                        >\r\n                          <h6>APPLICATION FORM</h6>\r\n                        </div>\r\n\r\n                        <div\r\n                          className=\"mt-5 p-1\"\r\n                          style={{\r\n                            color: \"white\",\r\n                            background: \"#2A3F54\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            height: \"40px\",\r\n                            justifyContent: \"center\",\r\n                            width: \"80%\",\r\n                            margin: \"auto\",\r\n                            boxSizing: \"border-box\",\r\n                            boxShadow: \"0px 0px 5px 0px #000\",\r\n                          }}\r\n                        >\r\n                          <h6>A. PERSONAL DATA</h6>\r\n                        </div>\r\n                      </Grid>\r\n                    )}\r\n\r\n                    {step == 1 && (\r\n                      <Grid\r\n                        item\r\n                        lg={3}\r\n                        md={3}\r\n                        sm={12}\r\n                        style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                      >\r\n                        <Avatar\r\n                          variant=\"square\"\r\n                          alt={applicant && applicant.customer_name[0]}\r\n                          src={applicant && applicant.avatar}\r\n                          style={{\r\n                            width: \"100px\",\r\n                            height: \"100px\",\r\n                            boxSizing: \"border-box\",\r\n                            boxShadow: \"0px 0px 1px 0px #000\",\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                    )}\r\n                  </Grid>\r\n\r\n                  {step == 1 && (\r\n                    <Grid container spacing={1} className=\"mt-3\">\r\n                      <Grid item lg={6} md={6} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          value={applicant && applicant.customer_name}\r\n                          variant=\"outlined\"\r\n                          label=\"Name of Applicant\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={6} md={6} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.business_employer_name}\r\n                          label=\"Business Name/ RC. No\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={12} md={12} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.address_1}\r\n                          label=\"Residential Address:\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={6} md={6} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.phone_no}\r\n                          label=\"Phone No.\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={6} md={6} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.customer_email}\r\n                          label=\"Email Address:\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={6} md={6} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.customer_sex}\r\n                          label=\"Gender\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={6} md={6} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.customer_marital}\r\n                          label=\"Marital Status\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={6} md={6} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.country}\r\n                          label=\"Nationality:\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={6} md={6} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.customer_state}\r\n                          label=\"State of Origin:\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={12} md={12} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.customer_address}\r\n                          label=\"Permanent Home Address\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={12} md={12} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.postal_address}\r\n                          label=\"Postal Address:\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={6} md={6} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.occupation}\r\n                          label=\"Occupation:\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={6} md={6} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.place_work}\r\n                          label=\"Place of Work:\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={6} md={6} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.next_kin_name}\r\n                          label=\"Name of Next Kin:\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={6} md={6} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.next_kin_relate}\r\n                          label=\"Related:\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={12} md={12} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          disabled\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          value={applicant && applicant.next_kin_addrss}\r\n                          label=\"Next of Kin Address\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  <Grid item lg={12} md={12} sm={12}>\r\n                    <Grid container>\r\n                      {step == 2 && (\r\n                        <Grid\r\n                          item\r\n                          lg={12}\r\n                          md={12}\r\n                          sm={12}\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            flexDirection: \"column\",\r\n                          }}\r\n                        >\r\n                          <div\r\n                            className=\"mt-2 p-1\"\r\n                            style={{\r\n                              color: \"white\",\r\n                              background: \"#2A3F54\",\r\n                              display: \"flex\",\r\n                              height: \"40px\",\r\n                              justifyContent: \"center\",\r\n                              width: \"100%\",\r\n                              boxSizing: \"border-box\",\r\n                              boxShadow: \"0px 0px 5px 0px #000\",\r\n                            }}\r\n                          >\r\n                            <h6>B.SELECT PROPERTY</h6>\r\n                          </div>\r\n                          <div className=\"mt-3\" />\r\n                          <FormLabel>Select Property</FormLabel>\r\n                          <Select\r\n                            fullWidth\r\n                            name=\"property\"\r\n                            variant=\"outlined\"\r\n                            value={application.property}\r\n                            onChange={(e) => {}}\r\n                            style={{ height: \"40px\", width: \"100%\" }}\r\n                          >\r\n                            {propServices &&\r\n                              propServices.map((ps, index) => {\r\n                                const { id, name } = ps;\r\n                                return (\r\n                                  <option key={index} value={id}>\r\n                                    {\" \"}\r\n                                    {name}{\" \"}\r\n                                  </option>\r\n                                );\r\n                              })}\r\n                          </Select>\r\n                          <FormLabel className=\"mt-3\">Amount</FormLabel>\r\n                          <TextField\r\n                            disabled\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            value={application.amount}\r\n                            placeholder=\"Amount\"\r\n                          />\r\n                          <FormLabel className=\"mt-3\">Date</FormLabel>\r\n                          <TextField\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            name=\"sale_date\"\r\n                            value={new Date(\r\n                              application.sale_date\r\n                            ).toLocaleDateString()}\r\n                            placeholder=\"Date\"\r\n                            disabled\r\n                          />\r\n\r\n                          <FormLabel className=\"mt-3\">Select Term</FormLabel>\r\n                          <Select\r\n                            fullWidth\r\n                            name=\"period\"\r\n                            variant=\"outlined\"\r\n                            value={application.period}\r\n                            style={{\r\n                              height: \"40px\",\r\n                              width: \"100%\",\r\n                              margin: \"auto\",\r\n                            }}\r\n                          >\r\n                            <option value={7}>7 Days</option>\r\n                            <option value={14}>14 Days</option>\r\n                            <option value={21}>21 Days</option>\r\n                            <option value={28}>28 Days</option>\r\n                            <option value={30}>30 Days</option>\r\n                            <option value={60}>60 Days</option>\r\n                            <option value={90}>90 Days</option>\r\n                            <option value={120}>120 Days</option>\r\n                            <option value={150}>150 Days</option>\r\n                            <option value={180}>180 Days</option>\r\n                            <option value={210}>210 Days</option>\r\n                            <option value={240}>240 Days</option>\r\n                            <option value={270}>270 Days</option>\r\n                            <option value={300}>300 Days</option>\r\n                            <option value={330}>330 Days</option>\r\n                            <option value={360}>360 Days</option>\r\n                          </Select>\r\n                          <FormLabel className=\"mt-3\">Due Date</FormLabel>\r\n                          <TextField\r\n                            disabled\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            value={new Date(\r\n                              application.due_date\r\n                            ).toLocaleDateString()}\r\n                            placeholder=\"Due Date\"\r\n                          />\r\n                          <div>\r\n                            <IconButton onClick={() => setIsopen(true)}>\r\n                              <span className=\"fa fa-eye\" />\r\n                            </IconButton>\r\n                          </div>\r\n                        </Grid>\r\n                      )}\r\n\r\n                      {step == 2 && (\r\n                        <Grid\r\n                          item\r\n                          lg={12}\r\n                          md={12}\r\n                          sm={12}\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            flexDirection: \"column\",\r\n                          }}\r\n                        >\r\n                          <div\r\n                            className=\"mt-2 mb-2 p-1\"\r\n                            style={{\r\n                              color: \"white\",\r\n                              background: \"#2A3F54\",\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              height: \"40px\",\r\n                              justifyContent: \"center\",\r\n                              width: \"100%\",\r\n                              margin: \"auto\",\r\n                              boxSizing: \"border-box\",\r\n                              boxShadow: \"0px 0px 5px 0px #000\",\r\n                            }}\r\n                          >\r\n                            <h6>C. CATEGORIES OF BUILDING</h6>\r\n                          </div>\r\n\r\n                          {buildCategories &&\r\n                            buildCategories.map((bcategory, index) => {\r\n                              const { id, name } = bcategory;\r\n                              return (\r\n                                <div className=\"d-flex ml-5\" key={index}>\r\n                                  <FormControlLabel\r\n                                    control={\r\n                                      <Checkbox\r\n                                        name=\"build_category\"\r\n                                        checked={\r\n                                          application.build_category ==\r\n                                          bcategory.id\r\n                                        }\r\n                                        style={{\r\n                                          border: \"1px solid color: black\",\r\n                                          background: \"#2A3F54\",\r\n                                        }}\r\n                                      />\r\n                                    }\r\n                                    label={name}\r\n                                  />\r\n                                </div>\r\n                              );\r\n                            })}\r\n                        </Grid>\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {step == 2 && (\r\n                    <Grid\r\n                      item\r\n                      lg={12}\r\n                      md={12}\r\n                      sm={12}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        flexDirection: \"column\",\r\n                      }}\r\n                    >\r\n                      <div\r\n                        className=\"mt-5 p-1\"\r\n                        style={{\r\n                          color: \"white\",\r\n                          background: \"#2A3F54\",\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          height: \"40px\",\r\n                          justifyContent: \"center\",\r\n                          width: \"50%\",\r\n                          margin: \"auto\",\r\n                          boxSizing: \"border-box\",\r\n                          boxShadow: \"0px 0px 5px 0px #000\",\r\n                        }}\r\n                      >\r\n                        <h6>D. MODE OF PAYMENT</h6>\r\n                      </div>\r\n                    </Grid>\r\n                  )}\r\n                  {step == 2 && (\r\n                    <Grid item lg={12} md={12} sm={12}>\r\n                      <ul className=\"mt-3\">\r\n                        <li>\r\n                          Note That Pament should be made after the developer's\r\n                          approval before allocation. Each applicant is expected\r\n                          to pay for the follwing charges:\r\n                        </li>\r\n                        <li>\r\n                          All Payments should be made to Santos Estate Ltd. and\r\n                          evidence of payment forwarded to our corporate office\r\n                          for issuance of receipt.\r\n                        </li>\r\n                        <li>\r\n                          i have agreed that all refunds shall be limited to the\r\n                          deposit i made, less 10% administrative charges.\r\n                        </li>\r\n                        <li>\r\n                          \"Disclaimer\" SANTOS ESTATE LIMITED shall not be liable\r\n                          for any plot re-allocated if terms and conditions are\r\n                          not obligated timeously.\r\n                        </li>\r\n                      </ul>\r\n                    </Grid>\r\n                  )}\r\n                  {step == 2 && (\r\n                    <Grid\r\n                      item\r\n                      lg={12}\r\n                      md={12}\r\n                      sm={12}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        flexDirection: \"column\",\r\n                      }}\r\n                    >\r\n                      <div\r\n                        className=\"mt-5 p-1\"\r\n                        style={{\r\n                          color: \"white\",\r\n                          background: \"#2A3F54\",\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          height: \"40px\",\r\n                          justifyContent: \"center\",\r\n                          width: \"50%\",\r\n                          margin: \"auto\",\r\n                          boxSizing: \"border-box\",\r\n                          boxShadow: \"0px 0px 5px 0px #000\",\r\n                        }}\r\n                      >\r\n                        <h6>D. DECLARATION</h6>\r\n                      </div>\r\n                    </Grid>\r\n                  )}\r\n                  {step == 2 && (\r\n                    <Grid item lg={12} md={12} sm={12} className=\"mt-3\">\r\n                      <ul style={{ listStyle: \"none\" }}>\r\n                        <li>\r\n                          I/We{\" \"}\r\n                          <input\r\n                            readOnly\r\n                            value={applicant.customer_name}\r\n                            style={{\r\n                              border: \"none\",\r\n                              borderBottom: \"1px solid black\",\r\n                              outline: \"none\",\r\n                            }}\r\n                          />\r\n                          whose name and address appeared above have declared\r\n                          that the above statements are true and correct to the\r\n                          best of any knowledge, and i promise to abide by all\r\n                          rules and regulations given by the Developer\r\n                        </li>\r\n                      </ul>\r\n                      <div\r\n                        className=\"m-4\"\r\n                        style={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"column\",\r\n                          justifyContent: \"space-between\",\r\n                        }}\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\",\r\n                          }}\r\n                        >\r\n                          <input\r\n                            readOnly\r\n                            style={{\r\n                              border: \"none\",\r\n                              borderBottom: \"1px solid black\",\r\n                              outline: \"none\",\r\n                            }}\r\n                            value={user.username}\r\n                          />\r\n                          <FormLabel>\r\n                            Application Checked By\r\n                            <IconButton size=\"small\">\r\n                              <span\r\n                                className=\"fa fa-pen\"\r\n                                style={{ color: \"#1ABB9C\" }}\r\n                              />\r\n                            </IconButton>\r\n                          </FormLabel>\r\n                        </div>\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\",\r\n                          }}\r\n                        >\r\n                          <input\r\n                            style={{\r\n                              border: \"none\",\r\n                              borderBottom: \"1px solid black\",\r\n                              outline: \"none\",\r\n                            }}\r\n                            value={new Date(\r\n                              application.sale_date\r\n                            ).toLocaleDateString()}\r\n                            readOnly\r\n                          />\r\n                          <FormLabel>Date</FormLabel>\r\n                        </div>\r\n                      </div>\r\n                    </Grid>\r\n                  )}\r\n                  <Grid\r\n                    item\r\n                    lg={12}\r\n                    md={12}\r\n                    sm={12}\r\n                    style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                  >\r\n                    {step == 1 && (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        className=\"m-3\"\r\n                        onClick={() => setStep(2)}\r\n                        style={{ color: \"white\", background: \"#2A3F54\" }}\r\n                      >\r\n                        Next\r\n                      </Button>\r\n                    )}\r\n                    {step == 2 && (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        className=\"m-3\"\r\n                        onClick={() => setStep(1)}\r\n                        color=\"default\"\r\n                      >\r\n                        Previous\r\n                      </Button>\r\n                    )}\r\n                    {step == 2 && (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        className=\"m-3\"\r\n                        onClick={(e) => handleApproval(e)}\r\n                        style={{ color: \"white\", background: \"#2A3F54\" }}\r\n                      >\r\n                        Approve\r\n                      </Button>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n              <div className=\"p-2\" />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MdWidget;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport {\r\n  selectToken,\r\n  setBuildCategories,\r\n  setCustomers,\r\n  setpendingSales,\r\n  setPropServices,\r\n  setUser,\r\n} from \"../appState/appSlice\";\r\nimport AppBackdrop from \"../components/global/AppBackDrop\";\r\nimport SideBarMenu from \"../components/global/SideBarMenu\";\r\nimport MdFeed from \"../components/MdFeed\";\r\nimport MdWidget from \"../components/MdWidget\";\r\n\r\nconst MdApproveScreen = () => {\r\n  const history = useHistory();\r\n  const dispacth = useDispatch();\r\n  const token = useSelector(selectToken);\r\n  const [open, setOpen] = useState(false);\r\n  const [isWidget, setIswidget] = useState(false);\r\n  const [applicant, setApplicant] = useState();\r\n  const [application, setApplication] = useState();\r\n\r\n  // func\r\n  const getProp_Services = () => {\r\n    axios\r\n      .get(\"/prop_service\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((ps) => {\r\n        dispacth(setPropServices(ps.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  // func\r\n  //   const getCustomers = () => {\r\n  //     axios\r\n  //       .get(\"/customer\", {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${token}`,\r\n  //         },\r\n  //       })\r\n  //       .then((customer) => {\r\n  //         dispacth(setCustomers(customer.data));\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         return error;\r\n  //       });\r\n  //   };\r\n\r\n  const getBuildCategories = () => {\r\n    axios\r\n      .get(\"/build_category\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((categories) => {\r\n        dispacth(setBuildCategories(categories.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  // func\r\n  const get_PendingSales = () => {\r\n    axios\r\n      .get(`/sale`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((sales) => {\r\n        dispacth(setpendingSales(sales.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  const get_Session = () => {\r\n    axios\r\n      .get(`/auth/active`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((user) => {\r\n        dispacth(setUser(user.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      return history.push(\"/\");\r\n    }\r\n    return getProp_Services(), getBuildCategories(), get_Session();\r\n  }, []);\r\n  useEffect(() => {\r\n    return get_PendingSales();\r\n  }, [open]);\r\n  return (\r\n    <div className=\"app\">\r\n      <AppBackdrop open={open} />\r\n      <SideBarMenu />\r\n      {/* feed */}\r\n      <MdFeed\r\n        setOpen={setOpen}\r\n        isWidget={isWidget}\r\n        applicant={applicant}\r\n        setIswidget={setIswidget}\r\n        setApplicant={setApplicant}\r\n        setApplication={setApplication}\r\n      />\r\n      {/* widget */}\r\n      {isWidget && (\r\n        <MdWidget\r\n          open={open}\r\n          setOpen={setOpen}\r\n          isWidget={isWidget}\r\n          applicant={applicant}\r\n          application={application}\r\n          setIswidget={setIswidget}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MdApproveScreen;\r\n","import React from 'react'\r\nimport { Avatar, IconButton, ListItem, ListItemAvatar, ListItemText, Paper } from '@material-ui/core'\r\nimport { ChevronRight, HistoryTwoTone } from '@material-ui/icons'\r\nimport { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectCustomers } from '../appState/appSlice'\r\nconst CustomerCard = ({post, id, name, cusID, code, amount_paid, avatar, handle_Set_Ticket}) => {\r\n    const customers = useSelector(selectCustomers)\r\n    const get_Avatar = (ID) =>{\r\n        const avatar = customers && customers.filter(cus =>cus.id ==ID)[0].avatar\r\n        return avatar\r\n    }\r\n    return (\r\n       <Fragment>\r\n            <Paper className='mb-2' \r\n                style={{\r\n                    background: '#F7F7F7F7', \r\n                }}\r\n            >\r\n                <ListItem button\r\n                    onClick={() => handle_Set_Ticket? handle_Set_Ticket(cusID, code, amount_paid): {}}\r\n                >\r\n                    <ListItemAvatar>\r\n                        <Avatar \r\n                            alt={name}\r\n                            src={get_Avatar(cusID)}\r\n                        />\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                        primary={name}\r\n                    />\r\n                    <Link to={`/sales/tx/${id}/${name}`}>\r\n                        <IconButton size='small'>\r\n                            <HistoryTwoTone \r\n                                style={{color: '#20c997'}}\r\n                            />\r\n                        </IconButton>\r\n                    </Link>\r\n                    {\r\n                        post&&\r\n                        <IconButton size='small'>\r\n                            <ChevronRight />\r\n                        </IconButton>\r\n                    }\r\n                </ListItem>\r\n            </Paper>\r\n        </Fragment>\r\n)\r\n}\r\n\r\nexport default CustomerCard\r\n","import { Avatar, Button, Checkbox, Divider, FormLabel, Grid, IconButton, Paper, TextField, Typography } from '@material-ui/core'\r\nimport { CheckCircle, Close, Print } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectUser, selectAccounts } from '../appState/appSlice'\r\n\r\nconst PostingTicket = ({ data, message, Error,\r\n        handleChange, handlePost, setData, setMessage\r\n    }) => {\r\n    const user = useSelector(selectUser)\r\n    const accounts = useSelector(selectAccounts);\r\n    const printReceipt =()=>{\r\n        window.print()\r\n    }\r\n    return (\r\n        <Grid item lg={12} md={12} sm={12} >\r\n            <Paper className='p-2 mb-3 printerarea'>\r\n                <div style={{ \r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    flexDirection: 'column'\r\n                }}>\r\n                    <Typography variant='h3'>\r\n                        SANTOS ESTATE LTD.\r\n                    </Typography>\r\n                    <Typography variant='p'>\r\n                        Suite B22 AJB Mall, Gudu District, Abuja\r\n                    </Typography>\r\n                    <Typography variant='caption'>\r\n                        Tel: 08036488807, 08023058629\r\n                    </Typography>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        {\r\n                            message && \r\n                            <IconButton size='small'>\r\n                                <CheckCircle style={{color: '#20c997'}} />\r\n                            </IconButton>\r\n                        }\r\n                        <Button variant='contained' style={{background: '#2A3F54', \r\n                            color: 'white'}}>\r\n                            CASH RECEIPT\r\n                        </Button>\r\n                        <Typography style={{marginLeft: '10px'}}>\r\n                            <b>NO: {data.rcpt_no} </b>\r\n                        </Typography>\r\n                    </div>\r\n                </div>\r\n                <div style={{display: 'flex'}}>\r\n                    <p\r\n                        style={{\r\n                            flex: 1\r\n                        }}\r\n                    >InvNo: </p>\r\n                        <TextField \r\n                            fullWidth\r\n                            type='text'\r\n                            placeholder='Slip, Ticket, Receipt Or Invoice No...'\r\n                            className='ml-3'\r\n                            name='ticket_no'\r\n                            value={data.ticket_no}\r\n                            size='small'\r\n                            onChange={e =>handleChange(e)}\r\n                        />\r\n                    <p>  Date: </p>\r\n                        <TextField \r\n                            fullWidth\r\n                            type='date'\r\n                            placeholder='Tx Date'\r\n                            className='ml-3'\r\n                            name='tx_date'\r\n                            value={data.tx_date}\r\n                            size='small'\r\n                            onChange={e =>handleChange(e)}\r\n                        />\r\n                </div>\r\n                <div style={{display: 'flex'}}>\r\n                    <p>\r\n                        From: </p>\r\n                        <TextField\r\n                            fullWidth\r\n                            size='small'\r\n                            placeholder='Customer(client)'\r\n                            value={data.applicant_name}\r\n                            className='ml-3'\r\n                        />\r\n                    \r\n                </div>\r\n                <div style={{ display: 'flex'}}>\r\n                    <p>Sum:  </p>\r\n                    <TextField\r\n                        fullWidth\r\n                        size='small'\r\n                        type='number'\r\n                        name='amount'\r\n                        className='ml-3'\r\n                        value={data.amount}\r\n                        placeholder='Amount (10000)'\r\n                        value={data.amount}\r\n                        onChange={e =>handleChange(e)}\r\n                        style={{flex: 2}}\r\n                    />\r\n                    <div style={{ \r\n                            display: 'flex',\r\n                        }}\r\n                    >\r\n                        <p>Bank:</p>\r\n                        <select\r\n                            name=\"bank\"\r\n                            placeholder=\"Account\"\r\n                            style={{ border: \"none\" }}\r\n                            value={data.bank}\r\n                            onChange={e =>handleChange(e)}\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {accounts &&\r\n                            accounts.filter(acc => acc.cusID == null)\r\n                            .map((accs, index) => {\r\n                                const { code, name, balance_type} = accs;\r\n                                return (\r\n                                    <option\r\n                                        value={code}\r\n                                        key={index}\r\n                                    >{`${name} (${balance_type})`}</option>\r\n                                );\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div style={{display: 'flex'}}>\r\n                    <div style={{flex: 1, display: 'flex'}}>\r\n                        <p>Amt:</p>\r\n                        <TextField \r\n                            fullWidth\r\n                            size='small'\r\n                            className='ml-3'\r\n                            placeholder='Amount in words'\r\n                            name='amount_in_words'\r\n                            value={data.amount_in_words}\r\n                            onChange={e =>handleChange(e)}\r\n                        />\r\n                    </div>\r\n                    <span>Naira</span>\r\n                    <TextField \r\n                        disabled \r\n                        value={`00.00`}\r\n                        className='ml-5'\r\n                    /> Kobo\r\n                </div>\r\n                <div style={{display: 'flex'}}>\r\n                        <p className='mr-2'> Desc:  </p>\r\n                        <TextField\r\n                            fullWidth\r\n                            multiline\r\n                            size='small'\r\n                            name='description'\r\n                            placeholder='Property'\r\n                            value={data.description}\r\n                            onChange={e =>handleChange(e)}\r\n                        />\r\n                    \r\n                </div>\r\n                <div style={{display: 'flex', alignItems: 'center',\r\n                justifyContent: 'space-between'}}>\r\n                    Cheque: <Checkbox\r\n                                size='small'\r\n                                checked={data.pay_method=='cheque'}\r\n                                onChange={() =>{setData({\r\n                                    ...data,\r\n                                    pay_method: 'cheque'\r\n                                })}}\r\n                                style={{border: '1px solid color: black', \r\n                                background: '#2A3F54'}} \r\n                            /> \r\n                    Cash: <Checkbox\r\n                                size='small' \r\n                                checked={data.pay_method=='cash'}\r\n                                onChange={() =>{setData({\r\n                                    ...data,\r\n                                    pay_method: 'cash'\r\n                                })}}                           \r\n                                style={{border: '1px solid color: black', \r\n                                background: '#2A3F54'}} \r\n                            />\r\n                    Trans: <Checkbox\r\n                                size='small' \r\n                                checked={data.pay_method=='transfer'}\r\n                                onChange={() =>{setData({\r\n                                    ...data,\r\n                                    pay_method: 'transfer'\r\n                                })}}                           \r\n                                style={{border: '1px solid color: black', \r\n                                background: '#2A3F54'}} \r\n                            />\r\n                    <div\r\n                    style={{border: '2px solid black'}}\r\n                    >\r\n                        <s>N</s><input\r\n                            readOnly\r\n                            value={parseInt(data.amount).toLocaleString()}\r\n                            style={{ border: 'none', outline: 'none', margin: '5px' }}\r\n                        /> :K\r\n                    </div>\r\n                    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                        <Avatar src={user.signature} />\r\n                        <FormLabel>\r\n                            Receiver's Signature\r\n                        </FormLabel>\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div\r\n                    className='hide-on-print'\r\n                    style={{display: 'flex', alignItems: 'center', \r\n                        justifyContent: 'center', gap: '30px'}}\r\n                >\r\n                    { Error &&\r\n                    <div\r\n                        className='mt-3'\r\n                        style={{ color: 'white', background: '#F00', \r\n                        borderRadius: '5px', padding: '0 5px 0 5px', height: 35,\r\n                        alignItems: 'center', justifyContent: 'center', display: 'flex',\r\n                        boxSizing: 'border-box', boxShadow: '0 2px 2px 0 #000' }}\r\n                    >\r\n                        {Error}\r\n                    </div>\r\n                    }\r\n                   { !message &&\r\n                    <Button variant='contained'\r\n                            className='mt-3'\r\n                                onClick={e =>handlePost(e)}\r\n                            style={{ color: 'white', background: '#2A3F54', borderRadius: '5px'}}\r\n                        >\r\n                            Post\r\n                        </Button>\r\n                    }\r\n\r\n                    {\r\n                        message &&\r\n                        <Fragment>\r\n                             <Button\r\n                                variant='contained'\r\n                               className='mt-3'\r\n                               endIcon={<Print />}\r\n                                onClick={() =>printReceipt()}\r\n                                style={{ color: 'white', background: '#20c997', borderRadius: '5px'}}\r\n                            >\r\n                                print\r\n                            </Button>\r\n                            <Button\r\n                                className='mt-3'\r\n                                onClick={() =>setMessage(false)}\r\n                                endIcon={<Close color='error' />}\r\n                                variant='outlined' color='secondary'>\r\n                                Clear\r\n                            </Button>\r\n                        </Fragment>\r\n                       \r\n                    }\r\n                </div>\r\n            </Paper>\r\n        </Grid>\r\n  \r\n    )\r\n}\r\n\r\nexport default PostingTicket\r\n","import { Grid, IconButton, Paper } from \"@material-ui/core\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectDuePayments,\r\n  selectTodayTxs,\r\n  selectToken,\r\n  selectTxAccounts,\r\n  selectUser,\r\n  setDuePayments,\r\n} from \"../appState/appSlice\";\r\nimport CustomerCard from \"./CustomerCard\";\r\nimport AppHeader from \"./global/AppHeader\";\r\nimport AppSnackbar from \"./global/AppSnackbar\";\r\nimport PostingTicket from \"./PostingTicket\";\r\nimport TransactionList from \"./TransactionList\";\r\n\r\nconst PostingFeed = ({ setOpen }) => {\r\n  const user = useSelector(selectUser);\r\n  const token = useSelector(selectToken);\r\n  const todayTxs = useSelector(selectTodayTxs)\r\n  const [Error, setError] = useState()\r\n  const [success, setSuccess] = useState(false);\r\n  const [message, setMessage] = useState();\r\n  const [searchKey, setSearchKey] = useState();\r\n  const [txSearch, setTxSearch] = useState();\r\n  const txAccounts = useSelector(selectTxAccounts);\r\n\r\n  const [data, setData] = useState({\r\n    bank: \"\",\r\n    rcpt_no: \"\",\r\n    ticket_no: '',\r\n    tx_date: '',\r\n    tx_type: \"CR\",\r\n    pay_method: \"\",\r\n    amount: \"\",\r\n    description: \"\",\r\n    account_FK: \"\",\r\n    postBy_FK: \"\",\r\n    applicant_name: \"\",\r\n    property_name: \"\",\r\n    due_date: \"\",\r\n    amount_in_words: \"\",\r\n    amount_paid: \"\",\r\n    amount_in_words: \"\",\r\n    signature: \"\",\r\n  });\r\n\r\n  //  func\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setData({\r\n      ...data,\r\n      [name]: value,\r\n    });\r\n  };\r\n  const handle_Set_Ticket = (applicant, code, paid) => {\r\n    const filterduepay =\r\n      txAccounts && txAccounts.filter((due) => due.cusID == applicant);\r\n\r\n    if (filterduepay.length > 0) {\r\n      return setData({\r\n        ...data,\r\n        account_FK: code,\r\n        signature: user && user.signature,\r\n        rcpt_no: filterduepay[0].uuid,\r\n        applicant_name: filterduepay[0].name,\r\n        property_name: filterduepay[0].property_name,\r\n        amount_paid: parseInt(paid),\r\n        description: \"Being payment for \",\r\n      });\r\n    }\r\n  };\r\n\r\n  // handle post\r\n  const handlePost = (e) => {\r\n    e.preventDefault();\r\n    setOpen(true);\r\n    const body = {\r\n      data,\r\n    };\r\n    axios\r\n      .post(\"/transaction\", body, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        setOpen(false);\r\n        setSuccess(true);\r\n        setMessage(result.data.message);\r\n      })\r\n      .catch((error) => {\r\n        setOpen(false);\r\n        if (error) {\r\n          setError(error.response);\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setMessage(\"\");\r\n    setData({\r\n      rcpt_no: \"\",\r\n      ticket_no: '',\r\n      tx_type: \"\",\r\n      pay_method: \"\",\r\n      amount: \"\",\r\n      description: \"\",\r\n      account_FK: \"\",\r\n      tx_date: \"\",\r\n      postBy_FK: \"\",\r\n      amount_in_words: \"\",\r\n    });\r\n  };\r\n\r\n  // handle search\r\n  useEffect(() => {\r\n    const filterTxAccounts =\r\n      txAccounts &&\r\n      txAccounts.filter((txacc) => txacc.name.includes(searchKey));\r\n    if(!filterTxAccounts) return setTxSearch('');\r\n    return setTxSearch(filterTxAccounts);\r\n  }, [searchKey]);\r\n\r\n  useEffect(() =>{\r\n    return setTxSearch('');\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"app__Feed\">\r\n      <AppSnackbar open={success} setOpen={setSuccess} message={message} />\r\n      <AppHeader title=\"Posting\" />\r\n      <div className=\"m-2\">\r\n        {/* search component */}\r\n        <section className=\"search__Container\">\r\n          <div>\r\n            <input\r\n              name=\"search\"\r\n              value={searchKey}\r\n              placeholder=\"Search...\"\r\n              onChange={(e) => setSearchKey(e.target.value)}\r\n            />\r\n            <IconButton size=\"small\" className='hide-on-print'>\r\n              <Search style={{ color: \"GrayText\" }} />\r\n            </IconButton>\r\n          </div>\r\n        </section>\r\n        <Grid container spacing={2}>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            md={3}\r\n            className=\"hide-on-print\"\r\n            style={{ overflow: \"auto\", height: \"90vh\" }}\r\n          >\r\n            {txSearch\r\n              ? txSearch.map((txacc, index) => {\r\n                  return (\r\n                    <CustomerCard\r\n                      post\r\n                      key={index}\r\n                      {...txacc}\r\n                      handle_Set_Ticket={handle_Set_Ticket}\r\n                    />\r\n                  );\r\n                })\r\n              : txAccounts &&\r\n                txAccounts.map((txacc, index) => {\r\n                  return (\r\n                    <CustomerCard\r\n                      post\r\n                      key={index}\r\n                      {...txacc}\r\n                      handle_Set_Ticket={handle_Set_Ticket}\r\n                    />\r\n                  );\r\n                })}\r\n          </Grid>\r\n          <Grid item lg={9} md={9} style={{ marginTop: -40,  overflow: \"auto\", height: \"90vh\"}}>\r\n            <div\r\n              style={{\r\n                top: -20,\r\n                position: 'sticky',\r\n                backgroundColor: '#ededed'\r\n            }}>\r\n              <PostingTicket\r\n                message={message}\r\n                setMessage={handleClear}\r\n                handlePost={handlePost}\r\n                handleChange={handleChange}\r\n                data={data}\r\n                Error={Error}\r\n                setData={setData}\r\n              />\r\n            </div>\r\n            \r\n\r\n           {\r\n             todayTxs &&\r\n             <div  className='hide-on-print'>\r\n              <TransactionList \r\n                styles={{\r\n                  top: '70%',\r\n                  position: 'sticky',\r\n                  backgroundColor: '#ededed'\r\n                }}\r\n              />\r\n             </div>\r\n           }\r\n\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostingFeed;\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken,  setAccounts,  setCustomers, setDuePayments, settodayTxs, setTxAccounts, setUser, } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport PostingFeed from '../components/PostingFeed'\r\n\r\nconst PostingScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n\r\n     // func\r\n    const getCustomers = () =>{\r\n        axios.get('/customer', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(asset =>{\r\n            dispatch(setCustomers(asset.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    // func\r\n\r\n    const get_Tx_Accounts = () =>{\r\n        axios.get('/transaction/accounts', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setTxAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Todays_Tx = () =>{\r\n        axios.get('/transaction/today', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(txs =>{\r\n            dispatch(settodayTxs(txs.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n     // func\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    const handle_Get_Due_Repayment = () =>{\r\n        axios.get(`/transaction/scheldules`,{\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(dues =>{\r\n            dispatch(setDuePayments(dues.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error) return error.response.statusText\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        getCustomers()\r\n        get_Session()\r\n        \r\n    }, [])\r\n    useEffect(() =>{\r\n       return(\r\n        get_Todays_Tx(),\r\n        get_Tx_Accounts(),\r\n        get_AllAccounts(),\r\n        handle_Get_Due_Repayment()\r\n       )\r\n    }, [open])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} setOpen={setOpen} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <PostingFeed\r\n                setOpen={setOpen}\r\n            />            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostingScreen\r\n","// MUI Stuff\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\nimport Select from '@material-ui/core/Select'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport FormLabel from '@material-ui/core/FormLabel'\r\nimport FormGroup from '@material-ui/core/FormGroup'\r\n\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectToken, } from '../../appState/appSlice'\r\nimport AppSnackbar from '../global/AppSnackbar'\r\n\r\nconst PropServiceForm = ({ open, setOpen}) => {\r\n    const token = useSelector(selectToken)\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [success, setSuccess] = useState()\r\n    const [error, setError] = useState()\r\n    const [locations, setLocations] = useState()\r\n    const [body, setBody] = useState({\r\n        name: ''\r\n    })\r\n    const [add, setAdd] = useState(false)\r\n    const [psData, setPsData] = useState({\r\n        ps_type: '',\r\n        name: '',\r\n        sku: '',\r\n        category: '',\r\n        location: '',\r\n        product_class: '',\r\n        quantity: '',\r\n        qty_athDate: '',\r\n        reorder_point: '',\r\n        purchase_info: '',\r\n        cost: '',\r\n        description: '',\r\n        sale_options: '',\r\n        sale_price: '',\r\n        purchase_option: '',\r\n        asset_account_FK: '',\r\n        createdBy_FK: '',\r\n        expense_acc_FK: '',\r\n        income_acc_FK: '',\r\n        vendor_FK: '',\r\n    })\r\n    // func\r\n    const handleGet_Locations = () =>{\r\n        axios.get('/location', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(locations =>{\r\n            setLocations(locations.data)\r\n        })\r\n        .catch(error =>{\r\n            if(error) {\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const handle_Add_Location = () =>{\r\n        axios.post('/location', body, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(locations =>{\r\n            setBody('')\r\n            setAdd(false)\r\n        })\r\n        .catch(error =>{\r\n            if(error) {\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleChange = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n\r\n        setPsData({\r\n            ...psData,\r\n            [name]: value\r\n        })\r\n    }\r\n    const handle_Add_Prop_Service =e =>{\r\n        e. preventDefault()\r\n        // if(Error){\r\n        //     return Error\r\n        // }\r\n        setOpen(true)\r\n        axios.post('/prop_service', psData, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setOpen(false)\r\n            setIsOpen(true)\r\n            setSuccess(result.data.message)\r\n            setPsData({\r\n                ps_type: '',\r\n                name: '',\r\n                sku: '',\r\n                category: '',\r\n                product_class: '',\r\n                quantity: '',\r\n                qty_athDate: '',\r\n                reorder_point: '',\r\n                purchase_info: '',\r\n                cost: '',\r\n                description: '',\r\n                sale_options: '',\r\n                sale_price: '',\r\n                purchase_option: '',\r\n                asset_account_FK: '',\r\n                createdBy_FK: '',\r\n                expense_acc_FK: '',\r\n                income_acc_FK: '',\r\n                vendor_FK: '',\r\n            })\r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            if(error){\r\n                return setError(error.response.statusText)\r\n            }\r\n        })\r\n    }\r\n    useEffect(() =>{\r\n        Object.keys(psData).map(key =>{\r\n            if(psData[key].length <=0){\r\n                return setError('Form not valid')\r\n              \r\n            }\r\n            setError('')\r\n        })\r\n        \r\n    },[psData])\r\n\r\n    useEffect(() =>{\r\n        handleGet_Locations()\r\n    }, [add])\r\n    return (\r\n        <Fragment>\r\n            <AppSnackbar \r\n                open={isOpen} \r\n                setOpen={setIsOpen} \r\n                message={success} \r\n            />\r\n            <form className='mt-3 pl-2 pr-2'>\r\n                <Grid container spacing={2}>\r\n                    {/* <Grid item lg={12} md={12}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Plot Number'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='sku'\r\n                                value={psData.sku}\r\n                                placeholder='Plot number'\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid> */}\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormLabel className='m-2'>Property/Service Type</FormLabel>\r\n                        <FormGroup>\r\n                            <Select style={{height: '40px'}}\r\n                                label='Type'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='ps_type'\r\n                                value={psData.ps_type}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value></option>\r\n                                <option value='service'>Service</option>\r\n                                <option value='property'>Property</option>\r\n                            </Select>\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormLabel>(District)\r\n                            <Tooltip title='Add New District'>\r\n                                <IconButton\r\n                                    onClick={() =>setAdd(!add)}\r\n                                    size='small' className=' ml-2'\r\n                                >\r\n                                    <span className='fa fa-plus-circle'\r\n                                        style={{ color: '#20c997' }}\r\n                                    />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            {\r\n                                add &&\r\n                                <Button\r\n                                    className='ml-4'\r\n                                    onClick={() =>handle_Add_Location()}\r\n                                    size='small' variant='contained'\r\n                                    style={{background: '#2A3F54', color: 'white'}}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            }\r\n                            {\r\n                                add&&\r\n                                <span>\r\n                                    <TextField\r\n                                        value={body.name}\r\n                                        placeholder='District Name'\r\n                                        onChange={e =>setBody({\r\n                                            ...body,\r\n                                            name: e.target.value\r\n                                        })}\r\n                                    />\r\n                                </span>\r\n                            }\r\n                        </FormLabel>\r\n                        {!add && <FormGroup>\r\n                            <Select style={{height: '40px'}}\r\n                                label='Location'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='location'\r\n                                value={psData.location}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value>Select</option>\r\n                               {\r\n                                   locations&&\r\n                                   locations.map((location, index) =>{\r\n                                       const {id, name} = location;\r\n                                       return (\r\n                                        <option key={index} value={id}>{name}</option>\r\n                                       )\r\n                                   })\r\n                               }\r\n                               \r\n                            </Select>\r\n                        </FormGroup>}\r\n                    </Grid>\r\n                    {/* <Grid item lg={6} md={6}>\r\n                        <FormLabel>Property/Service Class</FormLabel>\r\n                        <FormGroup>\r\n                            <Select style={{height: '40px'}}\r\n                                label='Class'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='product_class'\r\n                                value={psData.product_class}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value></option>\r\n                                <option value=\"class1\">Class1</option>\r\n                                <option value=\"class2\">Class</option>\r\n                                <option value=\"class3\">Class3</option>\r\n                            </Select>\r\n                        </FormGroup>\r\n                    </Grid> */}\r\n                    {/* <Grid item lg={6} md={6}>\r\n                        <FormLabel>Income Account</FormLabel>\r\n                        <Select\r\n                            label='Class'\r\n                            size='small'\r\n                            variant='outlined'\r\n                            name='income_acc_FK'\r\n                            fullWidth\r\n                            value={psData.income_acc_FK}\r\n                            onChange={e =>handleChange(e)}\r\n                            style={{height: '40px'}}\r\n                        >\r\n                            <option value=''></option>\r\n                            {\r\n                                accounts&&\r\n                                accounts.map((acc, index) =>{\r\n                                    const { id, name, balance_type } = acc\r\n                                    return <option value={id} key={index} >{`${name} (${balance_type})`}</option>\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </Grid> */}\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Name'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='name'\r\n                                value={psData.name}\r\n                                placeholder='Property/Service Name'\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    {/* <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='SKU'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='sku'\r\n                                value={psData.sku}\r\n                                placeholder='Stock unit'\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid> */}\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label={`Price/Rate ${\r\n                                    parseInt(psData.sale_price).toLocaleString()\r\n                                }`}\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='sale_price'\r\n                                type='number'\r\n                                placeholder='Salling Price'\r\n                                value={psData.sale_price}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    \r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Quantity'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='quantity'\r\n                                placeholder='Product Quantity'\r\n                                value={psData.quantity}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    {/* <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Qty as of Date ?'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='qty_athDate'\r\n                                type='date'\r\n                                placeholder='Qty as of date ?'\r\n                                value={psData.qty_athDate}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid> */}\r\n                    {/* <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Reorder Point'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='reorder_point'\r\n                                placeholder='Qty Reorder Point '\r\n                                value={psData.reorder_point}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid> */}\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label={`Property Cost ${parseInt(psData.cost).toLocaleString()}`}\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='cost'\r\n                                type='number'\r\n                                placeholder='Purchase Cost price'\r\n                                value={psData.cost}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={12} md={12}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Description'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='description'\r\n                                placeholder='Description'\r\n                                value={psData.description}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    {/* <Grid item lg={12} md={12}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Purchase Info'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='purchase_info'\r\n                                placeholder='Purchase Information'\r\n                                value={psData.purchase_info}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid> */}\r\n\r\n                    {/* <Grid item lg={6} md={6}>\r\n                        <FormLabel>Expense Account</FormLabel>\r\n                        <FormGroup>\r\n                            <Select style={{height: '40px'}}\r\n                                label='Sex'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='expense_acc_FK'\r\n                                value={psData.expense_acc_FK}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value>Select</option>\r\n                                {\r\n                                    accounts&&\r\n                                    accounts.map((acc, index) =>{\r\n                                        const { id, name, balance_type } = acc\r\n                                        return <option value={id} key={index} >{`${name} (${balance_type})`}</option>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </FormGroup>\r\n                    </Grid> */}\r\n                    {/* <Grid item lg={6} md={6}>\r\n                        <FormLabel>Inventory Asset Account</FormLabel>\r\n                        <FormGroup>\r\n                            <Select style={{height: '40px'}}\r\n                                label='Inventory asset account'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='asset_account_FK'\r\n                                value={psData.asset_account_FK}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value>Select</option>\r\n                                {\r\n                                    accounts&&\r\n                                    accounts.map((acc, index) =>{\r\n                                        const { id, name, balance_type } = acc\r\n                                        return <option value={id} key={index} >{`${name} (${balance_type})`}</option>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </FormGroup>\r\n                    </Grid> */}\r\n                    {/* <Grid item lg={12} md={12}>\r\n                        <FormLabel>Vendor Buying From</FormLabel>\r\n                        <FormGroup>\r\n                            <Select style={{height: '40px'}}\r\n                                label='Vendor Buying From'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='vendor_FK'\r\n                                value={psData.vendor_FK}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value>Select</option>\r\n                                {\r\n                                    vendors&&\r\n                                    vendors.map((vendor, index) =>{\r\n                                        const { id, vendor_name} = vendor\r\n                                        return <option value={id} key={index} >{`${vendor_name}`}</option>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </FormGroup>\r\n                    </Grid>                             */}\r\n                   \r\n                    <Grid item lg={12} md={12}>\r\n                        {/* {\r\n                            Error&&\r\n                            <Typography variant='caption' color='error'>\r\n                                {Error}\r\n                            </Typography>\r\n                        } */}\r\n                        <Button\r\n                            // disabled={Error}\r\n                            onClick={e =>handle_Add_Prop_Service(e)}\r\n                            color='default' variant='contained'\r\n                            style={{ color: 'white', background: '#2A3F54', width: '100%'}}\r\n                        >\r\n                            Add\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default PropServiceForm\r\n","import React from 'react'\r\nimport PropServiceForm from './form/PropServiceForm'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst PropServiceWidget = ({ open, setOpen, isWidget, setIswidget }) => {\r\n    return (\r\n        <div className='app__Widget'>\r\n            <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Add Property/ Service' \r\n            />\r\n            <section className='app__WidgetContainer'>\r\n                <PropServiceForm\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                />\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PropServiceWidget\r\n","import React from 'react'\r\nimport { Fragment } from 'react'\r\n\r\nconst PropServiceList = ({ index, sale_price, \r\n        description, name, ps_type,cost, quantity, \r\n        active, isWidget\r\n    }) => {\r\n    return (\r\n        <Fragment>\r\n            <tr>\r\n                <td className='p-2'>{index+1} </td>\r\n                <td className='p-2'> {name} </td>\r\n                <td className='p-2'> {ps_type} </td>\r\n                <td className='p-2'> {description} </td>\r\n                <td className='p-2'> {quantity} </td>\r\n                <td className='p-2'> {sale_price.toLocaleString()} </td>\r\n                \r\n            </tr>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default PropServiceList\r\n","// MUI Stuff\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\n// Icons\r\nimport PlusOne from '@material-ui/icons/PlusOne'\r\n\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectLocations, selectPropServices } from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\nimport PropServiceList from './global/PropServiceList'\r\n\r\nconst PropertyServiceFeed = ({ isWidget, setIswidget }) => {\r\n    const propServices = useSelector(selectPropServices)\r\n    const locations = useSelector(selectLocations)\r\n\r\n    const renderPs = (l) =>{\r\n        const fPs = propServices && propServices.filter(ps =>ps.location == l);\r\n        return (\r\n            fPs.map((ps, index) =>(\r\n                <PropServiceList\r\n                    key={index}\r\n                    index={index}\r\n                    {...ps}\r\n                    isWidget={isWidget}\r\n                />\r\n            ))\r\n        )\r\n    }\r\n    return (\r\n        <div className={`${isWidget? 'isapp__Feed': 'app__Feed'}`}>\r\n           <AppHeader title='Property/Service' />\r\n           <div className=\"row align-items-center justify-content-center d-flex m-1\" >\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                    {/* table */}\r\n                    <h3>Property/ Servicer List <span> \r\n                        <Tooltip title='Add New Property/ Service'>\r\n                            <IconButton color='secondary'\r\n                                onClick={() =>setIswidget(!isWidget)}\r\n                            >\r\n                            <PlusOne style={{ color: '#1ABB9C'}} />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        </span></h3> \r\n                        <div className='p-3'>\r\n                        <table className=\"table-small \" style={{width: '100%', }}>\r\n                            <thead style={{position: 'sticky', top: '60px', zIndex: 222, color: 'white', background: '#2A3F54'}}>\r\n                                <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>#</th>\r\n                                <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Name</th>\r\n                                <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Type</th>\r\n                                <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}> Description</th>\r\n                                <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>QTY</th>\r\n                                <th style={{ border: '1px solid #F7F7F7F7', textAlign: 'center' }}>Sale Price</th>\r\n                                {/* <th style={{ border: '1px solid #F7F7F7F7' }}>Purchase Price</th>\r\n                                {!isWidget&&<th style={{ border: '1px solid #F7F7F7F7' }}>Actions</th>} */}\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    locations && locations.map((l, i) =>{\r\n                                        const {name, id} = l;\r\n                                        return (\r\n                                            <Fragment key={i}>\r\n                                                <tr>\r\n                                                    <td colSpan={5}>\r\n                                                        <Typography style={{color: '#20c997'}}>\r\n                                                            {name.toUpperCase()}:\r\n                                                        </Typography>\r\n                                                        \r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td colSpan={5}>\r\n                                                    {\r\n                                                        <table className=\"table-small table-hover\" style={{width: '100%'}}>\r\n                                                        <thead>\r\n                                                            <th></th>\r\n                                                            <th></th>\r\n                                                            <th></th>\r\n                                                            <th> </th>\r\n                                                            <th></th>\r\n                                                            \r\n                                                        </thead>\r\n                                                            <tbody>\r\n                                                                {renderPs(id)}\r\n                                                            </tbody>\r\n                                                       </table>\r\n                                                    }\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </Fragment>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                \r\n                            </tbody>\r\n                        </table>\r\n                        {propServices&& !propServices.length>0&&\r\n                            <div className=\"alert alert-warning\">\r\n                            <h6>No Property or Service Availabe</h6>\r\n                            </div>\r\n                        }\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PropertyServiceFeed\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setAccounts, setLocations, setPropServices, setUser, setVendors } from '../appState/appSlice'\r\nimport PropServiceWidget from '../components/PropServiceWidget'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport PropertyServiceFeed from '../components/PropertyServiceFeed'\r\n\r\nconst PropertyServiceScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n    // func\r\n    const getProp_Services = () =>{\r\n        axios.get('/prop_service', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(ps =>{\r\n            dispatch(setPropServices(ps.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n       // func\r\n       const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const getVendors = () =>{\r\n        axios.get('/vendor', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(vendor =>{\r\n            dispatch(setVendors(vendor.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    const handleGet_Locations = () =>{\r\n        axios.get('/location', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(locations =>{\r\n            dispatch(setLocations(locations.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error) {\r\n                return error\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        getProp_Services()\r\n        get_AllAccounts()\r\n        getVendors()\r\n        get_Session()\r\n        handleGet_Locations()\r\n    },[open])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <PropertyServiceFeed\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <PropServiceWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PropertyServiceScreen\r\n","import { Button, Container, FormLabel, Grid, IconButton, Paper, Select, TextField, Typography } from '@material-ui/core'\r\nimport { Delete, FileCopy, PlusOne, PlusOneOutlined, PlusOneRounded } from '@material-ui/icons'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectAccounts, selectCustomers, selectToken } from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\n\r\nconst ReceivePaymentFeed = ({ isWidget, setIswidget }) => {\r\n    const token = useSelector(selectToken)\r\n    const accounts = useSelector(selectAccounts)\r\n    const customers = useSelector(selectCustomers)\r\n    const [invoice, setInvoice] = useState()\r\n    const recievePayFormTemplate = {description: '', due_date:'', orig_amount: '', amount_pay: '',  };\r\n    const [receivePayForm, setReceivePayform] = useState([recievePayFormTemplate])\r\n    const [data, setData ] = useState({\r\n        customer_FK: '',\r\n        pay_date: '',\r\n        pay_method: '',\r\n        total: '',\r\n        deposit_account: ''\r\n    })\r\n    const handleSetPostData = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setData({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n\r\n    } \r\n\r\n    // func\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total\r\n    }\r\n\r\n    // func\r\n    const addReceivePayFrom = () =>{\r\n        setReceivePayform([\r\n            ...receivePayForm,\r\n            recievePayFormTemplate\r\n        ])\r\n    }\r\n    const handleChange = (e, index) =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n        const updatedreceivePayform = receivePayForm.map((jef, i) => index == i ? Object.assign(jef, {[name]: value}): jef);\r\n        setReceivePayform(updatedreceivePayform)\r\n    }\r\n    const handleRemovereceivePayform = (index) =>{\r\n        const filterreceivePayform = [...receivePayForm];\r\n        filterreceivePayform.splice(index, 1);\r\n        \r\n        setReceivePayform(filterreceivePayform)\r\n    }\r\n    const handleSubmit =e =>{\r\n        console.log(receivePayForm)\r\n    }\r\n\r\n    const get_Customer_Invoice = () =>{\r\n        axios.get(`/invoice/open_invoice/${data.customer_FK}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setInvoice(result.data)\r\n            console.log(result.data)\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        get_Customer_Invoice()\r\n    }, [data.customer_FK])\r\n    return (\r\n        <div className={`${isWidget? 'isapp__Feed': 'app__Feed'}`}>\r\n           <AppHeader title='Receive Payment' />\r\n           <div className=\"row align-items-center justify-content-center d-flex m-1\" >\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                    {/* table */}\r\n                    {/* <h3>Received Payment\r\n                        <span> \r\n                        <IconButton color='secondary'\r\n                            onClick={() =>setIswidget(!isWidget)}\r\n                        >\r\n                        <FileCopy style={{ color: '#1ABB9C'}} />\r\n                        </IconButton></span>\r\n                    </h3>  */}\r\n                        {/* to do make it a component */}\r\n                        <Grid container spacing={2} className='p-3'>\r\n                            <Grid item lg={4} md={4}>\r\n                                <FormLabel>Customer</FormLabel>\r\n                                <select\r\n                                    name='customer_FK'\r\n                                   \r\n                                    placeholder='Customer'\r\n                                    style={{border: 'none'}}\r\n                                    onChange={e =>handleSetPostData(e)}\r\n                                >\r\n                                    <option value=''>Select</option>\r\n                                    {\r\n                                        customers&&\r\n                                        customers.map((cus, index) =>{\r\n                                            const{id, customer_name} = cus\r\n                                            return <option key={index} value={id} > {customer_name} </option>\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </Grid>\r\n                                \r\n                                <Grid item lg={8} md={8}\r\n                                    style={{display: 'flex', \r\n                                    justifyContent: 'flex-end', alignItems: 'flex-end', flexDirection: 'column'}}\r\n                                >\r\n                                    <FormLabel>Received Amount</FormLabel>\r\n                                    <Typography variant='h5'>\r\n                                        <s>N</s>: {\r\n                                            invoice&&\r\n                                            calcuAmt(invoice)\r\n                                        }\r\n                                    </Typography>\r\n                                </Grid>\r\n                                \r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Pay Method</FormLabel>\r\n                                    <select\r\n                                        name='pay_method'\r\n                                        onChange={e =>handleSetPostData(e)}\r\n                                        style={{width: '100%', outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                    >\r\n                                        <option></option>\r\n                                        <option value='cash'>Cash</option>\r\n                                        <option value='cheque'>Cheque</option>\r\n                                    </select>\r\n                                </Grid>\r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Payment Date</FormLabel>\r\n                                    <input\r\n                                        name='pay_date'\r\n                                        type='date'\r\n                                        value={data.pay_date}\r\n                                        onChange={e =>handleSetPostData(e)}\r\n                                        style={{width: '100%', outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item lg={3} md={3}>\r\n                                    <FormLabel>Deposit To</FormLabel>\r\n                                    <select\r\n                                        name='deposit_account'\r\n                                        value={data.deposit_account}\r\n                                        style={{width: '100%', outline: 'none', border: 'none',\r\n                                        height: '30px'}}\r\n                                    >\r\n                                        <option></option>\r\n                                        <option value='cash'>Cash</option>\r\n                                        {\r\n                                            accounts&&\r\n                                            accounts.map((acc, index) =>{\r\n                                                const{id, name} = acc;\r\n                                                return <option key={index} value={id}> {name} </option>\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                </Grid>\r\n                            \r\n                        </Grid>\r\n                        <h5>\r\n                            Details\r\n                        </h5>\r\n                    <Paper>\r\n                        <Container className='p-3'>\r\n                        <table className=\"table-small table-hover table-bordered\" style={{width: '100%'}}>\r\n                            <thead>\r\n                                \r\n                                <th>#</th>\r\n                                {/* <th> {' '} </th> */}\r\n                                <th>Description</th>\r\n                                <th>Due Date</th>\r\n                                <th>Amount (<s>N</s>) </th>\r\n                               \r\n                            </thead>\r\n                            <tbody id='je__Table'>\r\n                                {\r\n                                    invoice && \r\n                                    invoice.map((invoi, index) =>{\r\n                                        const { amount, uuid, due_date } = invoi\r\n                                        return (\r\n                                            <Fragment key={index}>\r\n                                                <tr>\r\n                                                    <td> { index+1} </td>\r\n                                                    <td>\r\n                                                        <Typography variant='p'\r\n                                                            style={{cursor: 'pointer', color: '#20C997'}}\r\n                                                        >\r\n                                                            { `Invoice (${uuid})` }\r\n                                                        </Typography>\r\n                                                    </td>\r\n                                                    <td> { new Date(due_date).toLocaleDateString() } </td>\r\n                                                    <td> { amount } </td>\r\n                                                </tr>\r\n                                            </Fragment>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                {/* {\r\n                                    receivePayForm.map((jef, index) =>(\r\n                                        <tr>\r\n                                            <td>{index+1} </td>\r\n                                            <td\r\n                                                    onClick={() =>addReceivePayFrom()}\r\n                                                >\r\n                                                    <span className='fa fa-plus-circle fa-1x'></span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <select\r\n                                                    name='pro_service'\r\n                                                    value={jef.account}\r\n                                                    placeholder='Account'\r\n                                                    style={{border: 'none'}}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                >\r\n                                                    <option value=''></option>\r\n                                                    {\r\n                                                        accounts&&\r\n                                                        accounts.map((acc, index) =>{\r\n                                                            const { id, name, balance_type } = acc\r\n                                                            return <option value={id} key={index} >{`${name} (${balance_type})`}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </select>\r\n                                            </td>\r\n                                            \r\n                                            <td>\r\n                                                <input\r\n                                                    name='due_date'\r\n                                                    value={jef.due_date}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                            <td>\r\n                                                <input\r\n                                                    name='qty'\r\n                                                    type='number'\r\n                                                    placeholder='Old Amount'\r\n                                                    value={jef.orig_amount}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                            <td>\r\n                                                <input\r\n                                                    name='rate'\r\n                                                    type='number'\r\n                                                    placeholder='Payment Amount'\r\n                                                    value={jef.amount_pay}\r\n                                                    onChange={e =>handleChange(e, index)}\r\n                                                />\r\n                                            </td>\r\n\r\n                                         \r\n                                        </tr>\r\n                                    ))\r\n                                } */}\r\n                            \r\n                            </tbody>\r\n                        </table>\r\n                        {invoice&& !invoice.length>0&&\r\n                            <div className=\"alert alert-warning\">\r\n                            <h6>No Invoice Availabe For Selected Customer</h6>\r\n                            </div>\r\n                        }\r\n                        <Button\r\n                           className='m-3'\r\n                           variant='contained'\r\n                           onClick={e =>handleSubmit(e)}\r\n                           style={{background: '#2A3F54', color: 'white'}}\r\n                        >Save</Button>\r\n                        </Container>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReceivePaymentFeed\r\n","import { Paper } from '@material-ui/core'\r\nimport React from 'react'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst ReceivePaymentWidget = ({ open, setOpen, isWidget, setIswidget }) => {\r\n    return (\r\n        <div className='app__Widget'>\r\n            <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Received Payment' \r\n            />\r\n            <section className='app__WidgetContainer'>\r\n                {/* <AccountCreationForm\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                /> */}\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReceivePaymentWidget\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setAccounts, setCustomers, setUser } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport ReceivePaymentFeed from '../components/ReceivePaymentFeed'\r\nimport ReceivePaymentWidget from '../components/ReceivePaymentWidget'\r\n\r\nconst ReceivePaymentScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n\r\n    // func\r\n    const getCustomers = () =>{\r\n        axios.get('/customer', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(asset =>{\r\n            dispatch(setCustomers(asset.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        get_AllAccounts()\r\n        getCustomers()\r\n        get_Session()\r\n    }, [])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <ReceivePaymentFeed\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <ReceivePaymentWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReceivePaymentScreen\r\n","import { Avatar, ListItemAvatar, Typography} from '@material-ui/core'\r\nimport React, { Fragment } from 'react'\r\nimport Currency from 'react-currency-formatter'\r\n\r\nconst RenderItems = ({id, index, property, buildCategory, location, avatar, amount}) =>{\r\n    return (\r\n       <tr disablePadding   \r\n            sx={{ width: '100%',\r\n            maxWidth: '100%', \r\n            bgcolor: 'background.paper' }}\r\n        >\r\n           <td button className='p-1'\r\n            >\r\n                {property}\r\n            </td>\r\n            <td button className='p-1'\r\n            >\r\n                {location}\r\n            </td>\r\n            <td button className='p-1'\r\n            >\r\n                {buildCategory}\r\n            </td>\r\n            <td button className='p-1'\r\n            >\r\n               <Typography \r\n                    style={{\r\n                        color: '#20c997'\r\n                    }}\r\n                >\r\n                    <Currency \r\n                        currency='NGN'\r\n                        quantity={amount}\r\n                    />\r\n                </Typography>\r\n            </td>\r\n       </tr>\r\n    )\r\n}\r\n\r\nconst CustomerProfile = ({ data: {item, repayment}}) => {\r\n    \r\n    // const { item, avatar, applicant_name, account_FK } =data\r\n    return (\r\n        <Fragment>\r\n            \r\n            <div style={{\r\n                gap: 2,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n               \r\n            }}>\r\n                <div >\r\n                    <ListItemAvatar>\r\n                        <Avatar variant='rounded'  style={{\r\n                            width: 150, \r\n                            height: 150,\r\n                        }}\r\n                        src={repayment[0]?.avatar}\r\n                    />\r\n                    </ListItemAvatar>\r\n                </div>\r\n                <div style={{\r\n                        width: '90%',\r\n                        margin: 'auto'\r\n                    }}\r\n                >\r\n                    <h3 className='text-center'\r\n                        style={{color: '#20c997', fontWeight: 'bold' }}\r\n                    > {repayment[0]?.customer_name} </h3>\r\n               \r\n                    <table className='table-sm border table-hovered' style={{\r\n                        width: '100%'\r\n                    }}>\r\n                        <thead>\r\n                            <th>Property</th>\r\n                            <th>Location</th>\r\n                            <th>Building Category</th>\r\n                            <th>Amount</th>\r\n                        </thead>\r\n                        <tbody>\r\n                        { item &&\r\n                            item.map((propty, index) =>(\r\n                                <RenderItems\r\n                                    index={index}\r\n                                    {...propty} \r\n                                    avatar={repayment[0]?.avatar} />\r\n                            ))\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                 </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CustomerProfile\r\n","import Typography from '@material-ui/core/Typography'\r\nimport React, { Fragment } from 'react'\r\nimport CustomerProfile from './CustomerProfile'\r\n\r\nconst SalePaidHistoryView = ({paymentHistorys}) => {\r\n    return (\r\n        <Fragment>\r\n            {\r\n                paymentHistorys?.repayment?.length > 0 && (\r\n                    <CustomerProfile \r\n                        data={paymentHistorys}\r\n                    />\r\n                )\r\n            }\r\n            <h3 className='text-center'>REPAYMENT</h3>\r\n            <table className='table table-sm  table-hover'>\r\n                <thead>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Description</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Date</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>RCPT. NO.</th>\r\n                    {/* <th style={{ border: '1px solid #F7F7F7F7' }}>Name</th> */}\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Amount (<s>N</s>)</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}> Pay Method </th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}> Status </th>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        paymentHistorys &&\r\n                        paymentHistorys.repayment?.map((pay, index) =>{\r\n                            const { tx_date, description, tx_amount, rcpt_no, pay_method, account_FK, paid } = pay\r\n                            return (\r\n                                <Fragment key={index}>\r\n                                    <tr>\r\n                                        <td\r\n                                            style={{\r\n                                                textAlign: 'center', color: '#20c997'\r\n                                            }}\r\n                                        >\r\n                                            <Typography\r\n                                                style={{\r\n                                                    color: '#20c997'\r\n                                                }}\r\n                                            >\r\n                                            {index+1}\r\n                                            </Typography>\r\n                                        </td>\r\n                                        <td>\r\n                                        \r\n                                            {description}\r\n                                        \r\n                                        </td>\r\n                                        <td> {new Date(tx_date).toLocaleDateString()} </td>\r\n                                        <td> {rcpt_no} </td>\r\n                                        {/* <td> {account_FK} </td> */}\r\n                                        <td>\r\n                                            <Typography color='error'>\r\n                                            { tx_amount.toLocaleString() }\r\n                                            </Typography>\r\n                                        </td>\r\n                                        <td> {pay_method} </td>\r\n                                        <td>\r\n                                            {\r\n                                                paid === 0 ?(\r\n                                                    <Typography>\r\n                                                        Posted\r\n                                                    </Typography>\r\n                                                ):\r\n                                                (\r\n                                                    <Typography>\r\n                                                        Credited\r\n                                                    </Typography>\r\n                                                )\r\n                                            }\r\n                                        </td>\r\n                                    </tr>\r\n                                </Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                    {paymentHistorys && paymentHistorys.repayment?.length > 0 &&\r\n                        <tr\r\n                        style={{background: '#2A3F54', color: 'white'}}\r\n                        >\r\n                            <td  colSpan={2}>\r\n                                <Typography\r\n                                    style={{\r\n                                        color: '#20c997',\r\n                                        fontWeight: '500'\r\n                                    }}\r\n                                >\r\n                                <span style={{color: 'lightgray'}} >Amount:</span> <s>N</s>: {paymentHistorys?.repayment[0].amount.toLocaleString()}  \r\n                                </Typography>\r\n                            </td>\r\n                            <td>\r\n                                <Typography >\r\n                                    Outstanding Balance\r\n                                </Typography>\r\n                            </td>\r\n                        {\r\n                            paymentHistorys && paymentHistorys?.repayment.length>0&&\r\n                            <td colSpan={4}>\r\n                                <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                    <Typography\r\n                                            style={{color: 'red', alignSelf: 'normal'}}\r\n                                        >\r\n                                            <s>N</s>: \r\n                                        {\r\n                                            parseInt(parseInt(paymentHistorys.repayment[0]?.amount) -parseInt(paymentHistorys.repayment[0]?.amount_paid))\r\n                                            .toLocaleString()\r\n                                        }\r\n                                    </Typography>\r\n                                </div>\r\n                                \r\n                                \r\n                            </td>\r\n                        }\r\n                            <td colSpan={1} />\r\n                        </tr>\r\n                    }\r\n                </tbody>\r\n                \r\n            </table>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default SalePaidHistoryView\r\n","import { Button, Grid, Typography } from '@material-ui/core'\r\nimport { UndoRounded } from '@material-ui/icons'\r\nimport React, {useEffect} from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectAccounts, selectPaymentHistory, selectTxAccounts } from '../appState/appSlice'\r\nimport CustomerCard from './CustomerCard'\r\nimport AppHeader from './global/AppHeader'\r\nimport SalePaidHistoryView from './SalePaidHistoryView'\r\n\r\nconst SalePaidHistoryFeed = () => {\r\n    const params = useParams()\r\n    const {name} = params\r\n    const history = useHistory()\r\n    const txAccounts = useSelector(selectTxAccounts)\r\n    const paymentHistorys = useSelector(selectPaymentHistory)\r\n    const accounts = useSelector(selectAccounts)\r\n\r\n    const renderAccountDetails = (account_FK) =>{\r\n        \r\n        const account = accounts && accounts.find(acc =>acc.code == account_FK )\r\n        return account && account.name\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className='app__Feed'>\r\n            <AppHeader title='Posting' />\r\n            <div className='m-3'>\r\n                <Grid container spacing={2}>\r\n                    <Grid item lg={3} md={3}\r\n                        style={{\r\n                            height: '90vh',\r\n                            overflow: 'auto',\r\n                            position: 'sticky'\r\n                        }}\r\n                    >\r\n                    {\r\n                        txAccounts&&\r\n                        txAccounts.map((txacc, index) => {\r\n                            return (\r\n                                <CustomerCard key={index} {...txacc} \r\n                                    \r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                        \r\n                    </Grid>\r\n                    <Grid item lg={9} md={9} >\r\n                      <SalePaidHistoryView \r\n                        paymentHistorys={paymentHistorys}\r\n                      />\r\n                        {\r\n                            !paymentHistorys?.repayment?.length >0&&\r\n                            \r\n                            <div className='alert alert-warning'>\r\n                                {`Ops!!! ${name} have no repayment history`}\r\n                            </div>\r\n                        \r\n                        }\r\n                        <section\r\n                            className='mt-5'\r\n                            style={{display: 'flex', alignItems: 'center', \r\n                            justifyContent: 'center'}}\r\n                        >\r\n                        <Button\r\n                            size='medium'\r\n                            variant='contained'\r\n                            onClick={() =>history.goBack()}\r\n                            style={{background: '#2A3F54',color: 'white'}}\r\n                            endIcon={<UndoRounded style={{color: '#20c997'}} />}\r\n                        >\r\n                            Back\r\n                        </Button>\r\n                        </section>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SalePaidHistoryFeed\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken,  setAccounts,  setCustomers, setDuePayments, setPaymentHistory, setTxAccounts, setUser, } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport SalePaidHistoryFeed from '../components/SalePaidHistoryFeed'\r\n\r\nconst SalePaymentHistScreen = () => {\r\n    const params = useParams()\r\n    const {uuid} = params\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n\r\n     // func\r\n    const getCustomers = () =>{\r\n        axios.get('/customer', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(asset =>{\r\n            dispatch(setCustomers(asset.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    const get_Payment_History = () =>{\r\n        axios.get(`/sale/payment_history/${uuid}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(data =>{\r\n            dispatch(setPaymentHistory(data.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n  \r\n\r\n    const get_Tx_Accounts = () =>{\r\n        axios.get('/transaction/accounts', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setTxAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n     // func\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    const handle_Get_Due_Repayment = () =>{\r\n        axios.get(`/transaction/scheldules`,{\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(dues =>{\r\n            dispatch(setDuePayments(dues.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error) return error.response.statusText\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        getCustomers()\r\n        get_Session()\r\n        \r\n    }, [])\r\n    useEffect(() =>{\r\n        get_Tx_Accounts()\r\n        handle_Get_Due_Repayment()\r\n      \r\n    }, [open])\r\n\r\n    useEffect(() => {\r\n        get_Payment_History()\r\n        \r\n    }, [uuid])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} setOpen={setOpen} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <SalePaidHistoryFeed\r\n                setOpen={setOpen}\r\n            />            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SalePaymentHistScreen\r\n","import { IconButton, Select } from '@material-ui/core'\r\nimport { Close } from '@material-ui/icons'\r\nimport Search from '@material-ui/icons/Search'\r\nimport { MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader } from 'mdbreact'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectCustomers } from '../../appState/appSlice'\r\n\r\nconst SelectApplicant = ({ open, setOpen, applicant, setApplicant }) => {\r\n    const [selected, setSelected] = useState()\r\n    const customers = useSelector(selectCustomers)\r\n    const handle_application =() =>{\r\n        const selectedApplicant = customers&& customers.filter(customer => parseInt(customer.id) == parseInt(selected))\r\n        setApplicant(selectedApplicant[0])\r\n        setOpen(!open)\r\n        \r\n    }\r\n    useEffect(() =>{\r\n        setOpen(true)\r\n    },[])\r\n    return (\r\n        <div>\r\n            <MDBModal isOpen={open} centered backdrop={false} overflowScroll={false}>\r\n                <header\r\n                    style={{\r\n                        padding: 5,\r\n                        color: 'white',\r\n                        width: '100%',\r\n                        backgroundColor: '#2a3f54'\r\n                    }}\r\n                >Select Applicant</header>\r\n                <MDBModalBody>\r\n                    <div\r\n                        style={{\r\n                            padding: 10,\r\n                            width: '90%',\r\n                            height: '35px',\r\n                            margin: 'auto',\r\n                            display: 'flex',\r\n                            borderRadius: 35,\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            backgroundColor: 'white',\r\n                            boxSizing: 'border-box',\r\n                            backgroundColor: 'white',\r\n                            boxShadow: '0px 2px 2px gray'\r\n                        }}\r\n                    >\r\n                        <input \r\n                            list='customFK'\r\n                            name='selected'\r\n                            value={selected}\r\n                            placeholder='Select Applicant'\r\n                            onChange={(e) =>setSelected(e.target.value)}\r\n                            style={{\r\n                                flex: 1,\r\n                                border: 'none',\r\n                                outline: 'none',\r\n                                paddingLeft: 10\r\n                            }}\r\n                        />\r\n                        <IconButton size='small'\r\n                            onClick={() =>handle_application()}\r\n                        >\r\n                            <Search color='action' />\r\n                        </IconButton>\r\n                  </div>\r\n                    <datalist id=\"customFK\">\r\n                        {customers &&\r\n                        customers.map((cus, index) => {\r\n                        return (\r\n                            <option key={index} value={`${cus.id} ${cus.customer_name}`}>\r\n                            {cus.customer_name}\r\n                            </option>\r\n                        );\r\n                        })}\r\n                    </datalist>\r\n                                        \r\n                </MDBModalBody>\r\n                <MDBModalFooter>\r\n                   \r\n                    <IconButton color='secondary'\r\n                        onClick={() =>setOpen(!open)}\r\n                    >\r\n                        <Close color='action' />\r\n                    </IconButton>\r\n                </MDBModalFooter>\r\n            </MDBModal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectApplicant\r\n","import axios from \"axios\";\r\n// MUI Stuff\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ToolTip from \"@material-ui/core/ToolTip\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectLocations,\r\n  selectPropServices,\r\n  selectBuildCategories,\r\n} from \"../appState/appSlice\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst SaleMultipleFeed = ({\r\n  add,\r\n  data,\r\n  error,\r\n  success,\r\n  setData,\r\n  Exist,\r\n  setAdd,\r\n  body,\r\n  setBody,\r\n  handlePost,\r\n  add_BuildCategories,\r\n}) => {\r\n  const locations = useSelector(selectLocations);\r\n  const buildCategories = useSelector(selectBuildCategories);\r\n\r\n  const properties = useSelector(selectPropServices);\r\n  const saleFormTemplate = {\r\n    qty: \"\",\r\n    amount: \"\",\r\n    plot_number: '',\r\n    sale_ID: \"\",\r\n    property: \"\",\r\n    location: \"\",\r\n    createdAt: \"\",\r\n    build_category: \"\",\r\n  };\r\n  const [saleForm, setSaleForm] = useState([saleFormTemplate]);\r\n\r\n  // func\r\n  const addSaleFrom = () => {\r\n    setSaleForm([...saleForm, saleFormTemplate]);\r\n  };\r\n  const handleChange = (e, index) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    const updatedsaleform = saleForm.map((salef, i) =>\r\n      index == i ? Object.assign(salef, { [name]: value }) : salef\r\n    );\r\n    setSaleForm(updatedsaleform);\r\n\r\n    if (name == \"qty\" || name == \"property\") {\r\n      const updatedsaleform = saleForm.map((salef, i) =>\r\n        index == i\r\n          ? Object.assign(salef, {\r\n              sale_ID: data.uuid,\r\n              createdAt: data.sale_date,\r\n              amount: renderAmount(\r\n                saleForm[index].property,\r\n                index,\r\n                saleForm[index].qty\r\n              ),\r\n            })\r\n          : salef\r\n      );\r\n      return setData({\r\n        ...data,\r\n\r\n        tx_date: data.sale_date,\r\n        total: calcuAmt(saleForm),\r\n      });\r\n    }\r\n  };\r\n\r\n  const renderAmount = (pro, formIndex, qty) => {\r\n    const proExist = properties && properties.find((prop) => prop.id == pro);\r\n\r\n    const total = proExist && parseInt(proExist.sale_price) * parseInt(qty);\r\n    return total;\r\n  };\r\n  const handleRemovesaleform = (index) => {\r\n    const filtersaleform = [...saleForm];\r\n    filtersaleform.splice(index, 1);\r\n\r\n    setSaleForm(filtersaleform);\r\n  };\r\n\r\n  const calcuAmt = (data) => {\r\n    const total = data && data.reduce((a, v) => +v.amount + a, 0);\r\n    return total;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fdata = saleForm.map((x) => Object.values(x));\r\n    const findal = [];\r\n    // const data = fdata\r\n    for (let i = 0; i < fdata.length; i++) {\r\n      const element = fdata[i];\r\n      findal.push(element);\r\n    }\r\n\r\n    setData({\r\n      ...data,\r\n      VALUES: findal,\r\n    });\r\n  }, [saleForm]);\r\n\r\n  useEffect(() => {\r\n    setData({\r\n      ...data,\r\n      total: calcuAmt(saleForm),\r\n    });\r\n  }, [data.VALUES]);\r\n\r\n  //   handle error / post\r\n  //   const isDisable = (Form) => {\r\n  //     const error =\r\n  //       Form &&\r\n  //       Form.map((exform) =>\r\n  //         !exform[\"property\"].length > 0 ||\r\n  //         !exform[\"amount\"].length > 0 ||\r\n  //         !exform[\"build_category\"].length > 0\r\n  //           ? true\r\n  //           : false\r\n  //       );\r\n\r\n  //     const filterError = error && error.includes(true) ? true : false;\r\n  //     // console.log(filterError);\r\n  //     return filterError;\r\n  //   };\r\n\r\n  const handleSetTerm = (e) => {\r\n    const d = new Date();\r\n    const sd = new Date();\r\n    const value = e.target.value;\r\n    const duedate = d.setDate(sd.getDate() + parseInt(value));\r\n    return setData({\r\n      ...data,\r\n      period: value,\r\n      due_date: new Date(duedate),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    return setSaleForm([saleFormTemplate]);\r\n  }, [success]);\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: \"#ededed\",\r\n        position: \"sticky\",\r\n        zIndex: 222,\r\n        top: \"60px\",\r\n      }}\r\n    >\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-12 col-md-12\">\r\n          {/* to do make it a component */}\r\n          <Grid container spacing={2} className=\"p-3\">\r\n            <Grid item lg={4} md={4}>\r\n              <FormLabel>Date</FormLabel>\r\n              <input\r\n                name=\"sale_date\"\r\n                type=\"date\"\r\n                value={data.sale_date}\r\n                onChange={(e) =>\r\n                  setData({\r\n                    ...data,\r\n                    sale_date: e.target.value,\r\n                  })\r\n                }\r\n                style={{\r\n                  width: \"100%\",\r\n                  outline: \"none\",\r\n                  border: \"none\",\r\n                  height: \"30px\",\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={4} md={4}>\r\n              <FormLabel>Term</FormLabel>\r\n              <select\r\n                name=\"period\"\r\n                style={{ border: \"none\" }}\r\n                value={data.period}\r\n                onChange={(e) => handleSetTerm(e)}\r\n              >\r\n                <option value=\"\"></option>\r\n                <option value={7}>7 Days</option>\r\n                <option value={14}>14 Days</option>\r\n                <option value={21}>21 Days</option>\r\n                <option value={28}>28 Days</option>\r\n                <option value={30}>30 Days</option>\r\n                <option value={60}>60 Days</option>\r\n                <option value={90}>90 Days</option>\r\n                <option value={120}>120 Days</option>\r\n                <option value={150}>150 Days</option>\r\n                <option value={180}>180 Days</option>\r\n                <option value={210}>210 Days</option>\r\n                <option value={240}>240 Days</option>\r\n                <option value={270}>270 Days</option>\r\n                <option value={300}>300 Days</option>\r\n                <option value={330}>330 Days</option>\r\n                <option value={360}>360 Days</option>\r\n              </select>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              lg={4}\r\n              md={4}\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n                alignItems: \"flex-end\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <FormLabel>Amount</FormLabel>\r\n              <Typography variant=\"h5\" style={{ color: \"#20c997\" }}>\r\n                <s>N</s>: {saleForm && calcuAmt(saleForm).toLocaleString()}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item lg={4} md={4}>\r\n              <TextField\r\n                disabled\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                label=\"Due Date\"\r\n                value={new Date(data.due_date).toLocaleDateString()}\r\n                placeholder=\"Due Date\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <h5 className=\"ml-3\">Details</h5>\r\n          <Paper elevation={0} style={{ backgroundColor: \"inherit\" }}>\r\n            <Container>\r\n              <table\r\n                className=\"table-small table-hover\"\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <thead>\r\n                  <th>#</th>\r\n                  <th> </th>\r\n                  <th>Location</th>\r\n                  <th>Property</th>\r\n                  <th>Quantity</th>\r\n                  <th>Amount</th>\r\n                  <th>Plot No</th>\r\n                  <th>\r\n                    Building Category\r\n                    <span className=\"ml-3\">\r\n                      <IconButton size=\"small\" onClick={() => setAdd(!add)}>\r\n                        <span\r\n                          className=\"fa fa-plus-circle\"\r\n                          style={{ color: \"#20c997\" }}\r\n                        />\r\n                      </IconButton>\r\n                    </span>\r\n                    {add && (\r\n                      <div\r\n                        className=\"m-3\"\r\n                        style={{\r\n                          display: \"flex\",\r\n                          flex: 1,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        <TextField\r\n                          fullWidth\r\n                          size=\"small\"\r\n                          value={body.name}\r\n                          variant=\"outlined\"\r\n                          label=\"Build Category\"\r\n                          placeholder=\"New...\"\r\n                          onChange={(e) =>\r\n                            setBody({\r\n                              ...body,\r\n                              name: e.target.value,\r\n                            })\r\n                          }\r\n                        />\r\n                        <div\r\n                          onClick={() => setAdd(!add)}\r\n                          className=\"d-flex align-items-center\"\r\n                        >\r\n                          <Button\r\n                            onClick={() => add_BuildCategories(body)}\r\n                            size=\"medium\"\r\n                            variant=\"contained\"\r\n                            style={{ background: \"#2A3F54\", color: \"white\" }}\r\n                          >\r\n                            Save\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </th>\r\n\r\n                  <th></th>\r\n                </thead>\r\n                <tbody id=\"je__Table\">\r\n                  {saleForm.map((salef, index) => (\r\n                    <Fragment key={index}>\r\n                      <tr>\r\n                        <td>{index + 1} </td>\r\n                        <td onClick={() => addSaleFrom()}>\r\n                          <ToolTip title=\"Add New Row\">\r\n                            <span\r\n                              className=\"fa fa-plus-circle fa-1x\"\r\n                              style={{ color: \"#20c997\" }}\r\n                            />\r\n                          </ToolTip>\r\n                        </td>\r\n                        <td>\r\n                          <select\r\n                            name=\"location\"\r\n                            value={salef.location}\r\n                            style={{ border: \"none\" }}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          >\r\n                            <option value=\"\"></option>\r\n                            {locations &&\r\n                              locations.map((locat, index) => {\r\n                                const { id, name } = locat;\r\n                                return (\r\n                                  <Fragment key={index}>\r\n                                    <option\r\n                                      value={id}\r\n                                      key={index}\r\n                                    >{`${name}`}</option>\r\n                                  </Fragment>\r\n                                );\r\n                              })}\r\n                          </select>\r\n                        </td>\r\n                        <td>\r\n                          <select\r\n                            name=\"property\"\r\n                            value={salef.property}\r\n                            placeholder=\"Property\"\r\n                            style={{ border: \"none\" }}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          >\r\n                            <option value=\"\"></option>\r\n                            {properties &&\r\n                              properties.map((ps) => {\r\n                                const { id, name, location } = ps;\r\n                                if (location == salef.location)\r\n                                  return (\r\n                                    <Fragment key={id}>\r\n                                      <option key={id} value={id}>\r\n                                        {\" \"}\r\n                                        {name}{\" \"}\r\n                                      </option>\r\n                                    </Fragment>\r\n                                  );\r\n                              })}\r\n                          </select>\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            min={1}\r\n                            name=\"qty\"\r\n                            type=\"number\"\r\n                            placeholder=\"Quantity\"\r\n                            value={salef.qty}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            min={1000}\r\n                            name=\"amount\"\r\n                            type=\"number\"\r\n                            placeholder=\"Amount\"\r\n                            value={salef.amount}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            name=\"plot_number\"\r\n                            placeholder=\"Plot Number\"\r\n                            value={salef.plot_number}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          />\r\n                        </td>\r\n\r\n                        <td>\r\n                          <select\r\n                            name=\"build_category\"\r\n                            value={salef.build_category}\r\n                            style={{ border: \"none\" }}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          >\r\n                            <option value=\"\"></option>\r\n                            {buildCategories &&\r\n                              buildCategories.map((building, index) => {\r\n                                const { id, name } = building;\r\n                                return (\r\n                                  <option\r\n                                    value={id}\r\n                                    key={index}\r\n                                  >{`${name}`}</option>\r\n                                );\r\n                              })}\r\n                          </select>\r\n                        </td>\r\n\r\n                        <td onClick={() => handleRemovesaleform(index)}>\r\n                          <ToolTip title=\"Delete Row\">\r\n                            <span\r\n                              className=\"fa fa-trash\"\r\n                              style={{ color: \"red\" }}\r\n                            ></span>\r\n                          </ToolTip>\r\n                        </td>\r\n                      </tr>\r\n                    </Fragment>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-end\",\r\n                }}\r\n              >\r\n                {Exist && (\r\n                  <Typography variant=\"body2\" color=\"error\">\r\n                    {\" \"}\r\n                    {Exist}{\" \"}\r\n                  </Typography>\r\n                )}\r\n                {error && (\r\n                  <div\r\n                    style={{ \r\n                      height: 40,\r\n                      display: 'flex',\r\n                      color: \"white\", \r\n                      background: \"red\",\r\n                      flexDirection: 'row',\r\n                      alignItems: 'center',\r\n                      alignSelf: 'center',\r\n                      borderRadius: 5,\r\n                      padding: '0 5px 0 5px',\r\n                      justifyContent: 'center',\r\n                      boxSizing: 'border-box',\r\n                      boxShadow: '0 2px 3px 0 gray'\r\n                  }}\r\n                  >\r\n                    {error}\r\n                  </div>\r\n                )}\r\n                <Button\r\n                  className=\"m-3\"\r\n                  variant=\"contained\"\r\n                  //   disabled={isDisable(saleForm)}\r\n                  onClick={(e) => handlePost(e)}\r\n                  style={{ background: \"#2A3F54\", color: \"white\" }}\r\n                >\r\n                  Post\r\n                </Button>\r\n              </div>\r\n            </Container>\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SaleMultipleFeed;\r\n","import axios from \"axios\";\r\n// MUI Stuff\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FileCopy from \"@material-ui/icons/FileCopy\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  selectBuildCategories,\r\n  selectLocations,\r\n  selectPropServices,\r\n  selectToken,\r\n  selectUser,\r\n  setLocations,\r\n} from \"../appState/appSlice\";\r\nimport AppHeader from \"./global/AppHeader\";\r\nimport AppSnackbar from \"./global/AppSnackbar\";\r\nimport SelectApplicant from \"./global/SelectApplicant\";\r\nimport { Fragment } from \"react\";\r\nimport SaleMultipleFeed from \"./SaleMultipleFeed\";\r\n\r\nconst SaleFeed = ({ setOpen, isWidget, setIswidget, add_BuildCategories }) => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  const token = useSelector(selectToken);\r\n  const propServices = useSelector(selectPropServices);\r\n  const [success, setSuccess] = useState(false);\r\n  const [message, setMessage] = useState();\r\n  const [select, setSelect] = useState(false);\r\n  const [applicant, setApplicant] = useState();\r\n  const [step, setStep] = useState(1);\r\n  const [error, setError] = useState();\r\n  const [Exist, setExist] = useState();\r\n  const [body, setBody] = useState({\r\n    name: \"\",\r\n  });\r\n  const [add, setAdd] = useState(false);\r\n  const [data, setData] = useState({\r\n    uuid: \"\",\r\n    tx_date: \"\",\r\n    applicant_name: \"\",\r\n    due_date: \"\",\r\n    period: \"\",\r\n    sale_date: \"\",\r\n    applicant: \"\",\r\n    VALUES: [],\r\n    total: \"\",\r\n  });\r\n\r\n  //   const handleChange = (index) => {\r\n  //     setData({ ...data, build_category: index });\r\n  //   };\r\n\r\n  //   const handleSetTerm = (e) => {\r\n  //     const d = new Date();\r\n  //     const sd = new Date();\r\n  //     const value = e.target.value;\r\n  //     const duedate = d.setDate(sd.getDate() + parseInt(value));\r\n  //     return setData({\r\n  //       ...data,\r\n  //       period: value,\r\n  //       due_date: new Date(duedate),\r\n  //     });\r\n  //   };\r\n\r\n  //   const start = data.sale_date ? new Date(data.sale_date) : new Date();\r\n  //   const end = new Date(data.due_date);\r\n  //   const rows = [];\r\n  //   const handleDate = () => {\r\n  //     let loop = new Date(start);\r\n  //     const division = data.period / 30;\r\n  //     while (loop <= end) {\r\n  //       const newDate = loop.setDate(\r\n  //         data.period <= 28 ? loop.getDate() + data.period : loop.getDate() + 31\r\n  //       );\r\n  //       loop = new Date(newDate);\r\n  //       rows.push({\r\n  //         sale_uuid: data.uuid,\r\n  //         applicant_name: applicant && applicant.customer_name,\r\n  //         amount:\r\n  //           data.period <= 28\r\n  //             ? parseInt(data.amount) / 1\r\n  //             : parseInt(data.amount) / Math.round(division),\r\n  //         period: data.period,\r\n  //         date: new Date(newDate),\r\n  //         property_name: data.property_name,\r\n  //       });\r\n  //     }\r\n  //   };\r\n  //   const handleSetValues = (d) => {\r\n  //     const fdata = d.map((x) => Object.values(x));\r\n  //     const findal = [];\r\n  //     for (let i = 0; i < fdata.length; i++) {\r\n  //       const element = fdata[i];\r\n  //       findal.push(element);\r\n  //     }\r\n  //     // console.log(findal)\r\n  //     return setData({\r\n  //       ...data,\r\n  //       VALUES: findal,\r\n  //     });\r\n  //   };\r\n\r\n  // handle post\r\n  const isEmpty = (input) => {\r\n    return data[input] === \"\" ? true : false;\r\n  };\r\n\r\n  const handlePost = async (e) => {\r\n    e.preventDefault();\r\n    const err = await Object.keys(data).map((key) => isEmpty(key));\r\n    //console.log(\"hello\", data);\r\n    const isError = err.includes(true);\r\n    if (isError === true) {\r\n      return setError(\"All field are required\");\r\n    } else {\r\n      setError(\"\");\r\n      // console.log(data.VALUES);\r\n      setOpen(true);\r\n      axios\r\n        .post(\"/sale\", data, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then((result) => {\r\n          setOpen(false);\r\n          setMessage(result.data.message);\r\n          setSuccess(true);\r\n          setData({\r\n            uuid: \"\",\r\n            applicant_name: \"\",\r\n            build_category: \"\",\r\n            property: \"\",\r\n            due_date: \"\",\r\n            period: \"\",\r\n            amount: \"\",\r\n            sale_date: \"\",\r\n            applicant: \"\",\r\n            property_name: \"\",\r\n            VALUES: [],\r\n            total: \"\",\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setOpen(false);\r\n          if (error && error.response.status == 401) {\r\n            return setExist(error.response.data.message);\r\n          }\r\n          setError(error.response.data.message);\r\n        });\r\n    }\r\n  };\r\n\r\n  //   useEffect(() => {\r\n  //     handleDate();\r\n  //     setPlans(rows);\r\n  //     handleSetValues(rows);\r\n  //   }, [data.property, data.due_date]);\r\n\r\n  const handleGet_Locations = () => {\r\n    axios\r\n      .get(\"/location\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((locations) => {\r\n        dispatch(setLocations(locations.data));\r\n      })\r\n      .catch((error) => {\r\n        if (error) {\r\n          return error;\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data.property) {\r\n      const prop = parseInt(data.property);\r\n      const filterProperty = propServices\r\n        ? propServices.filter((ps) => parseInt(ps.id) == prop)\r\n        : null;\r\n\r\n      setData({\r\n        ...data,\r\n        property_name: filterProperty ? filterProperty[0].name : null,\r\n        property: filterProperty ? filterProperty[0].id : null,\r\n        amount: filterProperty ? filterProperty[0].sale_price : 0,\r\n      });\r\n    }\r\n  }, [data.property]);\r\n\r\n  useEffect(() => {\r\n    setData({\r\n      ...data,\r\n      applicant: applicant && applicant.id,\r\n      applicant_name: applicant && applicant.customer_name,\r\n    });\r\n  }, [applicant]);\r\n\r\n  useEffect(() => {\r\n    setData({\r\n      ...data,\r\n      uuid:\r\n        new Date().getSeconds().toLocaleString() +\r\n        new Date().getMinutes().toLocaleString() +\r\n        new Date().getMilliseconds(),\r\n    });\r\n    return handleGet_Locations();\r\n  }, [\"\", success]);\r\n\r\n  return (\r\n    <div className={`${isWidget ? \"isapp__Feed\" : \"app__Feed\"}`} id=\"step2\">\r\n      <SelectApplicant\r\n        open={select}\r\n        setOpen={setSelect}\r\n        applicant={applicant}\r\n        setApplicant={setApplicant}\r\n      />\r\n      <AppSnackbar open={success} setOpen={setSuccess} message={message} />\r\n      <AppHeader title=\"Application Form\" />\r\n      <div className=\"row align-items-center justify-content-center d-flex m-1\"\r\n      >\r\n        <div className=\"col-lg-12 col-md-12\">\r\n          {/* table */}\r\n          <h3 style={{ marginLeft: 80 }}>\r\n            Application Entry\r\n            <span>\r\n              <Tooltip title=\"Application List\">\r\n                <IconButton\r\n                  color=\"secondary\"\r\n                  onClick={() => setIswidget(!isWidget)}\r\n                >\r\n                  <FileCopy style={{ color: \"#1ABB9C\" }} />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </span>\r\n          </h3>\r\n        </div>\r\n      </div>\r\n      <Grid container alignItems=\"center\" justify=\"center\">\r\n        <Grid item lg={10} md={10} sm={12}>\r\n          <Paper className=\"p-2\" style={{ backgroundColor: \"inherit\" }}>\r\n            <Grid item lg={12} md={12} sm={12}>\r\n              <Grid container alignItems=\"center\" justify=\"center\">\r\n                {step == 1 && (\r\n                  <Grid\r\n                    item\r\n                    lg={9}\r\n                    md={9}\r\n                    sm={12}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      flexDirection: \"column\",\r\n                    }}\r\n                  >\r\n                    <Avatar\r\n                      style={{\r\n                        width: \"100px\",\r\n                        height: \"100px\",\r\n                        boxSizing: \"border-box\",\r\n                        boxShadow: \"0px 0px 1px 0px #000\",\r\n                      }}\r\n                    />\r\n\r\n                    {applicant && (\r\n                      <Fragment>\r\n                        <div\r\n                          className=\"mt-2 p-1\"\r\n                          style={{\r\n                            color: \"white\",\r\n                            background: \"#2A3F54\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            height: \"40px\",\r\n                            justifyContent: \"center\",\r\n                            width: \"50%\",\r\n                            margin: \"auto\",\r\n                            boxSizing: \"border-box\",\r\n                            boxShadow: \"0px 0px 1px 0px #000\",\r\n                          }}\r\n                        >\r\n                          <h6>APPLICATION FORM</h6>\r\n                        </div>\r\n                        <div\r\n                          className=\"mt-5 p-1\"\r\n                          style={{\r\n                            color: \"white\",\r\n                            background: \"#2A3F54\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            height: \"40px\",\r\n                            justifyContent: \"center\",\r\n                            width: \"50%\",\r\n                            margin: \"auto\",\r\n                            boxSizing: \"border-box\",\r\n                            boxShadow: \"0px 0px 5px 0px #000\",\r\n                          }}\r\n                        >\r\n                          <h6>A. PERSONAL DATA</h6>\r\n                        </div>{\" \"}\r\n                      </Fragment>\r\n                    )}\r\n                  </Grid>\r\n                )}\r\n\r\n                {step === 1 && (\r\n                  <Grid\r\n                    item\r\n                    lg={3}\r\n                    md={3}\r\n                    sm={12}\r\n                    style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                  >\r\n                    <Avatar\r\n                      variant=\"square\"\r\n                      alt={applicant && applicant.customer_name[0]}\r\n                      src={applicant && applicant.avatar}\r\n                      style={{\r\n                        width: \"150px\",\r\n                        height: \"150px\",\r\n                        boxSizing: \"border-box\",\r\n                        boxShadow: \"0px 0px 1px 0px #000\",\r\n                      }}\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        marginTop: \"100px\",\r\n                        marginLeft: \"10px\",\r\n                      }}\r\n                    >\r\n                      <Tooltip title=\"Select New Applicant\">\r\n                        <IconButton onClick={() => setSelect(!select)}>\r\n                          <span\r\n                            className=\"fa fa-plus-circle\"\r\n                            style={{ color: \"#1ABB9C\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    </div>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n\r\n              {applicant && step == 1 && (\r\n                <Grid container spacing={2} className=\"mt-3\">\r\n                  <Grid item lg={6} md={6} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      value={applicant && applicant.customer_name}\r\n                      variant=\"outlined\"\r\n                      label=\"Name of Applicant\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} md={6} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.business_employer_name}\r\n                      label=\"Business Name & RC. No Corporate Body\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={12} md={12} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.address_1}\r\n                      label=\"Residential Address:\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} md={6} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.phone_no}\r\n                      label=\"Phone No.\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} md={6} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.customer_email}\r\n                      label=\"Email Address:\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} md={6} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.customer_sex}\r\n                      label=\"Gender\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} md={6} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.customer_marital}\r\n                      label=\"Marital Status\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} md={6} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.country}\r\n                      label=\"Nationality:\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} md={6} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.customer_state}\r\n                      label=\"State of Origin:\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={12} md={12} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.customer_address}\r\n                      label=\"Permanent Home Address\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={12} md={12} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.postal_address}\r\n                      label=\"Postal Address:\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} md={6} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.occupation}\r\n                      label=\"Occupation:\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} md={6} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.place_work}\r\n                      label=\"Place of Work:\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item lg={6} md={6} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.next_kin_name}\r\n                      label=\"Name of Next Kin:\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} md={6} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.next_kin_relate}\r\n                      label=\"Relationship With Next of Kin:\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={12} md={12} sm={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      disabled\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={applicant && applicant.next_kin_addrss}\r\n                      label=\"Next of Kin Address\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n              {step == 2 && (\r\n                <SaleMultipleFeed\r\n                  data={data}\r\n                  add={add}\r\n                  body={body}\r\n                  error={error}\r\n                  setBody={setBody}\r\n                  setData={setData}\r\n                  success={success}\r\n                  Exist={Exist}\r\n                  setAdd={setAdd}\r\n                  handlePost={handlePost}\r\n                  add_BuildCategories={add_BuildCategories}\r\n                />\r\n              )}\r\n\r\n              {step == 2 && (\r\n                <Grid\r\n                  item\r\n                  lg={9}\r\n                  md={9}\r\n                  sm={12}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    flexDirection: \"column\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\" p-1\"\r\n                    style={{\r\n                      color: \"white\",\r\n                      background: \"#2A3F54\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      height: \"40px\",\r\n                      justifyContent: \"center\",\r\n                      width: \"50%\",\r\n                      margin: \"auto\",\r\n                      boxSizing: \"border-box\",\r\n                      boxShadow: \"0px 0px 5px 0px #000\",\r\n                    }}\r\n                  >\r\n                    <h6>D. MODE OF PAYMENT</h6>\r\n                  </div>\r\n                </Grid>\r\n              )}\r\n              {step == 2 && (\r\n                <Grid item lg={12} md={12} sm={12}>\r\n                  <ul className=\"mt-3\">\r\n                    <li>\r\n                      Note That Pament should be made after the developer's\r\n                      approval before allocation. Each applicant is expected to\r\n                      pay for the follwing charges:\r\n                    </li>\r\n                    <li>\r\n                      All Payments should be made to Santos Estate Ltd. and\r\n                      evidence of payment forwarded to our corporate office for\r\n                      issuance of receipt.\r\n                    </li>\r\n                    <li>\r\n                      i have agreed that all refunds shall be limited to the\r\n                      deposit i made, less 10% administrative charges.\r\n                    </li>\r\n                    <li>\r\n                      \"Disclaimer\" SANTOS ESTATE LIMITED shall not be liable for\r\n                      any plot re-allocated if terms and conditions are not\r\n                      obligated timeously.\r\n                    </li>\r\n                  </ul>\r\n                </Grid>\r\n              )}\r\n              {step == 2 && (\r\n                <Grid\r\n                  item\r\n                  lg={9}\r\n                  md={9}\r\n                  sm={12}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    flexDirection: \"column\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\" p-1\"\r\n                    style={{\r\n                      color: \"white\",\r\n                      background: \"#2A3F54\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      height: \"40px\",\r\n                      justifyContent: \"center\",\r\n                      width: \"50%\",\r\n                      margin: \"auto\",\r\n                      boxSizing: \"border-box\",\r\n                      boxShadow: \"0px 0px 5px 0px #000\",\r\n                    }}\r\n                  >\r\n                    <h6>E. DECLARATION</h6>\r\n                  </div>\r\n                </Grid>\r\n              )}\r\n              {step == 2 && (\r\n                <Grid item lg={12} md={12} sm={12} className=\"mt-3\">\r\n                  <ul style={{ listStyle: \"none\" }}>\r\n                    <li>\r\n                      I/We{\" \"}\r\n                      <input\r\n                        readOnly\r\n                        value={applicant.customer_name}\r\n                        style={{\r\n                          border: \"none\",\r\n                          borderBottom: \"1px solid black\",\r\n                          outline: \"none\",\r\n                        }}\r\n                      />\r\n                      whose name and address appeared above have declared that\r\n                      the above statements are true and correct to the best of\r\n                      any knowledge, and i promise to abide by all rules and\r\n                      regulations given by the Developer\r\n                    </li>\r\n                  </ul>\r\n                  <div\r\n                    className=\"m-4\"\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\",\r\n                    }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <input\r\n                        readOnly\r\n                        style={{\r\n                          border: \"none\",\r\n                          borderBottom: \"1px solid black\",\r\n                          outline: \"none\",\r\n                        }}\r\n                        value={user.username}\r\n                      />\r\n                      <FormLabel>\r\n                        Initiate By\r\n                        <IconButton size=\"small\">\r\n                          <span\r\n                            className=\"fa fa-pen\"\r\n                            style={{ color: \"#1ABB9C\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </FormLabel>\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <input\r\n                        type=\"date\"\r\n                        style={{\r\n                          border: \"none\",\r\n                          borderBottom: \"1px solid black\",\r\n                          outline: \"none\",\r\n                        }}\r\n                        value={data.sale_date}\r\n                        readOnly\r\n                      />\r\n                      <FormLabel>Date</FormLabel>\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n              )}\r\n              <Grid\r\n                item\r\n                lg={12}\r\n                md={12}\r\n                sm={12}\r\n                style={{ display: \"flex\", justifyContent: \"center\" }}\r\n              >\r\n                {applicant && step == 1 && (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className=\"m-3\"\r\n                    onClick={() => setStep(2)}\r\n                    style={{\r\n                      color: \"white\",\r\n                      background: \"#2A3F54\",\r\n                    }}\r\n                  >\r\n                    Next\r\n                  </Button>\r\n                )}\r\n                {step == 2 && (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className=\"m-3\"\r\n                    onClick={() => setStep(1)}\r\n                    color=\"default\"\r\n                  >\r\n                    Previous\r\n                  </Button>\r\n                )}\r\n                {/* {step == 2 && (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className=\"m-3\"\r\n                    onClick={(e) => handlePost(e)}\r\n                    style={{ color: \"white\", background: \"#2A3F54\" }}\r\n                    disabled={\r\n                      !data.due_date ||\r\n                      !data.build_category ||\r\n                      !data.property ||\r\n                      !data.amount ||\r\n                      !data.sale_date\r\n                    }\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                )} */}\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n          <div className=\"p-2\" />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SaleFeed;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport {\r\n  selectPendingSales,\r\n  selectToken,\r\n  setBuildCategories,\r\n  setCustomers,\r\n  setpendingSales,\r\n  setPropServices,\r\n  setUser,\r\n} from \"../appState/appSlice\";\r\nimport AppBackdrop from \"../components/global/AppBackDrop\";\r\nimport SideBarMenu from \"../components/global/SideBarMenu\";\r\nimport SaleFeed from \"../components/SaleFeed\";\r\nimport SaleWidget from \"../components/SaleWidget\";\r\n\r\nconst SaleScreen = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const token = useSelector(selectToken);\r\n  const [open, setOpen] = useState(false);\r\n  const [isWidget, setIswidget] = useState(false);\r\n  const sales = useSelector(selectPendingSales)\r\n\r\n  // func\r\n  const getProp_Services = () => {\r\n    axios\r\n      .get(\"/prop_service\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((ps) => {\r\n        dispatch(setPropServices(ps.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  // func\r\n  const getCustomers = () => {\r\n    axios\r\n      .get(\"/customer\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((asset) => {\r\n        dispatch(setCustomers(asset.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  const getBuildCategories = () => {\r\n    axios\r\n      .get(\"/build_category\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((categories) => {\r\n        dispatch(setBuildCategories(categories.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  // func\r\n  const get_PendingSales = () => {\r\n    axios\r\n      .get(`/sale`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((sales) => {\r\n        dispatch(setpendingSales(sales.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  const add_BuildCategories = (body) => {\r\n    setOpen(true);\r\n    axios\r\n      .post(\"/build_category\", body, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((categories) => {\r\n        setOpen(false);\r\n      })\r\n      .catch((error) => {\r\n        setOpen(false);\r\n        return error;\r\n      });\r\n  };\r\n\r\n  const get_Session = () => {\r\n    axios\r\n      .get(`/auth/active`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((user) => {\r\n        dispatch(setUser(user.data));\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      return history.push(\"/\");\r\n    }\r\n    return getCustomers(), get_Session(), getProp_Services();\r\n  }, []);\r\n  useEffect(() => {\r\n    return getBuildCategories(), get_PendingSales();\r\n  }, [open]);\r\n  return (\r\n    <div className=\"app\">\r\n      <AppBackdrop open={open} />\r\n      <SideBarMenu />\r\n      {/* feed */}\r\n      <SaleFeed\r\n        setOpen={setOpen}\r\n        isWidget={isWidget}\r\n        setIswidget={setIswidget}\r\n        add_BuildCategories={add_BuildCategories}\r\n      />\r\n      {/* widget */}\r\n      {isWidget && (\r\n        <SaleWidget\r\n          open={open}\r\n          sales={sales}\r\n          setOpen={setOpen}\r\n          isWidget={isWidget}\r\n          setIswidget={setIswidget}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SaleScreen;\r\n","// MUI Stuff\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\n// Icons\r\nimport Undo from \"@material-ui/icons/Undo\";\r\nimport FileCopy from \"@material-ui/icons/FileCopy\";\r\n\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { selectToken } from \"../appState/appSlice\";\r\nimport AppHeader from \"./global/AppHeader\";\r\nimport AppSnackbar from \"./global/AppSnackbar\";\r\n\r\nconst StaffFeed = ({ setOpen, isWidget, setIswidget }) => {\r\n  const history = useHistory();\r\n  const token = useSelector(selectToken);\r\n  const [success, setSuccess] = useState(false);\r\n  const [message, setMessage] = useState();\r\n  const [Error, setError] = useState();\r\n  const [Exist, setExist] = useState();\r\n  const [data, setData] = useState({\r\n    password: \"\",\r\n    password2: \"\",\r\n    is_superuser: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    md: \"\",\r\n    entries: \"\",\r\n    sales: \"\",\r\n    expense: \"\",\r\n    accountant: \"\",\r\n    date_joined: \"\",\r\n  });\r\n  // func\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setData({\r\n      ...data,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const isEmpty = () => {\r\n    let userData = data;\r\n    let error = {};\r\n    Object.keys(userData).forEach((v, i) => {\r\n      return !userData[v].toString().length > 0\r\n        ? (error[v] = \"Is required\")\r\n        : (error = error);\r\n    });\r\n\r\n    return setError(error), Object.keys(error).length > 0 ? true : false;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    isEmpty();\r\n    e.preventDefault();\r\n\r\n    if (isEmpty()) return console.log(Error);\r\n    setOpen(true);\r\n\r\n    axios\r\n      .post(\"/auth\", data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        setOpen(false);\r\n        setMessage(result.data.message);\r\n        setSuccess(true);\r\n        setData({\r\n          password: \"\",\r\n          password2: \"\",\r\n          is_superuser: \"\",\r\n          first_name: \"\",\r\n          last_name: \"\",\r\n          email: \"\",\r\n          mobile: \"\",\r\n          md: \"\",\r\n          entries: \"\",\r\n          sales: \"\",\r\n          expense: \"\",\r\n          accountant: \"\",\r\n          date_joined: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setOpen(false);\r\n        if (error) {\r\n          if (error.status == 500) {\r\n            return setExist(error.response.statusText);\r\n          }\r\n          const err = error.response.data.split(\":\")[1];\r\n          setExist(err);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={`${isWidget ? \"isapp__Feed\" : \"app__Feed\"}`}>\r\n      <AppSnackbar setOpen={setSuccess} open={success} message={message} />\r\n      <AppHeader title=\"Staff\" />\r\n      <div className=\"row align-items-center justify-content-center\">\r\n        <div className=\"col-lg-11 col-md-11 col-sm=12 col-xs-12\">\r\n          {/* table */}\r\n          <h3 className=\"ml-3\">\r\n            Staff Entry\r\n            <span>\r\n              <Tooltip title=\"View Staff List\">\r\n                <IconButton\r\n                  color=\"secondary\"\r\n                  onClick={() => setIswidget(!isWidget)}\r\n                >\r\n                  <FileCopy style={{ color: \"#1ABB9C\" }} />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </span>\r\n          </h3>\r\n          {Exist && (\r\n            <Typography className=\"ml-3\" color=\"error\" variant=\"h6\">\r\n              {Exist}\r\n            </Typography>\r\n          )}\r\n          {/* to do make it a component */}\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            spacing={1}\r\n            justify=\"center\"\r\n            className=\"p-2\"\r\n          >\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                size=\"small\"\r\n                name=\"first_name\"\r\n                variant=\"outlined\"\r\n                label=\"First Name\"\r\n                placeholder=\"First Name\"\r\n                value={data.first_name}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.first_name}\r\n                error={Error && Error.first_name ? true : false}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                size=\"small\"\r\n                name=\"last_name\"\r\n                variant=\"outlined\"\r\n                label=\"Last Name\"\r\n                placeholder=\"Last Name\"\r\n                value={data.last_name}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.last_name}\r\n                error={Error && Error.last_name ? true : false}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                size=\"small\"\r\n                name=\"mobile\"\r\n                variant=\"outlined\"\r\n                label=\"Mobile No\"\r\n                value={data.mobile}\r\n                onChange={(e) => handleChange(e)}\r\n                placeholder=\"Mobile Number 08010000900\"\r\n                helperText={Error && Error.mobile}\r\n                error={Error && Error.mobile ? true : false}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                size=\"small\"\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n                value={data.email}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.email}\r\n                error={Error && Error.email ? true : false}\r\n                placeholder=\"Email Address(example@gmail.com)\"\r\n              />\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                size=\"small\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                variant=\"outlined\"\r\n                label=\"Password\"\r\n                placeholder=\"Password\"\r\n                value={data.password}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.password}\r\n                error={Error && Error.password ? true : false}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                size=\"small\"\r\n                name=\"password2\"\r\n                type=\"password\"\r\n                variant=\"outlined\"\r\n                label=\"Confirm Password\"\r\n                placeholder=\"Confirm Password\"\r\n                value={data.password2}\r\n                onChange={(e) => handleChange(e)}\r\n                helperText={Error && Error.password2}\r\n                error={Error && Error.password2 ? true : false}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={12} md={12}>\r\n              <Typography>System Rights</Typography>\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <FormLabel>Entries</FormLabel>\r\n              <Select\r\n                variant=\"outlined\"\r\n                name=\"entries\"\r\n                value={data.entries}\r\n                onChange={(e) => handleChange(e)}\r\n                style={{\r\n                  width: \"100%\",\r\n                  outline: \"none\",\r\n                  border: \"none\",\r\n                  height: \"40px\",\r\n                }}\r\n                defaultValue=\"\"\r\n                error={Error && Error.entries}\r\n              >\r\n                <option></option>\r\n                <option value=\"entries\">Yes</option>\r\n                <option value=\"no\">No</option>\r\n              </Select>\r\n              {Error && Error.entries && (\r\n                <small style={{ color: \"red\" }} className=\"ml-3\">\r\n                  {Error.entries}\r\n                </small>\r\n              )}\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <FormLabel>Sales</FormLabel>\r\n              <Select\r\n                variant=\"outlined\"\r\n                name=\"sales\"\r\n                value={data.sales}\r\n                onChange={(e) => handleChange(e)}\r\n                style={{\r\n                  width: \"100%\",\r\n                  outline: \"none\",\r\n                  border: \"none\",\r\n                  height: \"40px\",\r\n                }}\r\n                error={Error && Error.sales ? true : false}\r\n              >\r\n                <option></option>\r\n                <option value=\"sales\">Yes</option>\r\n                <option value=\"no\">No</option>\r\n              </Select>\r\n              {Error && Error.sales && (\r\n                <small style={{ color: \"red\" }} className=\"ml-3\">\r\n                  {Error.sales}\r\n                </small>\r\n              )}\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <FormLabel>Expense</FormLabel>\r\n              <Select\r\n                variant=\"outlined\"\r\n                name=\"expense\"\r\n                value={data.expense}\r\n                onChange={(e) => handleChange(e)}\r\n                style={{\r\n                  width: \"100%\",\r\n                  outline: \"none\",\r\n                  border: \"none\",\r\n                  height: \"40px\",\r\n                }}\r\n                error={Error && Error.expense}\r\n              >\r\n                <option></option>\r\n                <option value=\"expense\">Yes</option>\r\n                <option value=\"no\">No</option>\r\n              </Select>\r\n              {Error && Error.expense && (\r\n                <small style={{ color: \"red\" }} className=\"ml-3\">\r\n                  {Error.expense}\r\n                </small>\r\n              )}\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <FormLabel>Accountant</FormLabel>\r\n              <Select\r\n                variant=\"outlined\"\r\n                name=\"accountant\"\r\n                value={data.accountant}\r\n                onChange={(e) => handleChange(e)}\r\n                style={{\r\n                  width: \"100%\",\r\n                  outline: \"none\",\r\n                  border: \"none\",\r\n                  height: \"40px\",\r\n                }}\r\n                error={Error && Error.accountant ? true : false}\r\n              >\r\n                <option></option>\r\n                <option value=\"accountant\">Yes</option>\r\n                <option value=\"no\">No</option>\r\n              </Select>\r\n              {Error && Error.accountant && (\r\n                <small style={{ color: \"red\" }} className=\"ml-3\">\r\n                  {Error.accountant}\r\n                </small>\r\n              )}\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <FormLabel>Administrator</FormLabel>\r\n              <Select\r\n                variant=\"outlined\"\r\n                name=\"is_superuser\"\r\n                value={data.is_superuser}\r\n                onChange={(e) => handleChange(e)}\r\n                style={{\r\n                  width: \"100%\",\r\n                  outline: \"none\",\r\n                  border: \"none\",\r\n                  height: \"40px\",\r\n                }}\r\n                error={Error && Error.is_superuser ? true : false}\r\n              >\r\n                <option></option>\r\n                <option value=\"1\">Yes</option>\r\n                <option value=\"0\">No</option>\r\n              </Select>\r\n              {Error && Error.is_superuser && (\r\n                <small style={{ color: \"red\" }} className=\"ml-3\">\r\n                  {Error.is_superuser}\r\n                </small>\r\n              )}\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <FormLabel>MD</FormLabel>\r\n              <Select\r\n                variant=\"outlined\"\r\n                name=\"md\"\r\n                value={data.md}\r\n                onChange={(e) => handleChange(e)}\r\n                style={{\r\n                  width: \"100%\",\r\n                  outline: \"none\",\r\n                  border: \"none\",\r\n                  height: \"40px\",\r\n                }}\r\n                error={Error && Error.md}\r\n              >\r\n                <option></option>\r\n                <option value=\"md\">Yes</option>\r\n                <option value=\"no\">No</option>\r\n              </Select>\r\n              {Error && Error.md && (\r\n                <small style={{ color: \"red\" }} className=\"ml-3\">\r\n                  {Error.md}\r\n                </small>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <FormLabel>Date Joined</FormLabel>\r\n              <TextField\r\n                fullWidth\r\n                size=\"small\"\r\n                name=\"date_joined\"\r\n                type=\"date\"\r\n                variant=\"outlined\"\r\n                value={data.date_joined}\r\n                onChange={(e) => handleChange(e)}\r\n                error={Error && Error.date_joined ? true : false}\r\n                helperText={Error && Error.date_joined}\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              lg={6}\r\n              md={6}\r\n              sm={12}\r\n              xs={12}\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Button\r\n                onClick={(e) => handleSubmit(e)}\r\n                variant=\"contained\"\r\n                size=\"medium\"\r\n                style={{\r\n                  background: \"#2A3F54\",\r\n                  color: \"white\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                Create\r\n              </Button>\r\n              <Button\r\n                className=\"ml-5\"\r\n                onClick={(e) => history.goBack()}\r\n                startIcon={<Undo color=\"error\" />}\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                size=\"medium\"\r\n                style={{ color: \"#73879c\", marginTop: \"10px\" }}\r\n              >\r\n                Return\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StaffFeed;\r\n","// MUI Stuff\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n// Icons\r\nimport AttachFile from \"@material-ui/icons/AttachFile\";\r\nimport CheckCircle from \"@material-ui/icons/CheckCircle\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAllStaffs } from \"../appState/appSlice\";\r\nimport Mandate from \"./Mandate\";\r\nimport AppWidgetHeader from \"./global/AppWidgetHeader\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst StaffWidget = ({ open, setOpen, isWidget, setIswidget }) => {\r\n  const [mandate, setMandate] = useState(false);\r\n\r\n  const staffs = useSelector(selectAllStaffs);\r\n  return (\r\n    <div className=\"app__Widget\">\r\n      <Mandate\r\n        open={open}\r\n        setOpen={setOpen}\r\n        mandate={mandate}\r\n        setMandate={setMandate}\r\n        url={\r\n          mandate &&\r\n          `/auth/signature/${mandate.split(\" \")[0]}/${mandate.split(\" \")[1]}`\r\n        }\r\n      />\r\n      <AppWidgetHeader\r\n        isWidget={isWidget}\r\n        setIswidget={setIswidget}\r\n        title=\"Staff List\"\r\n      />\r\n      <table className=\"table-hover mt-3\" style={{ width: \"100%\" }}>\r\n        <thead>\r\n          <th style={{ border: \"1px solid #F7F7F7F7\" }}>#</th>\r\n          <th style={{ border: \"1px solid #F7F7F7F7\" }}>Name</th>\r\n          <th style={{ border: \"1px solid #F7F7F7F7\" }}>Mobile</th>\r\n          {/* <th style={{ border: \"1px solid #F7F7F7F7\" }}>Email</th> */}\r\n          <th style={{ border: \"1px solid #F7F7F7F7\" }}>Sign</th>\r\n        </thead>\r\n        <tbody>\r\n          {staffs &&\r\n            staffs.map((staff, index) => {\r\n              const { id, first_name, last_name, email, mobile, signature } =\r\n                staff;\r\n              return (\r\n                <Fragment key={index}>\r\n                  <tr>\r\n                    <td> {index + 1} </td>\r\n                    <td>{`${first_name} ${last_name}`}</td>\r\n                    <td> {mobile} </td>\r\n                    {/* <td> {email} </td> */}\r\n                    <td\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                    >\r\n                      {signature ? (\r\n                        <Tooltip title={`${first_name} signature uploaded`}>\r\n                          <CheckCircle style={{ color: \"#20c997\" }} />\r\n                        </Tooltip>\r\n                      ) : (\r\n                        <div className=\"p-1\">\r\n                          <Tooltip title={`Upload ${first_name} signature`}>\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              onClick={() => setMandate(id + \" \" + first_name)}\r\n                            >\r\n                              <AttachFile />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </div>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                </Fragment>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StaffWidget;\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setAccounts, setAllStaffs, setExpenseCategories, setUser, setUserExpenseRaised } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport StaffFeed from '../components/StaffFeed'\r\nimport StaffWidget from '../components/StaffWidget'\r\n\r\nconst StaffScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(true)\r\n\r\n    // func\r\n \r\n    const get_Staffs =() =>{\r\n        axios.get('/auth', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(staffs =>{\r\n            dispatch(setAllStaffs(staffs.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n    \r\n  \r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        get_Session()\r\n    }, [])\r\n\r\n    useEffect(() =>{\r\n        get_Staffs()\r\n    }, [open])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <StaffFeed\r\n                setOpen={setOpen}\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <StaffWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StaffScreen\r\n","import React from 'react'\r\nimport { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst VendorList = ({ index, hidden, customer_sex, \r\n        email, vendor_name, phone, balance_type, \r\n        active, isWidget\r\n    }) => {\r\n    return (\r\n        <Fragment>\r\n            <tr>\r\n                <td>{index+1} </td>\r\n                <td> {vendor_name} </td>\r\n                <td> {phone} </td>\r\n                <td> {email} </td>\r\n                <td>\r\n                    {\r\n                        active ==1?\r\n                        <span className=\"fa fa-check-circle fa-1x\"></span>\r\n                        :\r\n                        <span></span>\r\n                    }\r\n                </td>\r\n                <td>\r\n                    {\r\n                        hidden ==1?\r\n                        <span className=\"fa fa-lock fa-1x\" style={{color: 'red'}}></span>\r\n                    :\r\n                        <span className=\"fa fa-unlock-alt fa-1x\" style={{color: '#1ABB9C'}}></span>\r\n                    }\r\n                </td>\r\n                {!isWidget&& <td id=\"btn\">\r\n                    <button>Actions</button>\r\n                    <div className=\"btn__poper\">\r\n                        <Link to='#' rel=\"noopener noreferrer\">View register</Link>\r\n                        <Link to='#' rel=\"noopener noreferrer\">Update</Link>\r\n                    </div>\r\n                </td> }                      \r\n            </tr>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default VendorList\r\n","import { Container, IconButton, Paper } from '@material-ui/core'\r\nimport { PlusOne } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectVendors } from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\nimport VendorList from './VendorList'\r\n\r\nconst VendorFeed = ({ isWidget, setIswidget }) => {\r\n    const vendors = useSelector(selectVendors)\r\n    return (\r\n        <div className={`${isWidget? 'isapp__Feed': 'app__Feed'}`}>\r\n           <AppHeader title='Vendors' />\r\n           <div className=\"row align-items-center justify-content-center d-flex m-1\" >\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                    {/* table */}\r\n                    <h3>Vendor List <span> \r\n                        <IconButton color='secondary'\r\n                            onClick={() =>setIswidget(!isWidget)}\r\n                        >\r\n                        <PlusOne style={{ color: '#1ABB9C'}} />\r\n                        </IconButton></span></h3> \r\n                    <Paper>\r\n                        <Container className='p-3'>\r\n                        <table className=\"table-small table-hover table-bordered\" style={{width: '100%'}}>\r\n                            <thead>\r\n                                <th>#</th>\r\n                                <th>Name</th>\r\n                                <th>Contact</th>\r\n                                <th>Email</th>\r\n                                <th>Active</th>\r\n                                <th>Lock</th>\r\n                                {!isWidget&&<th>Actions</th>}\r\n                            </thead>\r\n                            <tbody>\r\n                                \r\n                                {\r\n                                   vendors&&\r\n                                   vendors.map((vendor, index) =>{\r\n                                        return <VendorList\r\n                                            index={index}\r\n                                            {...vendor}\r\n                                            isWidget={isWidget}\r\n                                        />\r\n                                    })\r\n\r\n                                }\r\n                                    \r\n                            </tbody>\r\n                        </table>\r\n                        {vendors&& !vendors.length>0&&\r\n                            <div className=\"alert alert-warning\">\r\n                            <h6>No Asset Accounts Availabe</h6>\r\n                            </div>\r\n                        }\r\n                        </Container>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VendorFeed\r\n","import { Button, FormGroup, FormLabel, Grid, Select, TextField, Typography } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectAccounts, selectToken } from '../../appState/appSlice'\r\n\r\nconst VendorCreationForm = ({ open, setOpen}) => {\r\n    const token = useSelector(selectToken)\r\n    const [Error, setError] = useState()\r\n    const accounts = useSelector(selectAccounts)\r\n    const [vendorData, setVendordata] = useState({\r\n            vendor_name: '',\r\n            address_1: '',\r\n            address_2: '',\r\n            city: '',\r\n            state: '',\r\n            zip_code: '',\r\n            country: '',\r\n            email: '',\r\n            website: '',\r\n            phone: '',\r\n            exp_account_FK: '',\r\n    })\r\n    // func\r\n    const handleChange = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n\r\n        setVendordata({\r\n            ...vendorData,\r\n            [name]: value\r\n        })\r\n    }\r\n    const handle_Create_Vendor =e =>{\r\n        e. preventDefault()\r\n        if(Error){\r\n            return Error\r\n        }\r\n        setOpen(true)\r\n        axios.post('/vendor', vendorData, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(result =>{\r\n            setOpen(false)\r\n            setVendordata({\r\n                vendor_name: '',\r\n                address_1: '',\r\n                address_2: '',\r\n                city: '',\r\n                state: '',\r\n                zip_code: '',\r\n                country: '',\r\n                email: '',\r\n                website: '',\r\n                phone: '',\r\n                exp_account_FK: '',\r\n            \r\n            })\r\n        })\r\n        .catch(error =>{\r\n            setOpen(false)\r\n            if(error){\r\n                return setError(error.response.statusText)\r\n            }\r\n        })\r\n    }\r\n    useEffect(() =>{\r\n        Object.keys(vendorData).map(key =>{\r\n            if(vendorData[key].length <=0){\r\n                return setError('Form not valid')\r\n              \r\n            }\r\n            setError('')\r\n        })\r\n        \r\n    },[vendorData])\r\n    return (\r\n        <Fragment>\r\n            <form className='mt-3 pl-2 pr-2'>\r\n                <Grid container spacing={2}>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Name'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='vendor_name'\r\n                                value={vendorData.vendor_name}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Contact'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='phone'\r\n                                value={vendorData.phone}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Eamil'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='email'\r\n                                value={vendorData.email}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    \r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Nationality'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='country'\r\n                                value={vendorData.country}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                   \r\n                    <Grid item lg={12} md={12}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Home Address'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='address_2'\r\n                                value={vendorData.address_2}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='City'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='city'\r\n                                value={vendorData.city}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Website'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='website'\r\n                                value={vendorData.website}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={12} md={12}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label='Residential Address'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='address_1'\r\n                                value={vendorData.address_1}\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={12} md={12}>\r\n                        <FormLabel>Appear for all vendor payment</FormLabel>\r\n                        <Select\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            name='exp_account_FK'\r\n                            value={vendorData.exp_account_FK}\r\n                            onChange={e =>handleChange(e)}\r\n                            style={{ height: '40px' }}\r\n                        >\r\n                            <option value=''></option>\r\n                            {\r\n                                accounts&&\r\n                                accounts.map((acc, index) =>{\r\n                                    const { id, name, balance_type } = acc\r\n                                    return <option value={id} key={index} >{`${name} (${balance_type})`}</option>\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </Grid>\r\n                    <Grid item lg={12} md={12}>\r\n                        <FormLabel>State of origin?</FormLabel>\r\n                        <FormGroup>\r\n                            <Select style={{height: '40px'}}\r\n                                label='Marital Status'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                name='state'\r\n                                value={vendorData.state}\r\n                                onChange={e =>handleChange(e)}\r\n                            >\r\n                                <option value></option>\r\n                                <option value='Abia'>Abia</option>\r\n                                <option value='Adamawa'>Adamawa</option>\r\n                                <option value='Anambara'>Anambara</option>\r\n                                <option value='Akwa-ibom'>Akwa-ibom</option>\r\n                                <option value='Benue'>Benue</option>\r\n                                <option value='Enugu'>Enugu</option>\r\n                                <option value='Cross-River'>Cross-River</option>\r\n                                <option value='Imo'>Imo</option>\r\n                                <option value='FCT'>FCT</option>\r\n                                <option value='Nsarawa'>Nsarawa</option>\r\n                                <option value='Kaduna'>Kaduna</option>\r\n                                <option value='Kano'>Kano</option>\r\n                            </Select>\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item lg={12} md={12}>\r\n                        {/* {\r\n                            Error&&\r\n                            <Typography variant='caption' color='error'>\r\n                                {Error}\r\n                            </Typography>\r\n                        } */}\r\n                        <Button\r\n                            disabled={Error}\r\n                            onClick={e =>handle_Create_Vendor(e)}\r\n                            color='default' variant='contained'\r\n                            style={{ color: 'white', background: '#2A3F54', width: '100%'}}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default VendorCreationForm\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport VendorCreationForm from './form/VendorCreationForm'\r\nimport AppWidgetHeader from './global/AppWidgetHeader'\r\n\r\nconst VendorrWidget = ({ open, setOpen, isWidget, setIswidget }) => {\r\n    return (\r\n        <div className='app__Widget'>\r\n            <AppWidgetHeader\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n                title='Create Vendor' \r\n            />\r\n            <section className='app__WidgetContainer'>\r\n                <VendorCreationForm\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                />\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VendorrWidget\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setAccounts, setUser, setVendors } from '../appState/appSlice'\r\nimport VendorFeed from '../components/VendorFeed'\r\nimport VendorWidget from '../components/VendorWidget'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\n\r\nconst VendorScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const [isWidget, setIswidget] = useState(false)\r\n    // func\r\n    const getVendors = () =>{\r\n        axios.get('/vendor', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(vendor =>{\r\n            dispatch(setVendors(vendor.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n       // func\r\n       const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        getVendors()\r\n        get_AllAccounts()\r\n        get_Session()\r\n    },[open])\r\n    return (\r\n        <div className='app'>\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <VendorFeed\r\n                isWidget={isWidget}\r\n                setIswidget={setIswidget}\r\n            />\r\n            {/* widget */}\r\n            {\r\n                isWidget&&\r\n                <VendorWidget\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    isWidget={isWidget}\r\n                    setIswidget={setIswidget} \r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VendorScreen\r\n","import { Button, Typography } from '@material-ui/core'\r\nimport { Search } from '@material-ui/icons'\r\nimport React, { Fragment } from 'react'\r\nimport { DownloadSaleRepmt } from './ExcelDownload'\r\n\r\nconst SaleRepayViewTable = ({ data, reports, handleChange, handle_Get_Report}) => {\r\n    const calcuAmt = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount+ a, 0)\r\n        return total.toLocaleString()\r\n    }\r\n\r\n    const calcuAimed = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.amount_paid+ a, 0)\r\n        return total.toLocaleString()\r\n    }\r\n\r\n    \r\n    const calcuLastPaid = (data) =>{\r\n        const total = data&& data.reduce((a, v) =>+v.tx_amount+ a, 0)\r\n        return total.toLocaleString()\r\n    }\r\n\r\n    const tx_Status = (x) =>{\r\n        const status = x && x == 1 ?\r\n            <span className='fa fa-plus-circle' style={{color: '#20c997'}} />\r\n        :\r\n       \r\n        <span className='fa fa-minus-circle' style={{color: 'red'}} />\r\n        return status\r\n    }\r\n    return (\r\n        <Fragment>\r\n            \r\n            <table className='mt-1 table-bordered hide-on-print' style={{width: '98%', margin: 'auto', \r\n                    position: 'sticky', top: 0, zIndex: 222}}>\r\n                    <thead>\r\n                        <th>From</th>\r\n                        <th>\r\n                            <input\r\n                                type='date'\r\n                                value={data.start_date}\r\n                                placeholder='Staff'\r\n                                name='start_date' list='staffs'\r\n                                onChange={e =>handleChange(e)}\r\n                            />\r\n                            \r\n                        </th>\r\n                        <th>To</th>\r\n                        <th>\r\n                            <input\r\n                                name='end_date'\r\n                                type='date'\r\n                                value={data.end_date}\r\n                                onChange={e =>handleChange(e)}\r\n                                \r\n                            />\r\n                        </th>\r\n                        <th>\r\n                            <Button size='small'\r\n                                endIcon={<Search  />}\r\n                                onClick={() =>handle_Get_Report()}\r\n                                style={{background: '#2a3f54', color: 'white', width: '100%'}}\r\n                            >\r\n                            Search\r\n                            </Button>\r\n                        </th>\r\n                                            \r\n                    </thead>\r\n            </table>\r\n                {/* transaction table */}\r\n            {reports && reports.length>0 &&\r\n            <table className='table-hover table-bordered'\r\n                style={{width: '98%', margin: 'auto',}}\r\n            >\r\n                <thead style={{top: '34px', position: 'sticky', background: '#2a3f54', color: 'white'}}>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>#</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Name</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Property</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Due Date</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Cost AMT(<s>N</s>)</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Aimed AMT(<s>N</s>)</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>RCPT. NO.</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>TX Date</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>LT Paymnt(<s>N</s>)</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}>Pay Method</th>\r\n                    <th style={{ border: '1px solid #F7F7F7F7' }}> Remark </th>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        reports && \r\n                        reports.map((tx, index) =>{\r\n                        const { applicant_name, amount, property_name,status, tx_date,\r\n                                amount_paid, due_date, tx_amount, rcpt_no, pay_method, \r\n                            } = tx\r\n                            return (\r\n                                <Fragment key={index}>\r\n                                    <tr>\r\n                                        <td\r\n                                            style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}\r\n                                        > {index+1} </td>\r\n                                        <td style={{textAlign: 'left'}}>\r\n                                            {applicant_name}\r\n                                        </td>\r\n                                        <td style={{textAlign: 'left'}}> {property_name} </td>\r\n                                        <td style={{textAlign: 'left', margin: '5px'}}>\r\n                                        \r\n                                            {new Date(due_date).toLocaleDateString()}\r\n                                        \r\n                                        </td>\r\n                                        {/* <td> {new Date(tx_date).toLocaleDateString()} </td> */}\r\n                                        \r\n                                        <td>\r\n                                                <Typography color='error'>\r\n                                                { amount.toLocaleString() }\r\n                                                </Typography>\r\n                                            </td>\r\n                                            <td>\r\n                                                <Typography style={{color: '#20C997'}}>\r\n                                                { amount_paid.toLocaleString() }\r\n                                                </Typography>\r\n                                            </td>\r\n                                            <td> {rcpt_no} </td>\r\n                                            <td> {new Date(tx_date).toLocaleDateString()} </td>\r\n                                            <td>\r\n                                                <Typography style={{color: '#20C997'}}>\r\n                                                { tx_amount.toLocaleString() }\r\n                                                </Typography>\r\n                                            </td>\r\n                                        <td> {pay_method} </td>\r\n                                        <td\r\n                                            style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}\r\n                                        >\r\n                                            <div className='p-2'>\r\n                                            {tx_Status(status)}\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                    {\r\n                        reports &&reports.length >0 &&\r\n                        <tr\r\n                        style={{background: '#2A3F54', color: 'white'}} \r\n                        >\r\n                            <td colSpan={2}>\r\n                                <Typography variant='subtitle1'\r\n                                style={{color: 'white'}}\r\n                                >\r\n                                    <b>Total:</b>\r\n                                </Typography>\r\n                            </td>\r\n                            <td colSpan={3}>\r\n                                <Typography variant='subtitle1'\r\n                                style={{color: 'white'}}\r\n                                >\r\n                                <b>{\r\n                                    calcuAmt(reports)\r\n                                }</b>\r\n                                </Typography>\r\n                            </td>\r\n                            <td colSpan={1}>\r\n                                <Typography variant='subtitle1'\r\n                                    style={{color: 'white'}}\r\n                                    >\r\n                                    <b>{calcuAimed(reports)}</b>\r\n                                </Typography>\r\n                            </td>\r\n                            <td colSpan={3}>\r\n                                <Typography variant='subtitle1'\r\n                                    style={{color: 'white'}}\r\n                                    >\r\n                                    <b>{ calcuLastPaid(reports)}</b>\r\n                                </Typography>\r\n                            </td>\r\n                            <td colSpan={2}></td>\r\n                        </tr>\r\n                        \r\n                    }\r\n                    \r\n                </tbody>\r\n                \r\n            </table>\r\n            }\r\n             {\r\n                reports && reports.length>0 &&\r\n                <table className='hide-on-print table'>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                        <DownloadSaleRepmt\r\n                            dataSet1={reports}\r\n                            date={data.start_date + '-'+data.end_date}\r\n                        />\r\n                        </td>\r\n                        <td>\r\n                            <button\r\n                                onClick={() =>window.print()}\r\n                                >\r\n                                    Print\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default SaleRepayViewTable\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport axios from 'axios'\r\nimport Currency from 'react-currency-formatter'\r\nimport React, {Fragment, useState, useEffect} from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectCustomers, selectPaymentHistory, selectPropServices, selectToken } from '../appState/appSlice'\r\nimport AppHeader from './global/AppHeader'\r\nimport SaleRepayViewTable from './SaleRepayViewTable'\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport SalePaidHistoryView from \"./SalePaidHistoryView\";\r\n\r\n\r\nconst RenderHead = ({property, setProperty, properties}) =>{\r\n    return (\r\n      <Fragment>\r\n        <th>Poperty</th>\r\n          <th>\r\n          <select\r\n            name=\"heanding\"\r\n            value={property}\r\n            placeholder=\"Account\"\r\n            style={{ border: \"none\" }}\r\n            onChange={e => setProperty(e.target.value)}\r\n          >\r\n            <option value=\"\"></option>\r\n            {properties &&\r\n              properties.map((exps, index) => {\r\n                const { id, name } = exps;\r\n                return (\r\n                  <Fragment key={index}>\r\n                    <option\r\n                      value={id}\r\n                      key={index}\r\n                    >{`${name}`}</option>\r\n                  </Fragment>\r\n                );\r\n              })}\r\n          </select>\r\n          </th>\r\n      </Fragment>\r\n    )\r\n}\r\n\r\nconst renderTotalQty = (data) =>{\r\n    const total = data?.reduce((a,b) =>a+b.qty, 0)\r\n    return total\r\n}\r\n\r\nconst renderTotalSoldAmount = (data) =>{\r\n    const total = data?.reduce((a, b) =>a+b.amount, 0);\r\n    return <Currency currency='NGN' quantity={total} />\r\n}\r\n\r\nconst RenderPropReport = ({ reports }) =>{\r\n    return (\r\n        <Fragment>\r\n            <table className=\"table-sm table-hover\"\r\n                style={{\r\n                    width: '100%'\r\n                }}\r\n            >\r\n                <thead>\r\n                    <th style={{border: '1px solid #F7F7F7F7'}}>S/N</th>\r\n                    <th style={{border: '1px solid #F7F7F7F7'}}>Customer</th>\r\n                    <th style={{border: '1px solid #F7F7F7F7'}}>Build Category</th>\r\n                    <th style={{border: '1px solid #F7F7F7F7'}}>Plot Number</th>\r\n                    <th style={{border: '1px solid #F7F7F7F7'}}>Amount(<s>N</s>)</th>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        reports?.result?.length > 0 && \r\n                        reports.result.map((report, index) =>{\r\n                            const {customer_name, buildCategory, \r\n                                plot_number, qty, quantity, amount} = report\r\n                            return (\r\n                                <Fragment key={index}>\r\n                                    <tr>\r\n                                        <td\r\n                                            style={{\r\n                                                textAlign: 'center', color: '#20c997'\r\n                                            }}\r\n                                        >\r\n                                            <Typography\r\n                                                style={{\r\n                                                    color: '#20c997'\r\n                                                }}\r\n                                            >\r\n                                            {index+1}\r\n                                            </Typography>\r\n                                        </td>\r\n                                        <td\r\n                                            style={{\r\n                                                textAlign: 'left'\r\n                                            }}\r\n                                        >{customer_name}</td>\r\n                                        <td\r\n                                            style={{\r\n                                                textAlign: 'left'\r\n                                            }}\r\n                                        >{buildCategory}</td>\r\n                                        <td\r\n                                            style={{\r\n                                                textAlign: 'left'\r\n                                            }}\r\n                                        >\r\n                                            <Typography\r\n                                                style={{\r\n                                                    color: '#20c997'\r\n                                                }}\r\n                                            >\r\n                                            {plot_number}\r\n                                            </Typography>\r\n                                        </td>\r\n                                       \r\n                                        <td\r\n                                            style={{\r\n                                                textAlign: 'left'\r\n                                            }}\r\n                                        >\r\n                                            <Typography color='error'>\r\n                                            {amount.toLocaleString()}\r\n                                            </Typography>\r\n                                        </td>\r\n                                        \r\n                                    </tr>\r\n                                </Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                    { reports?.result?.length > 0 && (\r\n                        <tr>                        \r\n                            <td colSpan={5}>\r\n                            <div style={{\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center'\r\n                            }}>\r\n                            <section style={{\r\n                                padding: '5px',\r\n                                width: '80%',\r\n                                margin: 'auto',\r\n                                display: 'flex',\r\n                               \r\n                                alignItems: 'center',\r\n                                borderRadius: '10px',\r\n                                flexDirection: 'column',\r\n                                boxShadow: '0px 3px 5px #ccc',\r\n                                justifyContent: 'space-between'\r\n                            }}>\r\n                                    <div style={{\r\n                                        padding: 5,\r\n                                        width: '100%',\r\n                                        display: 'flex',\r\n                                        justifyContent: 'space-between'\r\n                                    }}>\r\n                                        <h5 className=\"font-bold text-center\">Total Qty</h5>\r\n                                        <h5 className=\"text-center font-bold\"> {reports?.result[0]?.quantity} </h5>\r\n                                    </div>\r\n                                    \r\n                                    <div style={{\r\n                                        padding: 5,\r\n                                        width: '100%',\r\n                                        display: 'flex',\r\n                                        justifyContent: 'space-between'\r\n                                    }}>\r\n                                        <h5 className=\"font-bold text-center\">Sold Qty</h5>\r\n                                        <h5 className=\"text-center font-bold\"> {\r\n                                            renderTotalQty(reports?.result)\r\n                                        } </h5>\r\n                                    </div>    \r\n                                    <div style={{\r\n                                        padding: 5,\r\n                                        width: '100%',\r\n                                        display: 'flex',\r\n                                        justifyContent: 'space-between'\r\n                                    }}>\r\n                                        <h5 className=\"font-bold text-center\">Sold Amt</h5>\r\n                                        <Typography variant=\"h5\" color=\"error\" className=\"text-center font-bold text-red\"> {\r\n                                        renderTotalSoldAmount(reports?.result)\r\n                                        } </Typography>\r\n                                    </div> \r\n                                    <div style={{\r\n                                        padding: 5,\r\n                                        width: '100%',\r\n                                        display: 'flex',\r\n                                        justifyContent: 'space-between'\r\n                                    }}>\r\n                                        <h5 className=\"font-bold text-center\">Total Repayment</h5>\r\n                                        <Typography\r\n                                            variant=\"h5\"\r\n                                            style={{\r\n                                                color: '#20c997'\r\n                                            }}\r\n                                            className=\"text-center font-bold\"> {\r\n                                            <Currency \r\n                                                currency='NGN' \r\n                                                quantity={reports?.total?.TotalPay}\r\n                                            />\r\n                                        } </Typography>\r\n                                    </div>       \r\n                                </section>\r\n                            </div>\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst SaleRepaymentFeed = ({setUuid, getCustomer_Report}) => {\r\n    const token = useSelector(selectToken)\r\n    const [reports, setReports] = useState()\r\n    const [swap, setSwap] = useState(1)\r\n    const [report, setReport] = useState([])\r\n    const [property, setProperty] = useState()\r\n\r\n    const customers = useSelector(selectCustomers)\r\n    const properties = useSelector(selectPropServices);\r\n    const paymentHistorys = useSelector(selectPaymentHistory)\r\n    const [data, setData] = useState({\r\n        start_date: '',\r\n        end_date: ''\r\n    })\r\n\r\n    const handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value\r\n        setData ({\r\n            ...data,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handle_Get_Report =()=>{\r\n        if(data.start_date && data.end_date)\r\n            return(\r\n                axios.get(`/sale/report/${data.start_date}/${data.end_date}`, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`\r\n                    }\r\n                })\r\n                .then(result =>{\r\n                   setReports(result.data)\r\n                })\r\n                .catch(error =>{\r\n                    if(error){\r\n                        return error\r\n                    }\r\n                })\r\n            )\r\n    }\r\n\r\n    const getProp__report = () => {\r\n        axios\r\n          .get(`/prop_service/report/${property}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          })\r\n          .then(result=> {\r\n                setReport(result.data)\r\n                console.log(result.data)\r\n          })\r\n          .catch((error) => {\r\n            return error;\r\n          });\r\n    };\r\n    \r\n    useEffect(() =>{\r\n        return getProp__report()\r\n    }, [property])\r\n\r\n    const renderTabs = () =>{\r\n        switch (swap) {\r\n            case 1:\r\n                return (\r\n                    <SaleRepayViewTable\r\n                        data={data}\r\n                        reports={reports}\r\n                        handleChange={handleChange}\r\n                        handle_Get_Report={handle_Get_Report}\r\n                    \r\n                    />\r\n                )\r\n            case 2:\r\n                return (\r\n                    <Fragment>\r\n                         <table\r\n                            style={{\r\n                            top: 0,\r\n                            zIndex: 222,\r\n                            width: \"98%\",\r\n                            margin: \"auto\",\r\n                            position: \"sticky\",\r\n                            }}\r\n                            className=\"mt-1 table-bordered hide-on-print\"\r\n                        >\r\n                            <thead>\r\n                            \r\n                                <RenderHead \r\n                                    property={property}\r\n                                    setProperty={setProperty}\r\n                                    properties={properties}\r\n                                />\r\n                                <th>\r\n                                    <Button\r\n                                    size=\"small\"\r\n                                    endIcon={<Search />}\r\n                                    onClick={() => handle_Get_Report()}\r\n                                    style={{\r\n                                        background: \"#2a3f54\",\r\n                                        color: \"white\",\r\n                                        width: \"100%\",\r\n                                    }}\r\n                                    >\r\n                                    Search\r\n                                    </Button>\r\n                                </th>\r\n                            </thead>\r\n                        </table>\r\n                        <RenderPropReport reports={report} />\r\n                        {\r\n                            !report?.result?.length >0&&\r\n                            <div className='alert alert-warning'>\r\n                                {`Ops!!! no repayment history`}\r\n                            </div>\r\n                        }\r\n                    </Fragment>\r\n                )\r\n            case 3:\r\n                return(\r\n                    <Fragment>\r\n                         <table\r\n                            style={{\r\n                            top: 0,\r\n                            zIndex: 222,\r\n                            width: \"98%\",\r\n                            margin: \"auto\",\r\n                            position: \"sticky\",\r\n                            }}\r\n                            className=\"mt-1 table-bordered hide-on-print\"\r\n                        >\r\n                            <thead>\r\n\r\n                                <th>Select Customer</th>\r\n                                <th>\r\n                                    <input \r\n                                        list='selectCus'\r\n                                        name='uuid'\r\n                                        \r\n                                        placeholder='Select Applicant'\r\n                                        onChange={(e) =>setUuid(\r\n                                            e.target.value?.split(' ')[0]\r\n                                            )}\r\n                                        style={{\r\n                                            flex: 1,\r\n                                            border: 'none',\r\n                                            outline: 'none',\r\n                                            paddingLeft: 10\r\n                                        }}\r\n                                    />\r\n                                    <datalist id=\"selectCus\">\r\n                                        {customers &&\r\n                                        customers.map((cus, index) => {\r\n                                        return (\r\n                                            <option key={index} value={`${cus.id} ${cus.customer_name}`}>\r\n                                            {cus.customer_name}\r\n                                            </option>\r\n                                        );\r\n                                        })}\r\n                                    </datalist>\r\n                                </th>\r\n                               \r\n                                <th>\r\n                                    <Button\r\n                                    size=\"small\"\r\n                                    endIcon={<Search />}\r\n                                    onClick={() =>getCustomer_Report()}\r\n                                    style={{\r\n                                        background: \"#2a3f54\",\r\n                                        color: \"white\",\r\n                                        width: \"100%\",\r\n                                    }}\r\n                                    >\r\n                                    Search\r\n                                    </Button>\r\n                                </th>\r\n                            </thead>\r\n                        </table>\r\n                        <SalePaidHistoryView \r\n                            paymentHistorys={paymentHistorys}\r\n                        />\r\n                        {\r\n                            !paymentHistorys?.repayment?.length >0&&\r\n                            <div className='alert alert-warning'>\r\n                                {`Ops!!! no repayment history`}\r\n                            </div>\r\n                        }\r\n                        \r\n                    </Fragment>\r\n                )\r\n            default:\r\n                return (\r\n                    <Fragment>\r\n                        <SaleRepayViewTable\r\n                            data={data}\r\n                            reports={reports}\r\n                            handleChange={handleChange}\r\n                            handle_Get_Report={handle_Get_Report}\r\n                        />\r\n                    </Fragment>\r\n                    \r\n                )\r\n        }\r\n    }\r\n\r\n    useEffect(() =>{\r\n        return handle_Get_Report()\r\n    }, [data])\r\n    return (\r\n        <Fragment>\r\n            <div className='app__Feed'>\r\n                <AppHeader title='Sale Repayment Report' />\r\n                <div className='admin__FeedContainer'>\r\n                    <Grid container spacing={2} >\r\n                        <Grid item lg={12} md={12} sm={12}>\r\n                            <div className='admin__Title'>\r\n                                <section>\r\n                                    <Typography variant='h3'>Sales Reports Pool</Typography>\r\n                                </section>\r\n                            </div>\r\n                            <div style={{\r\n                                padding: 5,\r\n                                borderBottom: '1px solid #edededed',\r\n                                boxSizing: 'border-box',\r\n                                boxShadow: '0px 1px 2px gray'\r\n                                }}\r\n                                className='mb-3'\r\n                            >\r\n                            <Tooltip title='Pool Sales Report'>                     \r\n                                <Button\r\n                                style={{\r\n                                    width: 100,\r\n                                    color: swap == 1 ?  '#20C997' : 'white',\r\n                                    boxSizing: 'border-box',\r\n                                    backgroundColor: swap == 1 ?  '#F7F7F7F7' : '#2a3f54',\r\n                                    boxShadow: '0px 2px 2px gray'\r\n                                }}\r\n                                onClick={() =>setSwap(1)}\r\n                                > \r\n                                    All\r\n                                </Button>\r\n                            </Tooltip>\r\n\r\n                            <Tooltip title='Pool Sale Report By Property / Periodic'>                     \r\n                            <Button\r\n                                style={{\r\n                                    width: 'auto',\r\n                                    marginLeft: 10,\r\n                                    color: swap == 2 ?  '#20C997' : 'white',\r\n                                    boxSizing: 'border-box',\r\n                                    backgroundColor: swap == 2 ?  '#F7F7F7F7' : '#2a3f54',\r\n                                    boxShadow: '0px 2px 2px gray'\r\n                                }}\r\n                                onClick={() =>setSwap(2)}\r\n                                > \r\n                                    Property\r\n                                </Button>\r\n                            </Tooltip>\r\n\r\n                            <Tooltip title='Pool Sale Report By Customer'>                     \r\n                            <Button\r\n                                style={{\r\n                                    width: 'auto',\r\n                                    marginLeft: 10,\r\n                                    color: swap == 3 ?  '#20C997' : 'white',\r\n                                    boxSizing: 'border-box',\r\n                                    backgroundColor: swap == 3 ?  '#F7F7F7F7' : '#2a3f54',\r\n                                    boxShadow: '0px 2px 2px gray'\r\n                                }}\r\n                                onClick={() =>setSwap(3)}\r\n                                > \r\n                                Customer\r\n                                </Button>\r\n                            </Tooltip>\r\n                         \r\n                            </div>\r\n                            <div className='p-1' />\r\n                            {/* Tabs*/}\r\n                            {renderTabs()}                 \r\n                                \r\n                            {\r\n                                reports<=0 &&\r\n                                \r\n                                <div className='alert alert-warning'\r\n                                    style={{width: '98%', margin: 'auto'}}\r\n                                >\r\n                                    {`Ops!!! No Transaction History`}\r\n                                </div>                \r\n                            }\r\n               \r\n                           </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div> \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default SaleRepaymentFeed\r\n","import axios from 'axios';\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectToken, setCustomers, setPaymentHistory, setPropServices, setTxAccounts } from '../appState/appSlice';\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport SaleRepaymentFeed from '../components/SaleRepaymentFeed'\r\n\r\n\r\n\r\nconst SaleRepaymentReportScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const [uuid, setUuid] = useState()\r\n    const token = useSelector(selectToken)\r\n\r\n    const getProp_Services = () => {\r\n        axios\r\n          .get(\"/prop_service\", {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          })\r\n          .then((ps) => {\r\n            dispatch(setPropServices(ps.data));\r\n          })\r\n          .catch((error) => {\r\n            return error;\r\n          });\r\n      };\r\n\r\n    \r\n\r\n    const getCustomer_Report = () =>{\r\n        axios.get(`/sale/payment_history/${uuid}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(data =>{\r\n           dispatch(setPaymentHistory(data.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n  \r\n\r\n    const get_Tx_Accounts = () =>{\r\n        axios.get('/transaction/accounts', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setTxAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    const getCustomers = () =>{\r\n        axios.get('/customer', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(asset =>{\r\n            dispatch(setCustomers(asset.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        return (\r\n            getCustomers(),\r\n            get_Tx_Accounts,\r\n            getProp_Services()\r\n        )\r\n    }, [])\r\n    return (\r\n        <Fragment>\r\n            <div className=\"app\">\r\n                <SideBarMenu />\r\n                {/* feed */}\r\n                <SaleRepaymentFeed \r\n                    uuid={uuid} \r\n                    setUuid={setUuid} \r\n                    getCustomer_Report={getCustomer_Report}\r\n                />\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default SaleRepaymentReportScreen\r\n","import Button from '@material-ui/core/Button';\r\nimport Search from '@material-ui/icons/Search';\r\nimport React, { Fragment } from 'react'\r\n\r\nconst RenderPeriodicTable = ({ data, setData, handleChange, handleSearch, containerSyle }) =>{\r\n    return (\r\n        <Fragment>\r\n             <table\r\n                style={{\r\n                    top: 0,\r\n                    zIndex: 222,\r\n                    width: \"90%\",\r\n                    margin: \"auto\",\r\n                    position: \"sticky\",\r\n                    ...containerSyle\r\n                }}\r\n                className=\"mt-1 table-bordered hide-on-print\"\r\n                >\r\n                <thead>\r\n                    <th>From</th>\r\n                    <th>\r\n                    <input\r\n                    type='date'\r\n                    value={data.start_date}\r\n                    onChange={(e) =>\r\n                        setData({\r\n                        ...data,\r\n                        start_date: e.target.value,\r\n                        })\r\n                    }\r\n                    style={{\r\n                        width: \"100%\",\r\n                        outline: \"none\",\r\n                        border: \"none\",\r\n                        height: \"30px\",\r\n                    }}\r\n                    />\r\n                    </th>\r\n                    <th>To</th>\r\n                    <th>\r\n                    <input\r\n                        name=\"end_date\"\r\n                        type=\"date\"\r\n                        value={data.end_date}\r\n                        onChange={(e) => handleChange(e)}\r\n                    />\r\n                    </th>\r\n                    <th>\r\n                    <Button\r\n                        size=\"small\"\r\n                        style={{\r\n                        color: \"white\",\r\n                        width: \"100%\",\r\n                        background: \"#2a3f54\",\r\n                        }}\r\n                        endIcon={<Search />}\r\n                        onClick={() => handleSearch()}\r\n\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    </th>\r\n                </thead>\r\n            </table>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default RenderPeriodicTable;","import React, {Fragment, useEffect, useState} from \"react\";\r\nimport ReactExport from \"react-data-export\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectExpenseCategories } from \"../appState/appSlice\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nexport const MultiExcelDownload = ({data}) =>{\r\n    const [exports, setExports] = useState('')\r\n    const expCategories = useSelector(selectExpenseCategories);\r\n    \r\n    const renderExpCategory = (id) => {\r\n        const expCat =\r\n          expCategories && expCategories.find((category) => category.id == id);\r\n        return expCat ? (expCat.name ? expCat.name : null) : null;\r\n      };\r\n\r\n    useEffect(() =>{\r\n        const Datasets = []\r\n        expCategories?.forEach(element => {\r\n            const filterData = data?.filter(catData =>catData.expense_FK == element.id)\r\n                if(filterData.length > 0){\r\n                    return Datasets.push({\r\n                        head: element.name,\r\n                        [element.name]: filterData\r\n                    })\r\n                }\r\n        });\r\n        return setExports(Datasets)\r\n    }, [data])\r\n    return (\r\n        <ExcelFile>\r\n           \r\n                {\r\n                    exports && exports.map((e, index) =>{\r\n                        return (\r\n                            <ExcelSheet data={e[e.head]} name={e.head.slice(0, 9)} key={index}>\r\n                                    <ExcelColumn label=\"Heanding\" value={(col) =>renderExpCategory(col.expense_FK)} />\r\n                                    <ExcelColumn label=\"Description\" value=\"description\"/>\r\n                                    <ExcelColumn label=\"Amount\" value=\"amount\"/>\r\n                                    <ExcelColumn label=\"Date\" \r\n                                        value={(col) => new Date(col.createdAt).toLocaleDateString()}/>\r\n                            </ExcelSheet>\r\n                        )\r\n                    })\r\n                }\r\n           \r\n            \r\n        </ExcelFile>\r\n    );\r\n}","\r\nimport React, { Fragment, useState, useEffect } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { selectExpenseCategories, selectToken } from '../appState/appSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport RenderPeriodicTable from './global/RenderPeriodicTable';\r\nimport { MultiExcelDownload } from './MultiExcelDownload';\r\n\r\nconst RenderButtonTab = ({ id, tab, title, setTab, tabIndex, setSelected}) =>{\r\n    return (\r\n        <div \r\n            key={id}\r\n            onClick={() =>setSelected(id)}\r\n        >\r\n            <Tooltip title={title}>                     \r\n            <Button\r\n                style={{\r\n                    \r\n                    marginLeft: 10,\r\n                    color: tab == tabIndex ?  '#20c997' :'#2a3f54' ,\r\n                    boxSizing: 'border-box',\r\n                    backgroundColor: tab == tabIndex ?  '#2a3f54'  : '#F7F7F7F7',\r\n                    boxShadow: '0px 2px 2px gray'\r\n                }}\r\n                onClick={() =>setTab(tabIndex)}\r\n                > \r\n                {title?.slice(0,5)}\r\n                </Button>\r\n            </Tooltip>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ExpenseAnalysisReport = ({data, setData, handleChange}) => {\r\n    const token = useSelector(selectToken)\r\n    const [tab, setTab] = useState()\r\n    const [reports, setReports]  = useState('')\r\n    const [expenses, setExpenses] = useState('')\r\n    const [selected, setSelected] = useState()\r\n    const expCategories = useSelector(selectExpenseCategories);\r\n\r\n    // func\r\n    const calcuAmt = (data) => {\r\n        const total = data && data.reduce((a, v) => +v.amount + a, 0);\r\n        return total ? total.toLocaleString() : null;\r\n    };\r\n\r\n    // func\r\n    const handle_Get_analytic_periodic_Report =() => {\r\n   \r\n        return axios\r\n            .get(`/expense/analytic/${data.start_date}/${data.end_date}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n            })\r\n            .then((result) => {\r\n                setExpenses(result.data);\r\n            })\r\n            .catch((error) => {\r\n                if (error) {\r\n                    return error;\r\n                }\r\n            });\r\n    }\r\n    const renderExpCategory = (id) => {\r\n        const expCat =\r\n          expCategories && expCategories.find((category) => category.id == id);\r\n        return expCat ? (expCat.name ? expCat.name : null) : null;\r\n      };\r\n\r\n    const handleFilterExpense = () =>{\r\n        const filterExp = expenses && expenses.filter(exp => exp.expense_FK === selected)\r\n        return setReports(filterExp)\r\n      \r\n    }\r\n\r\n    useEffect(() =>{\r\n        return handleFilterExpense()\r\n    }, [selected])\r\n    return (\r\n        <Fragment>\r\n            <RenderPeriodicTable\r\n                data={data}\r\n                setData={setData}\r\n                handleChange={handleChange}\r\n                handleSearch={handle_Get_analytic_periodic_Report}\r\n            />\r\n            {\r\n                expenses && \r\n                <div\r\n                    style={{\r\n                        padding: 5,\r\n                        width: '99%',\r\n                        margin: 'auto',\r\n                        display: 'flex',\r\n                        overflowX: 'auto',\r\n                        boxSizing: 'border-box',\r\n                        boxShadow: '0px 1px 2px gray',\r\n                        borderBottom: '1px solid #edededed',\r\n                    }}\r\n                >\r\n                \r\n                {\r\n                    expCategories?.map((item, index) =>{\r\n                        const {id, name} = item\r\n                        return (\r\n                            <RenderButtonTab\r\n                                id={id}\r\n                                tab={tab}\r\n                                key={index}\r\n                                title={name}\r\n                                setTab={setTab}\r\n                                tabIndex={index}\r\n                                setSelected={setSelected}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            }\r\n           {/* component */}\r\n           {\r\n               reports && \r\n               <Grid container spacing={2}>\r\n                    <Grid item lg={12} md={12} sm={12}>\r\n                    <div className=\"p-1\" />\r\n                    {/* Expense Tableview */}\r\n                    \r\n                    <table\r\n                        className=\"table-hover table-bordered\"\r\n                        style={{ width: \"98%\", margin: \"auto\" }}\r\n                    >\r\n                       <Fragment>\r\n                            <thead\r\n                            style={{\r\n                                top: 35,\r\n                                color: \"#2A3F54\",\r\n                                position: \"sticky\",\r\n                                background: \"#EDEDEDED\",\r\n                            }}\r\n                                >\r\n                                <th style={{ border: \"1px solid #F7F7F7F7\" }}>#</th>\r\n                                <th style={{ border: \"1px solid #F7F7F7F7\" }}>Item</th>\r\n                                <th style={{ border: \"1px solid #F7F7F7F7\" }}>Description</th>\r\n                                <th style={{ border: \"1px solid #F7F7F7F7\" }}>\r\n                                    Amt (<s>N</s>)\r\n                                </th>\r\n                                <th style={{ border: \"1px solid #F7F7F7F7\" }}>Date</th>\r\n                            </thead>\r\n                       </Fragment>\r\n                        <tbody>\r\n                        {reports &&\r\n                            reports?.map((exp, index) => {\r\n                            const {\r\n                                amount,\r\n                                createdAt,\r\n                                expense_FK,\r\n                                description,                          \r\n                            } = exp;\r\n                            return (\r\n                                <Fragment key={index}>\r\n                                <tr key={index}>\r\n                                    <td style={{ textAlign: \"center\" }}>\r\n                                    {index + 1}\r\n                                    </td>\r\n                                    <td style={{ textAlign: \"left\", paddingLeft: 10 }}> {renderExpCategory(expense_FK)} </td>\r\n                                    <td style={{ textAlign: \"left\", paddingLeft: 10 }}> {description} </td>\r\n                                    <td>\r\n                                    <Typography color=\"error\">\r\n                                        {amount.toLocaleString()}\r\n                                    </Typography>\r\n                                    </td>\r\n                                    <td>\r\n                                    {new Date(createdAt).toLocaleDateString()}\r\n                                    </td>\r\n                                </tr>\r\n                                </Fragment>\r\n                            );\r\n                            })}\r\n                        {reports && reports.length > 0 && (\r\n                            <tr style={{ background: \"#2A3F54\", color: \"white\" }}>\r\n                            <td colSpan={1}>\r\n                                <Typography\r\n                                variant=\"subtitle1\"\r\n                                style={{ color: \"white\" }}\r\n                                >\r\n                                <b>Total:</b>\r\n                                </Typography>\r\n                            </td>\r\n                            <td colSpan={3}>\r\n                                <Typography\r\n                                variant=\"subtitle1\"\r\n                                style={{ color: \"white\" }}\r\n                                >\r\n                                <b>{calcuAmt(reports)}</b>\r\n                                </Typography>\r\n                            </td>\r\n                            <td colSpan={2}></td>\r\n                            </tr>\r\n                        )}\r\n                        </tbody>\r\n                    </table>\r\n                    {!reports && (\r\n                        <div\r\n                        className=\"alert alert-warning\"\r\n                        style={{ width: \"98%\", margin: \"auto\" }}\r\n                        >\r\n                        {`Ops!!! No Transaction History`}\r\n                        </div>\r\n                    )}\r\n                    {reports && reports.length > 0 && (\r\n                        <table className=\"table hide-on-print\">\r\n                        <tbody>\r\n                            <tr>\r\n                            <td>\r\n                                <MultiExcelDownload data={expenses} />\r\n                            </td>\r\n                            <td>\r\n                                <button\r\n                                onClick={() => window.print()}\r\n                                variant=\"contained\"\r\n                                color=\"inherit\"\r\n                                >\r\n                                Print\r\n                                </button>\r\n                            </td>\r\n                            </tr>\r\n                        </tbody>\r\n                        </table>\r\n                    )}\r\n                    </Grid>\r\n            </Grid>\r\n           }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ExpenseAnalysisReport\r\n\r\n","// MUI Stuff\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Search from \"@material-ui/icons/Search\";\r\n\r\nimport axios from \"axios\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectToken,\r\n  selectExpenseItems,\r\n  selectExpenseCategories,\r\n  selectAccounts,\r\n} from \"../appState/appSlice\";\r\nimport { DownloadExpenseReport } from \"./ExcelDownload\";\r\nimport AppHeader from \"./global/AppHeader\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport ExpenseAnalysis from \"./ExpenseAnalysis\";\r\nimport RenderPeriodicTable from \"./global/RenderPeriodicTable\";\r\nimport ExpenseAnalysisReport from \"./ExpenseAnalysisReport\";\r\n\r\nconst RenderHead = ({exphead, setExpHead, expCategories}) =>{\r\n  return (\r\n    <Fragment>\r\n      <th>Heading</th>\r\n        <th>\r\n        <select\r\n          name=\"heanding\"\r\n          value={exphead}\r\n          placeholder=\"Account\"\r\n          style={{ border: \"none\" }}\r\n          onChange={e => setExpHead(e.target.value)}\r\n        >\r\n          <option value=\"\"></option>\r\n          {expCategories &&\r\n            expCategories.map((exps, index) => {\r\n              const { id, name } = exps;\r\n              return (\r\n                <Fragment key={index}>\r\n                  <option\r\n                    value={id}\r\n                    key={index}\r\n                  >{`${name}`}</option>\r\n                </Fragment>\r\n              );\r\n            })}\r\n        </select>\r\n        </th>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst ExpenseReportFeed = () => {\r\n  const token = useSelector(selectToken);\r\n  const accounts = useSelector(selectAccounts);\r\n  const expItems = useSelector(selectExpenseItems);\r\n  const expCategories = useSelector(selectExpenseCategories);\r\n  const [reports, setReports] = useState();\r\n  const [headreports, setHeadReports] = useState();\r\n  const [headingsreports, setHeadingsReports] = useState();\r\n\r\n  const [swap, setSwap] = useState(1)\r\n  const [exphead, setExpHead] = useState()\r\n  const [data, setData] = useState({\r\n    start_date: \"\",\r\n    end_date: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setData({\r\n      ...data,\r\n      [name]: value,\r\n    });\r\n  };\r\n  const calcuAmt = (data) => {\r\n    const total = data && data.reduce((a, v) => +v.amount + a, 0);\r\n    return total.toLocaleString();\r\n  };\r\n\r\n  const renderExpCategory = (id) => {\r\n    const expCat =\r\n      expCategories && expCategories.find((category) => category.id == id);\r\n    return expCat ? (expCat.name ? expCat.name : null) : null;\r\n  };\r\n\r\n  const renderAccount = (code) => {\r\n    const acc = accounts && accounts.find((acc) => acc.code == code);\r\n    return acc?.name;\r\n  };\r\n\r\n  const handle_Get_Report = () => {\r\n    if (data.start_date && data.end_date)\r\n      return axios\r\n        .get(`/expense/report/${data.start_date}/${data.end_date}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then((result) => {\r\n         setReports(result.data);\r\n        })\r\n        .catch((error) => {\r\n          if (error) {\r\n            return error;\r\n          }\r\n        });\r\n  };\r\n\r\n  const handle_Get_Ex_Head_periodic_Report =() => {\r\n   \r\n    return axios\r\n      .get(`/expense/head/${exphead}/${data.start_date}/${data.end_date}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        setHeadingsReports(result.data);\r\n      })\r\n      .catch((error) => {\r\n        if (error) {\r\n          return error;\r\n        }\r\n      });\r\n  }\r\n\r\n  const handle_Get_Ex_Head_Report = () => {\r\n    if (exphead)\r\n      return axios\r\n        .get(`/expense/headings/${exphead}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then((result) => {\r\n         setHeadReports(result.data);\r\n        })\r\n        .catch((error) => {\r\n          if (error) {\r\n            return error;\r\n          }\r\n        });\r\n  };\r\n\r\n  useEffect(() => {\r\n    return handle_Get_Report()\r\n  }, [data]);\r\n\r\n  useEffect(() =>{\r\n    return handle_Get_Ex_Head_Report()\r\n  }, [exphead])\r\n  \r\n\r\n\r\n  const renderTabs =() =>{\r\n    switch (swap) {\r\n      case 1:\r\n        return (\r\n          <Fragment>\r\n             <Grid container spacing={2}>\r\n                <Grid item lg={12} md={12} sm={12}>\r\n                  <div className=\"p-1\" />\r\n                  {/* Expense Tableview */}\r\n                  <table\r\n                    style={{\r\n                      top: 0,\r\n                      zIndex: 222,\r\n                      width: \"98%\",\r\n                      margin: \"auto\",\r\n                      position: \"sticky\",\r\n                    }}\r\n                    className=\"mt-1 table-bordered hide-on-print\"\r\n                  >\r\n                    <thead>\r\n                      \r\n                      <RenderHead \r\n                        exphead={exphead}\r\n                        setExpHead={setExpHead}\r\n                        expCategories={expCategories}\r\n                      />\r\n                      <th>\r\n                        <Button\r\n                          size=\"small\"\r\n                          endIcon={<Search />}\r\n                          onClick={() => handle_Get_Report()}\r\n                          style={{\r\n                            background: \"#2a3f54\",\r\n                            color: \"white\",\r\n                            width: \"100%\",\r\n                          }}\r\n                        >\r\n                          Search\r\n                        </Button>\r\n                      </th>\r\n                    </thead>\r\n                  </table>\r\n    \r\n                  <table\r\n                    className=\"table-hover table-bordered\"\r\n                    style={{ width: \"98%\", margin: \"auto\" }}\r\n                  >\r\n                    <thead\r\n                      style={{\r\n                        top: 35,\r\n                        color: \"#2A3F54\",\r\n                        position: \"sticky\",\r\n                        background: \"#EDEDEDED\",\r\n                      }}\r\n                    >\r\n                      <th style={{ border: \"1px solid #F7F7F7F7\" }}>#</th>\r\n                      <th style={{ border: \"1px solid #F7F7F7F7\" }}>Item</th>\r\n                      <th style={{ border: \"1px solid #F7F7F7F7\" }}>Description</th>\r\n                      <th style={{ border: \"1px solid #F7F7F7F7\" }}>\r\n                        Acc. Payable\r\n                      </th>\r\n                      <th style={{ border: \"1px solid #F7F7F7F7\" }}>\r\n                        Acc. Receivable\r\n                      </th>\r\n                      <th style={{ border: \"1px solid #F7F7F7F7\" }}>\r\n                        Amt (<s>N</s>)\r\n                      </th>\r\n                      <th style={{ border: \"1px solid #F7F7F7F7\" }}>Date</th>\r\n                      <th style={{ border: \"1px solid #F7F7F7F7\" }}>Pay Method</th>\r\n                    </thead>\r\n                    <tbody>\r\n                      {headreports &&\r\n                        headreports.map((exp, index) => {\r\n                          const {\r\n                            expense_FK,\r\n                            description,\r\n                            amount,\r\n                            pay_method,\r\n                            expense_date,\r\n                            payee_account,\r\n                            payment_account,\r\n                          } = exp;\r\n                          return (\r\n                            <Fragment key={index}>\r\n                              <tr>\r\n                                <td style={{ textAlign: \"center\" }}>\r\n                                  {\" \"}\r\n                                  {index + 1}{\" \"}\r\n                                </td>\r\n                                <td style={{ textAlign: \"left\" }}>\r\n                                  {\" \"}\r\n                                  {renderExpCategory(expense_FK)}{\" \"}\r\n                                </td>\r\n                                <td style={{ textAlign: \"left\" }}>\r\n                                  {\" \"}\r\n                                  {description}{\" \"}\r\n                                </td>\r\n                                <td style={{ textAlign: \"left\" }}>\r\n                                  {\" \"}\r\n                                  {renderAccount(payment_account)}{\" \"}\r\n                                </td>\r\n                                <td style={{ textAlign: \"left\" }}>\r\n                                  {\" \"}\r\n                                  {renderAccount(payee_account)}{\" \"}\r\n                                </td>\r\n                                <td>\r\n                                  <Typography color=\"error\">\r\n                                    {amount.toLocaleString()}\r\n                                  </Typography>\r\n                                </td>\r\n                                <td>\r\n                                  {\" \"}\r\n                                  {new Date(expense_date).toLocaleDateString()}{\" \"}\r\n                                </td>\r\n                                <td> {pay_method} </td>\r\n                              </tr>\r\n                            </Fragment>\r\n                          );\r\n                        })}\r\n                      {headreports && headreports.length > 0 && (\r\n                        <tr style={{ background: \"#2A3F54\", color: \"white\" }}>\r\n                          <td colSpan={3}>\r\n                            <Typography\r\n                              variant=\"subtitle1\"\r\n                              style={{ color: \"white\" }}\r\n                            >\r\n                              <b>Total:</b>\r\n                            </Typography>\r\n                          </td>\r\n                          <td colSpan={3}>\r\n                            <Typography\r\n                              variant=\"subtitle1\"\r\n                              style={{ color: \"white\" }}\r\n                            >\r\n                              <b>{calcuAmt(headreports)}</b>\r\n                            </Typography>\r\n                          </td>\r\n                          <td colSpan={2}></td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                  {!expItems && (\r\n                    <div\r\n                      className=\"alert alert-warning\"\r\n                      style={{ width: \"98%\", margin: \"auto\" }}\r\n                    >\r\n                      {`Ops!!! No Transaction History`}\r\n                    </div>\r\n                  )}\r\n                  {headreports && headreports.length > 0 && (\r\n                    <table className=\"table hide-on-print\">\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>\r\n                            <DownloadExpenseReport\r\n                              dataSet1={headreports}\r\n                              renderAccount={renderAccount}\r\n                              renderExpCategory={renderExpCategory}\r\n                              date={data.start_date + \"-\" + data.end_date}\r\n                            />\r\n                          </td>\r\n                          <td>\r\n                            <button\r\n                              onClick={() => window.print()}\r\n                              variant=\"contained\"\r\n                              color=\"inherit\"\r\n                            >\r\n                              Print\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            \r\n          </Fragment>\r\n        )\r\n      case 2:\r\n        return (\r\n          <Fragment>\r\n             <Grid container spacing={2}>\r\n                <Grid item lg={12} md={12} sm={12}>\r\n                  <div className=\"p-1\" />\r\n                  {/* Expense Tableview */}\r\n                  <table\r\n                    className=\"mt-1 table-bordered hide-on-print\"\r\n                    style={{\r\n                      width: \"98%\",\r\n                      margin: \"auto\",\r\n                      position: \"sticky\",\r\n                      top: 0,\r\n                      zIndex: 222,\r\n                    }}\r\n                  >\r\n                    <thead>\r\n                      <RenderHead \r\n                        exphead={exphead}\r\n                        setExpHead={setExpHead}\r\n                        expCategories={expCategories}\r\n                      />\r\n                      <th>From</th>\r\n                      <th>\r\n                      <input\r\n                        type='date'\r\n                        value={data.start_date}\r\n                        onChange={(e) =>\r\n                          setData({\r\n                            ...data,\r\n                            start_date: e.target.value,\r\n                          })\r\n                        }\r\n                        style={{\r\n                          width: \"100%\",\r\n                          outline: \"none\",\r\n                          border: \"none\",\r\n                          height: \"30px\",\r\n                        }}\r\n                      />\r\n                      </th>\r\n                      <th>To</th>\r\n                      <th>\r\n                        <input\r\n                          name=\"end_date\"\r\n                          type=\"date\"\r\n                          value={data.end_date}\r\n                          onChange={(e) => handleChange(e)}\r\n                        />\r\n                      </th>\r\n                      <th>\r\n                        <Button\r\n                          size=\"small\"\r\n                          endIcon={<Search />}\r\n                          onClick={() => handle_Get_Ex_Head_periodic_Report()}\r\n                          style={{\r\n                            background: \"#2a3f54\",\r\n                            color: \"white\",\r\n                            width: \"100%\",\r\n                          }}\r\n                          disabled={!data.start_date && data.end_date}\r\n                        >\r\n                          Search\r\n                        </Button>\r\n                      </th>\r\n                    </thead>\r\n                  </table>\r\n    \r\n                  <table\r\n                    className=\"table-hover table-bordered\"\r\n                    style={{ width: \"98%\", margin: \"auto\" }}\r\n                  >\r\n                    <thead\r\n                      style={{\r\n                        top: 35,\r\n                        color: \"#2A3F54\",\r\n                        position: \"sticky\",\r\n                        background: \"#EDEDEDED\",\r\n                      }}\r\n                    >\r\n                      <th style={{ border: \"1px solid #F7F7F7F7\" }}>#</th>\r\n                      <th style={{ border: \"1px solid #F7F7F7F7\" }}>Item</th>\r\n                      <th style={{ border: \"1px solid #F7F7F7F7\" }}>Description</th>\r\n                      <th style={{ border: \"1px solid #F7F7F7F7\" }}>\r\n                        Acc. Payable\r\n                      </th>\r\n                      <th style={{ border: \"1px solid #F7F7F7F7\" }}>\r\n                        Acc. Receivable\r\n                      </th>\r\n                      <th style={{ border: \"1px solid #F7F7F7F7\" }}>\r\n                        Amt (<s>N</s>)\r\n                      </th>\r\n                      <th style={{ border: \"1px solid #F7F7F7F7\" }}>Date</th>\r\n                      <th style={{ border: \"1px solid #F7F7F7F7\" }}>Pay Method</th>\r\n                    </thead>\r\n                    <tbody>\r\n                      {headingsreports &&\r\n                        headingsreports?.map((exp, index) => {\r\n                          const {\r\n                            expense_FK,\r\n                            description,\r\n                            amount,\r\n                            pay_method,\r\n                            expense_date,\r\n                            payee_account,\r\n                            payment_account,\r\n                          } = exp;\r\n                          return (\r\n                            <Fragment key={index}>\r\n                              <tr>\r\n                                <td style={{ textAlign: \"center\" }}>\r\n                                  {\" \"}\r\n                                  {index + 1}{\" \"}\r\n                                </td>\r\n                                <td style={{ textAlign: \"left\" }}>\r\n                                  {\" \"}\r\n                                  {renderExpCategory(expense_FK)}{\" \"}\r\n                                </td>\r\n                                <td style={{ textAlign: \"left\" }}>\r\n                                  {\" \"}\r\n                                  {description}{\" \"}\r\n                                </td>\r\n                                <td style={{ textAlign: \"left\" }}>\r\n                                  {\" \"}\r\n                                  {renderAccount(payment_account)}{\" \"}\r\n                                </td>\r\n                                <td style={{ textAlign: \"left\" }}>\r\n                                  {\" \"}\r\n                                  {renderAccount(payee_account)}{\" \"}\r\n                                </td>\r\n                                <td>\r\n                                  <Typography color=\"error\">\r\n                                    {amount.toLocaleString()}\r\n                                  </Typography>\r\n                                </td>\r\n                                <td>\r\n                                  {\" \"}\r\n                                  {new Date(expense_date).toLocaleDateString()}{\" \"}\r\n                                </td>\r\n                                <td> {pay_method} </td>\r\n                              </tr>\r\n                            </Fragment>\r\n                          );\r\n                        })}\r\n                      {headingsreports && headingsreports.length > 0 && (\r\n                        <tr style={{ background: \"#2A3F54\", color: \"white\" }}>\r\n                          <td colSpan={3}>\r\n                            <Typography\r\n                              variant=\"subtitle1\"\r\n                              style={{ color: \"white\" }}\r\n                            >\r\n                              <b>Total:</b>\r\n                            </Typography>\r\n                          </td>\r\n                          <td colSpan={3}>\r\n                            <Typography\r\n                              variant=\"subtitle1\"\r\n                              style={{ color: \"white\" }}\r\n                            >\r\n                              <b>{calcuAmt(headingsreports)}</b>\r\n                            </Typography>\r\n                          </td>\r\n                          <td colSpan={2}></td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                  {!expItems && (\r\n                    <div\r\n                      className=\"alert alert-warning\"\r\n                      style={{ width: \"98%\", margin: \"auto\" }}\r\n                    >\r\n                      {`Ops!!! No Transaction History`}\r\n                    </div>\r\n                  )}\r\n                  {headingsreports && headingsreports.length > 0 && (\r\n                    <table className=\"table hide-on-print\">\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>\r\n                            <DownloadExpenseReport\r\n                              dataSet1={headingsreports}\r\n                              renderAccount={renderAccount}\r\n                              renderExpCategory={renderExpCategory}\r\n                              date={data.start_date + \"-\" + data.end_date}\r\n                            />\r\n                          </td>\r\n                          <td>\r\n                            <button\r\n                              onClick={() => window.print()}\r\n                              variant=\"contained\"\r\n                              color=\"inherit\"\r\n                            >\r\n                              Print\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            \r\n          </Fragment>\r\n        )\r\n        case 3:\r\n        return (\r\n          <Fragment>\r\n             <Grid container spacing={2}>\r\n                <Grid item lg={12} md={12} sm={12}>\r\n                  <div className=\"p-1\" />\r\n                  {/* Expense Tableview */}\r\n                  <RenderPeriodicTable \r\n                    data={data}\r\n                    setData={setData}\r\n                    handleChange={handleChange}\r\n                    handleSearch={handle_Get_Report}\r\n                  />\r\n                  <table\r\n                    className=\"table-hover table-bordered\"\r\n                    style={{ width: \"98%\", margin: \"auto\" }}\r\n                  >\r\n                    <thead\r\n                      style={{\r\n                        top: 35,\r\n                        color: \"#2A3F54\",\r\n                        position: \"sticky\",\r\n                        background: \"#EDEDEDED\",\r\n                      }}\r\n                    >\r\n                      <th style={{ border: \"1px solid #F7F7F7F7\" }}>#</th>\r\n                      <th style={{ border: \"1px solid #F7F7F7F7\" }}>Item</th>\r\n                      <th style={{ border: \"1px solid #F7F7F7F7\" }}>Description</th>\r\n                      <th style={{ border: \"1px solid #F7F7F7F7\" }}>\r\n                        Acc. Payable\r\n                      </th>\r\n                      <th style={{ border: \"1px solid #F7F7F7F7\" }}>\r\n                        Acc. Receivable\r\n                      </th>\r\n                      <th style={{ border: \"1px solid #F7F7F7F7\" }}>\r\n                        Amt (<s>N</s>)\r\n                      </th>\r\n                      <th style={{ border: \"1px solid #F7F7F7F7\" }}>Date</th>\r\n                      <th style={{ border: \"1px solid #F7F7F7F7\" }}>Pay Method</th>\r\n                    </thead>\r\n                    <tbody>\r\n                      {reports &&\r\n                        reports?.map((exp, index) => {\r\n                          const {\r\n                            expense_FK,\r\n                            description,\r\n                            amount,\r\n                            pay_method,\r\n                            expense_date,\r\n                            payee_account,\r\n                            payment_account,\r\n                          } = exp;\r\n                          return (\r\n                            <Fragment key={index}>\r\n                              <tr>\r\n                                <td style={{ textAlign: \"center\" }}>\r\n                                  {\" \"}\r\n                                  {index + 1}{\" \"}\r\n                                </td>\r\n                                <td style={{ textAlign: \"left\" }}>\r\n                                  {\" \"}\r\n                                  {renderExpCategory(expense_FK)}{\" \"}\r\n                                </td>\r\n                                <td style={{ textAlign: \"left\" }}>\r\n                                  {\" \"}\r\n                                  {description}{\" \"}\r\n                                </td>\r\n                                <td style={{ textAlign: \"left\" }}>\r\n                                  {\" \"}\r\n                                  {renderAccount(payment_account)}{\" \"}\r\n                                </td>\r\n                                <td style={{ textAlign: \"left\" }}>\r\n                                  {\" \"}\r\n                                  {renderAccount(payee_account)}{\" \"}\r\n                                </td>\r\n                                <td>\r\n                                  <Typography color=\"error\">\r\n                                    {amount.toLocaleString()}\r\n                                  </Typography>\r\n                                </td>\r\n                                <td>\r\n                                  {\" \"}\r\n                                  {new Date(expense_date).toLocaleDateString()}{\" \"}\r\n                                </td>\r\n                                <td> {pay_method} </td>\r\n                              </tr>\r\n                            </Fragment>\r\n                          );\r\n                        })}\r\n                      {reports && reports.length > 0 && (\r\n                        <tr style={{ background: \"#2A3F54\", color: \"white\" }}>\r\n                          <td colSpan={3}>\r\n                            <Typography\r\n                              variant=\"subtitle1\"\r\n                              style={{ color: \"white\" }}\r\n                            >\r\n                              <b>Total:</b>\r\n                            </Typography>\r\n                          </td>\r\n                          <td colSpan={3}>\r\n                            <Typography\r\n                              variant=\"subtitle1\"\r\n                              style={{ color: \"white\" }}\r\n                            >\r\n                              <b>{calcuAmt(reports)}</b>\r\n                            </Typography>\r\n                          </td>\r\n                          <td colSpan={2}></td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                  {!expItems && (\r\n                    <div\r\n                      className=\"alert alert-warning\"\r\n                      style={{ width: \"98%\", margin: \"auto\" }}\r\n                    >\r\n                      {`Ops!!! No Transaction History`}\r\n                    </div>\r\n                  )}\r\n                  {reports && reports.length > 0 && (\r\n                    <table className=\"table hide-on-print\">\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>\r\n                            <DownloadExpenseReport\r\n                              dataSet1={reports}\r\n                              renderAccount={renderAccount}\r\n                              renderExpCategory={renderExpCategory}\r\n                              date={data.start_date + \"-\" + data.end_date}\r\n                            />\r\n                          </td>\r\n                          <td>\r\n                            <button\r\n                              onClick={() => window.print()}\r\n                              variant=\"contained\"\r\n                              color=\"inherit\"\r\n                            >\r\n                              Print\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            \r\n          </Fragment>\r\n        )\r\n        case 4:\r\n          // return <ExpenseAnalysis \r\n          //   data={data}\r\n          //   setData={setData}\r\n          //   handleChange={handleChange}\r\n          // />\r\n          return <ExpenseAnalysisReport\r\n            data={data}\r\n            setData={setData}\r\n            handleChange={handleChange}\r\n          />\r\n      default:\r\n       return\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"app__Feed\" style={{overflowX: 'hidden'}}>\r\n        <AppHeader title=\"Expenses Report\" />\r\n        <div className=\"admin__FeedContainer\">\r\n          <div className=\"admin__Title\">\r\n            <section>\r\n              <Typography variant=\"h3\">Reports Pool {}</Typography>\r\n            </section>\r\n          </div>\r\n\r\n          <div style={{\r\n              padding: 5,\r\n              borderBottom: '1px solid #edededed',\r\n              boxSizing: 'border-box',\r\n              boxShadow: '0px 1px 2px gray'\r\n            }}\r\n            className='mb-3'\r\n          >\r\n          <Tooltip title='Pool Expense Report By Heandings'>                     \r\n            <Button\r\n              style={{\r\n                  width: 100,\r\n                  color: swap == 1 ?  '#20C997' : 'white',\r\n                  boxSizing: 'border-box',\r\n                  backgroundColor: swap == 1 ?  '#F7F7F7F7' : '#2a3f54',\r\n                  boxShadow: '0px 2px 2px gray'\r\n              }}\r\n              onClick={() =>setSwap(1)}\r\n            > \r\n              Headings\r\n            </Button>\r\n          </Tooltip>\r\n\r\n          <Tooltip title='Pool Expense Report With Heading Periodic'>                     \r\n          <Button\r\n              style={{\r\n                  width: 'auto',\r\n                  marginLeft: 10,\r\n                  color: swap == 2 ?  '#20C997' : 'white',\r\n                  boxSizing: 'border-box',\r\n                  backgroundColor: swap == 2 ?  '#F7F7F7F7' : '#2a3f54',\r\n                  boxShadow: '0px 2px 2px gray'\r\n              }}\r\n              onClick={() =>setSwap(2)}\r\n            > \r\n              Periodic & Heading\r\n            </Button>\r\n          </Tooltip>\r\n\r\n          <Tooltip title='Pool Expense Report With All Headings Periodic'>                     \r\n          <Button\r\n              style={{\r\n                  width: 'auto',\r\n                  marginLeft: 10,\r\n                  color: swap == 3 ?  '#20C997' : 'white',\r\n                  boxSizing: 'border-box',\r\n                  backgroundColor: swap == 3 ?  '#F7F7F7F7' : '#2a3f54',\r\n                  boxShadow: '0px 2px 2px gray'\r\n              }}\r\n              onClick={() =>setSwap(3)}\r\n            > \r\n              Periodic / all headings\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip title='Pool Expense Analysis Report'>                     \r\n          <Button\r\n              style={{\r\n                  width: 'auto',\r\n                  marginLeft: 10,\r\n                  color: swap == 4 ?  '#20C997' : 'white',\r\n                  boxSizing: 'border-box',\r\n                  backgroundColor: swap == 4 ?  '#F7F7F7F7' : '#2a3f54',\r\n                  boxShadow: '0px 2px 2px gray'\r\n              }}\r\n              onClick={() =>setSwap(4)}\r\n            > \r\n              Expense Analysis\r\n            </Button>\r\n          </Tooltip>\r\n          </div>\r\n          {/* heanding report */}\r\n            {renderTabs()}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ExpenseReportFeed;\r\n","import axios from 'axios'\r\nimport React, { Fragment, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectToken, setAccounts, setExpenseCategories, setExpenseItems } from '../appState/appSlice'\r\nimport ExpenseReportFeed from '../components/ExpenseReportFeed'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\n\r\nconst ExpenseReportScreen = () => {\r\n    const token = useSelector(selectToken)\r\n    const dispatch = useDispatch()\r\n    const get_Raised_Expense_Items =() =>{\r\n        axios.get('/expense/Items', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            } \r\n        })\r\n        .then(exps =>{\r\n            dispatch(setExpenseItems(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_ExpenseCategories =() =>{\r\n        axios.get('/expense/categories', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(exps =>{\r\n            dispatch(setExpenseCategories(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        return (\r\n            get_Raised_Expense_Items(),\r\n            get_ExpenseCategories(),\r\n            get_AllAccounts()\r\n        )\r\n    }, [])\r\n    return (\r\n        <Fragment>\r\n            <div className=\"app\">\r\n                <SideBarMenu />\r\n                {/* feed */}\r\n                <ExpenseReportFeed />\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ExpenseReportScreen\r\n","import axios from \"axios\";\r\n// MUI Stuff\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ToolTip from \"@material-ui/core/ToolTip\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectLocations,\r\n  selectPropServices,\r\n  selectBuildCategories,\r\n} from \"../appState/appSlice\";\r\nimport { Fragment } from \"react\";\r\nimport AppHeader from \"./global/AppHeader\";\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport AppSnackbar from \"./global/AppSnackbar\";\r\n\r\nconst EditSaleFeed = ({\r\n  open,\r\n  sale,\r\n  data,\r\n  body,\r\n  token,\r\n  setBody,\r\n  error,\r\n  setOpen,\r\n  setData,\r\n  success,\r\n  setError,\r\n  setSuccess,\r\n  add_BuildCategories\r\n}) => {\r\n  const history = useHistory()\r\n  const locations = useSelector(selectLocations);\r\n  const buildCategories = useSelector(selectBuildCategories);\r\n  const [add, setAdd] = useState(false)\r\n  const [message, setMessage] = useState();\r\n  const [Exist, setExist] = useState();\r\n  const properties = useSelector(selectPropServices);\r\n  const saleFormTemplate = {\r\n    id: null,\r\n    qty: \"\",\r\n    amount: \"\",\r\n    plot_number: '',\r\n    sale_ID: \"\",\r\n    property: \"\",\r\n    location: \"\",\r\n    createdAt: \"\",\r\n    build_category: \"\",\r\n  };\r\n  const [saleForm, setSaleForm] = useState([saleFormTemplate]);\r\n\r\n  // func\r\n  const isEmpty = (input) => {\r\n    return data[input] === \"\" ? true : false;\r\n  };\r\n\r\n  const addSaleFrom = () => {\r\n    setSaleForm([...saleForm, saleFormTemplate]);\r\n  };\r\n  const handleChange = (e, index) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    const updatedsaleform = saleForm.map((salef, i) =>\r\n      index == i ? Object.assign(salef, { [name]: value }) : salef\r\n    );\r\n    setSaleForm(updatedsaleform);\r\n\r\n    if (name == \"qty\" || name == \"property\") {\r\n      const updatedsaleform = saleForm.map((salef, i) =>\r\n        index == i\r\n          ? Object.assign(salef, {\r\n              sale_ID: data.uuid,\r\n              createdAt: data.sale_date,\r\n              amount: renderAmount(\r\n                saleForm[index].property,\r\n                index,\r\n                saleForm[index].qty\r\n              ),\r\n            })\r\n          : salef\r\n      );\r\n      return setData({\r\n        ...data,\r\n\r\n        tx_date: data.sale_date,\r\n        total: calcuAmt(saleForm),\r\n      });\r\n    }\r\n  };\r\n\r\n  const renderAmount = (pro, formIndex, qty) => {\r\n    const proExist = properties && properties.find((prop) => prop.id == pro);\r\n\r\n    const total = proExist && parseInt(proExist.sale_price) * parseInt(qty);\r\n    return total;\r\n  };\r\n  const handleRemovesaleform = (index) => {\r\n    const filtersaleform = [...saleForm];\r\n    filtersaleform.splice(index, 1);\r\n\r\n    setSaleForm(filtersaleform);\r\n  };\r\n\r\n  const calcuAmt = (data) => {\r\n    const total = data?.reduce((a, v) => +v.amount + a, 0);\r\n    return total;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fdata = saleForm.map((x) => Object.values(x));\r\n    const findal = [];\r\n    // const data = fdata\r\n    for (let i = 0; i < fdata.length; i++) {\r\n      const element = fdata[i];\r\n      findal.push(element);\r\n    }\r\n\r\n    setData({\r\n      ...data,\r\n      VALUES: findal,\r\n    });\r\n  }, [saleForm]);\r\n\r\n  useEffect(() => {\r\n    setData({\r\n      ...data,\r\n      total: calcuAmt(saleForm),\r\n    });\r\n  }, [data.VALUES]);\r\n\r\n  const handleEdit = async (e) => {\r\n    e.preventDefault();\r\n    const err = await Object.keys(data).map((key) => isEmpty(key));\r\n    console.log(\"hello\", data);\r\n    const isError = err.includes(true);\r\n    if (isError === true) {\r\n      return setError(\"All field are required\");\r\n    } else {\r\n      setError(\"\");\r\n      console.log(data.VALUES);\r\n      setOpen(true);\r\n      axios\r\n        .post(\"/sale/edit\", data, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then((result) => {\r\n          setOpen(false);\r\n          setMessage(result.data.message);\r\n          setSuccess(true);\r\n          setData({\r\n            uuid: \"\",\r\n            applicant_name: \"\",\r\n            build_category: \"\",\r\n            property: \"\",\r\n            due_date: \"\",\r\n            period: \"\",\r\n            amount: \"\",\r\n            sale_date: \"\",\r\n            applicant: \"\",\r\n            property_name: \"\",\r\n            VALUES: [],\r\n            total: \"\",\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setOpen(false);\r\n          if (error && error.response.status == 401) {\r\n            return setExist(error.response.data.message);\r\n          }\r\n          setError(error.response.data.message);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleSetTerm = (e) => {\r\n    const d = new Date();\r\n    const sd = new Date();\r\n    const value = e.target.value;\r\n    const duedate = d.setDate(sd.getDate() + parseInt(value));\r\n    return setData({\r\n      ...data,\r\n      period: value,\r\n      due_date: new Date(duedate),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    return setSaleForm([saleFormTemplate]);\r\n  }, [success]);\r\n  useEffect(() =>{\r\n      const form = []\r\n        if(sale && sale.items) {\r\n            for (let i = 0; i < sale.items.length; i++ ) {\r\n                form.push(\r\n                  {\r\n                    id: sale && sale.items[i].id,\r\n                    qty: sale && sale.items[i].qty,\r\n                    amount: sale && sale.items[i].amount,\r\n                    plot_number: sale && sale.items[i].plot_number,\r\n                    sale_ID: sale && sale.items[i].sale_ID,\r\n                    property: sale && sale.items[i].property_id,\r\n                    location: sale && sale.items[i].location_id,\r\n                    createdAt: sale && sale.items[i].createdAt,\r\n                    build_category: sale && sale.items[i].building_id, \r\n                  }\r\n                )\r\n            }\r\n        }\r\n        if(form.length >0) {\r\n          return setSaleForm(form)\r\n        }\r\n        setSaleForm([saleFormTemplate]);\r\n  }, [sale])\r\n  return (\r\n    <div className=\"app__Feed\">\r\n        <AppHeader\r\n            title=\"Edit / Add Sale\"\r\n           \r\n        />\r\n        <AppSnackbar setOpen={setSuccess} open={success} message={message} />\r\n      <div className=\"row align-items-center justify-content-center d-flex m-1\">\r\n        <div className=\"col-lg-12 col-md-12\">\r\n           <Typography variant='h4' className='m-3'>\r\n                <strong style={{\r\n                    color: '#20c997'\r\n                }}><small>{sale?.applicant_name}</small> </strong>\r\n                <small\r\n                    style={{color: 'gray'}}\r\n                >\r\n                    <Typography>Purchase Information</Typography>\r\n                </small>\r\n           </Typography>\r\n          {/* to do make it a component */}\r\n          <Grid container spacing={2} className=\"p-3\">\r\n            <Grid item lg={4} md={4}>\r\n              <FormLabel>Date</FormLabel>\r\n              <input\r\n                name=\"sale_date\"\r\n                // type=\"date\"\r\n                disabled\r\n                value={new Date(data.sale_date).toLocaleDateString()}\r\n                onChange={(e) =>\r\n                  setData({\r\n                    ...data,\r\n                    sale_date: e.target.value,\r\n                  })\r\n                }\r\n                style={{\r\n                  width: \"100%\",\r\n                  outline: \"none\",\r\n                  border: \"none\",\r\n                  height: \"30px\",\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={4} md={4}>\r\n              <FormLabel>Term</FormLabel>\r\n              <select\r\n                name=\"period\"\r\n                style={{ border: \"none\" }}\r\n                value={data.period}\r\n                onChange={(e) => handleSetTerm(e)}\r\n              >\r\n                <option value=\"\"></option>\r\n                <option value={7}>7 Days</option>\r\n                <option value={14}>14 Days</option>\r\n                <option value={21}>21 Days</option>\r\n                <option value={28}>28 Days</option>\r\n                <option value={30}>30 Days</option>\r\n                <option value={60}>60 Days</option>\r\n                <option value={90}>90 Days</option>\r\n                <option value={120}>120 Days</option>\r\n                <option value={150}>150 Days</option>\r\n                <option value={180}>180 Days</option>\r\n                <option value={210}>210 Days</option>\r\n                <option value={240}>240 Days</option>\r\n                <option value={270}>270 Days</option>\r\n                <option value={300}>300 Days</option>\r\n                <option value={330}>330 Days</option>\r\n                <option value={360}>360 Days</option>\r\n              </select>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              lg={4}\r\n              md={4}\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n                alignItems: \"flex-end\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <FormLabel>Amount</FormLabel>\r\n              <Typography variant=\"h5\" style={{ color: \"#20c997\" }}>\r\n                <s>N</s>: {saleForm && calcuAmt(saleForm).toLocaleString()}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item lg={4} md={4}>\r\n              <TextField\r\n                disabled\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                label=\"Due Date\"\r\n                value={new Date(data.due_date).toLocaleDateString()}\r\n                placeholder=\"Due Date\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Typography className='m-3' variant='h5'>\r\n            Item Details\r\n          </Typography>\r\n          <Paper elevation={0} style={{ backgroundColor: \"inherit\" }}>\r\n            <Container>\r\n              <table\r\n                className=\"table-small table-hover\"\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <thead>\r\n                  <th>#</th>\r\n                  <th> </th>\r\n                  <th>Location</th>\r\n                  <th>Property</th>\r\n                  <th>Quantity</th>\r\n                  <th>Amount</th>\r\n                  <th>Plot No</th>\r\n                  <th>\r\n                    Building Category\r\n                    {/* <span className=\"ml-3\">\r\n                      <IconButton size=\"small\" onClick={() => setAdd(!add)}>\r\n                        <span\r\n                          className=\"fa fa-plus-circle\"\r\n                          style={{ color: \"#20c997\" }}\r\n                        />\r\n                      </IconButton>\r\n                    </span> */}\r\n                    {add && (\r\n                      <div\r\n                        className=\"m-3\"\r\n                        style={{\r\n                          display: \"flex\",\r\n                          flex: 1,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        <TextField\r\n                          fullWidth\r\n                          size=\"small\"\r\n                          value={body.name}\r\n                          variant=\"outlined\"\r\n                          label=\"Build Category\"\r\n                          placeholder=\"New...\"\r\n                          onChange={(e) =>\r\n                            setBody({\r\n                              ...body,\r\n                              name: e.target.value,\r\n                            })\r\n                          }\r\n                        />\r\n                        <div\r\n                          onClick={() => setAdd(!add)}\r\n                          className=\"d-flex align-items-center\"\r\n                        >\r\n                          <Button\r\n                            onClick={() => add_BuildCategories(body)}\r\n                            size=\"medium\"\r\n                            variant=\"contained\"\r\n                            style={{ background: \"#2A3F54\", color: \"white\" }}\r\n                          >\r\n                            Save\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </th>\r\n\r\n                  <th></th>\r\n                </thead>\r\n                <tbody id=\"je__Table\">\r\n                  {saleForm.map((salef, index) => (\r\n                    <Fragment key={index}>\r\n                      <tr>\r\n                        <td>{index + 1} </td>\r\n                        <td onClick={() => addSaleFrom()}>\r\n                          <ToolTip title=\"Add New Row\">\r\n                            <span\r\n                              className=\"fa fa-plus-circle fa-1x\"\r\n                              style={{ color: \"#20c997\" }}\r\n                            />\r\n                          </ToolTip>\r\n                        </td>\r\n                        <td>\r\n                          <select\r\n                            name=\"location\"\r\n                            value={salef.location}\r\n                            style={{ border: \"none\" }}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          >\r\n                            <option value=\"\"></option>\r\n                            {locations &&\r\n                              locations.map((locat, index) => {\r\n                                const { id, name } = locat;\r\n                                return (\r\n                                  <Fragment key={index}>\r\n                                    <option\r\n                                      value={id}\r\n                                      key={index}\r\n                                    >{`${name}`}</option>\r\n                                  </Fragment>\r\n                                );\r\n                              })}\r\n                          </select>\r\n                        </td>\r\n                        <td>\r\n                          <select\r\n                            name=\"property\"\r\n                            value={salef.property}\r\n                            placeholder=\"Property\"\r\n                            style={{ border: \"none\" }}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          >\r\n                            <option value=\"\"></option>\r\n                            {properties &&\r\n                              properties.map((ps) => {\r\n                                const { id, name, location } = ps;\r\n                                if (location == salef.location)\r\n                                  return (\r\n                                    <Fragment key={id}>\r\n                                      <option key={id} value={id}>\r\n                                        {\" \"}\r\n                                        {name}{\" \"}\r\n                                      </option>\r\n                                    </Fragment>\r\n                                  );\r\n                              })}\r\n                          </select>\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            name=\"qty\"\r\n                            type=\"number\"\r\n                            placeholder=\"Quantity\"\r\n                            value={salef.qty}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            name=\"amount\"\r\n                            type=\"number\"\r\n                            placeholder=\"Amount\"\r\n                            value={salef.amount}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            name=\"plot_number\"\r\n                            placeholder=\"Plot Number\"\r\n                            value={salef.plot_number}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          />\r\n                        </td>\r\n\r\n                        <td>\r\n                          <select\r\n                            name=\"build_category\"\r\n                            value={salef.build_category}\r\n                            style={{ border: \"none\" }}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                          >\r\n                            <option value=\"\"></option>\r\n                            {buildCategories &&\r\n                              buildCategories.map((building, index) => {\r\n                                const { id, name } = building;\r\n                                return (\r\n                                  <option\r\n                                    value={id}\r\n                                    key={index}\r\n                                  >{`${name}`}</option>\r\n                                );\r\n                              })}\r\n                          </select>\r\n                        </td>\r\n\r\n                        <td onClick={() => handleRemovesaleform(index)}>\r\n                          <ToolTip title=\"Delete Row\">\r\n                            <span\r\n                              className=\"fa fa-trash\"\r\n                              style={{ color: \"red\" }}\r\n                            />\r\n                          </ToolTip>\r\n                        </td>\r\n                      </tr>\r\n                    </Fragment>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-end\",\r\n                }}\r\n              >\r\n                {Exist && (\r\n                  <Typography variant=\"body2\" color=\"error\">\r\n                    {\" \"}\r\n                    {Exist}{\" \"}\r\n                  </Typography>\r\n                )}\r\n                {error && (\r\n                  <div\r\n                    style={{ \r\n                      height: 40,\r\n                      display: 'flex',\r\n                      color: \"white\", \r\n                      background: \"red\",\r\n                      flexDirection: 'row',\r\n                      alignItems: 'center',\r\n                      alignSelf: 'center',\r\n                      borderRadius: 5,\r\n                      padding: '0 5px 0 5px',\r\n                      justifyContent: 'center',\r\n                      boxSizing: 'border-box',\r\n                      boxShadow: '0 2px 3px 0 gray'\r\n                  }}\r\n                  >\r\n                    {error}\r\n                  </div>\r\n                )}\r\n                <Button\r\n                  className=\"m-3\"\r\n                  variant=\"outlined\"\r\n                  //   disabled={isDisable(saleForm)}\r\n                  onClick={(e) => history.goBack()}\r\n                  endIcon={\r\n                      <Close color='action' />\r\n                  }\r\n                >\r\n                  Close\r\n                </Button>\r\n                <Button\r\n                  className=\"m-3\"\r\n                  variant=\"contained\"\r\n                  //   disabled={isDisable(saleForm)}\r\n                  onClick={(e) => handleEdit(e)}\r\n                  style={{ background: \"#2A3F54\", color: \"white\" }}\r\n                >\r\n                  Post\r\n                </Button>\r\n              </div>\r\n            </Container>\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditSaleFeed;\r\n","import axios from 'axios'\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router'\r\nimport { selectPendingSales, selectToken } from '../appState/appSlice'\r\nimport EditSaleFeed from '../components/EditSaleFeed'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\n\r\nconst EditSaleScreen = () => {\r\n    const {uuid} = useParams()\r\n    const token = useSelector(selectToken)\r\n    const [add, setAdd] = useState(false);\r\n    const [open, setOpen] = useState(false)\r\n    const [error, setError] = useState()\r\n    const [success, setSuccess] = useState(false)\r\n    const sales = useSelector(selectPendingSales)\r\n    const [selectedSale, setSelectedSale] = useState()\r\n    const [body, setBody] = useState({\r\n        name: \"\",\r\n      });\r\n    const [data, setData] = useState({\r\n        uuid: \"\",\r\n        tx_date: \"\",\r\n        applicant_name: \"\",\r\n        due_date: \"\",\r\n        period: \"\",\r\n        sale_date: \"\",\r\n        applicant: \"\",\r\n        VALUES: [],\r\n        total: \"\",\r\n    });\r\n\r\n    const handleEdit = () =>{\r\n        return\r\n    }\r\n\r\n    const add_BuildCategories = (body) => {\r\n        setOpen(true);\r\n        axios\r\n          .post(\"/build_category\", body, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          })\r\n          .then((categories) => {\r\n            setOpen(false);\r\n          })\r\n          .catch((error) => {\r\n            setOpen(false);\r\n            return error;\r\n          });\r\n      };\r\n\r\n      \r\n\r\n    useEffect(() =>{\r\n        const saleSelected = sales && sales.find(sale => sale.uuid == uuid)\r\n        return (\r\n            setSelectedSale(saleSelected),\r\n            setData({\r\n                ...data,\r\n                uuid: saleSelected?.uuid,\r\n                tx_date: saleSelected?.sale_date,\r\n                applicant_name: saleSelected?.applicant_name,\r\n                due_date: saleSelected?.due_date,\r\n                period: saleSelected?.period,\r\n                sale_date: saleSelected?.sale_date,\r\n                applicant: saleSelected?.applicant,\r\n                VALUES: [],\r\n                total: saleSelected?.amount,\r\n            })\r\n        )\r\n    }, [uuid])\r\n    return (\r\n        <div className=\"app\">\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <EditSaleFeed\r\n                token={token}\r\n                data={data}\r\n                body={body}\r\n                setBody={setBody}\r\n                error={error}\r\n                setError={setError}\r\n                setData={setData}\r\n                setOpen={setOpen}\r\n                success={success}\r\n                sale={selectedSale}\r\n                setSuccess={setSuccess}\r\n                handleEdit={handleEdit}\r\n                add_BuildCategories={add_BuildCategories}\r\n            />\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditSaleScreen\r\n","import axios from 'axios'\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectPendingSales, selectToken, setBuildCategories, setLocations, setpendingSales, setPropServices } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport SaleWidget from '../components/SaleWidget'\r\n\r\nconst SalesListScreen = () => {\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n    const sales = useSelector(selectPendingSales)\r\n    const dispatch = useDispatch()\r\n    const get_PendingSales = () => {\r\n        axios\r\n          .get(`/sale`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          })\r\n          .then((sales) => {\r\n            dispatch(setpendingSales(sales.data));\r\n          })\r\n          .catch((error) => {\r\n            return error;\r\n          });\r\n    };\r\n\r\n    const getBuildCategories = () => {\r\n        axios\r\n          .get(\"/build_category\", {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          })\r\n          .then((categories) => {\r\n            dispatch(setBuildCategories(categories.data));\r\n          })\r\n          .catch((error) => {\r\n            return error;\r\n          });\r\n    };\r\n\r\n    const handleGet_Locations = () =>{\r\n        axios.get('/location', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(locations =>{\r\n            dispatch(setLocations(locations.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error) {\r\n                return error\r\n            }\r\n        })\r\n    }\r\n\r\n    const getProp_Services = () =>{\r\n        axios.get('/prop_service', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(ps =>{\r\n            dispatch(setPropServices(ps.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n        return (\r\n            getProp_Services(),\r\n            get_PendingSales(),\r\n            getBuildCategories(),\r\n            handleGet_Locations()\r\n        )\r\n    }, [])\r\n    return (\r\n        <div className=\"app\">\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <div className=\"app__Feed\">\r\n              <section\r\n                style={{height: '97vh', overflow: 'auto'}}\r\n              >\r\n                <SaleWidget sales={sales} />\r\n              </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SalesListScreen\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { selectToken, setAccounts, setExpenseCategories, setUser, \r\n    setExpenseItems, setUserExpenseRaised } from '../appState/appSlice'\r\nimport AppBackdrop from '../components/global/AppBackDrop'\r\nimport SideBarMenu from '../components/global/SideBarMenu'\r\nimport ExpenseWidget from '../components/ExpenseWidget'\r\n\r\nconst ExpenseListScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(selectToken)\r\n    const [open, setOpen] = useState(false)\r\n\r\n    // func\r\n    const get_AllAccounts =() =>{\r\n        axios.get('/account', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(accounts =>{\r\n            dispatch(setAccounts(accounts.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n    const get_ExpenseCategories =() =>{\r\n        axios.get('/expense/categories', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(exps =>{\r\n            dispatch(setExpenseCategories(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_Raised_Expense_Items =() =>{\r\n        axios.get('/expense/Items', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            } \r\n        })\r\n        .then(exps =>{\r\n            dispatch(setExpenseItems(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_User_Raised_Expense =() =>{\r\n        axios.get('/expense/user', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(exps =>{\r\n            dispatch(setUserExpenseRaised(exps.data))\r\n        })\r\n        .catch(error =>{\r\n            if(error){\r\n                return error.response.statusText\r\n            }\r\n        })\r\n    }\r\n\r\n    const get_Session = () =>{\r\n        axios.get(`/auth/active`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(user =>{\r\n            dispatch(setUser(user.data))\r\n        })\r\n        .catch(error =>{\r\n            return error\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!token){\r\n            return history.push('/')\r\n        }\r\n        get_AllAccounts()\r\n        get_Session()\r\n    }, [])\r\n\r\n    useEffect(() =>{\r\n        get_ExpenseCategories()\r\n        get_User_Raised_Expense()\r\n        get_Raised_Expense_Items()\r\n    }, [open])\r\n    return (\r\n        <div className=\"app\">\r\n            <AppBackdrop open={open} />\r\n            <SideBarMenu />\r\n            {/* feed */}\r\n            <div className=\"app__Feed\">\r\n                <ExpenseWidget />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseListScreen\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport AccountScreen from './screens/AccountScreen'\r\nimport AdminScreen from './screens/AdminScreen'\r\nimport ReportsScreen from './screens/ReportScreen'\r\nimport { AuthScreen } from './screens/AuthScreen'\r\nimport BillScreen from './screens/BillScreen'\r\nimport CoaScreen from './screens/CoaScreen'\r\nimport CustomerScreen from './screens/CustomerScreen'\r\nimport EstimateScreen from './screens/EstimateScreen'\r\nimport ExpenseScreen from './screens/ExpenseScreen'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport InvoiceScreen from './screens/InvoiceScreen'\r\nimport JournalEntryScreen from './screens/JournalEntryScreen'\r\nimport MdApproveScreen from './screens/MdApproveScreen'\r\nimport PostingScreen from './screens/PostingScreen'\r\nimport PropertyServiceScreen from './screens/PropertyServiceScreen'\r\nimport ReceivePaymentScreen from './screens/RceivePaymentScreen'\r\nimport SalePaymentHistScreen from './screens/SalePaymentHistScreen'\r\nimport SaleScreen from './screens/SaleScreen'\r\nimport StaffScreen from './screens/StaffScreen'\r\nimport VendorScreen from './screens/VendorScreen'\r\nimport SaleRepaymentReportScreen from './screens/SaleRepaymentReportScreen'\r\nimport ExpenseReportScreen from './screens/ExpenseReportScreen'\r\nimport EditSaleScreen from './screens/EditSaleScreen'\r\nimport SalesListScreen from './screens/SalesListScreen'\r\nimport ExpenseListScreen from './screens/ExpenseListScreen'\r\n\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path='/' component={AuthScreen} />\r\n                <Route exact path='/staffs' component={StaffScreen} />\r\n                <Route exact path='/home' component={HomeScreen} />\r\n                <Route exact path='/coa' component={CoaScreen} />\r\n                <Route exact path='/customers' component={CustomerScreen} />\r\n                <Route exact path='/je_entry' component={JournalEntryScreen} />\r\n                <Route exact path='/expense' component={ExpenseScreen} />\r\n                <Route exact path='/expense_list' component={ExpenseListScreen} />\r\n                <Route exact path='/bills' component ={BillScreen } />\r\n                <Route exact path='/invoice' component={InvoiceScreen} />\r\n                <Route exact path='/vendor' component={VendorScreen} />\r\n                <Route exact path='/estimate' component={EstimateScreen} />\r\n                <Route exact path ='/ps' component={PropertyServiceScreen} />\r\n                <Route exact path ='/rpayment' component={ReceivePaymentScreen} />\r\n                <Route exact path ='/sales' component ={SaleScreen} />\r\n                <Route exact path ='/sales_list' component ={SalesListScreen} />\r\n                <Route exact path ='/sales/tx' component={PostingScreen }/>\r\n                <Route exact path ='/sales/:uuid' component ={EditSaleScreen} />\r\n                <Route exact path ='/applications' component={MdApproveScreen} />\r\n                <Route exact path ='/sales/tx/:uuid/:name' component={SalePaymentHistScreen }/>\r\n                <Route exact path ='/coa/:name/:uuid' component={AccountScreen }/>\r\n                <Route exact path='/admin-settings-dashboard/:id' component={AdminScreen} />\r\n                <Route exact path='/:accountant/reports' component={ReportsScreen} />\r\n                <Route exact path='/:staff/sale_repmt_reports' component={SaleRepaymentReportScreen} />\r\n                <Route exact path='/:staff/exp_reports' component={ExpenseReportScreen} />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React, { Fragment } from 'react';\nimport Routes from './Routes';\n\nfunction App() {\n  return (\n    <Fragment>\n      <Routes />\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport appReducer from '../appState/appSlice'\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        app_state: appReducer,\r\n    },\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\nimport appStore from './app/appStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={appStore}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}